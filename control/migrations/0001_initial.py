# Generated by Django 4.2.7 on 2023-11-10 09:36

import django.contrib.postgres.fields
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("messages_api", "0002_alter_ticket_last_message_id_and_more"),
    ]

    operations = [
        migrations.CreateModel(
            name="DASFileGrouping",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("contact_id", models.CharField(max_length=255)),
                (
                    "companies",
                    django.contrib.postgres.fields.ArrayField(
                        base_field=models.CharField(max_length=12, null=True),
                        default=list,
                        size=None,
                    ),
                ),
                ("period", models.DateField()),
                ("was_sent", models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name="MessageControl",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("pendencies", models.BooleanField(default=False)),
                ("contact_number", models.CharField(max_length=255)),
                ("digisac_id", models.CharField(max_length=255)),
                ("period", models.DateField()),
                (
                    "status",
                    models.IntegerField(
                        choices=[(0, "Aguardando Resposta"), (1, "Fechado")], default=0
                    ),
                ),
                ("client_needs_help", models.BooleanField(default=False)),
                ("retries", models.IntegerField(default=1)),
                ("check_count", models.IntegerField(default=0)),
                (
                    "ticket",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="ticket",
                        to="messages_api.ticket",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="TicketLink",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "additional_tickets",
                    models.ManyToManyField(
                        blank=True, related_name="ticketlinks", to="messages_api.ticket"
                    ),
                ),
                (
                    "last_ticket",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="last_ticketlink",
                        to="messages_api.ticket",
                    ),
                ),
                (
                    "message_control",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="control.messagecontrol",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="PdfFile",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("cnpj", models.CharField(max_length=255)),
                ("pdf", models.TextField()),
                (
                    "grouping",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="control.dasfilegrouping",
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "PDFs",
                "unique_together": {("cnpj", "grouping")},
            },
        ),
    ]
