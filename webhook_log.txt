21/05/2023|20:35:15 - webhook.views -INFO- Received webhook request
{'event': 'message.created', 'data': {'id': 'c451aafd-9960-4e69-aa26-2af3b9f8184f', 'isFromMe': True, 'sent': True, 'type': 'chat', 'timestamp': '2023-05-21T20:35:14.000Z', 'data': {'ack': 0, 'isNew': True, 'isFirst': False}, 'visible': True, 'accountId': '966b70ba-27d8-43ae-a295-35e59f0007be', 'contactId': '79db7607-6088-44c1-a010-ed4ef39d4f37', 'fromId': 'e12d3a56-0c52-43ac-b33c-15c399eb06d4', 'serviceId': '83108c28-14f7-4646-acb8-dab165397fd5', 'toId': None, 'userId': '3f4cc332-516e-4f48-aff2-df6eaa2e5034', 'ticketId': '4a0a9a8f-702a-4854-9a8c-f4d462240939', 'ticketUserId': None, 'ticketDepartmentId': None, 'quotedMessageId': None, 'origin': 'user', 'hsmId': None, 'text': 'teste de log', 'obfuscated': False, 'files': None, 'quotedMessage': None, 'isFromBot': False}, 'webhookId': '27b4c18d-2ab0-4c70-a592-46bbe7e00bc8', 'timestamp': '2023-05-21T20:35:14.655Z'}
21/05/2023|20:35:15 - webhook.views -INFO- Received webhook request
{'event': 'message.updated', 'data': {'id': 'c451aafd-9960-4e69-aa26-2af3b9f8184f', 'isFromMe': True, 'sent': True, 'type': 'chat', 'timestamp': '2023-05-21T20:35:14.000Z', 'data': {'ack': 1, 'isNew': True, 'isFirst': False}, 'visible': True, 'accountId': '966b70ba-27d8-43ae-a295-35e59f0007be', 'contactId': '79db7607-6088-44c1-a010-ed4ef39d4f37', 'fromId': 'e12d3a56-0c52-43ac-b33c-15c399eb06d4', 'serviceId': '83108c28-14f7-4646-acb8-dab165397fd5', 'toId': None, 'userId': '3f4cc332-516e-4f48-aff2-df6eaa2e5034', 'ticketId': '4a0a9a8f-702a-4854-9a8c-f4d462240939', 'ticketUserId': '3f4cc332-516e-4f48-aff2-df6eaa2e5034', 'ticketDepartmentId': 'a78046d7-809d-4cdb-a72a-31dfbc47d862', 'quotedMessageId': None, 'origin': 'user', 'hsmId': None, 'text': 'teste de log', 'obfuscated': False, 'files': None, 'quotedMessage': None, 'isFromBot': False}, 'webhookId': '27b4c18d-2ab0-4c70-a592-46bbe7e00bc8', 'timestamp': '2023-05-21T20:35:14.767Z'}
21/05/2023|20:35:15 - webhook.views -INFO- Received webhook request
{'event': 'message.updated', 'data': {'id': 'c451aafd-9960-4e69-aa26-2af3b9f8184f', 'isFromMe': True, 'sent': True, 'type': 'chat', 'timestamp': '2023-05-21T20:35:14.000Z', 'data': {'ack': 2, 'isNew': True, 'isFirst': False}, 'visible': True, 'accountId': '966b70ba-27d8-43ae-a295-35e59f0007be', 'contactId': '79db7607-6088-44c1-a010-ed4ef39d4f37', 'fromId': 'e12d3a56-0c52-43ac-b33c-15c399eb06d4', 'serviceId': '83108c28-14f7-4646-acb8-dab165397fd5', 'toId': None, 'userId': '3f4cc332-516e-4f48-aff2-df6eaa2e5034', 'ticketId': '4a0a9a8f-702a-4854-9a8c-f4d462240939', 'ticketUserId': '3f4cc332-516e-4f48-aff2-df6eaa2e5034', 'ticketDepartmentId': 'a78046d7-809d-4cdb-a72a-31dfbc47d862', 'quotedMessageId': None, 'origin': 'user', 'hsmId': None, 'text': 'teste de log', 'obfuscated': False, 'files': None, 'quotedMessage': None, 'isFromBot': False}, 'webhookId': '27b4c18d-2ab0-4c70-a592-46bbe7e00bc8', 'timestamp': '2023-05-21T20:35:14.980Z'}
21/05/2023|20:35:17 - webhook.views -DEBUG- Exceção ocorreu na função webhook_receiver, linha 20: Message matching query does not exist.
21/05/2023|20:35:17 - webhook.views -DEBUG- Exceção ocorreu na função webhook_receiver, linha 20: Message matching query does not exist.
21/05/2023|20:35:17 - webhook.views -INFO- Exception occurred. Message matching query does not exist.
21/05/2023|20:35:17 - webhook.views -INFO- Exception occurred. Message matching query does not exist.
21/05/2023|20:41:41 - webhook.tasks -INFO- Web dyno is working correctly.
21/05/2023|20:41:41 - webhook.tasks -INFO- Web dyno is working correctly.
21/05/2023|20:42:12 - webhook.tasks -INFO- Web dyno is working correctly.
21/05/2023|20:42:12 - webhook.tasks -INFO- Web dyno is working correctly.
21/05/2023|20:42:44 - webhook.tasks -INFO- Web dyno is working correctly.
21/05/2023|20:42:44 - webhook.tasks -INFO- Web dyno is working correctly.
21/05/2023|20:43:09 - webhook.views -INFO- Received webhook request
{'event': 'message.created', 'data': {'id': '15fc2e23-877e-4398-9cc4-b919b5a6b9b3', 'isFromMe': True, 'sent': True, 'type': 'chat', 'timestamp': '2023-05-21T20:43:08.000Z', 'data': {'ack': 0, 'isNew': True, 'isFirst': False}, 'visible': True, 'accountId': '966b70ba-27d8-43ae-a295-35e59f0007be', 'contactId': '79db7607-6088-44c1-a010-ed4ef39d4f37', 'fromId': 'e12d3a56-0c52-43ac-b33c-15c399eb06d4', 'serviceId': '83108c28-14f7-4646-acb8-dab165397fd5', 'toId': None, 'userId': '3f4cc332-516e-4f48-aff2-df6eaa2e5034', 'ticketId': '4a0a9a8f-702a-4854-9a8c-f4d462240939', 'ticketUserId': None, 'ticketDepartmentId': None, 'quotedMessageId': None, 'origin': 'user', 'hsmId': None, 'text': 'Teste do celery', 'obfuscated': False, 'files': None, 'quotedMessage': None, 'isFromBot': False}, 'webhookId': '27b4c18d-2ab0-4c70-a592-46bbe7e00bc8', 'timestamp': '2023-05-21T20:43:08.944Z'}
21/05/2023|20:43:09 - webhook.views -INFO- Received webhook request
{'event': 'message.updated', 'data': {'id': '15fc2e23-877e-4398-9cc4-b919b5a6b9b3', 'isFromMe': True, 'sent': True, 'type': 'chat', 'timestamp': '2023-05-21T20:43:08.000Z', 'data': {'ack': 1, 'isNew': True, 'isFirst': False}, 'visible': True, 'accountId': '966b70ba-27d8-43ae-a295-35e59f0007be', 'contactId': '79db7607-6088-44c1-a010-ed4ef39d4f37', 'fromId': 'e12d3a56-0c52-43ac-b33c-15c399eb06d4', 'serviceId': '83108c28-14f7-4646-acb8-dab165397fd5', 'toId': None, 'userId': '3f4cc332-516e-4f48-aff2-df6eaa2e5034', 'ticketId': '4a0a9a8f-702a-4854-9a8c-f4d462240939', 'ticketUserId': '3f4cc332-516e-4f48-aff2-df6eaa2e5034', 'ticketDepartmentId': 'a78046d7-809d-4cdb-a72a-31dfbc47d862', 'quotedMessageId': None, 'origin': 'user', 'hsmId': None, 'text': 'Teste do celery', 'obfuscated': False, 'files': None, 'quotedMessage': None, 'isFromBot': False}, 'webhookId': '27b4c18d-2ab0-4c70-a592-46bbe7e00bc8', 'timestamp': '2023-05-21T20:43:09.040Z'}
21/05/2023|20:43:09 - webhook.views -INFO- Received webhook request
{'event': 'message.updated', 'data': {'id': '15fc2e23-877e-4398-9cc4-b919b5a6b9b3', 'isFromMe': True, 'sent': True, 'type': 'chat', 'timestamp': '2023-05-21T20:43:08.000Z', 'data': {'ack': 2, 'isNew': True, 'isFirst': False}, 'visible': True, 'accountId': '966b70ba-27d8-43ae-a295-35e59f0007be', 'contactId': '79db7607-6088-44c1-a010-ed4ef39d4f37', 'fromId': 'e12d3a56-0c52-43ac-b33c-15c399eb06d4', 'serviceId': '83108c28-14f7-4646-acb8-dab165397fd5', 'toId': None, 'userId': '3f4cc332-516e-4f48-aff2-df6eaa2e5034', 'ticketId': '4a0a9a8f-702a-4854-9a8c-f4d462240939', 'ticketUserId': '3f4cc332-516e-4f48-aff2-df6eaa2e5034', 'ticketDepartmentId': 'a78046d7-809d-4cdb-a72a-31dfbc47d862', 'quotedMessageId': None, 'origin': 'user', 'hsmId': None, 'text': 'Teste do celery', 'obfuscated': False, 'files': None, 'quotedMessage': None, 'isFromBot': False}, 'webhookId': '27b4c18d-2ab0-4c70-a592-46bbe7e00bc8', 'timestamp': '2023-05-21T20:43:09.209Z'}
21/05/2023|20:43:15 - webhook.tasks -INFO- Web dyno is working correctly.
21/05/2023|20:43:15 - webhook.tasks -INFO- Web dyno is working correctly.
21/05/2023|20:43:45 - webhook.tasks -INFO- Web dyno is working correctly.
21/05/2023|20:43:45 - webhook.tasks -INFO- Web dyno is working correctly.
21/05/2023|20:44:16 - webhook.tasks -INFO- Web dyno is working correctly.
21/05/2023|20:44:16 - webhook.tasks -INFO- Web dyno is working correctly.
21/05/2023|20:44:47 - webhook.tasks -INFO- Web dyno is working correctly.
21/05/2023|20:44:47 - webhook.tasks -INFO- Web dyno is working correctly.
21/05/2023|20:45:17 - webhook.tasks -INFO- Web dyno is working correctly.
21/05/2023|20:45:17 - webhook.tasks -INFO- Web dyno is working correctly.
21/05/2023|20:52:23 - webhook.views -INFO- Received webhook request
{'event': 'message.created', 'data': {'id': '761157f7-dd07-4e1a-bdee-ff21c1973f27', 'isFromMe': True, 'sent': True, 'type': 'chat', 'timestamp': '2023-05-21T20:52:22.000Z', 'data': {'ack': 0, 'isNew': True, 'isFirst': False}, 'visible': True, 'accountId': '966b70ba-27d8-43ae-a295-35e59f0007be', 'contactId': '79db7607-6088-44c1-a010-ed4ef39d4f37', 'fromId': 'e12d3a56-0c52-43ac-b33c-15c399eb06d4', 'serviceId': '83108c28-14f7-4646-acb8-dab165397fd5', 'toId': None, 'userId': '3f4cc332-516e-4f48-aff2-df6eaa2e5034', 'ticketId': '4a0a9a8f-702a-4854-9a8c-f4d462240939', 'ticketUserId': None, 'ticketDepartmentId': None, 'quotedMessageId': None, 'origin': 'user', 'hsmId': None, 'text': 'celery test', 'obfuscated': False, 'files': None, 'quotedMessage': None, 'isFromBot': False}, 'webhookId': '27b4c18d-2ab0-4c70-a592-46bbe7e00bc8', 'timestamp': '2023-05-21T20:52:22.547Z'}
21/05/2023|20:52:23 - webhook.views -INFO- Received webhook request
{'event': 'message.updated', 'data': {'id': '761157f7-dd07-4e1a-bdee-ff21c1973f27', 'isFromMe': True, 'sent': True, 'type': 'chat', 'timestamp': '2023-05-21T20:52:22.000Z', 'data': {'ack': 1, 'isNew': True, 'isFirst': False}, 'visible': True, 'accountId': '966b70ba-27d8-43ae-a295-35e59f0007be', 'contactId': '79db7607-6088-44c1-a010-ed4ef39d4f37', 'fromId': 'e12d3a56-0c52-43ac-b33c-15c399eb06d4', 'serviceId': '83108c28-14f7-4646-acb8-dab165397fd5', 'toId': None, 'userId': '3f4cc332-516e-4f48-aff2-df6eaa2e5034', 'ticketId': '4a0a9a8f-702a-4854-9a8c-f4d462240939', 'ticketUserId': '3f4cc332-516e-4f48-aff2-df6eaa2e5034', 'ticketDepartmentId': 'a78046d7-809d-4cdb-a72a-31dfbc47d862', 'quotedMessageId': None, 'origin': 'user', 'hsmId': None, 'text': 'celery test', 'obfuscated': False, 'files': None, 'quotedMessage': None, 'isFromBot': False}, 'webhookId': '27b4c18d-2ab0-4c70-a592-46bbe7e00bc8', 'timestamp': '2023-05-21T20:52:22.651Z'}
21/05/2023|20:52:23 - webhook.views -INFO- Received webhook request
{'event': 'message.updated', 'data': {'id': '761157f7-dd07-4e1a-bdee-ff21c1973f27', 'isFromMe': True, 'sent': True, 'type': 'chat', 'timestamp': '2023-05-21T20:52:22.000Z', 'data': {'ack': 2, 'isNew': True, 'isFirst': False}, 'visible': True, 'accountId': '966b70ba-27d8-43ae-a295-35e59f0007be', 'contactId': '79db7607-6088-44c1-a010-ed4ef39d4f37', 'fromId': 'e12d3a56-0c52-43ac-b33c-15c399eb06d4', 'serviceId': '83108c28-14f7-4646-acb8-dab165397fd5', 'toId': None, 'userId': '3f4cc332-516e-4f48-aff2-df6eaa2e5034', 'ticketId': '4a0a9a8f-702a-4854-9a8c-f4d462240939', 'ticketUserId': '3f4cc332-516e-4f48-aff2-df6eaa2e5034', 'ticketDepartmentId': 'a78046d7-809d-4cdb-a72a-31dfbc47d862', 'quotedMessageId': None, 'origin': 'user', 'hsmId': None, 'text': 'celery test', 'obfuscated': False, 'files': None, 'quotedMessage': None, 'isFromBot': False}, 'webhookId': '27b4c18d-2ab0-4c70-a592-46bbe7e00bc8', 'timestamp': '2023-05-21T20:52:22.797Z'}
21/05/2023|20:53:51 - webhook.views -INFO- Received webhook request
{'event': 'message.updated', 'data': {'id': '15fc2e23-877e-4398-9cc4-b919b5a6b9b3', 'isFromMe': True, 'sent': True, 'type': 'chat', 'timestamp': '2023-05-21T20:43:08.000Z', 'data': {'ack': 3, 'isNew': True, 'isFirst': False}, 'visible': True, 'accountId': '966b70ba-27d8-43ae-a295-35e59f0007be', 'contactId': '79db7607-6088-44c1-a010-ed4ef39d4f37', 'fromId': 'e12d3a56-0c52-43ac-b33c-15c399eb06d4', 'serviceId': '83108c28-14f7-4646-acb8-dab165397fd5', 'toId': None, 'userId': '3f4cc332-516e-4f48-aff2-df6eaa2e5034', 'ticketId': '4a0a9a8f-702a-4854-9a8c-f4d462240939', 'ticketUserId': '3f4cc332-516e-4f48-aff2-df6eaa2e5034', 'ticketDepartmentId': 'a78046d7-809d-4cdb-a72a-31dfbc47d862', 'quotedMessageId': None, 'origin': 'user', 'hsmId': None, 'text': 'Teste do celery', 'obfuscated': False, 'files': None, 'quotedMessage': None, 'isFromBot': False}, 'webhookId': '27b4c18d-2ab0-4c70-a592-46bbe7e00bc8', 'timestamp': '2023-05-21T20:53:50.550Z'}
21/05/2023|20:53:51 - webhook.views -INFO- Received webhook request
{'event': 'message.updated', 'data': {'id': '182764b2-bbcf-4c91-9b01-08fea85691e7', 'isFromMe': True, 'sent': True, 'type': 'chat', 'timestamp': '2023-05-21T20:32:56.000Z', 'data': {'ack': 3, 'isNew': True, 'isFirst': False}, 'visible': True, 'accountId': '966b70ba-27d8-43ae-a295-35e59f0007be', 'contactId': '79db7607-6088-44c1-a010-ed4ef39d4f37', 'fromId': 'e12d3a56-0c52-43ac-b33c-15c399eb06d4', 'serviceId': '83108c28-14f7-4646-acb8-dab165397fd5', 'toId': None, 'userId': '3f4cc332-516e-4f48-aff2-df6eaa2e5034', 'ticketId': '4a0a9a8f-702a-4854-9a8c-f4d462240939', 'ticketUserId': '3f4cc332-516e-4f48-aff2-df6eaa2e5034', 'ticketDepartmentId': 'a78046d7-809d-4cdb-a72a-31dfbc47d862', 'quotedMessageId': None, 'origin': 'user', 'hsmId': None, 'text': 'mASSA', 'obfuscated': False, 'files': None, 'quotedMessage': None, 'isFromBot': False}, 'webhookId': '27b4c18d-2ab0-4c70-a592-46bbe7e00bc8', 'timestamp': '2023-05-21T20:53:50.550Z'}
21/05/2023|20:53:51 - webhook.views -INFO- Received webhook request
{'event': 'message.updated', 'data': {'id': 'a3828e45-f1e7-4aa6-a0e4-27487b96309d', 'isFromMe': True, 'sent': True, 'type': 'chat', 'timestamp': '2023-05-21T20:32:03.000Z', 'data': {'ack': 3, 'isNew': True, 'isFirst': False}, 'visible': True, 'accountId': '966b70ba-27d8-43ae-a295-35e59f0007be', 'contactId': '79db7607-6088-44c1-a010-ed4ef39d4f37', 'fromId': 'e12d3a56-0c52-43ac-b33c-15c399eb06d4', 'serviceId': '83108c28-14f7-4646-acb8-dab165397fd5', 'toId': None, 'userId': '3f4cc332-516e-4f48-aff2-df6eaa2e5034', 'ticketId': '4a0a9a8f-702a-4854-9a8c-f4d462240939', 'ticketUserId': '3f4cc332-516e-4f48-aff2-df6eaa2e5034', 'ticketDepartmentId': 'a78046d7-809d-4cdb-a72a-31dfbc47d862', 'quotedMessageId': None, 'origin': 'user', 'hsmId': None, 'text': 'ola', 'obfuscated': False, 'files': None, 'quotedMessage': None, 'isFromBot': False}, 'webhookId': '27b4c18d-2ab0-4c70-a592-46bbe7e00bc8', 'timestamp': '2023-05-21T20:53:50.591Z'}
21/05/2023|20:53:51 - webhook.views -INFO- Received webhook request
{'event': 'message.updated', 'data': {'id': 'b66d4112-6425-4c67-aee5-eb90b379734b', 'isFromMe': True, 'sent': True, 'type': 'chat', 'timestamp': '2023-05-21T20:34:39.000Z', 'data': {'ack': 3, 'isNew': True, 'isFirst': False}, 'visible': True, 'accountId': '966b70ba-27d8-43ae-a295-35e59f0007be', 'contactId': '79db7607-6088-44c1-a010-ed4ef39d4f37', 'fromId': 'e12d3a56-0c52-43ac-b33c-15c399eb06d4', 'serviceId': '83108c28-14f7-4646-acb8-dab165397fd5', 'toId': None, 'userId': '3f4cc332-516e-4f48-aff2-df6eaa2e5034', 'ticketId': '4a0a9a8f-702a-4854-9a8c-f4d462240939', 'ticketUserId': '3f4cc332-516e-4f48-aff2-df6eaa2e5034', 'ticketDepartmentId': 'a78046d7-809d-4cdb-a72a-31dfbc47d862', 'quotedMessageId': None, 'origin': 'user', 'hsmId': None, 'text': 'qwerty', 'obfuscated': False, 'files': None, 'quotedMessage': None, 'isFromBot': False}, 'webhookId': '27b4c18d-2ab0-4c70-a592-46bbe7e00bc8', 'timestamp': '2023-05-21T20:53:50.570Z'}
21/05/2023|20:53:51 - webhook.views -INFO- Received webhook request
{'event': 'message.updated', 'data': {'id': 'e06d62e6-4bc0-483c-960e-759ebee346a7', 'isFromMe': True, 'sent': True, 'type': 'chat', 'timestamp': '2023-05-21T20:31:28.000Z', 'data': {'ack': 3, 'isNew': True, 'isFirst': False}, 'visible': True, 'accountId': '966b70ba-27d8-43ae-a295-35e59f0007be', 'contactId': '79db7607-6088-44c1-a010-ed4ef39d4f37', 'fromId': 'e12d3a56-0c52-43ac-b33c-15c399eb06d4', 'serviceId': '83108c28-14f7-4646-acb8-dab165397fd5', 'toId': None, 'userId': '3f4cc332-516e-4f48-aff2-df6eaa2e5034', 'ticketId': '4a0a9a8f-702a-4854-9a8c-f4d462240939', 'ticketUserId': '3f4cc332-516e-4f48-aff2-df6eaa2e5034', 'ticketDepartmentId': 'a78046d7-809d-4cdb-a72a-31dfbc47d862', 'quotedMessageId': None, 'origin': 'user', 'hsmId': None, 'text': 'opa', 'obfuscated': False, 'files': None, 'quotedMessage': None, 'isFromBot': False}, 'webhookId': '27b4c18d-2ab0-4c70-a592-46bbe7e00bc8', 'timestamp': '2023-05-21T20:53:50.570Z'}
21/05/2023|20:53:51 - webhook.views -INFO- Received webhook request
{'event': 'message.updated', 'data': {'id': 'de0d0c9c-fe00-4c6a-a684-af7ff9038c69', 'isFromMe': True, 'sent': True, 'type': 'chat', 'timestamp': '2023-05-21T20:30:51.000Z', 'data': {'ack': 3, 'isNew': True, 'isFirst': False}, 'visible': True, 'accountId': '966b70ba-27d8-43ae-a295-35e59f0007be', 'contactId': '79db7607-6088-44c1-a010-ed4ef39d4f37', 'fromId': 'e12d3a56-0c52-43ac-b33c-15c399eb06d4', 'serviceId': '83108c28-14f7-4646-acb8-dab165397fd5', 'toId': None, 'userId': '3f4cc332-516e-4f48-aff2-df6eaa2e5034', 'ticketId': '4a0a9a8f-702a-4854-9a8c-f4d462240939', 'ticketUserId': '3f4cc332-516e-4f48-aff2-df6eaa2e5034', 'ticketDepartmentId': 'a78046d7-809d-4cdb-a72a-31dfbc47d862', 'quotedMessageId': None, 'origin': 'user', 'hsmId': None, 'text': 'oi', 'obfuscated': False, 'files': None, 'quotedMessage': None, 'isFromBot': False}, 'webhookId': '27b4c18d-2ab0-4c70-a592-46bbe7e00bc8', 'timestamp': '2023-05-21T20:53:50.570Z'}
21/05/2023|20:53:51 - webhook.views -INFO- Received webhook request
{'event': 'message.updated', 'data': {'id': 'cd79ec12-c703-40d5-901b-97fd82e70ffb', 'isFromMe': True, 'sent': True, 'type': 'chat', 'timestamp': '2023-05-21T20:14:14.000Z', 'data': {'ack': 3, 'isNew': True, 'isFirst': False}, 'visible': True, 'accountId': '966b70ba-27d8-43ae-a295-35e59f0007be', 'contactId': '79db7607-6088-44c1-a010-ed4ef39d4f37', 'fromId': 'e12d3a56-0c52-43ac-b33c-15c399eb06d4', 'serviceId': '83108c28-14f7-4646-acb8-dab165397fd5', 'toId': None, 'userId': '3f4cc332-516e-4f48-aff2-df6eaa2e5034', 'ticketId': '4a0a9a8f-702a-4854-9a8c-f4d462240939', 'ticketUserId': '3f4cc332-516e-4f48-aff2-df6eaa2e5034', 'ticketDepartmentId': 'a78046d7-809d-4cdb-a72a-31dfbc47d862', 'quotedMessageId': None, 'origin': 'user', 'hsmId': None, 'text': 'Teste de visualização', 'obfuscated': False, 'files': None, 'quotedMessage': None, 'isFromBot': False}, 'webhookId': '27b4c18d-2ab0-4c70-a592-46bbe7e00bc8', 'timestamp': '2023-05-21T20:53:50.592Z'}
21/05/2023|20:53:51 - webhook.views -INFO- Received webhook request
{'event': 'message.updated', 'data': {'id': '919c4a7c-cb3a-4091-863d-d1d33e018304', 'isFromMe': True, 'sent': True, 'type': 'chat', 'timestamp': '2023-05-21T20:16:33.000Z', 'data': {'ack': 3, 'isNew': True, 'isFirst': False}, 'visible': True, 'accountId': '966b70ba-27d8-43ae-a295-35e59f0007be', 'contactId': '79db7607-6088-44c1-a010-ed4ef39d4f37', 'fromId': 'e12d3a56-0c52-43ac-b33c-15c399eb06d4', 'serviceId': '83108c28-14f7-4646-acb8-dab165397fd5', 'toId': None, 'userId': '3f4cc332-516e-4f48-aff2-df6eaa2e5034', 'ticketId': '4a0a9a8f-702a-4854-9a8c-f4d462240939', 'ticketUserId': '3f4cc332-516e-4f48-aff2-df6eaa2e5034', 'ticketDepartmentId': 'a78046d7-809d-4cdb-a72a-31dfbc47d862', 'quotedMessageId': None, 'origin': 'user', 'hsmId': None, 'text': 'Mesma coisa', 'obfuscated': False, 'files': None, 'quotedMessage': None, 'isFromBot': False}, 'webhookId': '27b4c18d-2ab0-4c70-a592-46bbe7e00bc8', 'timestamp': '2023-05-21T20:53:50.591Z'}
21/05/2023|20:53:51 - webhook.views -INFO- Received webhook request
{'event': 'message.updated', 'data': {'id': '9601e8b8-b83b-47d6-9c79-ead7ab1db575', 'isFromMe': True, 'sent': True, 'type': 'chat', 'timestamp': '2023-05-21T20:29:54.000Z', 'data': {'ack': 3, 'isNew': True, 'isFirst': False}, 'visible': True, 'accountId': '966b70ba-27d8-43ae-a295-35e59f0007be', 'contactId': '79db7607-6088-44c1-a010-ed4ef39d4f37', 'fromId': 'e12d3a56-0c52-43ac-b33c-15c399eb06d4', 'serviceId': '83108c28-14f7-4646-acb8-dab165397fd5', 'toId': None, 'userId': '3f4cc332-516e-4f48-aff2-df6eaa2e5034', 'ticketId': '4a0a9a8f-702a-4854-9a8c-f4d462240939', 'ticketUserId': '3f4cc332-516e-4f48-aff2-df6eaa2e5034', 'ticketDepartmentId': 'a78046d7-809d-4cdb-a72a-31dfbc47d862', 'quotedMessageId': None, 'origin': 'user', 'hsmId': None, 'text': 'Teste', 'obfuscated': False, 'files': None, 'quotedMessage': None, 'isFromBot': False}, 'webhookId': '27b4c18d-2ab0-4c70-a592-46bbe7e00bc8', 'timestamp': '2023-05-21T20:53:50.591Z'}
21/05/2023|20:53:51 - webhook.views -INFO- Received webhook request
{'event': 'message.updated', 'data': {'id': 'c451aafd-9960-4e69-aa26-2af3b9f8184f', 'isFromMe': True, 'sent': True, 'type': 'chat', 'timestamp': '2023-05-21T20:35:14.000Z', 'data': {'ack': 3, 'isNew': True, 'isFirst': False}, 'visible': True, 'accountId': '966b70ba-27d8-43ae-a295-35e59f0007be', 'contactId': '79db7607-6088-44c1-a010-ed4ef39d4f37', 'fromId': 'e12d3a56-0c52-43ac-b33c-15c399eb06d4', 'serviceId': '83108c28-14f7-4646-acb8-dab165397fd5', 'toId': None, 'userId': '3f4cc332-516e-4f48-aff2-df6eaa2e5034', 'ticketId': '4a0a9a8f-702a-4854-9a8c-f4d462240939', 'ticketUserId': '3f4cc332-516e-4f48-aff2-df6eaa2e5034', 'ticketDepartmentId': 'a78046d7-809d-4cdb-a72a-31dfbc47d862', 'quotedMessageId': None, 'origin': 'user', 'hsmId': None, 'text': 'teste de log', 'obfuscated': False, 'files': None, 'quotedMessage': None, 'isFromBot': False}, 'webhookId': '27b4c18d-2ab0-4c70-a592-46bbe7e00bc8', 'timestamp': '2023-05-21T20:53:50.570Z'}
21/05/2023|20:53:51 - webhook.views -INFO- Received webhook request
{'event': 'message.updated', 'data': {'id': '761157f7-dd07-4e1a-bdee-ff21c1973f27', 'isFromMe': True, 'sent': True, 'type': 'chat', 'timestamp': '2023-05-21T20:52:22.000Z', 'data': {'ack': 3, 'isNew': True, 'isFirst': False}, 'visible': True, 'accountId': '966b70ba-27d8-43ae-a295-35e59f0007be', 'contactId': '79db7607-6088-44c1-a010-ed4ef39d4f37', 'fromId': 'e12d3a56-0c52-43ac-b33c-15c399eb06d4', 'serviceId': '83108c28-14f7-4646-acb8-dab165397fd5', 'toId': None, 'userId': '3f4cc332-516e-4f48-aff2-df6eaa2e5034', 'ticketId': '4a0a9a8f-702a-4854-9a8c-f4d462240939', 'ticketUserId': '3f4cc332-516e-4f48-aff2-df6eaa2e5034', 'ticketDepartmentId': 'a78046d7-809d-4cdb-a72a-31dfbc47d862', 'quotedMessageId': None, 'origin': 'user', 'hsmId': None, 'text': 'celery test', 'obfuscated': False, 'files': None, 'quotedMessage': None, 'isFromBot': False}, 'webhookId': '27b4c18d-2ab0-4c70-a592-46bbe7e00bc8', 'timestamp': '2023-05-21T20:53:50.592Z'}
21/05/2023|20:53:51 - webhook.views -INFO- Received webhook request
{'event': 'message.updated', 'data': {'id': '0916d32e-a41c-4f7c-aa1b-1067bb9ed00c', 'isFromMe': True, 'sent': True, 'type': 'chat', 'timestamp': '2023-05-21T20:29:26.000Z', 'data': {'ack': 3, 'isNew': True, 'isFirst': False}, 'visible': True, 'accountId': '966b70ba-27d8-43ae-a295-35e59f0007be', 'contactId': '79db7607-6088-44c1-a010-ed4ef39d4f37', 'fromId': 'e12d3a56-0c52-43ac-b33c-15c399eb06d4', 'serviceId': '83108c28-14f7-4646-acb8-dab165397fd5', 'toId': None, 'userId': '3f4cc332-516e-4f48-aff2-df6eaa2e5034', 'ticketId': '4a0a9a8f-702a-4854-9a8c-f4d462240939', 'ticketUserId': '3f4cc332-516e-4f48-aff2-df6eaa2e5034', 'ticketDepartmentId': 'a78046d7-809d-4cdb-a72a-31dfbc47d862', 'quotedMessageId': None, 'origin': 'user', 'hsmId': None, 'text': 'Teste', 'obfuscated': False, 'files': None, 'quotedMessage': None, 'isFromBot': False}, 'webhookId': '27b4c18d-2ab0-4c70-a592-46bbe7e00bc8', 'timestamp': '2023-05-21T20:53:50.591Z'}
21/05/2023|20:53:53 - webhook.views -DEBUG- Exceção ocorreu na função webhook_receiver, linha 20: handle_message_updated() missing 2 required positional arguments: 'status' and 'message_id'
21/05/2023|20:53:53 - webhook.views -DEBUG- Exceção ocorreu na função webhook_receiver, linha 20: handle_message_updated() missing 2 required positional arguments: 'status' and 'message_id'
21/05/2023|20:53:53 - webhook.views -INFO- Exception occurred. handle_message_updated() missing 2 required positional arguments: 'status' and 'message_id'
21/05/2023|20:53:53 - webhook.views -INFO- Exception occurred. handle_message_updated() missing 2 required positional arguments: 'status' and 'message_id'
21/05/2023|20:53:54 - webhook.views -DEBUG- Exceção ocorreu na função webhook_receiver, linha 20: handle_message_updated() missing 2 required positional arguments: 'status' and 'message_id'
21/05/2023|20:53:54 - webhook.views -DEBUG- Exceção ocorreu na função webhook_receiver, linha 20: handle_message_updated() missing 2 required positional arguments: 'status' and 'message_id'
21/05/2023|20:53:54 - webhook.views -INFO- Exception occurred. handle_message_updated() missing 2 required positional arguments: 'status' and 'message_id'
21/05/2023|20:53:54 - webhook.views -INFO- Exception occurred. handle_message_updated() missing 2 required positional arguments: 'status' and 'message_id'
21/05/2023|20:53:54 - webhook.views -DEBUG- Exceção ocorreu na função webhook_receiver, linha 20: handle_message_updated() missing 2 required positional arguments: 'status' and 'message_id'
21/05/2023|20:53:54 - webhook.views -INFO- Exception occurred. handle_message_updated() missing 2 required positional arguments: 'status' and 'message_id'
21/05/2023|20:53:54 - webhook.views -DEBUG- Exceção ocorreu na função webhook_receiver, linha 20: handle_message_updated() missing 2 required positional arguments: 'status' and 'message_id'
21/05/2023|20:53:54 - webhook.views -DEBUG- Exceção ocorreu na função webhook_receiver, linha 20: handle_message_updated() missing 2 required positional arguments: 'status' and 'message_id'
21/05/2023|20:53:54 - webhook.views -DEBUG- Exceção ocorreu na função webhook_receiver, linha 20: handle_message_updated() missing 2 required positional arguments: 'status' and 'message_id'
21/05/2023|20:53:54 - webhook.views -DEBUG- Exceção ocorreu na função webhook_receiver, linha 20: handle_message_updated() missing 2 required positional arguments: 'status' and 'message_id'
21/05/2023|20:53:54 - webhook.views -DEBUG- Exceção ocorreu na função webhook_receiver, linha 20: handle_message_updated() missing 2 required positional arguments: 'status' and 'message_id'
21/05/2023|20:53:54 - webhook.views -DEBUG- Exceção ocorreu na função webhook_receiver, linha 20: handle_message_updated() missing 2 required positional arguments: 'status' and 'message_id'
21/05/2023|20:53:54 - webhook.views -INFO- Exception occurred. handle_message_updated() missing 2 required positional arguments: 'status' and 'message_id'
21/05/2023|20:53:54 - webhook.views -INFO- Exception occurred. handle_message_updated() missing 2 required positional arguments: 'status' and 'message_id'
21/05/2023|20:53:54 - webhook.views -DEBUG- Exceção ocorreu na função webhook_receiver, linha 20: handle_message_updated() missing 2 required positional arguments: 'status' and 'message_id'
21/05/2023|20:53:54 - webhook.views -INFO- Exception occurred. handle_message_updated() missing 2 required positional arguments: 'status' and 'message_id'
21/05/2023|20:53:54 - webhook.views -INFO- Exception occurred. handle_message_updated() missing 2 required positional arguments: 'status' and 'message_id'
21/05/2023|20:53:54 - webhook.views -INFO- Exception occurred. handle_message_updated() missing 2 required positional arguments: 'status' and 'message_id'
21/05/2023|20:53:54 - webhook.views -INFO- Exception occurred. handle_message_updated() missing 2 required positional arguments: 'status' and 'message_id'
21/05/2023|20:53:54 - webhook.views -INFO- Exception occurred. handle_message_updated() missing 2 required positional arguments: 'status' and 'message_id'
21/05/2023|20:54:12 - webhook.views -INFO- Received webhook request
{'event': 'message.created', 'data': {'id': 'aad480fc-f15f-4ecd-bfba-e8dab4e027ad', 'isFromMe': False, 'sent': True, 'type': 'chat', 'timestamp': '2023-05-21T20:54:11.000Z', 'data': {'ack': 1, 'isNew': True, 'isFirst': False}, 'visible': True, 'accountId': '966b70ba-27d8-43ae-a295-35e59f0007be', 'contactId': '79db7607-6088-44c1-a010-ed4ef39d4f37', 'fromId': '79db7607-6088-44c1-a010-ed4ef39d4f37', 'serviceId': '83108c28-14f7-4646-acb8-dab165397fd5', 'toId': None, 'userId': None, 'ticketId': '4a0a9a8f-702a-4854-9a8c-f4d462240939', 'ticketUserId': None, 'ticketDepartmentId': None, 'quotedMessageId': None, 'origin': None, 'hsmId': None, 'text': '👍', 'obfuscated': False, 'files': None, 'quotedMessage': None, 'isFromBot': False}, 'webhookId': '27b4c18d-2ab0-4c70-a592-46bbe7e00bc8', 'timestamp': '2023-05-21T20:54:12.170Z'}
21/05/2023|21:00:28 - webhook.views -INFO- Received webhook request
{'event': 'message.created', 'data': {'id': '9a2716df-93a2-4615-8dcd-6b7048e4cc80', 'isFromMe': False, 'sent': True, 'type': 'chat', 'timestamp': '2023-05-21T21:00:27.000Z', 'data': {'ack': 1, 'isNew': True, 'isFirst': False}, 'visible': True, 'accountId': '966b70ba-27d8-43ae-a295-35e59f0007be', 'contactId': '79db7607-6088-44c1-a010-ed4ef39d4f37', 'fromId': '79db7607-6088-44c1-a010-ed4ef39d4f37', 'serviceId': '83108c28-14f7-4646-acb8-dab165397fd5', 'toId': None, 'userId': None, 'ticketId': '4a0a9a8f-702a-4854-9a8c-f4d462240939', 'ticketUserId': None, 'ticketDepartmentId': None, 'quotedMessageId': None, 'origin': None, 'hsmId': None, 'text': '👍', 'obfuscated': False, 'files': None, 'quotedMessage': None, 'isFromBot': False}, 'webhookId': '27b4c18d-2ab0-4c70-a592-46bbe7e00bc8', 'timestamp': '2023-05-21T21:00:28.026Z'}
21/05/2023|21:01:18 - webhook.views -INFO- Received webhook request
{'event': 'message.created', 'data': {'id': '452102b9-e0b5-4f20-8cb8-dbeddf8478e3', 'isFromMe': False, 'sent': True, 'type': 'chat', 'timestamp': '2023-05-21T21:01:17.000Z', 'data': {'ack': 1, 'isNew': True, 'isFirst': False}, 'visible': True, 'accountId': '966b70ba-27d8-43ae-a295-35e59f0007be', 'contactId': '79db7607-6088-44c1-a010-ed4ef39d4f37', 'fromId': '79db7607-6088-44c1-a010-ed4ef39d4f37', 'serviceId': '83108c28-14f7-4646-acb8-dab165397fd5', 'toId': None, 'userId': None, 'ticketId': '4a0a9a8f-702a-4854-9a8c-f4d462240939', 'ticketUserId': None, 'ticketDepartmentId': None, 'quotedMessageId': None, 'origin': None, 'hsmId': None, 'text': '😃', 'obfuscated': False, 'files': None, 'quotedMessage': None, 'isFromBot': False}, 'webhookId': '27b4c18d-2ab0-4c70-a592-46bbe7e00bc8', 'timestamp': '2023-05-21T21:01:17.520Z'}
21/05/2023|21:02:05 - webhook.views -INFO- Received webhook request
{'event': 'message.created', 'data': {'id': '27b7b316-20fd-4410-8136-06c24e303235', 'isFromMe': False, 'sent': True, 'type': 'chat', 'timestamp': '2023-05-21T21:02:04.000Z', 'data': {'ack': 1, 'isNew': True, 'isFirst': False}, 'visible': True, 'accountId': '966b70ba-27d8-43ae-a295-35e59f0007be', 'contactId': '79db7607-6088-44c1-a010-ed4ef39d4f37', 'fromId': '79db7607-6088-44c1-a010-ed4ef39d4f37', 'serviceId': '83108c28-14f7-4646-acb8-dab165397fd5', 'toId': None, 'userId': None, 'ticketId': '4a0a9a8f-702a-4854-9a8c-f4d462240939', 'ticketUserId': None, 'ticketDepartmentId': None, 'quotedMessageId': None, 'origin': None, 'hsmId': None, 'text': '👍', 'obfuscated': False, 'files': None, 'quotedMessage': None, 'isFromBot': False}, 'webhookId': '27b4c18d-2ab0-4c70-a592-46bbe7e00bc8', 'timestamp': '2023-05-21T21:02:05.167Z'}
21/05/2023|21:04:43 - webhook.views -INFO- Received webhook request
{'event': 'message.created', 'data': {'id': '9504e1bd-aadd-4ddc-91a2-fcd09e963996', 'isFromMe': False, 'sent': True, 'type': 'chat', 'timestamp': '2023-05-21T21:04:42.000Z', 'data': {'ack': 1, 'isNew': True, 'isFirst': False}, 'visible': True, 'accountId': '966b70ba-27d8-43ae-a295-35e59f0007be', 'contactId': '79db7607-6088-44c1-a010-ed4ef39d4f37', 'fromId': '79db7607-6088-44c1-a010-ed4ef39d4f37', 'serviceId': '83108c28-14f7-4646-acb8-dab165397fd5', 'toId': None, 'userId': None, 'ticketId': '4a0a9a8f-702a-4854-9a8c-f4d462240939', 'ticketUserId': None, 'ticketDepartmentId': None, 'quotedMessageId': None, 'origin': None, 'hsmId': None, 'text': '👍', 'obfuscated': False, 'files': None, 'quotedMessage': None, 'isFromBot': False}, 'webhookId': '27b4c18d-2ab0-4c70-a592-46bbe7e00bc8', 'timestamp': '2023-05-21T21:04:42.854Z'}
21/05/2023|21:05:40 - webhook.views -INFO- Received webhook request
{'event': 'message.created', 'data': {'id': 'd0d1f104-098b-495a-aa88-03df8335dd98', 'isFromMe': False, 'sent': True, 'type': 'chat', 'timestamp': '2023-05-21T21:05:39.000Z', 'data': {'ack': 1, 'isNew': True, 'isFirst': False}, 'visible': True, 'accountId': '966b70ba-27d8-43ae-a295-35e59f0007be', 'contactId': '79db7607-6088-44c1-a010-ed4ef39d4f37', 'fromId': '79db7607-6088-44c1-a010-ed4ef39d4f37', 'serviceId': '83108c28-14f7-4646-acb8-dab165397fd5', 'toId': None, 'userId': None, 'ticketId': '4a0a9a8f-702a-4854-9a8c-f4d462240939', 'ticketUserId': None, 'ticketDepartmentId': None, 'quotedMessageId': None, 'origin': None, 'hsmId': None, 'text': '👍', 'obfuscated': False, 'files': None, 'quotedMessage': None, 'isFromBot': False}, 'webhookId': '27b4c18d-2ab0-4c70-a592-46bbe7e00bc8', 'timestamp': '2023-05-21T21:05:39.645Z'}
21/05/2023|21:06:23 - webhook.views -INFO- Received webhook request
{'event': 'message.created', 'data': {'id': 'eaf854ae-473b-4d43-9933-588e5e5d729d', 'isFromMe': False, 'sent': True, 'type': 'chat', 'timestamp': '2023-05-21T21:06:22.000Z', 'data': {'ack': 1, 'isNew': True, 'isFirst': False}, 'visible': True, 'accountId': '966b70ba-27d8-43ae-a295-35e59f0007be', 'contactId': '79db7607-6088-44c1-a010-ed4ef39d4f37', 'fromId': '79db7607-6088-44c1-a010-ed4ef39d4f37', 'serviceId': '83108c28-14f7-4646-acb8-dab165397fd5', 'toId': None, 'userId': None, 'ticketId': '4a0a9a8f-702a-4854-9a8c-f4d462240939', 'ticketUserId': None, 'ticketDepartmentId': None, 'quotedMessageId': None, 'origin': None, 'hsmId': None, 'text': '👍', 'obfuscated': False, 'files': None, 'quotedMessage': None, 'isFromBot': False}, 'webhookId': '27b4c18d-2ab0-4c70-a592-46bbe7e00bc8', 'timestamp': '2023-05-21T21:06:22.654Z'}
21/05/2023|21:07:47 - webhook.views -INFO- Received webhook request
{'event': 'message.created', 'data': {'id': '967dd33e-91c9-44cd-a641-e1599f83720e', 'isFromMe': True, 'sent': True, 'type': 'chat', 'timestamp': '2023-05-21T21:07:46.000Z', 'data': {'ack': 0, 'isNew': True, 'isFirst': False}, 'visible': True, 'accountId': '966b70ba-27d8-43ae-a295-35e59f0007be', 'contactId': '79db7607-6088-44c1-a010-ed4ef39d4f37', 'fromId': 'e12d3a56-0c52-43ac-b33c-15c399eb06d4', 'serviceId': '83108c28-14f7-4646-acb8-dab165397fd5', 'toId': None, 'userId': '3f4cc332-516e-4f48-aff2-df6eaa2e5034', 'ticketId': '4a0a9a8f-702a-4854-9a8c-f4d462240939', 'ticketUserId': None, 'ticketDepartmentId': None, 'quotedMessageId': None, 'origin': 'user', 'hsmId': None, 'text': 'Ola', 'obfuscated': False, 'files': None, 'quotedMessage': None, 'isFromBot': False}, 'webhookId': '27b4c18d-2ab0-4c70-a592-46bbe7e00bc8', 'timestamp': '2023-05-21T21:07:46.952Z'}
21/05/2023|21:07:47 - webhook.views -INFO- Received webhook request
{'event': 'message.updated', 'data': {'id': '967dd33e-91c9-44cd-a641-e1599f83720e', 'isFromMe': True, 'sent': True, 'type': 'chat', 'timestamp': '2023-05-21T21:07:46.000Z', 'data': {'ack': 1, 'isNew': True, 'isFirst': False}, 'visible': True, 'accountId': '966b70ba-27d8-43ae-a295-35e59f0007be', 'contactId': '79db7607-6088-44c1-a010-ed4ef39d4f37', 'fromId': 'e12d3a56-0c52-43ac-b33c-15c399eb06d4', 'serviceId': '83108c28-14f7-4646-acb8-dab165397fd5', 'toId': None, 'userId': '3f4cc332-516e-4f48-aff2-df6eaa2e5034', 'ticketId': '4a0a9a8f-702a-4854-9a8c-f4d462240939', 'ticketUserId': '3f4cc332-516e-4f48-aff2-df6eaa2e5034', 'ticketDepartmentId': 'a78046d7-809d-4cdb-a72a-31dfbc47d862', 'quotedMessageId': None, 'origin': 'user', 'hsmId': None, 'text': 'Ola', 'obfuscated': False, 'files': None, 'quotedMessage': None, 'isFromBot': False}, 'webhookId': '27b4c18d-2ab0-4c70-a592-46bbe7e00bc8', 'timestamp': '2023-05-21T21:07:47.029Z'}
21/05/2023|21:07:47 - webhook.views -INFO- Received webhook request
{'event': 'message.updated', 'data': {'id': '967dd33e-91c9-44cd-a641-e1599f83720e', 'isFromMe': True, 'sent': True, 'type': 'chat', 'timestamp': '2023-05-21T21:07:46.000Z', 'data': {'ack': 2, 'isNew': True, 'isFirst': False}, 'visible': True, 'accountId': '966b70ba-27d8-43ae-a295-35e59f0007be', 'contactId': '79db7607-6088-44c1-a010-ed4ef39d4f37', 'fromId': 'e12d3a56-0c52-43ac-b33c-15c399eb06d4', 'serviceId': '83108c28-14f7-4646-acb8-dab165397fd5', 'toId': None, 'userId': '3f4cc332-516e-4f48-aff2-df6eaa2e5034', 'ticketId': '4a0a9a8f-702a-4854-9a8c-f4d462240939', 'ticketUserId': '3f4cc332-516e-4f48-aff2-df6eaa2e5034', 'ticketDepartmentId': 'a78046d7-809d-4cdb-a72a-31dfbc47d862', 'quotedMessageId': None, 'origin': 'user', 'hsmId': None, 'text': 'Ola', 'obfuscated': False, 'files': None, 'quotedMessage': None, 'isFromBot': False}, 'webhookId': '27b4c18d-2ab0-4c70-a592-46bbe7e00bc8', 'timestamp': '2023-05-21T21:07:47.265Z'}
21/05/2023|21:07:49 - webhook.views -DEBUG- Exceção ocorreu na função webhook_receiver, linha 20: Message matching query does not exist.
21/05/2023|21:07:49 - webhook.views -DEBUG- Exceção ocorreu na função webhook_receiver, linha 20: Message matching query does not exist.
21/05/2023|21:07:49 - webhook.views -INFO- Exception occurred. Message matching query does not exist.
21/05/2023|21:07:49 - webhook.views -INFO- Exception occurred. Message matching query does not exist.
21/05/2023|21:08:21 - webhook.views -INFO- Received webhook request
{'event': 'message.created', 'data': {'id': '93b0b01a-47d3-42c3-bbd6-507e47b07d6f', 'isFromMe': True, 'sent': True, 'type': 'chat', 'timestamp': '2023-05-21T21:08:20.000Z', 'data': {'ack': 0, 'isNew': True, 'isFirst': False}, 'visible': True, 'accountId': '966b70ba-27d8-43ae-a295-35e59f0007be', 'contactId': '79db7607-6088-44c1-a010-ed4ef39d4f37', 'fromId': 'e12d3a56-0c52-43ac-b33c-15c399eb06d4', 'serviceId': '83108c28-14f7-4646-acb8-dab165397fd5', 'toId': None, 'userId': '3f4cc332-516e-4f48-aff2-df6eaa2e5034', 'ticketId': '4a0a9a8f-702a-4854-9a8c-f4d462240939', 'ticketUserId': None, 'ticketDepartmentId': None, 'quotedMessageId': None, 'origin': 'user', 'hsmId': None, 'text': 'Opa', 'obfuscated': False, 'files': None, 'quotedMessage': None, 'isFromBot': False}, 'webhookId': '27b4c18d-2ab0-4c70-a592-46bbe7e00bc8', 'timestamp': '2023-05-21T21:08:20.910Z'}
21/05/2023|21:08:21 - webhook.views -INFO- Received webhook request
{'event': 'message.updated', 'data': {'id': '93b0b01a-47d3-42c3-bbd6-507e47b07d6f', 'isFromMe': True, 'sent': True, 'type': 'chat', 'timestamp': '2023-05-21T21:08:20.000Z', 'data': {'ack': 1, 'isNew': True, 'isFirst': False}, 'visible': True, 'accountId': '966b70ba-27d8-43ae-a295-35e59f0007be', 'contactId': '79db7607-6088-44c1-a010-ed4ef39d4f37', 'fromId': 'e12d3a56-0c52-43ac-b33c-15c399eb06d4', 'serviceId': '83108c28-14f7-4646-acb8-dab165397fd5', 'toId': None, 'userId': '3f4cc332-516e-4f48-aff2-df6eaa2e5034', 'ticketId': '4a0a9a8f-702a-4854-9a8c-f4d462240939', 'ticketUserId': '3f4cc332-516e-4f48-aff2-df6eaa2e5034', 'ticketDepartmentId': 'a78046d7-809d-4cdb-a72a-31dfbc47d862', 'quotedMessageId': None, 'origin': 'user', 'hsmId': None, 'text': 'Opa', 'obfuscated': False, 'files': None, 'quotedMessage': None, 'isFromBot': False}, 'webhookId': '27b4c18d-2ab0-4c70-a592-46bbe7e00bc8', 'timestamp': '2023-05-21T21:08:21.004Z'}
21/05/2023|21:08:21 - webhook.views -INFO- Received webhook request
{'event': 'message.updated', 'data': {'id': '93b0b01a-47d3-42c3-bbd6-507e47b07d6f', 'isFromMe': True, 'sent': True, 'type': 'chat', 'timestamp': '2023-05-21T21:08:20.000Z', 'data': {'ack': 2, 'isNew': True, 'isFirst': False}, 'visible': True, 'accountId': '966b70ba-27d8-43ae-a295-35e59f0007be', 'contactId': '79db7607-6088-44c1-a010-ed4ef39d4f37', 'fromId': 'e12d3a56-0c52-43ac-b33c-15c399eb06d4', 'serviceId': '83108c28-14f7-4646-acb8-dab165397fd5', 'toId': None, 'userId': '3f4cc332-516e-4f48-aff2-df6eaa2e5034', 'ticketId': '4a0a9a8f-702a-4854-9a8c-f4d462240939', 'ticketUserId': '3f4cc332-516e-4f48-aff2-df6eaa2e5034', 'ticketDepartmentId': 'a78046d7-809d-4cdb-a72a-31dfbc47d862', 'quotedMessageId': None, 'origin': 'user', 'hsmId': None, 'text': 'Opa', 'obfuscated': False, 'files': None, 'quotedMessage': None, 'isFromBot': False}, 'webhookId': '27b4c18d-2ab0-4c70-a592-46bbe7e00bc8', 'timestamp': '2023-05-21T21:08:21.164Z'}
21/05/2023|21:09:01 - webhook.views -INFO- Received webhook request
{'event': 'message.updated', 'data': {'id': '967dd33e-91c9-44cd-a641-e1599f83720e', 'isFromMe': True, 'sent': True, 'type': 'chat', 'timestamp': '2023-05-21T21:07:46.000Z', 'data': {'ack': 3, 'isNew': True, 'isFirst': False}, 'visible': True, 'accountId': '966b70ba-27d8-43ae-a295-35e59f0007be', 'contactId': '79db7607-6088-44c1-a010-ed4ef39d4f37', 'fromId': 'e12d3a56-0c52-43ac-b33c-15c399eb06d4', 'serviceId': '83108c28-14f7-4646-acb8-dab165397fd5', 'toId': None, 'userId': '3f4cc332-516e-4f48-aff2-df6eaa2e5034', 'ticketId': '4a0a9a8f-702a-4854-9a8c-f4d462240939', 'ticketUserId': '3f4cc332-516e-4f48-aff2-df6eaa2e5034', 'ticketDepartmentId': 'a78046d7-809d-4cdb-a72a-31dfbc47d862', 'quotedMessageId': None, 'origin': 'user', 'hsmId': None, 'text': 'Ola', 'obfuscated': False, 'files': None, 'quotedMessage': None, 'isFromBot': False}, 'webhookId': '27b4c18d-2ab0-4c70-a592-46bbe7e00bc8', 'timestamp': '2023-05-21T21:09:00.804Z'}
21/05/2023|21:09:01 - webhook.views -INFO- Received webhook request
{'event': 'message.updated', 'data': {'id': '93b0b01a-47d3-42c3-bbd6-507e47b07d6f', 'isFromMe': True, 'sent': True, 'type': 'chat', 'timestamp': '2023-05-21T21:08:20.000Z', 'data': {'ack': 3, 'isNew': True, 'isFirst': False}, 'visible': True, 'accountId': '966b70ba-27d8-43ae-a295-35e59f0007be', 'contactId': '79db7607-6088-44c1-a010-ed4ef39d4f37', 'fromId': 'e12d3a56-0c52-43ac-b33c-15c399eb06d4', 'serviceId': '83108c28-14f7-4646-acb8-dab165397fd5', 'toId': None, 'userId': '3f4cc332-516e-4f48-aff2-df6eaa2e5034', 'ticketId': '4a0a9a8f-702a-4854-9a8c-f4d462240939', 'ticketUserId': '3f4cc332-516e-4f48-aff2-df6eaa2e5034', 'ticketDepartmentId': 'a78046d7-809d-4cdb-a72a-31dfbc47d862', 'quotedMessageId': None, 'origin': 'user', 'hsmId': None, 'text': 'Opa', 'obfuscated': False, 'files': None, 'quotedMessage': None, 'isFromBot': False}, 'webhookId': '27b4c18d-2ab0-4c70-a592-46bbe7e00bc8', 'timestamp': '2023-05-21T21:09:00.804Z'}
21/05/2023|21:10:13 - webhook.views -INFO- Received webhook request
{'event': 'message.created', 'data': {'id': 'f07c86f1-ed16-46dd-873f-7a4264e3ab32', 'isFromMe': True, 'sent': True, 'type': 'chat', 'timestamp': '2023-05-21T21:10:12.000Z', 'data': {'ack': 0, 'isNew': True, 'isFirst': False}, 'visible': True, 'accountId': '966b70ba-27d8-43ae-a295-35e59f0007be', 'contactId': '79db7607-6088-44c1-a010-ed4ef39d4f37', 'fromId': 'e12d3a56-0c52-43ac-b33c-15c399eb06d4', 'serviceId': '83108c28-14f7-4646-acb8-dab165397fd5', 'toId': None, 'userId': '3f4cc332-516e-4f48-aff2-df6eaa2e5034', 'ticketId': '4a0a9a8f-702a-4854-9a8c-f4d462240939', 'ticketUserId': None, 'ticketDepartmentId': None, 'quotedMessageId': None, 'origin': 'user', 'hsmId': None, 'text': '1', 'obfuscated': False, 'files': None, 'quotedMessage': None, 'isFromBot': False}, 'webhookId': '27b4c18d-2ab0-4c70-a592-46bbe7e00bc8', 'timestamp': '2023-05-21T21:10:12.524Z'}
21/05/2023|21:10:13 - webhook.views -INFO- Received webhook request
{'event': 'message.updated', 'data': {'id': 'f07c86f1-ed16-46dd-873f-7a4264e3ab32', 'isFromMe': True, 'sent': True, 'type': 'chat', 'timestamp': '2023-05-21T21:10:12.000Z', 'data': {'ack': 1, 'isNew': True, 'isFirst': False}, 'visible': True, 'accountId': '966b70ba-27d8-43ae-a295-35e59f0007be', 'contactId': '79db7607-6088-44c1-a010-ed4ef39d4f37', 'fromId': 'e12d3a56-0c52-43ac-b33c-15c399eb06d4', 'serviceId': '83108c28-14f7-4646-acb8-dab165397fd5', 'toId': None, 'userId': '3f4cc332-516e-4f48-aff2-df6eaa2e5034', 'ticketId': '4a0a9a8f-702a-4854-9a8c-f4d462240939', 'ticketUserId': '3f4cc332-516e-4f48-aff2-df6eaa2e5034', 'ticketDepartmentId': 'a78046d7-809d-4cdb-a72a-31dfbc47d862', 'quotedMessageId': None, 'origin': 'user', 'hsmId': None, 'text': '1', 'obfuscated': False, 'files': None, 'quotedMessage': None, 'isFromBot': False}, 'webhookId': '27b4c18d-2ab0-4c70-a592-46bbe7e00bc8', 'timestamp': '2023-05-21T21:10:12.618Z'}
21/05/2023|21:10:13 - webhook.views -INFO- Received webhook request
{'event': 'message.updated', 'data': {'id': 'f07c86f1-ed16-46dd-873f-7a4264e3ab32', 'isFromMe': True, 'sent': True, 'type': 'chat', 'timestamp': '2023-05-21T21:10:12.000Z', 'data': {'ack': 2, 'isNew': True, 'isFirst': False}, 'visible': True, 'accountId': '966b70ba-27d8-43ae-a295-35e59f0007be', 'contactId': '79db7607-6088-44c1-a010-ed4ef39d4f37', 'fromId': 'e12d3a56-0c52-43ac-b33c-15c399eb06d4', 'serviceId': '83108c28-14f7-4646-acb8-dab165397fd5', 'toId': None, 'userId': '3f4cc332-516e-4f48-aff2-df6eaa2e5034', 'ticketId': '4a0a9a8f-702a-4854-9a8c-f4d462240939', 'ticketUserId': '3f4cc332-516e-4f48-aff2-df6eaa2e5034', 'ticketDepartmentId': 'a78046d7-809d-4cdb-a72a-31dfbc47d862', 'quotedMessageId': None, 'origin': 'user', 'hsmId': None, 'text': '1', 'obfuscated': False, 'files': None, 'quotedMessage': None, 'isFromBot': False}, 'webhookId': '27b4c18d-2ab0-4c70-a592-46bbe7e00bc8', 'timestamp': '2023-05-21T21:10:12.741Z'}
21/05/2023|21:10:14 - webhook.views -DEBUG- Exceção ocorreu na função webhook_receiver, linha 20: 'function' object has no attribute 'apply_async'
21/05/2023|21:10:14 - webhook.views -DEBUG- Exceção ocorreu na função webhook_receiver, linha 20: 'function' object has no attribute 'apply_async'
21/05/2023|21:10:14 - webhook.views -INFO- Exception occurred. 'function' object has no attribute 'apply_async'
21/05/2023|21:10:14 - webhook.views -INFO- Exception occurred. 'function' object has no attribute 'apply_async'
21/05/2023|21:10:14 - webhook.views -DEBUG- Exceção ocorreu na função webhook_receiver, linha 20: 'function' object has no attribute 'apply_async'
21/05/2023|21:10:14 - webhook.views -INFO- Exception occurred. 'function' object has no attribute 'apply_async'
21/05/2023|21:10:44 - webhook.views -INFO- Received webhook request
{'event': 'message.created', 'data': {'id': 'f822c179-49b2-4bf2-9fa0-7b3f6002b529', 'isFromMe': True, 'sent': True, 'type': 'chat', 'timestamp': '2023-05-21T21:10:42.000Z', 'data': {'ack': 0, 'isNew': True, 'isFirst': False}, 'visible': True, 'accountId': '966b70ba-27d8-43ae-a295-35e59f0007be', 'contactId': '79db7607-6088-44c1-a010-ed4ef39d4f37', 'fromId': 'e12d3a56-0c52-43ac-b33c-15c399eb06d4', 'serviceId': '83108c28-14f7-4646-acb8-dab165397fd5', 'toId': None, 'userId': '3f4cc332-516e-4f48-aff2-df6eaa2e5034', 'ticketId': '4a0a9a8f-702a-4854-9a8c-f4d462240939', 'ticketUserId': None, 'ticketDepartmentId': None, 'quotedMessageId': None, 'origin': 'user', 'hsmId': None, 'text': '2', 'obfuscated': False, 'files': None, 'quotedMessage': None, 'isFromBot': False}, 'webhookId': '27b4c18d-2ab0-4c70-a592-46bbe7e00bc8', 'timestamp': '2023-05-21T21:10:43.326Z'}
21/05/2023|21:10:44 - webhook.views -INFO- Received webhook request
{'event': 'message.updated', 'data': {'id': 'f822c179-49b2-4bf2-9fa0-7b3f6002b529', 'isFromMe': True, 'sent': True, 'type': 'chat', 'timestamp': '2023-05-21T21:10:42.000Z', 'data': {'ack': 1, 'isNew': True, 'isFirst': False}, 'visible': True, 'accountId': '966b70ba-27d8-43ae-a295-35e59f0007be', 'contactId': '79db7607-6088-44c1-a010-ed4ef39d4f37', 'fromId': 'e12d3a56-0c52-43ac-b33c-15c399eb06d4', 'serviceId': '83108c28-14f7-4646-acb8-dab165397fd5', 'toId': None, 'userId': '3f4cc332-516e-4f48-aff2-df6eaa2e5034', 'ticketId': '4a0a9a8f-702a-4854-9a8c-f4d462240939', 'ticketUserId': '3f4cc332-516e-4f48-aff2-df6eaa2e5034', 'ticketDepartmentId': 'a78046d7-809d-4cdb-a72a-31dfbc47d862', 'quotedMessageId': None, 'origin': 'user', 'hsmId': None, 'text': '2', 'obfuscated': False, 'files': None, 'quotedMessage': None, 'isFromBot': False}, 'webhookId': '27b4c18d-2ab0-4c70-a592-46bbe7e00bc8', 'timestamp': '2023-05-21T21:10:43.437Z'}
21/05/2023|21:10:44 - webhook.views -INFO- Received webhook request
{'event': 'message.updated', 'data': {'id': 'f822c179-49b2-4bf2-9fa0-7b3f6002b529', 'isFromMe': True, 'sent': True, 'type': 'chat', 'timestamp': '2023-05-21T21:10:42.000Z', 'data': {'ack': 2, 'isNew': True, 'isFirst': False}, 'visible': True, 'accountId': '966b70ba-27d8-43ae-a295-35e59f0007be', 'contactId': '79db7607-6088-44c1-a010-ed4ef39d4f37', 'fromId': 'e12d3a56-0c52-43ac-b33c-15c399eb06d4', 'serviceId': '83108c28-14f7-4646-acb8-dab165397fd5', 'toId': None, 'userId': '3f4cc332-516e-4f48-aff2-df6eaa2e5034', 'ticketId': '4a0a9a8f-702a-4854-9a8c-f4d462240939', 'ticketUserId': '3f4cc332-516e-4f48-aff2-df6eaa2e5034', 'ticketDepartmentId': 'a78046d7-809d-4cdb-a72a-31dfbc47d862', 'quotedMessageId': None, 'origin': 'user', 'hsmId': None, 'text': '2', 'obfuscated': False, 'files': None, 'quotedMessage': None, 'isFromBot': False}, 'webhookId': '27b4c18d-2ab0-4c70-a592-46bbe7e00bc8', 'timestamp': '2023-05-21T21:10:43.594Z'}
21/05/2023|21:10:45 - webhook.views -DEBUG- Exceção ocorreu na função webhook_receiver, linha 20: handle_message_created() missing 2 required positional arguments: 'data' and 'isFromMe'
21/05/2023|21:10:45 - webhook.views -INFO- Exception occurred. handle_message_created() missing 2 required positional arguments: 'data' and 'isFromMe'
21/05/2023|21:11:13 - webhook.views -INFO- Received webhook request
{'event': 'message.created', 'data': {'id': '8b834995-d44d-46fa-ac17-a1bd3b640624', 'isFromMe': True, 'sent': True, 'type': 'chat', 'timestamp': '2023-05-21T21:11:12.000Z', 'data': {'ack': 0, 'isNew': True, 'isFirst': False}, 'visible': True, 'accountId': '966b70ba-27d8-43ae-a295-35e59f0007be', 'contactId': '79db7607-6088-44c1-a010-ed4ef39d4f37', 'fromId': 'e12d3a56-0c52-43ac-b33c-15c399eb06d4', 'serviceId': '83108c28-14f7-4646-acb8-dab165397fd5', 'toId': None, 'userId': '3f4cc332-516e-4f48-aff2-df6eaa2e5034', 'ticketId': '4a0a9a8f-702a-4854-9a8c-f4d462240939', 'ticketUserId': None, 'ticketDepartmentId': None, 'quotedMessageId': None, 'origin': 'user', 'hsmId': None, 'text': '3', 'obfuscated': False, 'files': None, 'quotedMessage': None, 'isFromBot': False}, 'webhookId': '27b4c18d-2ab0-4c70-a592-46bbe7e00bc8', 'timestamp': '2023-05-21T21:11:13.282Z'}
21/05/2023|21:11:14 - webhook.views -INFO- Received webhook request
{'event': 'message.updated', 'data': {'id': '8b834995-d44d-46fa-ac17-a1bd3b640624', 'isFromMe': True, 'sent': True, 'type': 'chat', 'timestamp': '2023-05-21T21:11:12.000Z', 'data': {'ack': 1, 'isNew': True, 'isFirst': False}, 'visible': True, 'accountId': '966b70ba-27d8-43ae-a295-35e59f0007be', 'contactId': '79db7607-6088-44c1-a010-ed4ef39d4f37', 'fromId': 'e12d3a56-0c52-43ac-b33c-15c399eb06d4', 'serviceId': '83108c28-14f7-4646-acb8-dab165397fd5', 'toId': None, 'userId': '3f4cc332-516e-4f48-aff2-df6eaa2e5034', 'ticketId': '4a0a9a8f-702a-4854-9a8c-f4d462240939', 'ticketUserId': '3f4cc332-516e-4f48-aff2-df6eaa2e5034', 'ticketDepartmentId': 'a78046d7-809d-4cdb-a72a-31dfbc47d862', 'quotedMessageId': None, 'origin': 'user', 'hsmId': None, 'text': '3', 'obfuscated': False, 'files': None, 'quotedMessage': None, 'isFromBot': False}, 'webhookId': '27b4c18d-2ab0-4c70-a592-46bbe7e00bc8', 'timestamp': '2023-05-21T21:11:13.384Z'}
21/05/2023|21:11:14 - webhook.views -INFO- Received webhook request
{'event': 'message.updated', 'data': {'id': '8b834995-d44d-46fa-ac17-a1bd3b640624', 'isFromMe': True, 'sent': True, 'type': 'chat', 'timestamp': '2023-05-21T21:11:12.000Z', 'data': {'ack': 2, 'isNew': True, 'isFirst': False}, 'visible': True, 'accountId': '966b70ba-27d8-43ae-a295-35e59f0007be', 'contactId': '79db7607-6088-44c1-a010-ed4ef39d4f37', 'fromId': 'e12d3a56-0c52-43ac-b33c-15c399eb06d4', 'serviceId': '83108c28-14f7-4646-acb8-dab165397fd5', 'toId': None, 'userId': '3f4cc332-516e-4f48-aff2-df6eaa2e5034', 'ticketId': '4a0a9a8f-702a-4854-9a8c-f4d462240939', 'ticketUserId': '3f4cc332-516e-4f48-aff2-df6eaa2e5034', 'ticketDepartmentId': 'a78046d7-809d-4cdb-a72a-31dfbc47d862', 'quotedMessageId': None, 'origin': 'user', 'hsmId': None, 'text': '3', 'obfuscated': False, 'files': None, 'quotedMessage': None, 'isFromBot': False}, 'webhookId': '27b4c18d-2ab0-4c70-a592-46bbe7e00bc8', 'timestamp': '2023-05-21T21:11:13.607Z'}
21/05/2023|21:11:45 - webhook.views -INFO- Received webhook request
{'event': 'message.created', 'data': {'id': 'eb0e202f-6b22-4d28-9323-ae695d69229d', 'isFromMe': True, 'sent': True, 'type': 'chat', 'timestamp': '2023-05-21T21:11:43.000Z', 'data': {'ack': 0, 'isNew': True, 'isFirst': False}, 'visible': True, 'accountId': '966b70ba-27d8-43ae-a295-35e59f0007be', 'contactId': '79db7607-6088-44c1-a010-ed4ef39d4f37', 'fromId': 'e12d3a56-0c52-43ac-b33c-15c399eb06d4', 'serviceId': '83108c28-14f7-4646-acb8-dab165397fd5', 'toId': None, 'userId': '3f4cc332-516e-4f48-aff2-df6eaa2e5034', 'ticketId': '4a0a9a8f-702a-4854-9a8c-f4d462240939', 'ticketUserId': None, 'ticketDepartmentId': None, 'quotedMessageId': None, 'origin': 'user', 'hsmId': None, 'text': 'asdf', 'obfuscated': False, 'files': None, 'quotedMessage': None, 'isFromBot': False}, 'webhookId': '27b4c18d-2ab0-4c70-a592-46bbe7e00bc8', 'timestamp': '2023-05-21T21:11:44.333Z'}
21/05/2023|21:11:45 - webhook.views -INFO- Received webhook request
{'event': 'message.updated', 'data': {'id': 'eb0e202f-6b22-4d28-9323-ae695d69229d', 'isFromMe': True, 'sent': True, 'type': 'chat', 'timestamp': '2023-05-21T21:11:43.000Z', 'data': {'ack': 1, 'isNew': True, 'isFirst': False}, 'visible': True, 'accountId': '966b70ba-27d8-43ae-a295-35e59f0007be', 'contactId': '79db7607-6088-44c1-a010-ed4ef39d4f37', 'fromId': 'e12d3a56-0c52-43ac-b33c-15c399eb06d4', 'serviceId': '83108c28-14f7-4646-acb8-dab165397fd5', 'toId': None, 'userId': '3f4cc332-516e-4f48-aff2-df6eaa2e5034', 'ticketId': '4a0a9a8f-702a-4854-9a8c-f4d462240939', 'ticketUserId': '3f4cc332-516e-4f48-aff2-df6eaa2e5034', 'ticketDepartmentId': 'a78046d7-809d-4cdb-a72a-31dfbc47d862', 'quotedMessageId': None, 'origin': 'user', 'hsmId': None, 'text': 'asdf', 'obfuscated': False, 'files': None, 'quotedMessage': None, 'isFromBot': False}, 'webhookId': '27b4c18d-2ab0-4c70-a592-46bbe7e00bc8', 'timestamp': '2023-05-21T21:11:44.430Z'}
21/05/2023|21:11:45 - webhook.views -INFO- Received webhook request
{'event': 'message.updated', 'data': {'id': 'eb0e202f-6b22-4d28-9323-ae695d69229d', 'isFromMe': True, 'sent': True, 'type': 'chat', 'timestamp': '2023-05-21T21:11:43.000Z', 'data': {'ack': 2, 'isNew': True, 'isFirst': False}, 'visible': True, 'accountId': '966b70ba-27d8-43ae-a295-35e59f0007be', 'contactId': '79db7607-6088-44c1-a010-ed4ef39d4f37', 'fromId': 'e12d3a56-0c52-43ac-b33c-15c399eb06d4', 'serviceId': '83108c28-14f7-4646-acb8-dab165397fd5', 'toId': None, 'userId': '3f4cc332-516e-4f48-aff2-df6eaa2e5034', 'ticketId': '4a0a9a8f-702a-4854-9a8c-f4d462240939', 'ticketUserId': '3f4cc332-516e-4f48-aff2-df6eaa2e5034', 'ticketDepartmentId': 'a78046d7-809d-4cdb-a72a-31dfbc47d862', 'quotedMessageId': None, 'origin': 'user', 'hsmId': None, 'text': 'asdf', 'obfuscated': False, 'files': None, 'quotedMessage': None, 'isFromBot': False}, 'webhookId': '27b4c18d-2ab0-4c70-a592-46bbe7e00bc8', 'timestamp': '2023-05-21T21:11:44.633Z'}
21/05/2023|21:12:09 - webhook.views -INFO- Received webhook request
{'event': 'message.created', 'data': {'id': 'be5f804b-b9b7-4f93-9221-17adb4a419a6', 'isFromMe': True, 'sent': True, 'type': 'chat', 'timestamp': '2023-05-21T21:12:07.000Z', 'data': {'ack': 0, 'isNew': True, 'isFirst': False}, 'visible': True, 'accountId': '966b70ba-27d8-43ae-a295-35e59f0007be', 'contactId': '79db7607-6088-44c1-a010-ed4ef39d4f37', 'fromId': 'e12d3a56-0c52-43ac-b33c-15c399eb06d4', 'serviceId': '83108c28-14f7-4646-acb8-dab165397fd5', 'toId': None, 'userId': '3f4cc332-516e-4f48-aff2-df6eaa2e5034', 'ticketId': '4a0a9a8f-702a-4854-9a8c-f4d462240939', 'ticketUserId': None, 'ticketDepartmentId': None, 'quotedMessageId': None, 'origin': 'user', 'hsmId': None, 'text': 'Opa', 'obfuscated': False, 'files': None, 'quotedMessage': None, 'isFromBot': False}, 'webhookId': '27b4c18d-2ab0-4c70-a592-46bbe7e00bc8', 'timestamp': '2023-05-21T21:12:08.668Z'}
21/05/2023|21:12:09 - webhook.views -INFO- Received webhook request
{'event': 'message.updated', 'data': {'id': 'be5f804b-b9b7-4f93-9221-17adb4a419a6', 'isFromMe': True, 'sent': True, 'type': 'chat', 'timestamp': '2023-05-21T21:12:07.000Z', 'data': {'ack': 1, 'isNew': True, 'isFirst': False}, 'visible': True, 'accountId': '966b70ba-27d8-43ae-a295-35e59f0007be', 'contactId': '79db7607-6088-44c1-a010-ed4ef39d4f37', 'fromId': 'e12d3a56-0c52-43ac-b33c-15c399eb06d4', 'serviceId': '83108c28-14f7-4646-acb8-dab165397fd5', 'toId': None, 'userId': '3f4cc332-516e-4f48-aff2-df6eaa2e5034', 'ticketId': '4a0a9a8f-702a-4854-9a8c-f4d462240939', 'ticketUserId': '3f4cc332-516e-4f48-aff2-df6eaa2e5034', 'ticketDepartmentId': 'a78046d7-809d-4cdb-a72a-31dfbc47d862', 'quotedMessageId': None, 'origin': 'user', 'hsmId': None, 'text': 'Opa', 'obfuscated': False, 'files': None, 'quotedMessage': None, 'isFromBot': False}, 'webhookId': '27b4c18d-2ab0-4c70-a592-46bbe7e00bc8', 'timestamp': '2023-05-21T21:12:08.722Z'}
21/05/2023|21:12:09 - webhook.views -INFO- Received webhook request
{'event': 'message.updated', 'data': {'id': 'be5f804b-b9b7-4f93-9221-17adb4a419a6', 'isFromMe': True, 'sent': True, 'type': 'chat', 'timestamp': '2023-05-21T21:12:07.000Z', 'data': {'ack': 2, 'isNew': True, 'isFirst': False}, 'visible': True, 'accountId': '966b70ba-27d8-43ae-a295-35e59f0007be', 'contactId': '79db7607-6088-44c1-a010-ed4ef39d4f37', 'fromId': 'e12d3a56-0c52-43ac-b33c-15c399eb06d4', 'serviceId': '83108c28-14f7-4646-acb8-dab165397fd5', 'toId': None, 'userId': '3f4cc332-516e-4f48-aff2-df6eaa2e5034', 'ticketId': '4a0a9a8f-702a-4854-9a8c-f4d462240939', 'ticketUserId': '3f4cc332-516e-4f48-aff2-df6eaa2e5034', 'ticketDepartmentId': 'a78046d7-809d-4cdb-a72a-31dfbc47d862', 'quotedMessageId': None, 'origin': 'user', 'hsmId': None, 'text': 'Opa', 'obfuscated': False, 'files': None, 'quotedMessage': None, 'isFromBot': False}, 'webhookId': '27b4c18d-2ab0-4c70-a592-46bbe7e00bc8', 'timestamp': '2023-05-21T21:12:08.857Z'}
21/05/2023|21:12:55 - webhook.views -INFO- Received webhook request
{'event': 'message.created', 'data': {'id': '4157f93b-1dcb-44bc-ba48-896e7725fd4f', 'isFromMe': True, 'sent': True, 'type': 'chat', 'timestamp': '2023-05-21T21:12:55.000Z', 'data': {'ack': 0, 'isNew': True, 'isFirst': False}, 'visible': True, 'accountId': '966b70ba-27d8-43ae-a295-35e59f0007be', 'contactId': '79db7607-6088-44c1-a010-ed4ef39d4f37', 'fromId': 'e12d3a56-0c52-43ac-b33c-15c399eb06d4', 'serviceId': '83108c28-14f7-4646-acb8-dab165397fd5', 'toId': None, 'userId': '3f4cc332-516e-4f48-aff2-df6eaa2e5034', 'ticketId': '4a0a9a8f-702a-4854-9a8c-f4d462240939', 'ticketUserId': None, 'ticketDepartmentId': None, 'quotedMessageId': None, 'origin': 'user', 'hsmId': None, 'text': 'qwerty', 'obfuscated': False, 'files': None, 'quotedMessage': None, 'isFromBot': False}, 'webhookId': '27b4c18d-2ab0-4c70-a592-46bbe7e00bc8', 'timestamp': '2023-05-21T21:12:55.261Z'}
21/05/2023|21:12:56 - webhook.views -INFO- Received webhook request
{'event': 'message.updated', 'data': {'id': '4157f93b-1dcb-44bc-ba48-896e7725fd4f', 'isFromMe': True, 'sent': True, 'type': 'chat', 'timestamp': '2023-05-21T21:12:55.000Z', 'data': {'ack': 1, 'isNew': True, 'isFirst': False}, 'visible': True, 'accountId': '966b70ba-27d8-43ae-a295-35e59f0007be', 'contactId': '79db7607-6088-44c1-a010-ed4ef39d4f37', 'fromId': 'e12d3a56-0c52-43ac-b33c-15c399eb06d4', 'serviceId': '83108c28-14f7-4646-acb8-dab165397fd5', 'toId': None, 'userId': '3f4cc332-516e-4f48-aff2-df6eaa2e5034', 'ticketId': '4a0a9a8f-702a-4854-9a8c-f4d462240939', 'ticketUserId': '3f4cc332-516e-4f48-aff2-df6eaa2e5034', 'ticketDepartmentId': 'a78046d7-809d-4cdb-a72a-31dfbc47d862', 'quotedMessageId': None, 'origin': 'user', 'hsmId': None, 'text': 'qwerty', 'obfuscated': False, 'files': None, 'quotedMessage': None, 'isFromBot': False}, 'webhookId': '27b4c18d-2ab0-4c70-a592-46bbe7e00bc8', 'timestamp': '2023-05-21T21:12:55.352Z'}
21/05/2023|21:12:56 - webhook.views -INFO- Received webhook request
{'event': 'message.updated', 'data': {'id': '4157f93b-1dcb-44bc-ba48-896e7725fd4f', 'isFromMe': True, 'sent': True, 'type': 'chat', 'timestamp': '2023-05-21T21:12:55.000Z', 'data': {'ack': 2, 'isNew': True, 'isFirst': False}, 'visible': True, 'accountId': '966b70ba-27d8-43ae-a295-35e59f0007be', 'contactId': '79db7607-6088-44c1-a010-ed4ef39d4f37', 'fromId': 'e12d3a56-0c52-43ac-b33c-15c399eb06d4', 'serviceId': '83108c28-14f7-4646-acb8-dab165397fd5', 'toId': None, 'userId': '3f4cc332-516e-4f48-aff2-df6eaa2e5034', 'ticketId': '4a0a9a8f-702a-4854-9a8c-f4d462240939', 'ticketUserId': '3f4cc332-516e-4f48-aff2-df6eaa2e5034', 'ticketDepartmentId': 'a78046d7-809d-4cdb-a72a-31dfbc47d862', 'quotedMessageId': None, 'origin': 'user', 'hsmId': None, 'text': 'qwerty', 'obfuscated': False, 'files': None, 'quotedMessage': None, 'isFromBot': False}, 'webhookId': '27b4c18d-2ab0-4c70-a592-46bbe7e00bc8', 'timestamp': '2023-05-21T21:12:55.598Z'}
21/05/2023|21:12:57 - webhook.views -DEBUG- Exceção ocorreu na função webhook_receiver, linha 20: 'function' object has no attribute 'apply_async'
21/05/2023|21:12:57 - webhook.views -INFO- Exception occurred. 'function' object has no attribute 'apply_async'
21/05/2023|21:14:27 - webhook.views -INFO- Received webhook request
{'event': 'message.created', 'data': {'id': 'e16c3d02-ac74-4785-a7d6-6ea4523048db', 'isFromMe': True, 'sent': True, 'type': 'chat', 'timestamp': '2023-05-21T21:14:25.000Z', 'data': {'ack': 0, 'isNew': True, 'isFirst': False}, 'visible': True, 'accountId': '966b70ba-27d8-43ae-a295-35e59f0007be', 'contactId': '79db7607-6088-44c1-a010-ed4ef39d4f37', 'fromId': 'e12d3a56-0c52-43ac-b33c-15c399eb06d4', 'serviceId': '83108c28-14f7-4646-acb8-dab165397fd5', 'toId': None, 'userId': '3f4cc332-516e-4f48-aff2-df6eaa2e5034', 'ticketId': '4a0a9a8f-702a-4854-9a8c-f4d462240939', 'ticketUserId': None, 'ticketDepartmentId': None, 'quotedMessageId': None, 'origin': 'user', 'hsmId': None, 'text': 'teste', 'obfuscated': False, 'files': None, 'quotedMessage': None, 'isFromBot': False}, 'webhookId': '27b4c18d-2ab0-4c70-a592-46bbe7e00bc8', 'timestamp': '2023-05-21T21:14:26.718Z'}
21/05/2023|21:14:27 - webhook.views -INFO- Received webhook request
{'event': 'message.updated', 'data': {'id': 'e16c3d02-ac74-4785-a7d6-6ea4523048db', 'isFromMe': True, 'sent': True, 'type': 'chat', 'timestamp': '2023-05-21T21:14:25.000Z', 'data': {'ack': 1, 'isNew': True, 'isFirst': False}, 'visible': True, 'accountId': '966b70ba-27d8-43ae-a295-35e59f0007be', 'contactId': '79db7607-6088-44c1-a010-ed4ef39d4f37', 'fromId': 'e12d3a56-0c52-43ac-b33c-15c399eb06d4', 'serviceId': '83108c28-14f7-4646-acb8-dab165397fd5', 'toId': None, 'userId': '3f4cc332-516e-4f48-aff2-df6eaa2e5034', 'ticketId': '4a0a9a8f-702a-4854-9a8c-f4d462240939', 'ticketUserId': '3f4cc332-516e-4f48-aff2-df6eaa2e5034', 'ticketDepartmentId': 'a78046d7-809d-4cdb-a72a-31dfbc47d862', 'quotedMessageId': None, 'origin': 'user', 'hsmId': None, 'text': 'teste', 'obfuscated': False, 'files': None, 'quotedMessage': None, 'isFromBot': False}, 'webhookId': '27b4c18d-2ab0-4c70-a592-46bbe7e00bc8', 'timestamp': '2023-05-21T21:14:26.823Z'}
21/05/2023|21:14:27 - webhook.views -INFO- Received webhook request
{'event': 'message.updated', 'data': {'id': 'e16c3d02-ac74-4785-a7d6-6ea4523048db', 'isFromMe': True, 'sent': True, 'type': 'chat', 'timestamp': '2023-05-21T21:14:25.000Z', 'data': {'ack': 2, 'isNew': True, 'isFirst': False}, 'visible': True, 'accountId': '966b70ba-27d8-43ae-a295-35e59f0007be', 'contactId': '79db7607-6088-44c1-a010-ed4ef39d4f37', 'fromId': 'e12d3a56-0c52-43ac-b33c-15c399eb06d4', 'serviceId': '83108c28-14f7-4646-acb8-dab165397fd5', 'toId': None, 'userId': '3f4cc332-516e-4f48-aff2-df6eaa2e5034', 'ticketId': '4a0a9a8f-702a-4854-9a8c-f4d462240939', 'ticketUserId': '3f4cc332-516e-4f48-aff2-df6eaa2e5034', 'ticketDepartmentId': 'a78046d7-809d-4cdb-a72a-31dfbc47d862', 'quotedMessageId': None, 'origin': 'user', 'hsmId': None, 'text': 'teste', 'obfuscated': False, 'files': None, 'quotedMessage': None, 'isFromBot': False}, 'webhookId': '27b4c18d-2ab0-4c70-a592-46bbe7e00bc8', 'timestamp': '2023-05-21T21:14:27.043Z'}
21/05/2023|21:16:44 - webhook.views -INFO- Received webhook request
{'event': 'message.created', 'data': {'id': '7a1e71dc-fe6b-4438-8457-4c6c6e187dcf', 'isFromMe': True, 'sent': True, 'type': 'chat', 'timestamp': '2023-05-21T21:16:42.000Z', 'data': {'ack': 0, 'isNew': True, 'isFirst': False}, 'visible': True, 'accountId': '966b70ba-27d8-43ae-a295-35e59f0007be', 'contactId': '79db7607-6088-44c1-a010-ed4ef39d4f37', 'fromId': 'e12d3a56-0c52-43ac-b33c-15c399eb06d4', 'serviceId': '83108c28-14f7-4646-acb8-dab165397fd5', 'toId': None, 'userId': '3f4cc332-516e-4f48-aff2-df6eaa2e5034', 'ticketId': '4a0a9a8f-702a-4854-9a8c-f4d462240939', 'ticketUserId': None, 'ticketDepartmentId': None, 'quotedMessageId': None, 'origin': 'user', 'hsmId': None, 'text': 'Agora vai', 'obfuscated': False, 'files': None, 'quotedMessage': None, 'isFromBot': False}, 'webhookId': '27b4c18d-2ab0-4c70-a592-46bbe7e00bc8', 'timestamp': '2023-05-21T21:16:43.543Z'}
21/05/2023|21:16:44 - webhook.views -INFO- Received webhook request
{'event': 'message.updated', 'data': {'id': '7a1e71dc-fe6b-4438-8457-4c6c6e187dcf', 'isFromMe': True, 'sent': True, 'type': 'chat', 'timestamp': '2023-05-21T21:16:42.000Z', 'data': {'ack': 1, 'isNew': True, 'isFirst': False}, 'visible': True, 'accountId': '966b70ba-27d8-43ae-a295-35e59f0007be', 'contactId': '79db7607-6088-44c1-a010-ed4ef39d4f37', 'fromId': 'e12d3a56-0c52-43ac-b33c-15c399eb06d4', 'serviceId': '83108c28-14f7-4646-acb8-dab165397fd5', 'toId': None, 'userId': '3f4cc332-516e-4f48-aff2-df6eaa2e5034', 'ticketId': '4a0a9a8f-702a-4854-9a8c-f4d462240939', 'ticketUserId': '3f4cc332-516e-4f48-aff2-df6eaa2e5034', 'ticketDepartmentId': 'a78046d7-809d-4cdb-a72a-31dfbc47d862', 'quotedMessageId': None, 'origin': 'user', 'hsmId': None, 'text': 'Agora vai', 'obfuscated': False, 'files': None, 'quotedMessage': None, 'isFromBot': False}, 'webhookId': '27b4c18d-2ab0-4c70-a592-46bbe7e00bc8', 'timestamp': '2023-05-21T21:16:43.633Z'}
21/05/2023|21:16:44 - webhook.views -INFO- Received webhook request
{'event': 'message.updated', 'data': {'id': '7a1e71dc-fe6b-4438-8457-4c6c6e187dcf', 'isFromMe': True, 'sent': True, 'type': 'chat', 'timestamp': '2023-05-21T21:16:42.000Z', 'data': {'ack': 2, 'isNew': True, 'isFirst': False}, 'visible': True, 'accountId': '966b70ba-27d8-43ae-a295-35e59f0007be', 'contactId': '79db7607-6088-44c1-a010-ed4ef39d4f37', 'fromId': 'e12d3a56-0c52-43ac-b33c-15c399eb06d4', 'serviceId': '83108c28-14f7-4646-acb8-dab165397fd5', 'toId': None, 'userId': '3f4cc332-516e-4f48-aff2-df6eaa2e5034', 'ticketId': '4a0a9a8f-702a-4854-9a8c-f4d462240939', 'ticketUserId': '3f4cc332-516e-4f48-aff2-df6eaa2e5034', 'ticketDepartmentId': 'a78046d7-809d-4cdb-a72a-31dfbc47d862', 'quotedMessageId': None, 'origin': 'user', 'hsmId': None, 'text': 'Agora vai', 'obfuscated': False, 'files': None, 'quotedMessage': None, 'isFromBot': False}, 'webhookId': '27b4c18d-2ab0-4c70-a592-46bbe7e00bc8', 'timestamp': '2023-05-21T21:16:43.848Z'}
21/05/2023|21:17:30 - webhook.views -INFO- Received webhook request
{'event': 'message.created', 'data': {'id': 'cbee5000-c2fc-4a64-bb03-c58a298ecb42', 'isFromMe': True, 'sent': True, 'type': 'chat', 'timestamp': '2023-05-21T21:17:28.000Z', 'data': {'ack': 0, 'isNew': True, 'isFirst': False}, 'visible': True, 'accountId': '966b70ba-27d8-43ae-a295-35e59f0007be', 'contactId': '79db7607-6088-44c1-a010-ed4ef39d4f37', 'fromId': 'e12d3a56-0c52-43ac-b33c-15c399eb06d4', 'serviceId': '83108c28-14f7-4646-acb8-dab165397fd5', 'toId': None, 'userId': '3f4cc332-516e-4f48-aff2-df6eaa2e5034', 'ticketId': '4a0a9a8f-702a-4854-9a8c-f4d462240939', 'ticketUserId': None, 'ticketDepartmentId': None, 'quotedMessageId': None, 'origin': 'user', 'hsmId': None, 'text': 'As', 'obfuscated': False, 'files': None, 'quotedMessage': None, 'isFromBot': False}, 'webhookId': '27b4c18d-2ab0-4c70-a592-46bbe7e00bc8', 'timestamp': '2023-05-21T21:17:29.600Z'}
21/05/2023|21:17:30 - webhook.views -INFO- Received webhook request
{'event': 'message.updated', 'data': {'id': 'cbee5000-c2fc-4a64-bb03-c58a298ecb42', 'isFromMe': True, 'sent': True, 'type': 'chat', 'timestamp': '2023-05-21T21:17:28.000Z', 'data': {'ack': 1, 'isNew': True, 'isFirst': False}, 'visible': True, 'accountId': '966b70ba-27d8-43ae-a295-35e59f0007be', 'contactId': '79db7607-6088-44c1-a010-ed4ef39d4f37', 'fromId': 'e12d3a56-0c52-43ac-b33c-15c399eb06d4', 'serviceId': '83108c28-14f7-4646-acb8-dab165397fd5', 'toId': None, 'userId': '3f4cc332-516e-4f48-aff2-df6eaa2e5034', 'ticketId': '4a0a9a8f-702a-4854-9a8c-f4d462240939', 'ticketUserId': '3f4cc332-516e-4f48-aff2-df6eaa2e5034', 'ticketDepartmentId': 'a78046d7-809d-4cdb-a72a-31dfbc47d862', 'quotedMessageId': None, 'origin': 'user', 'hsmId': None, 'text': 'As', 'obfuscated': False, 'files': None, 'quotedMessage': None, 'isFromBot': False}, 'webhookId': '27b4c18d-2ab0-4c70-a592-46bbe7e00bc8', 'timestamp': '2023-05-21T21:17:29.692Z'}
21/05/2023|21:17:30 - webhook.views -INFO- Received webhook request
{'event': 'message.updated', 'data': {'id': 'cbee5000-c2fc-4a64-bb03-c58a298ecb42', 'isFromMe': True, 'sent': True, 'type': 'chat', 'timestamp': '2023-05-21T21:17:28.000Z', 'data': {'ack': 2, 'isNew': True, 'isFirst': False}, 'visible': True, 'accountId': '966b70ba-27d8-43ae-a295-35e59f0007be', 'contactId': '79db7607-6088-44c1-a010-ed4ef39d4f37', 'fromId': 'e12d3a56-0c52-43ac-b33c-15c399eb06d4', 'serviceId': '83108c28-14f7-4646-acb8-dab165397fd5', 'toId': None, 'userId': '3f4cc332-516e-4f48-aff2-df6eaa2e5034', 'ticketId': '4a0a9a8f-702a-4854-9a8c-f4d462240939', 'ticketUserId': '3f4cc332-516e-4f48-aff2-df6eaa2e5034', 'ticketDepartmentId': 'a78046d7-809d-4cdb-a72a-31dfbc47d862', 'quotedMessageId': None, 'origin': 'user', 'hsmId': None, 'text': 'As', 'obfuscated': False, 'files': None, 'quotedMessage': None, 'isFromBot': False}, 'webhookId': '27b4c18d-2ab0-4c70-a592-46bbe7e00bc8', 'timestamp': '2023-05-21T21:17:29.935Z'}
21/05/2023|21:32:07 - webhook.views -INFO- Received webhook request
{'event': 'message.created', 'data': {'id': 'e2691f0a-b8fe-45a5-99db-0f7ad4b1828f', 'isFromMe': True, 'sent': True, 'type': 'chat', 'timestamp': '2023-05-21T21:32:06.000Z', 'data': {'ack': 0, 'isNew': True, 'isFirst': False}, 'visible': True, 'accountId': '966b70ba-27d8-43ae-a295-35e59f0007be', 'contactId': '79db7607-6088-44c1-a010-ed4ef39d4f37', 'fromId': 'e12d3a56-0c52-43ac-b33c-15c399eb06d4', 'serviceId': '83108c28-14f7-4646-acb8-dab165397fd5', 'toId': None, 'userId': '3f4cc332-516e-4f48-aff2-df6eaa2e5034', 'ticketId': '4a0a9a8f-702a-4854-9a8c-f4d462240939', 'ticketUserId': None, 'ticketDepartmentId': None, 'quotedMessageId': None, 'origin': 'user', 'hsmId': None, 'text': 'Legal', 'obfuscated': False, 'files': None, 'quotedMessage': None, 'isFromBot': False}, 'webhookId': '27b4c18d-2ab0-4c70-a592-46bbe7e00bc8', 'timestamp': '2023-05-21T21:32:07.151Z'}
21/05/2023|21:32:08 - webhook.views -INFO- Received webhook request
{'event': 'message.updated', 'data': {'id': 'e2691f0a-b8fe-45a5-99db-0f7ad4b1828f', 'isFromMe': True, 'sent': True, 'type': 'chat', 'timestamp': '2023-05-21T21:32:06.000Z', 'data': {'ack': 1, 'isNew': True, 'isFirst': False}, 'visible': True, 'accountId': '966b70ba-27d8-43ae-a295-35e59f0007be', 'contactId': '79db7607-6088-44c1-a010-ed4ef39d4f37', 'fromId': 'e12d3a56-0c52-43ac-b33c-15c399eb06d4', 'serviceId': '83108c28-14f7-4646-acb8-dab165397fd5', 'toId': None, 'userId': '3f4cc332-516e-4f48-aff2-df6eaa2e5034', 'ticketId': '4a0a9a8f-702a-4854-9a8c-f4d462240939', 'ticketUserId': '3f4cc332-516e-4f48-aff2-df6eaa2e5034', 'ticketDepartmentId': 'a78046d7-809d-4cdb-a72a-31dfbc47d862', 'quotedMessageId': None, 'origin': 'user', 'hsmId': None, 'text': 'Legal', 'obfuscated': False, 'files': None, 'quotedMessage': None, 'isFromBot': False}, 'webhookId': '27b4c18d-2ab0-4c70-a592-46bbe7e00bc8', 'timestamp': '2023-05-21T21:32:07.258Z'}
21/05/2023|21:32:08 - webhook.views -INFO- Received webhook request
{'event': 'message.updated', 'data': {'id': 'e2691f0a-b8fe-45a5-99db-0f7ad4b1828f', 'isFromMe': True, 'sent': True, 'type': 'chat', 'timestamp': '2023-05-21T21:32:06.000Z', 'data': {'ack': 2, 'isNew': True, 'isFirst': False}, 'visible': True, 'accountId': '966b70ba-27d8-43ae-a295-35e59f0007be', 'contactId': '79db7607-6088-44c1-a010-ed4ef39d4f37', 'fromId': 'e12d3a56-0c52-43ac-b33c-15c399eb06d4', 'serviceId': '83108c28-14f7-4646-acb8-dab165397fd5', 'toId': None, 'userId': '3f4cc332-516e-4f48-aff2-df6eaa2e5034', 'ticketId': '4a0a9a8f-702a-4854-9a8c-f4d462240939', 'ticketUserId': '3f4cc332-516e-4f48-aff2-df6eaa2e5034', 'ticketDepartmentId': 'a78046d7-809d-4cdb-a72a-31dfbc47d862', 'quotedMessageId': None, 'origin': 'user', 'hsmId': None, 'text': 'Legal', 'obfuscated': False, 'files': None, 'quotedMessage': None, 'isFromBot': False}, 'webhookId': '27b4c18d-2ab0-4c70-a592-46bbe7e00bc8', 'timestamp': '2023-05-21T21:32:07.412Z'}
21/05/2023|21:33:49 - webhook.views -INFO- Received webhook request
{'event': 'message.created', 'data': {'id': 'cd1bece8-5870-41f6-a064-ce2c32faa4d8', 'isFromMe': True, 'sent': True, 'type': 'chat', 'timestamp': '2023-05-21T21:33:47.000Z', 'data': {'ack': 0, 'isNew': True, 'isFirst': False}, 'visible': True, 'accountId': '966b70ba-27d8-43ae-a295-35e59f0007be', 'contactId': '79db7607-6088-44c1-a010-ed4ef39d4f37', 'fromId': 'e12d3a56-0c52-43ac-b33c-15c399eb06d4', 'serviceId': '83108c28-14f7-4646-acb8-dab165397fd5', 'toId': None, 'userId': '3f4cc332-516e-4f48-aff2-df6eaa2e5034', 'ticketId': '4a0a9a8f-702a-4854-9a8c-f4d462240939', 'ticketUserId': None, 'ticketDepartmentId': None, 'quotedMessageId': None, 'origin': 'user', 'hsmId': None, 'text': 'Olá', 'obfuscated': False, 'files': None, 'quotedMessage': None, 'isFromBot': False}, 'webhookId': '27b4c18d-2ab0-4c70-a592-46bbe7e00bc8', 'timestamp': '2023-05-21T21:33:48.875Z'}
21/05/2023|21:33:49 - webhook.views -INFO- Received webhook request
{'event': 'message.updated', 'data': {'id': 'cd1bece8-5870-41f6-a064-ce2c32faa4d8', 'isFromMe': True, 'sent': True, 'type': 'chat', 'timestamp': '2023-05-21T21:33:47.000Z', 'data': {'ack': 1, 'isNew': True, 'isFirst': False}, 'visible': True, 'accountId': '966b70ba-27d8-43ae-a295-35e59f0007be', 'contactId': '79db7607-6088-44c1-a010-ed4ef39d4f37', 'fromId': 'e12d3a56-0c52-43ac-b33c-15c399eb06d4', 'serviceId': '83108c28-14f7-4646-acb8-dab165397fd5', 'toId': None, 'userId': '3f4cc332-516e-4f48-aff2-df6eaa2e5034', 'ticketId': '4a0a9a8f-702a-4854-9a8c-f4d462240939', 'ticketUserId': '3f4cc332-516e-4f48-aff2-df6eaa2e5034', 'ticketDepartmentId': 'a78046d7-809d-4cdb-a72a-31dfbc47d862', 'quotedMessageId': None, 'origin': 'user', 'hsmId': None, 'text': 'Olá', 'obfuscated': False, 'files': None, 'quotedMessage': None, 'isFromBot': False}, 'webhookId': '27b4c18d-2ab0-4c70-a592-46bbe7e00bc8', 'timestamp': '2023-05-21T21:33:48.975Z'}
21/05/2023|21:33:49 - webhook.views -INFO- Received webhook request
{'event': 'message.updated', 'data': {'id': 'cd1bece8-5870-41f6-a064-ce2c32faa4d8', 'isFromMe': True, 'sent': True, 'type': 'chat', 'timestamp': '2023-05-21T21:33:47.000Z', 'data': {'ack': 2, 'isNew': True, 'isFirst': False}, 'visible': True, 'accountId': '966b70ba-27d8-43ae-a295-35e59f0007be', 'contactId': '79db7607-6088-44c1-a010-ed4ef39d4f37', 'fromId': 'e12d3a56-0c52-43ac-b33c-15c399eb06d4', 'serviceId': '83108c28-14f7-4646-acb8-dab165397fd5', 'toId': None, 'userId': '3f4cc332-516e-4f48-aff2-df6eaa2e5034', 'ticketId': '4a0a9a8f-702a-4854-9a8c-f4d462240939', 'ticketUserId': '3f4cc332-516e-4f48-aff2-df6eaa2e5034', 'ticketDepartmentId': 'a78046d7-809d-4cdb-a72a-31dfbc47d862', 'quotedMessageId': None, 'origin': 'user', 'hsmId': None, 'text': 'Olá', 'obfuscated': False, 'files': None, 'quotedMessage': None, 'isFromBot': False}, 'webhookId': '27b4c18d-2ab0-4c70-a592-46bbe7e00bc8', 'timestamp': '2023-05-21T21:33:49.193Z'}
21/05/2023|22:48:31 - webhook.views -INFO- Received webhook request
{'event': 'message.created', 'data': {'id': '2d228766-4adf-431c-895d-60be316a210e', 'isFromMe': True, 'sent': True, 'type': 'chat', 'timestamp': '2023-05-21T22:48:30.000Z', 'data': {'ack': 0, 'isNew': True, 'isFirst': False}, 'visible': True, 'accountId': '966b70ba-27d8-43ae-a295-35e59f0007be', 'contactId': '79db7607-6088-44c1-a010-ed4ef39d4f37', 'fromId': 'e12d3a56-0c52-43ac-b33c-15c399eb06d4', 'serviceId': '83108c28-14f7-4646-acb8-dab165397fd5', 'toId': None, 'userId': '3f4cc332-516e-4f48-aff2-df6eaa2e5034', 'ticketId': '4a0a9a8f-702a-4854-9a8c-f4d462240939', 'ticketUserId': None, 'ticketDepartmentId': None, 'quotedMessageId': None, 'origin': 'user', 'hsmId': None, 'text': 'Uopa', 'obfuscated': False, 'files': None, 'quotedMessage': None, 'isFromBot': False}, 'webhookId': '27b4c18d-2ab0-4c70-a592-46bbe7e00bc8', 'timestamp': '2023-05-21T22:48:30.723Z'}
21/05/2023|22:48:31 - webhook.views -INFO- Received webhook request
{'event': 'message.updated', 'data': {'id': '2d228766-4adf-431c-895d-60be316a210e', 'isFromMe': True, 'sent': True, 'type': 'chat', 'timestamp': '2023-05-21T22:48:30.000Z', 'data': {'ack': 1, 'isNew': True, 'isFirst': False}, 'visible': True, 'accountId': '966b70ba-27d8-43ae-a295-35e59f0007be', 'contactId': '79db7607-6088-44c1-a010-ed4ef39d4f37', 'fromId': 'e12d3a56-0c52-43ac-b33c-15c399eb06d4', 'serviceId': '83108c28-14f7-4646-acb8-dab165397fd5', 'toId': None, 'userId': '3f4cc332-516e-4f48-aff2-df6eaa2e5034', 'ticketId': '4a0a9a8f-702a-4854-9a8c-f4d462240939', 'ticketUserId': '3f4cc332-516e-4f48-aff2-df6eaa2e5034', 'ticketDepartmentId': 'a78046d7-809d-4cdb-a72a-31dfbc47d862', 'quotedMessageId': None, 'origin': 'user', 'hsmId': None, 'text': 'Uopa', 'obfuscated': False, 'files': None, 'quotedMessage': None, 'isFromBot': False}, 'webhookId': '27b4c18d-2ab0-4c70-a592-46bbe7e00bc8', 'timestamp': '2023-05-21T22:48:30.825Z'}
21/05/2023|22:48:31 - webhook.views -INFO- Received webhook request
{'event': 'message.updated', 'data': {'id': '2d228766-4adf-431c-895d-60be316a210e', 'isFromMe': True, 'sent': True, 'type': 'chat', 'timestamp': '2023-05-21T22:48:30.000Z', 'data': {'ack': 2, 'isNew': True, 'isFirst': False}, 'visible': True, 'accountId': '966b70ba-27d8-43ae-a295-35e59f0007be', 'contactId': '79db7607-6088-44c1-a010-ed4ef39d4f37', 'fromId': 'e12d3a56-0c52-43ac-b33c-15c399eb06d4', 'serviceId': '83108c28-14f7-4646-acb8-dab165397fd5', 'toId': None, 'userId': '3f4cc332-516e-4f48-aff2-df6eaa2e5034', 'ticketId': '4a0a9a8f-702a-4854-9a8c-f4d462240939', 'ticketUserId': '3f4cc332-516e-4f48-aff2-df6eaa2e5034', 'ticketDepartmentId': 'a78046d7-809d-4cdb-a72a-31dfbc47d862', 'quotedMessageId': None, 'origin': 'user', 'hsmId': None, 'text': 'Uopa', 'obfuscated': False, 'files': None, 'quotedMessage': None, 'isFromBot': False}, 'webhookId': '27b4c18d-2ab0-4c70-a592-46bbe7e00bc8', 'timestamp': '2023-05-21T22:48:31.115Z'}
21/05/2023|22:48:32 - webhook.views -DEBUG- Exceção ocorreu na função webhook_receiver, linha 20: name 'handle_message_updated' is not defined
21/05/2023|22:48:32 - webhook.views -DEBUG- Exceção ocorreu na função webhook_receiver, linha 20: name 'handle_message_updated' is not defined
21/05/2023|22:48:32 - webhook.views -INFO- Exception occurred. name 'handle_message_updated' is not defined
21/05/2023|22:48:32 - webhook.views -INFO- Exception occurred. name 'handle_message_updated' is not defined
21/05/2023|22:48:32 - webhook.views -DEBUG- Exceção ocorreu na função webhook_receiver, linha 20: name 'handle_message_updated' is not defined
21/05/2023|22:48:32 - webhook.views -INFO- Exception occurred. name 'handle_message_updated' is not defined
21/05/2023|22:50:00 - webhook.views -INFO- Received webhook request
{'event': 'message.created', 'data': {'id': '8856f64c-3770-4dae-88bc-a056cf4acdd9', 'isFromMe': True, 'sent': True, 'type': 'chat', 'timestamp': '2023-05-21T22:49:58.000Z', 'data': {'ack': 0, 'isNew': True, 'isFirst': False}, 'visible': True, 'accountId': '966b70ba-27d8-43ae-a295-35e59f0007be', 'contactId': '79db7607-6088-44c1-a010-ed4ef39d4f37', 'fromId': 'e12d3a56-0c52-43ac-b33c-15c399eb06d4', 'serviceId': '83108c28-14f7-4646-acb8-dab165397fd5', 'toId': None, 'userId': '3f4cc332-516e-4f48-aff2-df6eaa2e5034', 'ticketId': '4a0a9a8f-702a-4854-9a8c-f4d462240939', 'ticketUserId': None, 'ticketDepartmentId': None, 'quotedMessageId': None, 'origin': 'user', 'hsmId': None, 'text': 'Alou', 'obfuscated': False, 'files': None, 'quotedMessage': None, 'isFromBot': False}, 'webhookId': '27b4c18d-2ab0-4c70-a592-46bbe7e00bc8', 'timestamp': '2023-05-21T22:49:59.368Z'}
21/05/2023|22:50:00 - webhook.views -INFO- Received webhook request
{'event': 'message.updated', 'data': {'id': '8856f64c-3770-4dae-88bc-a056cf4acdd9', 'isFromMe': True, 'sent': True, 'type': 'chat', 'timestamp': '2023-05-21T22:49:58.000Z', 'data': {'ack': 1, 'isNew': True, 'isFirst': False}, 'visible': True, 'accountId': '966b70ba-27d8-43ae-a295-35e59f0007be', 'contactId': '79db7607-6088-44c1-a010-ed4ef39d4f37', 'fromId': 'e12d3a56-0c52-43ac-b33c-15c399eb06d4', 'serviceId': '83108c28-14f7-4646-acb8-dab165397fd5', 'toId': None, 'userId': '3f4cc332-516e-4f48-aff2-df6eaa2e5034', 'ticketId': '4a0a9a8f-702a-4854-9a8c-f4d462240939', 'ticketUserId': '3f4cc332-516e-4f48-aff2-df6eaa2e5034', 'ticketDepartmentId': 'a78046d7-809d-4cdb-a72a-31dfbc47d862', 'quotedMessageId': None, 'origin': 'user', 'hsmId': None, 'text': 'Alou', 'obfuscated': False, 'files': None, 'quotedMessage': None, 'isFromBot': False}, 'webhookId': '27b4c18d-2ab0-4c70-a592-46bbe7e00bc8', 'timestamp': '2023-05-21T22:49:59.461Z'}
21/05/2023|22:50:00 - webhook.views -INFO- Received webhook request
{'event': 'message.updated', 'data': {'id': '8856f64c-3770-4dae-88bc-a056cf4acdd9', 'isFromMe': True, 'sent': True, 'type': 'chat', 'timestamp': '2023-05-21T22:49:58.000Z', 'data': {'ack': 2, 'isNew': True, 'isFirst': False}, 'visible': True, 'accountId': '966b70ba-27d8-43ae-a295-35e59f0007be', 'contactId': '79db7607-6088-44c1-a010-ed4ef39d4f37', 'fromId': 'e12d3a56-0c52-43ac-b33c-15c399eb06d4', 'serviceId': '83108c28-14f7-4646-acb8-dab165397fd5', 'toId': None, 'userId': '3f4cc332-516e-4f48-aff2-df6eaa2e5034', 'ticketId': '4a0a9a8f-702a-4854-9a8c-f4d462240939', 'ticketUserId': '3f4cc332-516e-4f48-aff2-df6eaa2e5034', 'ticketDepartmentId': 'a78046d7-809d-4cdb-a72a-31dfbc47d862', 'quotedMessageId': None, 'origin': 'user', 'hsmId': None, 'text': 'Alou', 'obfuscated': False, 'files': None, 'quotedMessage': None, 'isFromBot': False}, 'webhookId': '27b4c18d-2ab0-4c70-a592-46bbe7e00bc8', 'timestamp': '2023-05-21T22:49:59.775Z'}
21/05/2023|22:50:05 - messages_api.event -DEBUG- Failed to create message_id: 8856f64c-3770-4dae-88bc-a056cf4acdd9
<Response [405]>-{"detail":"Método \"POST\" não é permitido."}
21/05/2023|22:52:13 - webhook.views -INFO- Received webhook request
{'event': 'message.created', 'data': {'id': '3054dac5-9233-4375-8918-584f21bc87d9', 'isFromMe': True, 'sent': True, 'type': 'chat', 'timestamp': '2023-05-21T22:52:12.000Z', 'data': {'ack': 0, 'isNew': True, 'isFirst': False}, 'visible': True, 'accountId': '966b70ba-27d8-43ae-a295-35e59f0007be', 'contactId': '79db7607-6088-44c1-a010-ed4ef39d4f37', 'fromId': 'e12d3a56-0c52-43ac-b33c-15c399eb06d4', 'serviceId': '83108c28-14f7-4646-acb8-dab165397fd5', 'toId': None, 'userId': '3f4cc332-516e-4f48-aff2-df6eaa2e5034', 'ticketId': '4a0a9a8f-702a-4854-9a8c-f4d462240939', 'ticketUserId': None, 'ticketDepartmentId': None, 'quotedMessageId': None, 'origin': 'user', 'hsmId': None, 'text': 'Novo teste', 'obfuscated': False, 'files': None, 'quotedMessage': None, 'isFromBot': False}, 'webhookId': '27b4c18d-2ab0-4c70-a592-46bbe7e00bc8', 'timestamp': '2023-05-21T22:52:12.410Z'}
21/05/2023|22:52:13 - webhook.views -INFO- Received webhook request
{'event': 'message.updated', 'data': {'id': '3054dac5-9233-4375-8918-584f21bc87d9', 'isFromMe': True, 'sent': True, 'type': 'chat', 'timestamp': '2023-05-21T22:52:12.000Z', 'data': {'ack': 1, 'isNew': True, 'isFirst': False}, 'visible': True, 'accountId': '966b70ba-27d8-43ae-a295-35e59f0007be', 'contactId': '79db7607-6088-44c1-a010-ed4ef39d4f37', 'fromId': 'e12d3a56-0c52-43ac-b33c-15c399eb06d4', 'serviceId': '83108c28-14f7-4646-acb8-dab165397fd5', 'toId': None, 'userId': '3f4cc332-516e-4f48-aff2-df6eaa2e5034', 'ticketId': '4a0a9a8f-702a-4854-9a8c-f4d462240939', 'ticketUserId': '3f4cc332-516e-4f48-aff2-df6eaa2e5034', 'ticketDepartmentId': 'a78046d7-809d-4cdb-a72a-31dfbc47d862', 'quotedMessageId': None, 'origin': 'user', 'hsmId': None, 'text': 'Novo teste', 'obfuscated': False, 'files': None, 'quotedMessage': None, 'isFromBot': False}, 'webhookId': '27b4c18d-2ab0-4c70-a592-46bbe7e00bc8', 'timestamp': '2023-05-21T22:52:12.494Z'}
21/05/2023|22:52:13 - webhook.views -INFO- Received webhook request
{'event': 'message.updated', 'data': {'id': '3054dac5-9233-4375-8918-584f21bc87d9', 'isFromMe': True, 'sent': True, 'type': 'chat', 'timestamp': '2023-05-21T22:52:12.000Z', 'data': {'ack': 2, 'isNew': True, 'isFirst': False}, 'visible': True, 'accountId': '966b70ba-27d8-43ae-a295-35e59f0007be', 'contactId': '79db7607-6088-44c1-a010-ed4ef39d4f37', 'fromId': 'e12d3a56-0c52-43ac-b33c-15c399eb06d4', 'serviceId': '83108c28-14f7-4646-acb8-dab165397fd5', 'toId': None, 'userId': '3f4cc332-516e-4f48-aff2-df6eaa2e5034', 'ticketId': '4a0a9a8f-702a-4854-9a8c-f4d462240939', 'ticketUserId': '3f4cc332-516e-4f48-aff2-df6eaa2e5034', 'ticketDepartmentId': 'a78046d7-809d-4cdb-a72a-31dfbc47d862', 'quotedMessageId': None, 'origin': 'user', 'hsmId': None, 'text': 'Novo teste', 'obfuscated': False, 'files': None, 'quotedMessage': None, 'isFromBot': False}, 'webhookId': '27b4c18d-2ab0-4c70-a592-46bbe7e00bc8', 'timestamp': '2023-05-21T22:52:12.934Z'}
21/05/2023|22:52:17 - messages_api.event -DEBUG- Failed to create message_id: 3054dac5-9233-4375-8918-584f21bc87d9
<Response [404]>-<!DOCTYPE html>
<html lang="en">
<head>
  <meta http-equiv="content-type" content="text/html; charset=utf-8">
  <title>Page not found at /webhook/messages/create</title>
  <meta name="robots" content="NONE,NOARCHIVE">
  <style type="text/css">
    html * { padding:0; margin:0; }
    body * { padding:10px 20px; }
    body * * { padding:0; }
    body { font:small sans-serif; background:#eee; color:#000; }
    body>div { border-bottom:1px solid #ddd; }
    h1 { font-weight:normal; margin-bottom:.4em; }
    h1 span { font-size:60%; color:#666; font-weight:normal; }
    table { border:none; border-collapse: collapse; width:100%; }
    td, th { vertical-align:top; padding:2px 3px; }
    th { width:12em; text-align:right; color:#666; padding-right:.5em; }
    #info { background:#f6f6f6; }
    #info ol { margin: 0.5em 4em; }
    #info ol li { font-family: monospace; }
    #summary { background: #ffc; }
    #explanation { background:#eee; border-bottom: 0px none; }
    pre.exception_value { font-family: sans-serif; color: #575757; font-size: 1.5em; margin: 10px 0 10px 0; }
  </style>
</head>
<body>
  <div id="summary">
    <h1>Page not found <span>(404)</span></h1>
    
    <table class="meta">
      <tr>
        <th>Request Method:</th>
        <td>POST</td>
      </tr>
      <tr>
        <th>Request URL:</th>
        <td>http://woz.serveo.net/webhook/messages/create?phone=5588988562749&amp;period=05%2F23</td>
      </tr>
      
    </table>
  </div>
  <div id="info">
    
      <p>
      Using the URLconf defined in <code>webhook.urls</code>,
      Django tried these URL patterns, in this order:
      </p>
      <ol>
        
          <li>
            
                admin/
                
            
          </li>
        
          <li>
            
                
                
            
                
                
            
          </li>
        
          <li>
            
                webhook
                [name='webhook']
            
          </li>
        
          <li>
            
                webhook/messages
                
            
                
                
            
                ^$
                [name='messages-list']
            
          </li>
        
          <li>
            
                webhook/messages
                
            
                
                
            
                ^\.(?P&lt;format&gt;[a-z0-9]+)/?$
                [name='messages-list']
            
          </li>
        
          <li>
            
                webhook/messages
                
            
                
                
            
                ^(?P&lt;pk&gt;[^/.]+)$
                [name='messages-detail']
            
          </li>
        
          <li>
            
                webhook/messages
                
            
                
                
            
                ^(?P&lt;pk&gt;[^/.]+)\.(?P&lt;format&gt;[a-z0-9]+)/?$
                [name='messages-detail']
            
          </li>
        
          <li>
            
                webhook/messages
                
            
                
                
            
                ^$
                [name='api-root']
            
          </li>
        
          <li>
            
                webhook/messages
                
            
                
                
            
                ^\.(?P&lt;format&gt;[a-z0-9]+)/?$
                [name='api-root']
            
          </li>
        
          <li>
            
                webhook/messages
                
            
                messages/create
                
            
          </li>
        
          <li>
            
                webhook/messages
                
            
                messages/update
                [name='update_message']
            
          </li>
        
          <li>
            
                ^static/(?P&lt;path&gt;.*)$
                
            
          </li>
        
      </ol>
      <p>
        
          The current path, <code>webhook/messages/create</code>,
        
        didn’t match any of these.
      </p>
    
  </div>

  <div id="explanation">
    <p>
      You’re seeing this error because you have <code>DEBUG = True</code> in
      your Django settings file. Change that to <code>False</code>, and Django
      will display a standard 404 page.
    </p>
  </div>
</body>
</html>

21/05/2023|22:52:57 - webhook.views -INFO- Received webhook request
{'event': 'message.created', 'data': {'id': 'e7c002fc-523f-4747-8f41-c4515f1cab1c', 'isFromMe': True, 'sent': True, 'type': 'chat', 'timestamp': '2023-05-21T22:52:56.000Z', 'data': {'ack': 0, 'isNew': True, 'isFirst': False}, 'visible': True, 'accountId': '966b70ba-27d8-43ae-a295-35e59f0007be', 'contactId': '79db7607-6088-44c1-a010-ed4ef39d4f37', 'fromId': 'e12d3a56-0c52-43ac-b33c-15c399eb06d4', 'serviceId': '83108c28-14f7-4646-acb8-dab165397fd5', 'toId': None, 'userId': '3f4cc332-516e-4f48-aff2-df6eaa2e5034', 'ticketId': '4a0a9a8f-702a-4854-9a8c-f4d462240939', 'ticketUserId': None, 'ticketDepartmentId': None, 'quotedMessageId': None, 'origin': 'user', 'hsmId': None, 'text': 'Novo teste 2', 'obfuscated': False, 'files': None, 'quotedMessage': None, 'isFromBot': False}, 'webhookId': '27b4c18d-2ab0-4c70-a592-46bbe7e00bc8', 'timestamp': '2023-05-21T22:52:56.979Z'}
21/05/2023|22:52:57 - webhook.views -INFO- Received webhook request
{'event': 'message.updated', 'data': {'id': 'e7c002fc-523f-4747-8f41-c4515f1cab1c', 'isFromMe': True, 'sent': True, 'type': 'chat', 'timestamp': '2023-05-21T22:52:56.000Z', 'data': {'ack': 1, 'isNew': True, 'isFirst': False}, 'visible': True, 'accountId': '966b70ba-27d8-43ae-a295-35e59f0007be', 'contactId': '79db7607-6088-44c1-a010-ed4ef39d4f37', 'fromId': 'e12d3a56-0c52-43ac-b33c-15c399eb06d4', 'serviceId': '83108c28-14f7-4646-acb8-dab165397fd5', 'toId': None, 'userId': '3f4cc332-516e-4f48-aff2-df6eaa2e5034', 'ticketId': '4a0a9a8f-702a-4854-9a8c-f4d462240939', 'ticketUserId': '3f4cc332-516e-4f48-aff2-df6eaa2e5034', 'ticketDepartmentId': 'a78046d7-809d-4cdb-a72a-31dfbc47d862', 'quotedMessageId': None, 'origin': 'user', 'hsmId': None, 'text': 'Novo teste 2', 'obfuscated': False, 'files': None, 'quotedMessage': None, 'isFromBot': False}, 'webhookId': '27b4c18d-2ab0-4c70-a592-46bbe7e00bc8', 'timestamp': '2023-05-21T22:52:57.078Z'}
21/05/2023|22:52:58 - webhook.views -INFO- Received webhook request
{'event': 'message.updated', 'data': {'id': 'e7c002fc-523f-4747-8f41-c4515f1cab1c', 'isFromMe': True, 'sent': True, 'type': 'chat', 'timestamp': '2023-05-21T22:52:56.000Z', 'data': {'ack': 2, 'isNew': True, 'isFirst': False}, 'visible': True, 'accountId': '966b70ba-27d8-43ae-a295-35e59f0007be', 'contactId': '79db7607-6088-44c1-a010-ed4ef39d4f37', 'fromId': 'e12d3a56-0c52-43ac-b33c-15c399eb06d4', 'serviceId': '83108c28-14f7-4646-acb8-dab165397fd5', 'toId': None, 'userId': '3f4cc332-516e-4f48-aff2-df6eaa2e5034', 'ticketId': '4a0a9a8f-702a-4854-9a8c-f4d462240939', 'ticketUserId': '3f4cc332-516e-4f48-aff2-df6eaa2e5034', 'ticketDepartmentId': 'a78046d7-809d-4cdb-a72a-31dfbc47d862', 'quotedMessageId': None, 'origin': 'user', 'hsmId': None, 'text': 'Novo teste 2', 'obfuscated': False, 'files': None, 'quotedMessage': None, 'isFromBot': False}, 'webhookId': '27b4c18d-2ab0-4c70-a592-46bbe7e00bc8', 'timestamp': '2023-05-21T22:52:57.599Z'}
21/05/2023|23:01:03 - webhook.views -INFO- Received webhook request
{'event': 'message.created', 'data': {'id': '1f4681a1-8101-4cdb-95f6-56121de2cb80', 'isFromMe': True, 'sent': True, 'type': 'chat', 'timestamp': '2023-05-21T23:01:01.000Z', 'data': {'ack': 0, 'isNew': True, 'isFirst': False}, 'visible': True, 'accountId': '966b70ba-27d8-43ae-a295-35e59f0007be', 'contactId': '79db7607-6088-44c1-a010-ed4ef39d4f37', 'fromId': 'e12d3a56-0c52-43ac-b33c-15c399eb06d4', 'serviceId': '83108c28-14f7-4646-acb8-dab165397fd5', 'toId': None, 'userId': '3f4cc332-516e-4f48-aff2-df6eaa2e5034', 'ticketId': '4a0a9a8f-702a-4854-9a8c-f4d462240939', 'ticketUserId': None, 'ticketDepartmentId': None, 'quotedMessageId': None, 'origin': 'user', 'hsmId': None, 'text': 'Teste celery 2', 'obfuscated': False, 'files': None, 'quotedMessage': None, 'isFromBot': False}, 'webhookId': '27b4c18d-2ab0-4c70-a592-46bbe7e00bc8', 'timestamp': '2023-05-21T23:01:02.547Z'}
21/05/2023|23:01:03 - webhook.views -INFO- Received webhook request
{'event': 'message.updated', 'data': {'id': '1f4681a1-8101-4cdb-95f6-56121de2cb80', 'isFromMe': True, 'sent': True, 'type': 'chat', 'timestamp': '2023-05-21T23:01:01.000Z', 'data': {'ack': 1, 'isNew': True, 'isFirst': False}, 'visible': True, 'accountId': '966b70ba-27d8-43ae-a295-35e59f0007be', 'contactId': '79db7607-6088-44c1-a010-ed4ef39d4f37', 'fromId': 'e12d3a56-0c52-43ac-b33c-15c399eb06d4', 'serviceId': '83108c28-14f7-4646-acb8-dab165397fd5', 'toId': None, 'userId': '3f4cc332-516e-4f48-aff2-df6eaa2e5034', 'ticketId': '4a0a9a8f-702a-4854-9a8c-f4d462240939', 'ticketUserId': '3f4cc332-516e-4f48-aff2-df6eaa2e5034', 'ticketDepartmentId': 'a78046d7-809d-4cdb-a72a-31dfbc47d862', 'quotedMessageId': None, 'origin': 'user', 'hsmId': None, 'text': 'Teste celery 2', 'obfuscated': False, 'files': None, 'quotedMessage': None, 'isFromBot': False}, 'webhookId': '27b4c18d-2ab0-4c70-a592-46bbe7e00bc8', 'timestamp': '2023-05-21T23:01:02.644Z'}
21/05/2023|23:01:04 - webhook.views -INFO- Received webhook request
{'event': 'message.updated', 'data': {'id': '1f4681a1-8101-4cdb-95f6-56121de2cb80', 'isFromMe': True, 'sent': True, 'type': 'chat', 'timestamp': '2023-05-21T23:01:01.000Z', 'data': {'ack': 2, 'isNew': True, 'isFirst': False}, 'visible': True, 'accountId': '966b70ba-27d8-43ae-a295-35e59f0007be', 'contactId': '79db7607-6088-44c1-a010-ed4ef39d4f37', 'fromId': 'e12d3a56-0c52-43ac-b33c-15c399eb06d4', 'serviceId': '83108c28-14f7-4646-acb8-dab165397fd5', 'toId': None, 'userId': '3f4cc332-516e-4f48-aff2-df6eaa2e5034', 'ticketId': '4a0a9a8f-702a-4854-9a8c-f4d462240939', 'ticketUserId': '3f4cc332-516e-4f48-aff2-df6eaa2e5034', 'ticketDepartmentId': 'a78046d7-809d-4cdb-a72a-31dfbc47d862', 'quotedMessageId': None, 'origin': 'user', 'hsmId': None, 'text': 'Teste celery 2', 'obfuscated': False, 'files': None, 'quotedMessage': None, 'isFromBot': False}, 'webhookId': '27b4c18d-2ab0-4c70-a592-46bbe7e00bc8', 'timestamp': '2023-05-21T23:01:03.888Z'}
21/05/2023|23:01:05 - messages_api.event -DEBUG- <Response [405]>-{"detail":"Método \"GET\" não é permitido."}
21/05/2023|23:01:06 - messages_api.event -DEBUG- <Response [405]>-{"detail":"Método \"GET\" não é permitido."}
21/05/2023|23:01:57 - webhook.views -INFO- Received webhook request
{'event': 'message.created', 'data': {'id': 'a161fac8-df10-435b-a5b3-4578cd22db06', 'isFromMe': True, 'sent': True, 'type': 'chat', 'timestamp': '2023-05-21T23:01:57.000Z', 'data': {'ack': 0, 'isNew': True, 'isFirst': False}, 'visible': True, 'accountId': '966b70ba-27d8-43ae-a295-35e59f0007be', 'contactId': '79db7607-6088-44c1-a010-ed4ef39d4f37', 'fromId': 'e12d3a56-0c52-43ac-b33c-15c399eb06d4', 'serviceId': '83108c28-14f7-4646-acb8-dab165397fd5', 'toId': None, 'userId': '3f4cc332-516e-4f48-aff2-df6eaa2e5034', 'ticketId': '4a0a9a8f-702a-4854-9a8c-f4d462240939', 'ticketUserId': None, 'ticketDepartmentId': None, 'quotedMessageId': None, 'origin': 'user', 'hsmId': None, 'text': 'Teste', 'obfuscated': False, 'files': None, 'quotedMessage': None, 'isFromBot': False}, 'webhookId': '27b4c18d-2ab0-4c70-a592-46bbe7e00bc8', 'timestamp': '2023-05-21T23:01:57.151Z'}
21/05/2023|23:01:57 - webhook.views -INFO- Received webhook request
{'event': 'message.updated', 'data': {'id': 'a161fac8-df10-435b-a5b3-4578cd22db06', 'isFromMe': True, 'sent': True, 'type': 'chat', 'timestamp': '2023-05-21T23:01:57.000Z', 'data': {'ack': 1, 'isNew': True, 'isFirst': False}, 'visible': True, 'accountId': '966b70ba-27d8-43ae-a295-35e59f0007be', 'contactId': '79db7607-6088-44c1-a010-ed4ef39d4f37', 'fromId': 'e12d3a56-0c52-43ac-b33c-15c399eb06d4', 'serviceId': '83108c28-14f7-4646-acb8-dab165397fd5', 'toId': None, 'userId': '3f4cc332-516e-4f48-aff2-df6eaa2e5034', 'ticketId': '4a0a9a8f-702a-4854-9a8c-f4d462240939', 'ticketUserId': '3f4cc332-516e-4f48-aff2-df6eaa2e5034', 'ticketDepartmentId': 'a78046d7-809d-4cdb-a72a-31dfbc47d862', 'quotedMessageId': None, 'origin': 'user', 'hsmId': None, 'text': 'Teste', 'obfuscated': False, 'files': None, 'quotedMessage': None, 'isFromBot': False}, 'webhookId': '27b4c18d-2ab0-4c70-a592-46bbe7e00bc8', 'timestamp': '2023-05-21T23:01:57.256Z'}
21/05/2023|23:01:58 - webhook.views -INFO- Received webhook request
{'event': 'message.updated', 'data': {'id': 'a161fac8-df10-435b-a5b3-4578cd22db06', 'isFromMe': True, 'sent': True, 'type': 'chat', 'timestamp': '2023-05-21T23:01:57.000Z', 'data': {'ack': 2, 'isNew': True, 'isFirst': False}, 'visible': True, 'accountId': '966b70ba-27d8-43ae-a295-35e59f0007be', 'contactId': '79db7607-6088-44c1-a010-ed4ef39d4f37', 'fromId': 'e12d3a56-0c52-43ac-b33c-15c399eb06d4', 'serviceId': '83108c28-14f7-4646-acb8-dab165397fd5', 'toId': None, 'userId': '3f4cc332-516e-4f48-aff2-df6eaa2e5034', 'ticketId': '4a0a9a8f-702a-4854-9a8c-f4d462240939', 'ticketUserId': '3f4cc332-516e-4f48-aff2-df6eaa2e5034', 'ticketDepartmentId': 'a78046d7-809d-4cdb-a72a-31dfbc47d862', 'quotedMessageId': None, 'origin': 'user', 'hsmId': None, 'text': 'Teste', 'obfuscated': False, 'files': None, 'quotedMessage': None, 'isFromBot': False}, 'webhookId': '27b4c18d-2ab0-4c70-a592-46bbe7e00bc8', 'timestamp': '2023-05-21T23:01:57.434Z'}
21/05/2023|23:02:01 - messages_api.event -DEBUG- <Response [400]>-{"error":400,"message":"Message matching query does not exist."}
21/05/2023|23:02:02 - messages_api.event -DEBUG- <Response [400]>-{"error":400,"message":"Message matching query does not exist."}
21/05/2023|23:02:17 - webhook.views -INFO- Received webhook request
{'event': 'message.created', 'data': {'id': '5d4d7882-7004-462e-b3cf-28c0f9d3c840', 'isFromMe': False, 'sent': False, 'type': 'ticket', 'timestamp': '2023-05-21T23:02:16.893Z', 'data': {'ticketClose': True}, 'visible': True, 'accountId': '966b70ba-27d8-43ae-a295-35e59f0007be', 'contactId': '79db7607-6088-44c1-a010-ed4ef39d4f37', 'fromId': None, 'serviceId': '83108c28-14f7-4646-acb8-dab165397fd5', 'toId': None, 'userId': None, 'ticketId': '4a0a9a8f-702a-4854-9a8c-f4d462240939', 'ticketUserId': None, 'ticketDepartmentId': None, 'quotedMessageId': None, 'origin': 'ticket', 'hsmId': None, 'obfuscated': False, 'files': None, 'quotedMessage': None, 'isFromBot': False}, 'webhookId': '27b4c18d-2ab0-4c70-a592-46bbe7e00bc8', 'timestamp': '2023-05-21T23:02:16.958Z'}
21/05/2023|23:02:17 - webhook.views -INFO- Received webhook request
{'event': 'ticket.updated', 'data': {'id': '4a0a9a8f-702a-4854-9a8c-f4d462240939', 'isOpen': False, 'comments': '', 'protocol': '2023052130903', 'origin': 'automatic', 'metrics': {'waitingTime': 205, 'messagingTime': 20158, 'ticketTransferCount': 1, 'waitingTimeTransfersAvg': 206, 'waitingTimeTransfersSum': 206, 'ticketTime': 20178}, 'startedAt': '2023-05-21T17:25:58.747Z', 'endedAt': '2023-05-21T23:02:16.893Z', 'userId': '3f4cc332-516e-4f48-aff2-df6eaa2e5034', 'departmentId': 'a78046d7-809d-4cdb-a72a-31dfbc47d862', 'accountId': '966b70ba-27d8-43ae-a295-35e59f0007be', 'contactId': '79db7607-6088-44c1-a010-ed4ef39d4f37', 'currentTicketTransferId': None, 'firstMessageId': '0210808a-f37f-4dae-94c7-479af464231a', 'lastMessageId': 'a161fac8-df10-435b-a5b3-4578cd22db06'}, 'webhookId': '27b4c18d-2ab0-4c70-a592-46bbe7e00bc8', 'timestamp': '2023-05-21T23:02:16.978Z'}
21/05/2023|23:02:17 - webhook.views -DEBUG- Exceção ocorreu na função webhook_receiver, linha 20: 'ticketId'
21/05/2023|23:02:17 - webhook.views -INFO- Exception occurred. 'ticketId'
21/05/2023|23:02:18 - webhook.views -DEBUG- Exceção ocorreu na função webhook_receiver, linha 20: 'ack'
21/05/2023|23:02:18 - webhook.views -INFO- Exception occurred. 'ack'
21/05/2023|23:02:49 - webhook.views -INFO- Received webhook request
{'event': 'message.created', 'data': {'id': '770fdfcf-ef77-4e1a-9c10-da9e83099ed9', 'isFromMe': False, 'sent': False, 'type': 'ticket', 'timestamp': '2023-05-21T23:02:49.047Z', 'data': {'ticketOpen': True}, 'visible': True, 'accountId': '966b70ba-27d8-43ae-a295-35e59f0007be', 'contactId': '79db7607-6088-44c1-a010-ed4ef39d4f37', 'fromId': None, 'serviceId': '83108c28-14f7-4646-acb8-dab165397fd5', 'toId': None, 'userId': None, 'ticketId': '3e14aea2-bc69-4e56-b20b-1b6d63ade6d5', 'ticketUserId': None, 'ticketDepartmentId': None, 'quotedMessageId': None, 'origin': 'ticket', 'hsmId': None, 'obfuscated': False, 'files': None, 'quotedMessage': None, 'isFromBot': False}, 'webhookId': '27b4c18d-2ab0-4c70-a592-46bbe7e00bc8', 'timestamp': '2023-05-21T23:02:49.085Z'}
21/05/2023|23:02:49 - webhook.views -INFO- Received webhook request
{'event': 'ticket.created', 'data': {'id': '3e14aea2-bc69-4e56-b20b-1b6d63ade6d5', 'metrics': {}, 'isOpen': True, 'startedAt': '2023-05-21T23:02:49.047Z', 'departmentId': 'a78046d7-809d-4cdb-a72a-31dfbc47d862', 'userId': '3f4cc332-516e-4f48-aff2-df6eaa2e5034', 'protocol': '2023052130904', 'origin': 'manual', 'contactId': '79db7607-6088-44c1-a010-ed4ef39d4f37', 'accountId': '966b70ba-27d8-43ae-a295-35e59f0007be', 'firstMessageId': None, 'lastMessageId': None, 'comments': None, 'endedAt': None, 'currentTicketTransferId': 'f3d3a46e-8844-4be0-8562-292e263cdd31'}, 'webhookId': '27b4c18d-2ab0-4c70-a592-46bbe7e00bc8', 'timestamp': '2023-05-21T23:02:49.107Z'}
21/05/2023|23:02:49 - webhook.views -DEBUG- Exceção ocorreu na função webhook_receiver, linha 20: 'ticketId'
21/05/2023|23:02:49 - webhook.views -INFO- Exception occurred. 'ticketId'
21/05/2023|23:02:49 - webhook.views -INFO- Received webhook request
{'event': 'ticket.updated', 'data': {'id': '3e14aea2-bc69-4e56-b20b-1b6d63ade6d5', 'metrics': {}, 'isOpen': True, 'startedAt': '2023-05-21T23:02:49.047Z', 'departmentId': 'a78046d7-809d-4cdb-a72a-31dfbc47d862', 'userId': '3f4cc332-516e-4f48-aff2-df6eaa2e5034', 'protocol': '2023052130904', 'origin': 'manual', 'contactId': '79db7607-6088-44c1-a010-ed4ef39d4f37', 'accountId': '966b70ba-27d8-43ae-a295-35e59f0007be', 'firstMessageId': None, 'lastMessageId': None, 'comments': None, 'endedAt': None, 'currentTicketTransferId': 'f3d3a46e-8844-4be0-8562-292e263cdd31'}, 'webhookId': '27b4c18d-2ab0-4c70-a592-46bbe7e00bc8', 'timestamp': '2023-05-21T23:02:49.112Z'}
21/05/2023|23:02:49 - webhook.views -DEBUG- Exceção ocorreu na função webhook_receiver, linha 20: 'ticketId'
21/05/2023|23:02:49 - webhook.views -INFO- Exception occurred. 'ticketId'
21/05/2023|23:02:50 - webhook.views -DEBUG- Exceção ocorreu na função webhook_receiver, linha 20: 'ack'
21/05/2023|23:02:50 - webhook.views -INFO- Exception occurred. 'ack'
21/05/2023|23:02:59 - webhook.views -INFO- Received webhook request
{'event': 'message.created', 'data': {'id': 'ec859f85-55db-454d-a7a2-a7e1e3a12727', 'isFromMe': True, 'sent': True, 'type': 'chat', 'timestamp': '2023-05-21T23:02:58.000Z', 'data': {'ack': 0, 'isNew': True, 'isFirst': False}, 'visible': True, 'accountId': '966b70ba-27d8-43ae-a295-35e59f0007be', 'contactId': '79db7607-6088-44c1-a010-ed4ef39d4f37', 'fromId': 'e12d3a56-0c52-43ac-b33c-15c399eb06d4', 'serviceId': '83108c28-14f7-4646-acb8-dab165397fd5', 'toId': None, 'userId': '3f4cc332-516e-4f48-aff2-df6eaa2e5034', 'ticketId': '3e14aea2-bc69-4e56-b20b-1b6d63ade6d5', 'ticketUserId': None, 'ticketDepartmentId': None, 'quotedMessageId': None, 'origin': 'user', 'hsmId': None, 'text': 'Olá, isso é um teste', 'obfuscated': False, 'files': None, 'quotedMessage': None, 'isFromBot': False}, 'webhookId': '27b4c18d-2ab0-4c70-a592-46bbe7e00bc8', 'timestamp': '2023-05-21T23:02:58.330Z'}
21/05/2023|23:02:59 - webhook.views -INFO- Received webhook request
{'event': 'message.updated', 'data': {'id': 'ec859f85-55db-454d-a7a2-a7e1e3a12727', 'isFromMe': True, 'sent': True, 'type': 'chat', 'timestamp': '2023-05-21T23:02:58.000Z', 'data': {'ack': 1, 'isNew': True, 'isFirst': False}, 'visible': True, 'accountId': '966b70ba-27d8-43ae-a295-35e59f0007be', 'contactId': '79db7607-6088-44c1-a010-ed4ef39d4f37', 'fromId': 'e12d3a56-0c52-43ac-b33c-15c399eb06d4', 'serviceId': '83108c28-14f7-4646-acb8-dab165397fd5', 'toId': None, 'userId': '3f4cc332-516e-4f48-aff2-df6eaa2e5034', 'ticketId': '3e14aea2-bc69-4e56-b20b-1b6d63ade6d5', 'ticketUserId': '3f4cc332-516e-4f48-aff2-df6eaa2e5034', 'ticketDepartmentId': 'a78046d7-809d-4cdb-a72a-31dfbc47d862', 'quotedMessageId': None, 'origin': 'user', 'hsmId': None, 'text': 'Olá, isso é um teste', 'obfuscated': False, 'files': None, 'quotedMessage': None, 'isFromBot': False}, 'webhookId': '27b4c18d-2ab0-4c70-a592-46bbe7e00bc8', 'timestamp': '2023-05-21T23:02:58.436Z'}
21/05/2023|23:02:59 - webhook.views -INFO- Received webhook request
{'event': 'message.updated', 'data': {'id': 'ec859f85-55db-454d-a7a2-a7e1e3a12727', 'isFromMe': True, 'sent': True, 'type': 'chat', 'timestamp': '2023-05-21T23:02:58.000Z', 'data': {'ack': 2, 'isNew': True, 'isFirst': False}, 'visible': True, 'accountId': '966b70ba-27d8-43ae-a295-35e59f0007be', 'contactId': '79db7607-6088-44c1-a010-ed4ef39d4f37', 'fromId': 'e12d3a56-0c52-43ac-b33c-15c399eb06d4', 'serviceId': '83108c28-14f7-4646-acb8-dab165397fd5', 'toId': None, 'userId': '3f4cc332-516e-4f48-aff2-df6eaa2e5034', 'ticketId': '3e14aea2-bc69-4e56-b20b-1b6d63ade6d5', 'ticketUserId': '3f4cc332-516e-4f48-aff2-df6eaa2e5034', 'ticketDepartmentId': 'a78046d7-809d-4cdb-a72a-31dfbc47d862', 'quotedMessageId': None, 'origin': 'user', 'hsmId': None, 'text': 'Olá, isso é um teste', 'obfuscated': False, 'files': None, 'quotedMessage': None, 'isFromBot': False}, 'webhookId': '27b4c18d-2ab0-4c70-a592-46bbe7e00bc8', 'timestamp': '2023-05-21T23:02:58.643Z'}
21/05/2023|23:03:00 - messages_api.event -DEBUG- <Response [400]>-{"error":400,"message":"Message matching query does not exist."}
21/05/2023|23:03:01 - messages_api.event -DEBUG- <Response [400]>-{"error":400,"message":"Message matching query does not exist."}
21/05/2023|23:10:18 - webhook.views -INFO- Received webhook request
{'event': 'message.created', 'data': {'id': '97f16e71-ce9b-40de-9fc0-7a9379af58c1', 'isFromMe': True, 'sent': True, 'type': 'chat', 'timestamp': '2023-05-21T23:10:17.000Z', 'data': {'ack': 0, 'isNew': True, 'isFirst': False}, 'visible': True, 'accountId': '966b70ba-27d8-43ae-a295-35e59f0007be', 'contactId': '79db7607-6088-44c1-a010-ed4ef39d4f37', 'fromId': 'e12d3a56-0c52-43ac-b33c-15c399eb06d4', 'serviceId': '83108c28-14f7-4646-acb8-dab165397fd5', 'toId': None, 'userId': '3f4cc332-516e-4f48-aff2-df6eaa2e5034', 'ticketId': '3e14aea2-bc69-4e56-b20b-1b6d63ade6d5', 'ticketUserId': None, 'ticketDepartmentId': None, 'quotedMessageId': None, 'origin': 'user', 'hsmId': None, 'text': 'E ai', 'obfuscated': False, 'files': None, 'quotedMessage': None, 'isFromBot': False}, 'webhookId': '27b4c18d-2ab0-4c70-a592-46bbe7e00bc8', 'timestamp': '2023-05-21T23:10:17.706Z'}
21/05/2023|23:10:18 - webhook.views -INFO- Received webhook request
{'event': 'message.updated', 'data': {'id': '97f16e71-ce9b-40de-9fc0-7a9379af58c1', 'isFromMe': True, 'sent': True, 'type': 'chat', 'timestamp': '2023-05-21T23:10:17.000Z', 'data': {'ack': 1, 'isNew': True, 'isFirst': False}, 'visible': True, 'accountId': '966b70ba-27d8-43ae-a295-35e59f0007be', 'contactId': '79db7607-6088-44c1-a010-ed4ef39d4f37', 'fromId': 'e12d3a56-0c52-43ac-b33c-15c399eb06d4', 'serviceId': '83108c28-14f7-4646-acb8-dab165397fd5', 'toId': None, 'userId': '3f4cc332-516e-4f48-aff2-df6eaa2e5034', 'ticketId': '3e14aea2-bc69-4e56-b20b-1b6d63ade6d5', 'ticketUserId': '3f4cc332-516e-4f48-aff2-df6eaa2e5034', 'ticketDepartmentId': 'a78046d7-809d-4cdb-a72a-31dfbc47d862', 'quotedMessageId': None, 'origin': 'user', 'hsmId': None, 'text': 'E ai', 'obfuscated': False, 'files': None, 'quotedMessage': None, 'isFromBot': False}, 'webhookId': '27b4c18d-2ab0-4c70-a592-46bbe7e00bc8', 'timestamp': '2023-05-21T23:10:17.812Z'}
21/05/2023|23:10:19 - webhook.views -DEBUG- Exceção ocorreu na função webhook_receiver, linha 20: handle_message_updated() got multiple values for argument 'status'
21/05/2023|23:10:19 - webhook.views -INFO- Exception occurred. handle_message_updated() got multiple values for argument 'status'
21/05/2023|23:10:19 - webhook.views -INFO- Received webhook request
{'event': 'message.updated', 'data': {'id': '97f16e71-ce9b-40de-9fc0-7a9379af58c1', 'isFromMe': True, 'sent': True, 'type': 'chat', 'timestamp': '2023-05-21T23:10:17.000Z', 'data': {'ack': 2, 'isNew': True, 'isFirst': False}, 'visible': True, 'accountId': '966b70ba-27d8-43ae-a295-35e59f0007be', 'contactId': '79db7607-6088-44c1-a010-ed4ef39d4f37', 'fromId': 'e12d3a56-0c52-43ac-b33c-15c399eb06d4', 'serviceId': '83108c28-14f7-4646-acb8-dab165397fd5', 'toId': None, 'userId': '3f4cc332-516e-4f48-aff2-df6eaa2e5034', 'ticketId': '3e14aea2-bc69-4e56-b20b-1b6d63ade6d5', 'ticketUserId': '3f4cc332-516e-4f48-aff2-df6eaa2e5034', 'ticketDepartmentId': 'a78046d7-809d-4cdb-a72a-31dfbc47d862', 'quotedMessageId': None, 'origin': 'user', 'hsmId': None, 'text': 'E ai', 'obfuscated': False, 'files': None, 'quotedMessage': None, 'isFromBot': False}, 'webhookId': '27b4c18d-2ab0-4c70-a592-46bbe7e00bc8', 'timestamp': '2023-05-21T23:10:19.028Z'}
21/05/2023|23:10:20 - webhook.views -DEBUG- Exceção ocorreu na função webhook_receiver, linha 20: handle_message_updated() got multiple values for argument 'status'
21/05/2023|23:10:20 - webhook.views -INFO- Exception occurred. handle_message_updated() got multiple values for argument 'status'
21/05/2023|23:13:56 - webhook.views -INFO- Received webhook request
{'event': 'message.created', 'data': {'id': 'de0dca0e-703b-4403-af36-aa2c616326fd', 'isFromMe': True, 'sent': True, 'type': 'chat', 'timestamp': '2023-05-21T23:13:54.000Z', 'data': {'ack': 0, 'isNew': True, 'isFirst': False}, 'visible': True, 'accountId': '966b70ba-27d8-43ae-a295-35e59f0007be', 'contactId': '79db7607-6088-44c1-a010-ed4ef39d4f37', 'fromId': 'e12d3a56-0c52-43ac-b33c-15c399eb06d4', 'serviceId': '83108c28-14f7-4646-acb8-dab165397fd5', 'toId': None, 'userId': '3f4cc332-516e-4f48-aff2-df6eaa2e5034', 'ticketId': '3e14aea2-bc69-4e56-b20b-1b6d63ade6d5', 'ticketUserId': None, 'ticketDepartmentId': None, 'quotedMessageId': None, 'origin': 'user', 'hsmId': None, 'text': 'Show', 'obfuscated': False, 'files': None, 'quotedMessage': None, 'isFromBot': False}, 'webhookId': '27b4c18d-2ab0-4c70-a592-46bbe7e00bc8', 'timestamp': '2023-05-21T23:13:55.510Z'}
21/05/2023|23:13:56 - webhook.views -INFO- Received webhook request
{'event': 'message.updated', 'data': {'id': 'de0dca0e-703b-4403-af36-aa2c616326fd', 'isFromMe': True, 'sent': True, 'type': 'chat', 'timestamp': '2023-05-21T23:13:54.000Z', 'data': {'ack': 1, 'isNew': True, 'isFirst': False}, 'visible': True, 'accountId': '966b70ba-27d8-43ae-a295-35e59f0007be', 'contactId': '79db7607-6088-44c1-a010-ed4ef39d4f37', 'fromId': 'e12d3a56-0c52-43ac-b33c-15c399eb06d4', 'serviceId': '83108c28-14f7-4646-acb8-dab165397fd5', 'toId': None, 'userId': '3f4cc332-516e-4f48-aff2-df6eaa2e5034', 'ticketId': '3e14aea2-bc69-4e56-b20b-1b6d63ade6d5', 'ticketUserId': '3f4cc332-516e-4f48-aff2-df6eaa2e5034', 'ticketDepartmentId': 'a78046d7-809d-4cdb-a72a-31dfbc47d862', 'quotedMessageId': None, 'origin': 'user', 'hsmId': None, 'text': 'Show', 'obfuscated': False, 'files': None, 'quotedMessage': None, 'isFromBot': False}, 'webhookId': '27b4c18d-2ab0-4c70-a592-46bbe7e00bc8', 'timestamp': '2023-05-21T23:13:55.550Z'}
21/05/2023|23:13:56 - webhook.views -INFO- Received webhook request
{'event': 'message.updated', 'data': {'id': 'de0dca0e-703b-4403-af36-aa2c616326fd', 'isFromMe': True, 'sent': True, 'type': 'chat', 'timestamp': '2023-05-21T23:13:54.000Z', 'data': {'ack': 2, 'isNew': True, 'isFirst': False}, 'visible': True, 'accountId': '966b70ba-27d8-43ae-a295-35e59f0007be', 'contactId': '79db7607-6088-44c1-a010-ed4ef39d4f37', 'fromId': 'e12d3a56-0c52-43ac-b33c-15c399eb06d4', 'serviceId': '83108c28-14f7-4646-acb8-dab165397fd5', 'toId': None, 'userId': '3f4cc332-516e-4f48-aff2-df6eaa2e5034', 'ticketId': '3e14aea2-bc69-4e56-b20b-1b6d63ade6d5', 'ticketUserId': '3f4cc332-516e-4f48-aff2-df6eaa2e5034', 'ticketDepartmentId': 'a78046d7-809d-4cdb-a72a-31dfbc47d862', 'quotedMessageId': None, 'origin': 'user', 'hsmId': None, 'text': 'Show', 'obfuscated': False, 'files': None, 'quotedMessage': None, 'isFromBot': False}, 'webhookId': '27b4c18d-2ab0-4c70-a592-46bbe7e00bc8', 'timestamp': '2023-05-21T23:13:55.809Z'}
21/05/2023|23:13:57 - webhook.views -DEBUG- Exceção ocorreu na função webhook_receiver, linha 20: handle_message_updated() takes 0 positional arguments but 1 was given
21/05/2023|23:13:57 - webhook.views -DEBUG- Exceção ocorreu na função webhook_receiver, linha 20: handle_message_updated() takes 0 positional arguments but 1 was given
21/05/2023|23:13:57 - webhook.views -INFO- Exception occurred. handle_message_updated() takes 0 positional arguments but 1 was given
21/05/2023|23:13:57 - webhook.views -INFO- Exception occurred. handle_message_updated() takes 0 positional arguments but 1 was given
21/05/2023|23:14:27 - webhook.views -INFO- Received webhook request
{'event': 'message.created', 'data': {'id': '9bd8e24b-d0fd-46c5-a6a2-ce622cea680b', 'isFromMe': True, 'sent': True, 'type': 'chat', 'timestamp': '2023-05-21T23:14:25.000Z', 'data': {'ack': 0, 'isNew': True, 'isFirst': False}, 'visible': True, 'accountId': '966b70ba-27d8-43ae-a295-35e59f0007be', 'contactId': '79db7607-6088-44c1-a010-ed4ef39d4f37', 'fromId': 'e12d3a56-0c52-43ac-b33c-15c399eb06d4', 'serviceId': '83108c28-14f7-4646-acb8-dab165397fd5', 'toId': None, 'userId': '3f4cc332-516e-4f48-aff2-df6eaa2e5034', 'ticketId': '3e14aea2-bc69-4e56-b20b-1b6d63ade6d5', 'ticketUserId': None, 'ticketDepartmentId': None, 'quotedMessageId': None, 'origin': 'user', 'hsmId': None, 'text': 'Show Show', 'obfuscated': False, 'files': None, 'quotedMessage': None, 'isFromBot': False}, 'webhookId': '27b4c18d-2ab0-4c70-a592-46bbe7e00bc8', 'timestamp': '2023-05-21T23:14:27.086Z'}
21/05/2023|23:14:27 - webhook.views -INFO- Received webhook request
{'event': 'message.updated', 'data': {'id': '9bd8e24b-d0fd-46c5-a6a2-ce622cea680b', 'isFromMe': True, 'sent': True, 'type': 'chat', 'timestamp': '2023-05-21T23:14:25.000Z', 'data': {'ack': 1, 'isNew': True, 'isFirst': False}, 'visible': True, 'accountId': '966b70ba-27d8-43ae-a295-35e59f0007be', 'contactId': '79db7607-6088-44c1-a010-ed4ef39d4f37', 'fromId': 'e12d3a56-0c52-43ac-b33c-15c399eb06d4', 'serviceId': '83108c28-14f7-4646-acb8-dab165397fd5', 'toId': None, 'userId': '3f4cc332-516e-4f48-aff2-df6eaa2e5034', 'ticketId': '3e14aea2-bc69-4e56-b20b-1b6d63ade6d5', 'ticketUserId': '3f4cc332-516e-4f48-aff2-df6eaa2e5034', 'ticketDepartmentId': 'a78046d7-809d-4cdb-a72a-31dfbc47d862', 'quotedMessageId': None, 'origin': 'user', 'hsmId': None, 'text': 'Show Show', 'obfuscated': False, 'files': None, 'quotedMessage': None, 'isFromBot': False}, 'webhookId': '27b4c18d-2ab0-4c70-a592-46bbe7e00bc8', 'timestamp': '2023-05-21T23:14:27.188Z'}
21/05/2023|23:14:28 - webhook.views -INFO- Received webhook request
{'event': 'message.updated', 'data': {'id': '9bd8e24b-d0fd-46c5-a6a2-ce622cea680b', 'isFromMe': True, 'sent': True, 'type': 'chat', 'timestamp': '2023-05-21T23:14:25.000Z', 'data': {'ack': 2, 'isNew': True, 'isFirst': False}, 'visible': True, 'accountId': '966b70ba-27d8-43ae-a295-35e59f0007be', 'contactId': '79db7607-6088-44c1-a010-ed4ef39d4f37', 'fromId': 'e12d3a56-0c52-43ac-b33c-15c399eb06d4', 'serviceId': '83108c28-14f7-4646-acb8-dab165397fd5', 'toId': None, 'userId': '3f4cc332-516e-4f48-aff2-df6eaa2e5034', 'ticketId': '3e14aea2-bc69-4e56-b20b-1b6d63ade6d5', 'ticketUserId': '3f4cc332-516e-4f48-aff2-df6eaa2e5034', 'ticketDepartmentId': 'a78046d7-809d-4cdb-a72a-31dfbc47d862', 'quotedMessageId': None, 'origin': 'user', 'hsmId': None, 'text': 'Show Show', 'obfuscated': False, 'files': None, 'quotedMessage': None, 'isFromBot': False}, 'webhookId': '27b4c18d-2ab0-4c70-a592-46bbe7e00bc8', 'timestamp': '2023-05-21T23:14:27.387Z'}
21/05/2023|23:14:28 - webhook.views -DEBUG- Exceção ocorreu na função webhook_receiver, linha 20: handle_message_updated() takes 0 positional arguments but 1 was given
21/05/2023|23:14:28 - webhook.views -INFO- Exception occurred. handle_message_updated() takes 0 positional arguments but 1 was given
21/05/2023|23:14:28 - webhook.views -DEBUG- Exceção ocorreu na função webhook_receiver, linha 20: handle_message_updated() takes 0 positional arguments but 1 was given
21/05/2023|23:14:28 - webhook.views -INFO- Exception occurred. handle_message_updated() takes 0 positional arguments but 1 was given
21/05/2023|23:14:56 - webhook.views -INFO- Received webhook request
{'event': 'message.created', 'data': {'id': 'd69ffd12-7437-4825-8eaf-cb08a33df24d', 'isFromMe': True, 'sent': True, 'type': 'chat', 'timestamp': '2023-05-21T23:14:54.000Z', 'data': {'ack': 0, 'isNew': True, 'isFirst': False}, 'visible': True, 'accountId': '966b70ba-27d8-43ae-a295-35e59f0007be', 'contactId': '79db7607-6088-44c1-a010-ed4ef39d4f37', 'fromId': 'e12d3a56-0c52-43ac-b33c-15c399eb06d4', 'serviceId': '83108c28-14f7-4646-acb8-dab165397fd5', 'toId': None, 'userId': '3f4cc332-516e-4f48-aff2-df6eaa2e5034', 'ticketId': '3e14aea2-bc69-4e56-b20b-1b6d63ade6d5', 'ticketUserId': None, 'ticketDepartmentId': None, 'quotedMessageId': None, 'origin': 'user', 'hsmId': None, 'text': 'ie', 'obfuscated': False, 'files': None, 'quotedMessage': None, 'isFromBot': False}, 'webhookId': '27b4c18d-2ab0-4c70-a592-46bbe7e00bc8', 'timestamp': '2023-05-21T23:14:55.958Z'}
21/05/2023|23:14:56 - webhook.views -INFO- Received webhook request
{'event': 'message.updated', 'data': {'id': 'd69ffd12-7437-4825-8eaf-cb08a33df24d', 'isFromMe': True, 'sent': True, 'type': 'chat', 'timestamp': '2023-05-21T23:14:54.000Z', 'data': {'ack': 1, 'isNew': True, 'isFirst': False}, 'visible': True, 'accountId': '966b70ba-27d8-43ae-a295-35e59f0007be', 'contactId': '79db7607-6088-44c1-a010-ed4ef39d4f37', 'fromId': 'e12d3a56-0c52-43ac-b33c-15c399eb06d4', 'serviceId': '83108c28-14f7-4646-acb8-dab165397fd5', 'toId': None, 'userId': '3f4cc332-516e-4f48-aff2-df6eaa2e5034', 'ticketId': '3e14aea2-bc69-4e56-b20b-1b6d63ade6d5', 'ticketUserId': '3f4cc332-516e-4f48-aff2-df6eaa2e5034', 'ticketDepartmentId': 'a78046d7-809d-4cdb-a72a-31dfbc47d862', 'quotedMessageId': None, 'origin': 'user', 'hsmId': None, 'text': 'ie', 'obfuscated': False, 'files': None, 'quotedMessage': None, 'isFromBot': False}, 'webhookId': '27b4c18d-2ab0-4c70-a592-46bbe7e00bc8', 'timestamp': '2023-05-21T23:14:56.049Z'}
21/05/2023|23:14:56 - webhook.views -INFO- Received webhook request
{'event': 'message.updated', 'data': {'id': 'd69ffd12-7437-4825-8eaf-cb08a33df24d', 'isFromMe': True, 'sent': True, 'type': 'chat', 'timestamp': '2023-05-21T23:14:54.000Z', 'data': {'ack': 2, 'isNew': True, 'isFirst': False}, 'visible': True, 'accountId': '966b70ba-27d8-43ae-a295-35e59f0007be', 'contactId': '79db7607-6088-44c1-a010-ed4ef39d4f37', 'fromId': 'e12d3a56-0c52-43ac-b33c-15c399eb06d4', 'serviceId': '83108c28-14f7-4646-acb8-dab165397fd5', 'toId': None, 'userId': '3f4cc332-516e-4f48-aff2-df6eaa2e5034', 'ticketId': '3e14aea2-bc69-4e56-b20b-1b6d63ade6d5', 'ticketUserId': '3f4cc332-516e-4f48-aff2-df6eaa2e5034', 'ticketDepartmentId': 'a78046d7-809d-4cdb-a72a-31dfbc47d862', 'quotedMessageId': None, 'origin': 'user', 'hsmId': None, 'text': 'ie', 'obfuscated': False, 'files': None, 'quotedMessage': None, 'isFromBot': False}, 'webhookId': '27b4c18d-2ab0-4c70-a592-46bbe7e00bc8', 'timestamp': '2023-05-21T23:14:56.276Z'}
21/05/2023|23:14:57 - webhook.views -DEBUG- Exceção ocorreu na função webhook_receiver, linha 20: handle_message_updated() got an unexpected keyword argument 'data'
21/05/2023|23:14:57 - webhook.views -DEBUG- Exceção ocorreu na função webhook_receiver, linha 20: handle_message_updated() got an unexpected keyword argument 'data'
21/05/2023|23:14:57 - webhook.views -INFO- Exception occurred. handle_message_updated() got an unexpected keyword argument 'data'
21/05/2023|23:14:57 - webhook.views -INFO- Exception occurred. handle_message_updated() got an unexpected keyword argument 'data'
21/05/2023|23:17:24 - webhook.views -INFO- Received webhook request
{'event': 'message.created', 'data': {'id': '9a7d899e-104d-4d0f-bfa7-b6e3f2cac593', 'isFromMe': True, 'sent': True, 'type': 'chat', 'timestamp': '2023-05-21T23:17:22.000Z', 'data': {'ack': 0, 'isNew': True, 'isFirst': False}, 'visible': True, 'accountId': '966b70ba-27d8-43ae-a295-35e59f0007be', 'contactId': '79db7607-6088-44c1-a010-ed4ef39d4f37', 'fromId': 'e12d3a56-0c52-43ac-b33c-15c399eb06d4', 'serviceId': '83108c28-14f7-4646-acb8-dab165397fd5', 'toId': None, 'userId': '3f4cc332-516e-4f48-aff2-df6eaa2e5034', 'ticketId': '3e14aea2-bc69-4e56-b20b-1b6d63ade6d5', 'ticketUserId': None, 'ticketDepartmentId': None, 'quotedMessageId': None, 'origin': 'user', 'hsmId': None, 'text': 'Show', 'obfuscated': False, 'files': None, 'quotedMessage': None, 'isFromBot': False}, 'webhookId': '27b4c18d-2ab0-4c70-a592-46bbe7e00bc8', 'timestamp': '2023-05-21T23:17:23.631Z'}
21/05/2023|23:17:24 - webhook.views -INFO- Received webhook request
{'event': 'message.updated', 'data': {'id': '9a7d899e-104d-4d0f-bfa7-b6e3f2cac593', 'isFromMe': True, 'sent': True, 'type': 'chat', 'timestamp': '2023-05-21T23:17:22.000Z', 'data': {'ack': 1, 'isNew': True, 'isFirst': False}, 'visible': True, 'accountId': '966b70ba-27d8-43ae-a295-35e59f0007be', 'contactId': '79db7607-6088-44c1-a010-ed4ef39d4f37', 'fromId': 'e12d3a56-0c52-43ac-b33c-15c399eb06d4', 'serviceId': '83108c28-14f7-4646-acb8-dab165397fd5', 'toId': None, 'userId': '3f4cc332-516e-4f48-aff2-df6eaa2e5034', 'ticketId': '3e14aea2-bc69-4e56-b20b-1b6d63ade6d5', 'ticketUserId': '3f4cc332-516e-4f48-aff2-df6eaa2e5034', 'ticketDepartmentId': 'a78046d7-809d-4cdb-a72a-31dfbc47d862', 'quotedMessageId': None, 'origin': 'user', 'hsmId': None, 'text': 'Show', 'obfuscated': False, 'files': None, 'quotedMessage': None, 'isFromBot': False}, 'webhookId': '27b4c18d-2ab0-4c70-a592-46bbe7e00bc8', 'timestamp': '2023-05-21T23:17:23.720Z'}
21/05/2023|23:17:24 - webhook.views -INFO- Received webhook request
{'event': 'message.updated', 'data': {'id': '9a7d899e-104d-4d0f-bfa7-b6e3f2cac593', 'isFromMe': True, 'sent': True, 'type': 'chat', 'timestamp': '2023-05-21T23:17:22.000Z', 'data': {'ack': 2, 'isNew': True, 'isFirst': False}, 'visible': True, 'accountId': '966b70ba-27d8-43ae-a295-35e59f0007be', 'contactId': '79db7607-6088-44c1-a010-ed4ef39d4f37', 'fromId': 'e12d3a56-0c52-43ac-b33c-15c399eb06d4', 'serviceId': '83108c28-14f7-4646-acb8-dab165397fd5', 'toId': None, 'userId': '3f4cc332-516e-4f48-aff2-df6eaa2e5034', 'ticketId': '3e14aea2-bc69-4e56-b20b-1b6d63ade6d5', 'ticketUserId': '3f4cc332-516e-4f48-aff2-df6eaa2e5034', 'ticketDepartmentId': 'a78046d7-809d-4cdb-a72a-31dfbc47d862', 'quotedMessageId': None, 'origin': 'user', 'hsmId': None, 'text': 'Show', 'obfuscated': False, 'files': None, 'quotedMessage': None, 'isFromBot': False}, 'webhookId': '27b4c18d-2ab0-4c70-a592-46bbe7e00bc8', 'timestamp': '2023-05-21T23:17:24.140Z'}
21/05/2023|23:17:25 - webhook.views -DEBUG- Exceção ocorreu na função webhook_receiver, linha 20: handle_message_updated() got multiple values for argument 'message_id'
21/05/2023|23:17:25 - webhook.views -INFO- Exception occurred. handle_message_updated() got multiple values for argument 'message_id'
21/05/2023|23:17:25 - webhook.views -DEBUG- Exceção ocorreu na função webhook_receiver, linha 20: handle_message_updated() got multiple values for argument 'message_id'
21/05/2023|23:17:25 - webhook.views -INFO- Exception occurred. handle_message_updated() got multiple values for argument 'message_id'
21/05/2023|23:25:17 - webhook.views -INFO- Received webhook request
{'event': 'message.created', 'data': {'id': 'd9499982-a373-4d22-8f96-eec1d185cc62', 'isFromMe': True, 'sent': True, 'type': 'chat', 'timestamp': '2023-05-21T23:25:15.000Z', 'data': {'ack': 0, 'isNew': True, 'isFirst': False}, 'visible': True, 'accountId': '966b70ba-27d8-43ae-a295-35e59f0007be', 'contactId': '79db7607-6088-44c1-a010-ed4ef39d4f37', 'fromId': 'e12d3a56-0c52-43ac-b33c-15c399eb06d4', 'serviceId': '83108c28-14f7-4646-acb8-dab165397fd5', 'toId': None, 'userId': '3f4cc332-516e-4f48-aff2-df6eaa2e5034', 'ticketId': '3e14aea2-bc69-4e56-b20b-1b6d63ade6d5', 'ticketUserId': None, 'ticketDepartmentId': None, 'quotedMessageId': None, 'origin': 'user', 'hsmId': None, 'text': 'E agora com essa modificação?', 'obfuscated': False, 'files': None, 'quotedMessage': None, 'isFromBot': False}, 'webhookId': '27b4c18d-2ab0-4c70-a592-46bbe7e00bc8', 'timestamp': '2023-05-21T23:25:16.379Z'}
21/05/2023|23:25:17 - webhook.views -INFO- Received webhook request
{'event': 'message.updated', 'data': {'id': 'd9499982-a373-4d22-8f96-eec1d185cc62', 'isFromMe': True, 'sent': True, 'type': 'chat', 'timestamp': '2023-05-21T23:25:15.000Z', 'data': {'ack': 1, 'isNew': True, 'isFirst': False}, 'visible': True, 'accountId': '966b70ba-27d8-43ae-a295-35e59f0007be', 'contactId': '79db7607-6088-44c1-a010-ed4ef39d4f37', 'fromId': 'e12d3a56-0c52-43ac-b33c-15c399eb06d4', 'serviceId': '83108c28-14f7-4646-acb8-dab165397fd5', 'toId': None, 'userId': '3f4cc332-516e-4f48-aff2-df6eaa2e5034', 'ticketId': '3e14aea2-bc69-4e56-b20b-1b6d63ade6d5', 'ticketUserId': '3f4cc332-516e-4f48-aff2-df6eaa2e5034', 'ticketDepartmentId': 'a78046d7-809d-4cdb-a72a-31dfbc47d862', 'quotedMessageId': None, 'origin': 'user', 'hsmId': None, 'text': 'E agora com essa modificação?', 'obfuscated': False, 'files': None, 'quotedMessage': None, 'isFromBot': False}, 'webhookId': '27b4c18d-2ab0-4c70-a592-46bbe7e00bc8', 'timestamp': '2023-05-21T23:25:16.484Z'}
21/05/2023|23:25:17 - webhook.views -INFO- Received webhook request
{'event': 'message.updated', 'data': {'id': 'd9499982-a373-4d22-8f96-eec1d185cc62', 'isFromMe': True, 'sent': True, 'type': 'chat', 'timestamp': '2023-05-21T23:25:15.000Z', 'data': {'ack': 2, 'isNew': True, 'isFirst': False}, 'visible': True, 'accountId': '966b70ba-27d8-43ae-a295-35e59f0007be', 'contactId': '79db7607-6088-44c1-a010-ed4ef39d4f37', 'fromId': 'e12d3a56-0c52-43ac-b33c-15c399eb06d4', 'serviceId': '83108c28-14f7-4646-acb8-dab165397fd5', 'toId': None, 'userId': '3f4cc332-516e-4f48-aff2-df6eaa2e5034', 'ticketId': '3e14aea2-bc69-4e56-b20b-1b6d63ade6d5', 'ticketUserId': '3f4cc332-516e-4f48-aff2-df6eaa2e5034', 'ticketDepartmentId': 'a78046d7-809d-4cdb-a72a-31dfbc47d862', 'quotedMessageId': None, 'origin': 'user', 'hsmId': None, 'text': 'E agora com essa modificação?', 'obfuscated': False, 'files': None, 'quotedMessage': None, 'isFromBot': False}, 'webhookId': '27b4c18d-2ab0-4c70-a592-46bbe7e00bc8', 'timestamp': '2023-05-21T23:25:16.939Z'}
21/05/2023|23:25:17 - webhook.views -DEBUG- Exceção ocorreu na função webhook_receiver, linha 20: handle_message_created() missing 1 required positional argument: 'isFromMe'
21/05/2023|23:25:17 - webhook.views -INFO- Exception occurred. handle_message_created() missing 1 required positional argument: 'isFromMe'
21/05/2023|23:28:41 - webhook.views -INFO- Received webhook request
{'event': 'message.created', 'data': {'id': '46312842-ba2f-4fdd-a3d1-cda3d6bc968f', 'isFromMe': True, 'sent': True, 'type': 'chat', 'timestamp': '2023-05-21T23:28:39.000Z', 'data': {'ack': 0, 'isNew': True, 'isFirst': False}, 'visible': True, 'accountId': '966b70ba-27d8-43ae-a295-35e59f0007be', 'contactId': '79db7607-6088-44c1-a010-ed4ef39d4f37', 'fromId': 'e12d3a56-0c52-43ac-b33c-15c399eb06d4', 'serviceId': '83108c28-14f7-4646-acb8-dab165397fd5', 'toId': None, 'userId': '3f4cc332-516e-4f48-aff2-df6eaa2e5034', 'ticketId': '3e14aea2-bc69-4e56-b20b-1b6d63ade6d5', 'ticketUserId': None, 'ticketDepartmentId': None, 'quotedMessageId': None, 'origin': 'user', 'hsmId': None, 'text': 'HAUSHUAHS', 'obfuscated': False, 'files': None, 'quotedMessage': None, 'isFromBot': False}, 'webhookId': '27b4c18d-2ab0-4c70-a592-46bbe7e00bc8', 'timestamp': '2023-05-21T23:28:40.342Z'}
21/05/2023|23:28:41 - webhook.views -INFO- Received webhook request
{'event': 'message.updated', 'data': {'id': '46312842-ba2f-4fdd-a3d1-cda3d6bc968f', 'isFromMe': True, 'sent': True, 'type': 'chat', 'timestamp': '2023-05-21T23:28:39.000Z', 'data': {'ack': 1, 'isNew': True, 'isFirst': False}, 'visible': True, 'accountId': '966b70ba-27d8-43ae-a295-35e59f0007be', 'contactId': '79db7607-6088-44c1-a010-ed4ef39d4f37', 'fromId': 'e12d3a56-0c52-43ac-b33c-15c399eb06d4', 'serviceId': '83108c28-14f7-4646-acb8-dab165397fd5', 'toId': None, 'userId': '3f4cc332-516e-4f48-aff2-df6eaa2e5034', 'ticketId': '3e14aea2-bc69-4e56-b20b-1b6d63ade6d5', 'ticketUserId': '3f4cc332-516e-4f48-aff2-df6eaa2e5034', 'ticketDepartmentId': 'a78046d7-809d-4cdb-a72a-31dfbc47d862', 'quotedMessageId': None, 'origin': 'user', 'hsmId': None, 'text': 'HAUSHUAHS', 'obfuscated': False, 'files': None, 'quotedMessage': None, 'isFromBot': False}, 'webhookId': '27b4c18d-2ab0-4c70-a592-46bbe7e00bc8', 'timestamp': '2023-05-21T23:28:40.453Z'}
21/05/2023|23:28:42 - webhook.views -DEBUG- Exceção ocorreu na função webhook_receiver, linha 20: handle_message_updated() takes 2 positional arguments but 3 were given
21/05/2023|23:28:42 - webhook.views -INFO- Exception occurred. handle_message_updated() takes 2 positional arguments but 3 were given
21/05/2023|23:28:42 - webhook.views -INFO- Received webhook request
{'event': 'message.updated', 'data': {'id': '46312842-ba2f-4fdd-a3d1-cda3d6bc968f', 'isFromMe': True, 'sent': True, 'type': 'chat', 'timestamp': '2023-05-21T23:28:39.000Z', 'data': {'ack': 2, 'isNew': True, 'isFirst': False}, 'visible': True, 'accountId': '966b70ba-27d8-43ae-a295-35e59f0007be', 'contactId': '79db7607-6088-44c1-a010-ed4ef39d4f37', 'fromId': 'e12d3a56-0c52-43ac-b33c-15c399eb06d4', 'serviceId': '83108c28-14f7-4646-acb8-dab165397fd5', 'toId': None, 'userId': '3f4cc332-516e-4f48-aff2-df6eaa2e5034', 'ticketId': '3e14aea2-bc69-4e56-b20b-1b6d63ade6d5', 'ticketUserId': '3f4cc332-516e-4f48-aff2-df6eaa2e5034', 'ticketDepartmentId': 'a78046d7-809d-4cdb-a72a-31dfbc47d862', 'quotedMessageId': None, 'origin': 'user', 'hsmId': None, 'text': 'HAUSHUAHS', 'obfuscated': False, 'files': None, 'quotedMessage': None, 'isFromBot': False}, 'webhookId': '27b4c18d-2ab0-4c70-a592-46bbe7e00bc8', 'timestamp': '2023-05-21T23:28:41.638Z'}
21/05/2023|23:28:42 - webhook.views -DEBUG- Exceção ocorreu na função webhook_receiver, linha 20: handle_message_updated() takes 2 positional arguments but 3 were given
21/05/2023|23:28:42 - webhook.views -INFO- Exception occurred. handle_message_updated() takes 2 positional arguments but 3 were given
21/05/2023|23:30:01 - webhook.views -INFO- Received webhook request
{'event': 'message.created', 'data': {'id': '99e9b939-bf41-4b49-9421-ebbb4b58f6a6', 'isFromMe': True, 'sent': True, 'type': 'chat', 'timestamp': '2023-05-21T23:29:59.000Z', 'data': {'ack': 0, 'isNew': True, 'isFirst': False}, 'visible': True, 'accountId': '966b70ba-27d8-43ae-a295-35e59f0007be', 'contactId': '79db7607-6088-44c1-a010-ed4ef39d4f37', 'fromId': 'e12d3a56-0c52-43ac-b33c-15c399eb06d4', 'serviceId': '83108c28-14f7-4646-acb8-dab165397fd5', 'toId': None, 'userId': '3f4cc332-516e-4f48-aff2-df6eaa2e5034', 'ticketId': '3e14aea2-bc69-4e56-b20b-1b6d63ade6d5', 'ticketUserId': None, 'ticketDepartmentId': None, 'quotedMessageId': None, 'origin': 'user', 'hsmId': None, 'text': 'Nattan', 'obfuscated': False, 'files': None, 'quotedMessage': None, 'isFromBot': False}, 'webhookId': '27b4c18d-2ab0-4c70-a592-46bbe7e00bc8', 'timestamp': '2023-05-21T23:30:00.341Z'}
21/05/2023|23:30:01 - webhook.views -INFO- Received webhook request
{'event': 'message.updated', 'data': {'id': '99e9b939-bf41-4b49-9421-ebbb4b58f6a6', 'isFromMe': True, 'sent': True, 'type': 'chat', 'timestamp': '2023-05-21T23:29:59.000Z', 'data': {'ack': 1, 'isNew': True, 'isFirst': False}, 'visible': True, 'accountId': '966b70ba-27d8-43ae-a295-35e59f0007be', 'contactId': '79db7607-6088-44c1-a010-ed4ef39d4f37', 'fromId': 'e12d3a56-0c52-43ac-b33c-15c399eb06d4', 'serviceId': '83108c28-14f7-4646-acb8-dab165397fd5', 'toId': None, 'userId': '3f4cc332-516e-4f48-aff2-df6eaa2e5034', 'ticketId': '3e14aea2-bc69-4e56-b20b-1b6d63ade6d5', 'ticketUserId': '3f4cc332-516e-4f48-aff2-df6eaa2e5034', 'ticketDepartmentId': 'a78046d7-809d-4cdb-a72a-31dfbc47d862', 'quotedMessageId': None, 'origin': 'user', 'hsmId': None, 'text': 'Nattan', 'obfuscated': False, 'files': None, 'quotedMessage': None, 'isFromBot': False}, 'webhookId': '27b4c18d-2ab0-4c70-a592-46bbe7e00bc8', 'timestamp': '2023-05-21T23:30:00.437Z'}
21/05/2023|23:30:01 - webhook.views -INFO- Received webhook request
{'event': 'message.updated', 'data': {'id': '99e9b939-bf41-4b49-9421-ebbb4b58f6a6', 'isFromMe': True, 'sent': True, 'type': 'chat', 'timestamp': '2023-05-21T23:29:59.000Z', 'data': {'ack': 2, 'isNew': True, 'isFirst': False}, 'visible': True, 'accountId': '966b70ba-27d8-43ae-a295-35e59f0007be', 'contactId': '79db7607-6088-44c1-a010-ed4ef39d4f37', 'fromId': 'e12d3a56-0c52-43ac-b33c-15c399eb06d4', 'serviceId': '83108c28-14f7-4646-acb8-dab165397fd5', 'toId': None, 'userId': '3f4cc332-516e-4f48-aff2-df6eaa2e5034', 'ticketId': '3e14aea2-bc69-4e56-b20b-1b6d63ade6d5', 'ticketUserId': '3f4cc332-516e-4f48-aff2-df6eaa2e5034', 'ticketDepartmentId': 'a78046d7-809d-4cdb-a72a-31dfbc47d862', 'quotedMessageId': None, 'origin': 'user', 'hsmId': None, 'text': 'Nattan', 'obfuscated': False, 'files': None, 'quotedMessage': None, 'isFromBot': False}, 'webhookId': '27b4c18d-2ab0-4c70-a592-46bbe7e00bc8', 'timestamp': '2023-05-21T23:30:00.845Z'}
21/05/2023|23:30:01 - webhook.views -DEBUG- Exceção ocorreu na função webhook_receiver, linha 20: handle_message_updated() takes 2 positional arguments but 3 were given
21/05/2023|23:30:01 - webhook.views -INFO- Exception occurred. handle_message_updated() takes 2 positional arguments but 3 were given
21/05/2023|23:30:02 - webhook.views -DEBUG- Exceção ocorreu na função webhook_receiver, linha 20: handle_message_updated() takes 2 positional arguments but 3 were given
21/05/2023|23:30:02 - webhook.views -INFO- Exception occurred. handle_message_updated() takes 2 positional arguments but 3 were given
21/05/2023|23:34:08 - webhook.views -INFO- Received webhook request
{'event': 'message.created', 'data': {'id': '24ff7095-cca9-46f7-9b17-fd61b3f9c633', 'isFromMe': True, 'sent': True, 'type': 'chat', 'timestamp': '2023-05-21T23:34:07.000Z', 'data': {'ack': 0, 'isNew': True, 'isFirst': False}, 'visible': True, 'accountId': '966b70ba-27d8-43ae-a295-35e59f0007be', 'contactId': '79db7607-6088-44c1-a010-ed4ef39d4f37', 'fromId': 'e12d3a56-0c52-43ac-b33c-15c399eb06d4', 'serviceId': '83108c28-14f7-4646-acb8-dab165397fd5', 'toId': None, 'userId': '3f4cc332-516e-4f48-aff2-df6eaa2e5034', 'ticketId': '3e14aea2-bc69-4e56-b20b-1b6d63ade6d5', 'ticketUserId': None, 'ticketDepartmentId': None, 'quotedMessageId': None, 'origin': 'user', 'hsmId': None, 'text': 'Opa', 'obfuscated': False, 'files': None, 'quotedMessage': None, 'isFromBot': False}, 'webhookId': '27b4c18d-2ab0-4c70-a592-46bbe7e00bc8', 'timestamp': '2023-05-21T23:34:08.156Z'}
21/05/2023|23:34:08 - webhook.views -INFO- Received webhook request
{'event': 'message.updated', 'data': {'id': '24ff7095-cca9-46f7-9b17-fd61b3f9c633', 'isFromMe': True, 'sent': True, 'type': 'chat', 'timestamp': '2023-05-21T23:34:07.000Z', 'data': {'ack': 1, 'isNew': True, 'isFirst': False}, 'visible': True, 'accountId': '966b70ba-27d8-43ae-a295-35e59f0007be', 'contactId': '79db7607-6088-44c1-a010-ed4ef39d4f37', 'fromId': 'e12d3a56-0c52-43ac-b33c-15c399eb06d4', 'serviceId': '83108c28-14f7-4646-acb8-dab165397fd5', 'toId': None, 'userId': '3f4cc332-516e-4f48-aff2-df6eaa2e5034', 'ticketId': '3e14aea2-bc69-4e56-b20b-1b6d63ade6d5', 'ticketUserId': '3f4cc332-516e-4f48-aff2-df6eaa2e5034', 'ticketDepartmentId': 'a78046d7-809d-4cdb-a72a-31dfbc47d862', 'quotedMessageId': None, 'origin': 'user', 'hsmId': None, 'text': 'Opa', 'obfuscated': False, 'files': None, 'quotedMessage': None, 'isFromBot': False}, 'webhookId': '27b4c18d-2ab0-4c70-a592-46bbe7e00bc8', 'timestamp': '2023-05-21T23:34:08.247Z'}
21/05/2023|23:34:09 - webhook.views -INFO- Received webhook request
{'event': 'message.updated', 'data': {'id': '24ff7095-cca9-46f7-9b17-fd61b3f9c633', 'isFromMe': True, 'sent': True, 'type': 'chat', 'timestamp': '2023-05-21T23:34:07.000Z', 'data': {'ack': 2, 'isNew': True, 'isFirst': False}, 'visible': True, 'accountId': '966b70ba-27d8-43ae-a295-35e59f0007be', 'contactId': '79db7607-6088-44c1-a010-ed4ef39d4f37', 'fromId': 'e12d3a56-0c52-43ac-b33c-15c399eb06d4', 'serviceId': '83108c28-14f7-4646-acb8-dab165397fd5', 'toId': None, 'userId': '3f4cc332-516e-4f48-aff2-df6eaa2e5034', 'ticketId': '3e14aea2-bc69-4e56-b20b-1b6d63ade6d5', 'ticketUserId': '3f4cc332-516e-4f48-aff2-df6eaa2e5034', 'ticketDepartmentId': 'a78046d7-809d-4cdb-a72a-31dfbc47d862', 'quotedMessageId': None, 'origin': 'user', 'hsmId': None, 'text': 'Opa', 'obfuscated': False, 'files': None, 'quotedMessage': None, 'isFromBot': False}, 'webhookId': '27b4c18d-2ab0-4c70-a592-46bbe7e00bc8', 'timestamp': '2023-05-21T23:34:08.598Z'}
21/05/2023|23:34:09 - webhook.views -DEBUG- Exceção ocorreu na função webhook_receiver, linha 20: handle_message_updated() takes 2 positional arguments but 3 were given
21/05/2023|23:34:09 - webhook.views -INFO- Exception occurred. handle_message_updated() takes 2 positional arguments but 3 were given
21/05/2023|23:34:09 - webhook.views -DEBUG- Exceção ocorreu na função webhook_receiver, linha 20: handle_message_updated() takes 2 positional arguments but 3 were given
21/05/2023|23:34:09 - webhook.views -INFO- Exception occurred. handle_message_updated() takes 2 positional arguments but 3 were given
21/05/2023|23:34:16 - messages_api.event -DEBUG- Failed to create message_id: 24ff7095-cca9-46f7-9b17-fd61b3f9c633
<Response [500]>-<!DOCTYPE html>
<html lang="en">
<head>
  <meta http-equiv="content-type" content="text/html; charset=utf-8">
  <meta name="robots" content="NONE,NOARCHIVE">
  <title>ValidationError
          at /webhook/messages/create</title>
  <style type="text/css">
    html * { padding:0; margin:0; }
    body * { padding:10px 20px; }
    body * * { padding:0; }
    body { font:small sans-serif; background-color:#fff; color:#000; }
    body>div { border-bottom:1px solid #ddd; }
    h1 { font-weight:normal; }
    h2 { margin-bottom:.8em; }
    h3 { margin:1em 0 .5em 0; }
    h4 { margin:0 0 .5em 0; font-weight: normal; }
    code, pre { font-size: 100%; white-space: pre-wrap; word-break: break-word; }
    summary { cursor: pointer; }
    table { border:1px solid #ccc; border-collapse: collapse; width:100%; background:white; }
    tbody td, tbody th { vertical-align:top; padding:2px 3px; }
    thead th {
      padding:1px 6px 1px 3px; background:#fefefe; text-align:left;
      font-weight:normal; font-size:11px; border:1px solid #ddd;
    }
    tbody th { width:12em; text-align:right; color:#666; padding-right:.5em; }
    table.vars { margin:5px 10px 2px 40px; width: auto; }
    table.vars td, table.req td { font-family:monospace; }
    table td.code { width:100%; }
    table td.code pre { overflow:hidden; }
    table.source th { color:#666; }
    table.source td { font-family:monospace; white-space:pre; border-bottom:1px solid #eee; }
    ul.traceback { list-style-type:none; color: #222; }
    ul.traceback li.cause { word-break: break-word; }
    ul.traceback li.frame { padding-bottom:1em; color:#4f4f4f; }
    ul.traceback li.user { background-color:#e0e0e0; color:#000 }
    div.context { padding:10px 0; overflow:hidden; }
    div.context ol { padding-left:30px; margin:0 10px; list-style-position: inside; }
    div.context ol li { font-family:monospace; white-space:pre; color:#777; cursor:pointer; padding-left: 2px; }
    div.context ol li pre { display:inline; }
    div.context ol.context-line li { color:#464646; background-color:#dfdfdf; padding: 3px 2px; }
    div.context ol.context-line li span { position:absolute; right:32px; }
    .user div.context ol.context-line li { background-color:#bbb; color:#000; }
    .user div.context ol li { color:#666; }
    div.commands, summary.commands { margin-left: 40px; }
    div.commands a, summary.commands { color:#555; text-decoration:none; }
    .user div.commands a { color: black; }
    #summary { background: #ffc; }
    #summary h2 { font-weight: normal; color: #666; }
    #explanation { background:#eee; }
    #template, #template-not-exist { background:#f6f6f6; }
    #template-not-exist ul { margin: 0 0 10px 20px; }
    #template-not-exist .postmortem-section { margin-bottom: 3px; }
    #unicode-hint { background:#eee; }
    #traceback { background:#eee; }
    #requestinfo { background:#f6f6f6; padding-left:120px; }
    #summary table { border:none; background:transparent; }
    #requestinfo h2, #requestinfo h3 { position:relative; margin-left:-100px; }
    #requestinfo h3 { margin-bottom:-1em; }
    .error { background: #ffc; }
    .specific { color:#cc3300; font-weight:bold; }
    h2 span.commands { font-size:.7em; font-weight:normal; }
    span.commands a:link {color:#5E5694;}
    pre.exception_value { font-family: sans-serif; color: #575757; font-size: 1.5em; margin: 10px 0 10px 0; }
    .append-bottom { margin-bottom: 10px; }
    .fname { user-select: all; }
  </style>
  
  <script>
    function hideAll(elems) {
      for (var e = 0; e < elems.length; e++) {
        elems[e].style.display = 'none';
      }
    }
    window.onload = function() {
      hideAll(document.querySelectorAll('ol.pre-context'));
      hideAll(document.querySelectorAll('ol.post-context'));
      hideAll(document.querySelectorAll('div.pastebin'));
    }
    function toggle() {
      for (var i = 0; i < arguments.length; i++) {
        var e = document.getElementById(arguments[i]);
        if (e) {
          e.style.display = e.style.display == 'none' ? 'block': 'none';
        }
      }
      return false;
    }
    function switchPastebinFriendly(link) {
      s1 = "Switch to copy-and-paste view";
      s2 = "Switch back to interactive view";
      link.textContent = link.textContent.trim() == s1 ? s2: s1;
      toggle('browserTraceback', 'pastebinTraceback');
      return false;
    }
  </script>
  
</head>
<body>
<div id="summary">
  <h1>ValidationError
       at /webhook/messages/create</h1>
  <pre class="exception_value">[&#x27;o valor “[True]”  deve ser True ou False.&#x27;]</pre>
  <table class="meta">

    <tr>
      <th>Request Method:</th>
      <td>POST</td>
    </tr>
    <tr>
      <th>Request URL:</th>
      <td>http://woz.serveo.net/webhook/messages/create?phone=5588988562749&amp;period=05%2F23</td>
    </tr>

    <tr>
      <th>Django Version:</th>
      <td>4.2.1</td>
    </tr>

    <tr>
      <th>Exception Type:</th>
      <td>ValidationError</td>
    </tr>


    <tr>
      <th>Exception Value:</th>
      <td><pre>[&#x27;o valor “[True]”  deve ser True ou False.&#x27;]</pre></td>
    </tr>


    <tr>
      <th>Exception Location:</th>
      <td><span class="fname">/home/jpfilho/.local/lib/python3.10/site-packages/django/db/models/fields/__init__.py</span>, line 1112, in to_python</td>
    </tr>


    <tr>
      <th>Raised during:</th>
      <td>messages_api.views.MessageViewSet</td>
    </tr>

    <tr>
      <th>Python Executable:</th>
      <td>/usr/bin/python3</td>
    </tr>
    <tr>
      <th>Python Version:</th>
      <td>3.10.7</td>
    </tr>
    <tr>
      <th>Python Path:</th>
      <td><pre>[&#x27;/home/jpfilho/Documents/code-ws/python/webhook&#x27;,
 &#x27;/home/jpfilho/Documents/code-ws/python/webhook&#x27;,
 &#x27;/usr/lib/python310.zip&#x27;,
 &#x27;/usr/lib/python3.10&#x27;,
 &#x27;/usr/lib/python3.10/lib-dynload&#x27;,
 &#x27;/home/jpfilho/.local/lib/python3.10/site-packages&#x27;,
 &#x27;/usr/local/lib/python3.10/dist-packages&#x27;,
 &#x27;/usr/lib/python3/dist-packages&#x27;]</pre></td>
    </tr>
    <tr>
      <th>Server time:</th>
      <td>Sun, 21 May 2023 23:34:14 +0000</td>
    </tr>
  </table>
</div>




<div id="traceback">
  <h2>Traceback <span class="commands"><a href="#" onclick="return switchPastebinFriendly(this);">
    Switch to copy-and-paste view</a></span>
  </h2>
  <div id="browserTraceback">
    <ul class="traceback">
      
        
        <li class="frame django">
          
            <code class="fname">/home/jpfilho/.local/lib/python3.10/site-packages/django/core/handlers/exception.py</code>, line 55, in inner
          

          
            <div class="context" id="c139628496864576">
              
                <ol start="48" class="pre-context" id="pre139628496864576">
                
                  <li onclick="toggle('pre139628496864576', 'post139628496864576')"><pre></pre></li>
                
                  <li onclick="toggle('pre139628496864576', 'post139628496864576')"><pre>        return inner</pre></li>
                
                  <li onclick="toggle('pre139628496864576', 'post139628496864576')"><pre>    else:</pre></li>
                
                  <li onclick="toggle('pre139628496864576', 'post139628496864576')"><pre></pre></li>
                
                  <li onclick="toggle('pre139628496864576', 'post139628496864576')"><pre>        @wraps(get_response)</pre></li>
                
                  <li onclick="toggle('pre139628496864576', 'post139628496864576')"><pre>        def inner(request):</pre></li>
                
                  <li onclick="toggle('pre139628496864576', 'post139628496864576')"><pre>            try:</pre></li>
                
                </ol>
              
              <ol start="55" class="context-line">
                <li onclick="toggle('pre139628496864576', 'post139628496864576')"><pre>                response = get_response(request)</pre> <span>…</span></li>
              </ol>
              
                <ol start='56' class="post-context" id="post139628496864576">
                  
                  <li onclick="toggle('pre139628496864576', 'post139628496864576')"><pre>            except Exception as exc:</pre></li>
                  
                  <li onclick="toggle('pre139628496864576', 'post139628496864576')"><pre>                response = response_for_exception(request, exc)</pre></li>
                  
                  <li onclick="toggle('pre139628496864576', 'post139628496864576')"><pre>            return response</pre></li>
                  
                  <li onclick="toggle('pre139628496864576', 'post139628496864576')"><pre></pre></li>
                  
                  <li onclick="toggle('pre139628496864576', 'post139628496864576')"><pre>        return inner</pre></li>
                  
                  <li onclick="toggle('pre139628496864576', 'post139628496864576')"><pre></pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v139628496864576">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>exc</td>
                    <td class="code"><pre>ValidationError([&#x27;o valor “[True]”  deve ser True ou False.&#x27;])</pre></td>
                  </tr>
                
                  <tr>
                    <td>get_response</td>
                    <td class="code"><pre>&lt;bound method BaseHandler._get_response of &lt;django.core.handlers.wsgi.WSGIHandler object at 0x7efdcb333e50&gt;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>request</td>
                    <td class="code"><pre>&lt;WSGIRequest: POST &#x27;/webhook/messages/create?phone=5588988562749&amp;period=05%2F23&#x27;&gt;</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
        <li class="frame django">
          
            <code class="fname">/home/jpfilho/.local/lib/python3.10/site-packages/django/core/handlers/base.py</code>, line 197, in _get_response
          

          
            <div class="context" id="c139628496863360">
              
                <ol start="190" class="pre-context" id="pre139628496863360">
                
                  <li onclick="toggle('pre139628496863360', 'post139628496863360')"><pre></pre></li>
                
                  <li onclick="toggle('pre139628496863360', 'post139628496863360')"><pre>        if response is None:</pre></li>
                
                  <li onclick="toggle('pre139628496863360', 'post139628496863360')"><pre>            wrapped_callback = self.make_view_atomic(callback)</pre></li>
                
                  <li onclick="toggle('pre139628496863360', 'post139628496863360')"><pre>            # If it is an asynchronous view, run it in a subthread.</pre></li>
                
                  <li onclick="toggle('pre139628496863360', 'post139628496863360')"><pre>            if iscoroutinefunction(wrapped_callback):</pre></li>
                
                  <li onclick="toggle('pre139628496863360', 'post139628496863360')"><pre>                wrapped_callback = async_to_sync(wrapped_callback)</pre></li>
                
                  <li onclick="toggle('pre139628496863360', 'post139628496863360')"><pre>            try:</pre></li>
                
                </ol>
              
              <ol start="197" class="context-line">
                <li onclick="toggle('pre139628496863360', 'post139628496863360')"><pre>                response = wrapped_callback(request, *callback_args, **callback_kwargs)</pre> <span>…</span></li>
              </ol>
              
                <ol start='198' class="post-context" id="post139628496863360">
                  
                  <li onclick="toggle('pre139628496863360', 'post139628496863360')"><pre>            except Exception as e:</pre></li>
                  
                  <li onclick="toggle('pre139628496863360', 'post139628496863360')"><pre>                response = self.process_exception_by_middleware(e, request)</pre></li>
                  
                  <li onclick="toggle('pre139628496863360', 'post139628496863360')"><pre>                if response is None:</pre></li>
                  
                  <li onclick="toggle('pre139628496863360', 'post139628496863360')"><pre>                    raise</pre></li>
                  
                  <li onclick="toggle('pre139628496863360', 'post139628496863360')"><pre></pre></li>
                  
                  <li onclick="toggle('pre139628496863360', 'post139628496863360')"><pre>        # Complain if the view returned None (a common error).</pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v139628496863360">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>callback</td>
                    <td class="code"><pre>&lt;function MessageViewSet at 0x7efdcbbda560&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>callback_args</td>
                    <td class="code"><pre>()</pre></td>
                  </tr>
                
                  <tr>
                    <td>callback_kwargs</td>
                    <td class="code"><pre>{}</pre></td>
                  </tr>
                
                  <tr>
                    <td>middleware_method</td>
                    <td class="code"><pre>&lt;bound method CsrfViewMiddleware.process_view of &lt;CsrfViewMiddleware get_response=convert_exception_to_response.&lt;locals&gt;.inner&gt;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>request</td>
                    <td class="code"><pre>&lt;WSGIRequest: POST &#x27;/webhook/messages/create?phone=5588988562749&amp;period=05%2F23&#x27;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>response</td>
                    <td class="code"><pre>None</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;django.core.handlers.wsgi.WSGIHandler object at 0x7efdcb333e50&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>wrapped_callback</td>
                    <td class="code"><pre>&lt;function MessageViewSet at 0x7efdcbbda560&gt;</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
        <li class="frame django">
          
            <code class="fname">/home/jpfilho/.local/lib/python3.10/site-packages/django/views/decorators/csrf.py</code>, line 56, in wrapper_view
          

          
            <div class="context" id="c139628496865792">
              
                <ol start="49" class="pre-context" id="pre139628496865792">
                
                  <li onclick="toggle('pre139628496865792', 'post139628496865792')"><pre>def csrf_exempt(view_func):</pre></li>
                
                  <li onclick="toggle('pre139628496865792', 'post139628496865792')"><pre>    &quot;&quot;&quot;Mark a view function as being exempt from the CSRF view protection.&quot;&quot;&quot;</pre></li>
                
                  <li onclick="toggle('pre139628496865792', 'post139628496865792')"><pre></pre></li>
                
                  <li onclick="toggle('pre139628496865792', 'post139628496865792')"><pre>    # view_func.csrf_exempt = True would also work, but decorators are nicer</pre></li>
                
                  <li onclick="toggle('pre139628496865792', 'post139628496865792')"><pre>    # if they don&#x27;t have side effects, so return a new function.</pre></li>
                
                  <li onclick="toggle('pre139628496865792', 'post139628496865792')"><pre>    @wraps(view_func)</pre></li>
                
                  <li onclick="toggle('pre139628496865792', 'post139628496865792')"><pre>    def wrapper_view(*args, **kwargs):</pre></li>
                
                </ol>
              
              <ol start="56" class="context-line">
                <li onclick="toggle('pre139628496865792', 'post139628496865792')"><pre>        return view_func(*args, **kwargs)</pre> <span>…</span></li>
              </ol>
              
                <ol start='57' class="post-context" id="post139628496865792">
                  
                  <li onclick="toggle('pre139628496865792', 'post139628496865792')"><pre></pre></li>
                  
                  <li onclick="toggle('pre139628496865792', 'post139628496865792')"><pre>    wrapper_view.csrf_exempt = True</pre></li>
                  
                  <li onclick="toggle('pre139628496865792', 'post139628496865792')"><pre>    return wrapper_view</pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v139628496865792">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>args</td>
                    <td class="code"><pre>(&lt;WSGIRequest: POST &#x27;/webhook/messages/create?phone=5588988562749&amp;period=05%2F23&#x27;&gt;,)</pre></td>
                  </tr>
                
                  <tr>
                    <td>kwargs</td>
                    <td class="code"><pre>{}</pre></td>
                  </tr>
                
                  <tr>
                    <td>view_func</td>
                    <td class="code"><pre>&lt;function MessageViewSet at 0x7efdcbbda4d0&gt;</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
        <li class="frame user">
          
            <code class="fname">/home/jpfilho/.local/lib/python3.10/site-packages/rest_framework/viewsets.py</code>, line 125, in view
          

          
            <div class="context" id="c139628500964928">
              
                <ol start="118" class="pre-context" id="pre139628500964928">
                
                  <li onclick="toggle('pre139628500964928', 'post139628500964928')"><pre>                setattr(self, method, handler)</pre></li>
                
                  <li onclick="toggle('pre139628500964928', 'post139628500964928')"><pre></pre></li>
                
                  <li onclick="toggle('pre139628500964928', 'post139628500964928')"><pre>            self.request = request</pre></li>
                
                  <li onclick="toggle('pre139628500964928', 'post139628500964928')"><pre>            self.args = args</pre></li>
                
                  <li onclick="toggle('pre139628500964928', 'post139628500964928')"><pre>            self.kwargs = kwargs</pre></li>
                
                  <li onclick="toggle('pre139628500964928', 'post139628500964928')"><pre></pre></li>
                
                  <li onclick="toggle('pre139628500964928', 'post139628500964928')"><pre>            # And continue as usual</pre></li>
                
                </ol>
              
              <ol start="125" class="context-line">
                <li onclick="toggle('pre139628500964928', 'post139628500964928')"><pre>            return self.dispatch(request, *args, **kwargs)</pre> <span>…</span></li>
              </ol>
              
                <ol start='126' class="post-context" id="post139628500964928">
                  
                  <li onclick="toggle('pre139628500964928', 'post139628500964928')"><pre></pre></li>
                  
                  <li onclick="toggle('pre139628500964928', 'post139628500964928')"><pre>        # take name and docstring from class</pre></li>
                  
                  <li onclick="toggle('pre139628500964928', 'post139628500964928')"><pre>        update_wrapper(view, cls, updated=())</pre></li>
                  
                  <li onclick="toggle('pre139628500964928', 'post139628500964928')"><pre></pre></li>
                  
                  <li onclick="toggle('pre139628500964928', 'post139628500964928')"><pre>        # and possible attributes set by decorators</pre></li>
                  
                  <li onclick="toggle('pre139628500964928', 'post139628500964928')"><pre>        # like csrf_exempt from dispatch</pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v139628500964928">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>action</td>
                    <td class="code"><pre>&#x27;create&#x27;</pre></td>
                  </tr>
                
                  <tr>
                    <td>actions</td>
                    <td class="code"><pre>{&#x27;post&#x27;: &#x27;create&#x27;}</pre></td>
                  </tr>
                
                  <tr>
                    <td>args</td>
                    <td class="code"><pre>()</pre></td>
                  </tr>
                
                  <tr>
                    <td>cls</td>
                    <td class="code"><pre>&lt;class &#x27;messages_api.views.MessageViewSet&#x27;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>handler</td>
                    <td class="code"><pre>&lt;bound method MessageViewSet.create of &lt;messages_api.views.MessageViewSet object at 0x7efdcb3ec6d0&gt;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>initkwargs</td>
                    <td class="code"><pre>{}</pre></td>
                  </tr>
                
                  <tr>
                    <td>kwargs</td>
                    <td class="code"><pre>{}</pre></td>
                  </tr>
                
                  <tr>
                    <td>method</td>
                    <td class="code"><pre>&#x27;post&#x27;</pre></td>
                  </tr>
                
                  <tr>
                    <td>request</td>
                    <td class="code"><pre>&lt;WSGIRequest: POST &#x27;/webhook/messages/create?phone=5588988562749&amp;period=05%2F23&#x27;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;messages_api.views.MessageViewSet object at 0x7efdcb3ec6d0&gt;</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
        <li class="frame user">
          
            <code class="fname">/home/jpfilho/.local/lib/python3.10/site-packages/rest_framework/views.py</code>, line 509, in dispatch
          

          
            <div class="context" id="c139628496864448">
              
                <ol start="502" class="pre-context" id="pre139628496864448">
                
                  <li onclick="toggle('pre139628496864448', 'post139628496864448')"><pre>                                  self.http_method_not_allowed)</pre></li>
                
                  <li onclick="toggle('pre139628496864448', 'post139628496864448')"><pre>            else:</pre></li>
                
                  <li onclick="toggle('pre139628496864448', 'post139628496864448')"><pre>                handler = self.http_method_not_allowed</pre></li>
                
                  <li onclick="toggle('pre139628496864448', 'post139628496864448')"><pre></pre></li>
                
                  <li onclick="toggle('pre139628496864448', 'post139628496864448')"><pre>            response = handler(request, *args, **kwargs)</pre></li>
                
                  <li onclick="toggle('pre139628496864448', 'post139628496864448')"><pre></pre></li>
                
                  <li onclick="toggle('pre139628496864448', 'post139628496864448')"><pre>        except Exception as exc:</pre></li>
                
                </ol>
              
              <ol start="509" class="context-line">
                <li onclick="toggle('pre139628496864448', 'post139628496864448')"><pre>            response = self.handle_exception(exc)</pre> <span>…</span></li>
              </ol>
              
                <ol start='510' class="post-context" id="post139628496864448">
                  
                  <li onclick="toggle('pre139628496864448', 'post139628496864448')"><pre></pre></li>
                  
                  <li onclick="toggle('pre139628496864448', 'post139628496864448')"><pre>        self.response = self.finalize_response(request, response, *args, **kwargs)</pre></li>
                  
                  <li onclick="toggle('pre139628496864448', 'post139628496864448')"><pre>        return self.response</pre></li>
                  
                  <li onclick="toggle('pre139628496864448', 'post139628496864448')"><pre></pre></li>
                  
                  <li onclick="toggle('pre139628496864448', 'post139628496864448')"><pre>    def options(self, request, *args, **kwargs):</pre></li>
                  
                  <li onclick="toggle('pre139628496864448', 'post139628496864448')"><pre>        &quot;&quot;&quot;</pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v139628496864448">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>args</td>
                    <td class="code"><pre>()</pre></td>
                  </tr>
                
                  <tr>
                    <td>handler</td>
                    <td class="code"><pre>&lt;bound method MessageViewSet.create of &lt;messages_api.views.MessageViewSet object at 0x7efdcb3ec6d0&gt;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>kwargs</td>
                    <td class="code"><pre>{}</pre></td>
                  </tr>
                
                  <tr>
                    <td>request</td>
                    <td class="code"><pre>&lt;rest_framework.request.Request: POST &#x27;/webhook/messages/create?phone=5588988562749&amp;period=05%2F23&#x27;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;messages_api.views.MessageViewSet object at 0x7efdcb3ec6d0&gt;</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
        <li class="frame user">
          
            <code class="fname">/home/jpfilho/.local/lib/python3.10/site-packages/rest_framework/views.py</code>, line 469, in handle_exception
          

          
            <div class="context" id="c139628497161472">
              
                <ol start="462" class="pre-context" id="pre139628497161472">
                
                  <li onclick="toggle('pre139628497161472', 'post139628497161472')"><pre></pre></li>
                
                  <li onclick="toggle('pre139628497161472', 'post139628497161472')"><pre>        exception_handler = self.get_exception_handler()</pre></li>
                
                  <li onclick="toggle('pre139628497161472', 'post139628497161472')"><pre></pre></li>
                
                  <li onclick="toggle('pre139628497161472', 'post139628497161472')"><pre>        context = self.get_exception_handler_context()</pre></li>
                
                  <li onclick="toggle('pre139628497161472', 'post139628497161472')"><pre>        response = exception_handler(exc, context)</pre></li>
                
                  <li onclick="toggle('pre139628497161472', 'post139628497161472')"><pre></pre></li>
                
                  <li onclick="toggle('pre139628497161472', 'post139628497161472')"><pre>        if response is None:</pre></li>
                
                </ol>
              
              <ol start="469" class="context-line">
                <li onclick="toggle('pre139628497161472', 'post139628497161472')"><pre>            self.raise_uncaught_exception(exc)</pre> <span>…</span></li>
              </ol>
              
                <ol start='470' class="post-context" id="post139628497161472">
                  
                  <li onclick="toggle('pre139628497161472', 'post139628497161472')"><pre></pre></li>
                  
                  <li onclick="toggle('pre139628497161472', 'post139628497161472')"><pre>        response.exception = True</pre></li>
                  
                  <li onclick="toggle('pre139628497161472', 'post139628497161472')"><pre>        return response</pre></li>
                  
                  <li onclick="toggle('pre139628497161472', 'post139628497161472')"><pre></pre></li>
                  
                  <li onclick="toggle('pre139628497161472', 'post139628497161472')"><pre>    def raise_uncaught_exception(self, exc):</pre></li>
                  
                  <li onclick="toggle('pre139628497161472', 'post139628497161472')"><pre>        if settings.DEBUG:</pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v139628497161472">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>context</td>
                    <td class="code"><pre>{&#x27;args&#x27;: (),
 &#x27;kwargs&#x27;: {},
 &#x27;request&#x27;: &lt;rest_framework.request.Request: POST &#x27;/webhook/messages/create?phone=5588988562749&amp;period=05%2F23&#x27;&gt;,
 &#x27;view&#x27;: &lt;messages_api.views.MessageViewSet object at 0x7efdcb3ec6d0&gt;}</pre></td>
                  </tr>
                
                  <tr>
                    <td>exc</td>
                    <td class="code"><pre>ValidationError([&#x27;o valor “[True]”  deve ser True ou False.&#x27;])</pre></td>
                  </tr>
                
                  <tr>
                    <td>exception_handler</td>
                    <td class="code"><pre>&lt;function exception_handler at 0x7efdcbb9c700&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>response</td>
                    <td class="code"><pre>None</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;messages_api.views.MessageViewSet object at 0x7efdcb3ec6d0&gt;</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
        <li class="frame user">
          
            <code class="fname">/home/jpfilho/.local/lib/python3.10/site-packages/rest_framework/views.py</code>, line 480, in raise_uncaught_exception
          

          
            <div class="context" id="c139628497402432">
              
                <ol start="473" class="pre-context" id="pre139628497402432">
                
                  <li onclick="toggle('pre139628497402432', 'post139628497402432')"><pre></pre></li>
                
                  <li onclick="toggle('pre139628497402432', 'post139628497402432')"><pre>    def raise_uncaught_exception(self, exc):</pre></li>
                
                  <li onclick="toggle('pre139628497402432', 'post139628497402432')"><pre>        if settings.DEBUG:</pre></li>
                
                  <li onclick="toggle('pre139628497402432', 'post139628497402432')"><pre>            request = self.request</pre></li>
                
                  <li onclick="toggle('pre139628497402432', 'post139628497402432')"><pre>            renderer_format = getattr(request.accepted_renderer, &#x27;format&#x27;)</pre></li>
                
                  <li onclick="toggle('pre139628497402432', 'post139628497402432')"><pre>            use_plaintext_traceback = renderer_format not in (&#x27;html&#x27;, &#x27;api&#x27;, &#x27;admin&#x27;)</pre></li>
                
                  <li onclick="toggle('pre139628497402432', 'post139628497402432')"><pre>            request.force_plaintext_errors(use_plaintext_traceback)</pre></li>
                
                </ol>
              
              <ol start="480" class="context-line">
                <li onclick="toggle('pre139628497402432', 'post139628497402432')"><pre>        raise exc</pre> <span>…</span></li>
              </ol>
              
                <ol start='481' class="post-context" id="post139628497402432">
                  
                  <li onclick="toggle('pre139628497402432', 'post139628497402432')"><pre></pre></li>
                  
                  <li onclick="toggle('pre139628497402432', 'post139628497402432')"><pre>    # Note: Views are made CSRF exempt from within `as_view` as to prevent</pre></li>
                  
                  <li onclick="toggle('pre139628497402432', 'post139628497402432')"><pre>    # accidental removal of this exemption in cases where `dispatch` needs to</pre></li>
                  
                  <li onclick="toggle('pre139628497402432', 'post139628497402432')"><pre>    # be overridden.</pre></li>
                  
                  <li onclick="toggle('pre139628497402432', 'post139628497402432')"><pre>    def dispatch(self, request, *args, **kwargs):</pre></li>
                  
                  <li onclick="toggle('pre139628497402432', 'post139628497402432')"><pre>        &quot;&quot;&quot;</pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v139628497402432">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>exc</td>
                    <td class="code"><pre>ValidationError([&#x27;o valor “[True]”  deve ser True ou False.&#x27;])</pre></td>
                  </tr>
                
                  <tr>
                    <td>renderer_format</td>
                    <td class="code"><pre>&#x27;json&#x27;</pre></td>
                  </tr>
                
                  <tr>
                    <td>request</td>
                    <td class="code"><pre>&lt;rest_framework.request.Request: POST &#x27;/webhook/messages/create?phone=5588988562749&amp;period=05%2F23&#x27;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;messages_api.views.MessageViewSet object at 0x7efdcb3ec6d0&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>use_plaintext_traceback</td>
                    <td class="code"><pre>True</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
        <li class="frame user">
          
            <code class="fname">/home/jpfilho/.local/lib/python3.10/site-packages/rest_framework/views.py</code>, line 506, in dispatch
          

          
            <div class="context" id="c139628497160896">
              
                <ol start="499" class="pre-context" id="pre139628497160896">
                
                  <li onclick="toggle('pre139628497160896', 'post139628497160896')"><pre>            # Get the appropriate handler method</pre></li>
                
                  <li onclick="toggle('pre139628497160896', 'post139628497160896')"><pre>            if request.method.lower() in self.http_method_names:</pre></li>
                
                  <li onclick="toggle('pre139628497160896', 'post139628497160896')"><pre>                handler = getattr(self, request.method.lower(),</pre></li>
                
                  <li onclick="toggle('pre139628497160896', 'post139628497160896')"><pre>                                  self.http_method_not_allowed)</pre></li>
                
                  <li onclick="toggle('pre139628497160896', 'post139628497160896')"><pre>            else:</pre></li>
                
                  <li onclick="toggle('pre139628497160896', 'post139628497160896')"><pre>                handler = self.http_method_not_allowed</pre></li>
                
                  <li onclick="toggle('pre139628497160896', 'post139628497160896')"><pre></pre></li>
                
                </ol>
              
              <ol start="506" class="context-line">
                <li onclick="toggle('pre139628497160896', 'post139628497160896')"><pre>            response = handler(request, *args, **kwargs)</pre> <span>…</span></li>
              </ol>
              
                <ol start='507' class="post-context" id="post139628497160896">
                  
                  <li onclick="toggle('pre139628497160896', 'post139628497160896')"><pre></pre></li>
                  
                  <li onclick="toggle('pre139628497160896', 'post139628497160896')"><pre>        except Exception as exc:</pre></li>
                  
                  <li onclick="toggle('pre139628497160896', 'post139628497160896')"><pre>            response = self.handle_exception(exc)</pre></li>
                  
                  <li onclick="toggle('pre139628497160896', 'post139628497160896')"><pre></pre></li>
                  
                  <li onclick="toggle('pre139628497160896', 'post139628497160896')"><pre>        self.response = self.finalize_response(request, response, *args, **kwargs)</pre></li>
                  
                  <li onclick="toggle('pre139628497160896', 'post139628497160896')"><pre>        return self.response</pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v139628497160896">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>args</td>
                    <td class="code"><pre>()</pre></td>
                  </tr>
                
                  <tr>
                    <td>handler</td>
                    <td class="code"><pre>&lt;bound method MessageViewSet.create of &lt;messages_api.views.MessageViewSet object at 0x7efdcb3ec6d0&gt;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>kwargs</td>
                    <td class="code"><pre>{}</pre></td>
                  </tr>
                
                  <tr>
                    <td>request</td>
                    <td class="code"><pre>&lt;rest_framework.request.Request: POST &#x27;/webhook/messages/create?phone=5588988562749&amp;period=05%2F23&#x27;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;messages_api.views.MessageViewSet object at 0x7efdcb3ec6d0&gt;</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
        <li class="frame user">
          
            <code class="fname">/home/jpfilho/Documents/code-ws/python/webhook/messages_api/views.py</code>, line 153, in create
          

          
            <div class="context" id="c139628500926144">
              
                <ol start="146" class="pre-context" id="pre139628500926144">
                
                  <li onclick="toggle('pre139628500926144', 'post139628500926144')"><pre>        except ValueError:</pre></li>
                
                  <li onclick="toggle('pre139628500926144', 'post139628500926144')"><pre>            return Response({&#x27;error&#x27;: &#x27;Invalid period format, should be YYYY-MM-DD or MM-YY.&#x27;}, status=400)</pre></li>
                
                  <li onclick="toggle('pre139628500926144', 'post139628500926144')"><pre></pre></li>
                
                  <li onclick="toggle('pre139628500926144', 'post139628500926144')"><pre>        if len(period) == 5:</pre></li>
                
                  <li onclick="toggle('pre139628500926144', 'post139628500926144')"><pre>            period = dt.now().strftime(</pre></li>
                
                  <li onclick="toggle('pre139628500926144', 'post139628500926144')"><pre>                &#x27;%Y-&#x27;) + period[-2:] + &#x27;-&#x27; + period[:2] + &#x27; 00:00:00&#x27;</pre></li>
                
                  <li onclick="toggle('pre139628500926144', 'post139628500926144')"><pre>        try:</pre></li>
                
                </ol>
              
              <ol start="153" class="context-line">
                <li onclick="toggle('pre139628500926144', 'post139628500926144')"><pre>            message = Message.objects.create(</pre> <span>…</span></li>
              </ol>
              
                <ol start='154' class="post-context" id="post139628500926144">
                  
                  <li onclick="toggle('pre139628500926144', 'post139628500926144')"><pre>                contact_id=contact_id,</pre></li>
                  
                  <li onclick="toggle('pre139628500926144', 'post139628500926144')"><pre>                contact_number=contact_number,</pre></li>
                  
                  <li onclick="toggle('pre139628500926144', 'post139628500926144')"><pre>                period=period,</pre></li>
                  
                  <li onclick="toggle('pre139628500926144', 'post139628500926144')"><pre>                timestamp=timestamp,</pre></li>
                  
                  <li onclick="toggle('pre139628500926144', 'post139628500926144')"><pre>                status=status,</pre></li>
                  
                  <li onclick="toggle('pre139628500926144', 'post139628500926144')"><pre>                message_id=message_id,</pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v139628500926144">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>args</td>
                    <td class="code"><pre>()</pre></td>
                  </tr>
                
                  <tr>
                    <td>contact_id</td>
                    <td class="code"><pre>&#x27;79db7607-6088-44c1-a010-ed4ef39d4f37&#x27;</pre></td>
                  </tr>
                
                  <tr>
                    <td>contact_number</td>
                    <td class="code"><pre>&#x27;5588988562749&#x27;</pre></td>
                  </tr>
                
                  <tr>
                    <td>isFromMe</td>
                    <td class="code"><pre>[True]</pre></td>
                  </tr>
                
                  <tr>
                    <td>kwargs</td>
                    <td class="code"><pre>{}</pre></td>
                  </tr>
                
                  <tr>
                    <td>message_id</td>
                    <td class="code"><pre>&#x27;24ff7095-cca9-46f7-9b17-fd61b3f9c633&#x27;</pre></td>
                  </tr>
                
                  <tr>
                    <td>message_type</td>
                    <td class="code"><pre>&#x27;chat&#x27;</pre></td>
                  </tr>
                
                  <tr>
                    <td>period</td>
                    <td class="code"><pre>&#x27;2023-05-01&#x27;</pre></td>
                  </tr>
                
                  <tr>
                    <td>request</td>
                    <td class="code"><pre>&lt;rest_framework.request.Request: POST &#x27;/webhook/messages/create?phone=5588988562749&amp;period=05%2F23&#x27;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;messages_api.views.MessageViewSet object at 0x7efdcb3ec6d0&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>status</td>
                    <td class="code"><pre>0</pre></td>
                  </tr>
                
                  <tr>
                    <td>ticket_id</td>
                    <td class="code"><pre>&#x27;3e14aea2-bc69-4e56-b20b-1b6d63ade6d5&#x27;</pre></td>
                  </tr>
                
                  <tr>
                    <td>timestamp</td>
                    <td class="code"><pre>&#x27;2023-05-21T23:34:08.156Z&#x27;</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
        <li class="frame django">
          
            <code class="fname">/home/jpfilho/.local/lib/python3.10/site-packages/django/db/models/manager.py</code>, line 87, in manager_method
          

          
            <div class="context" id="c139628497162176">
              
                <ol start="80" class="pre-context" id="pre139628497162176">
                
                  <li onclick="toggle('pre139628497162176', 'post139628497162176')"><pre>        return []</pre></li>
                
                  <li onclick="toggle('pre139628497162176', 'post139628497162176')"><pre></pre></li>
                
                  <li onclick="toggle('pre139628497162176', 'post139628497162176')"><pre>    @classmethod</pre></li>
                
                  <li onclick="toggle('pre139628497162176', 'post139628497162176')"><pre>    def _get_queryset_methods(cls, queryset_class):</pre></li>
                
                  <li onclick="toggle('pre139628497162176', 'post139628497162176')"><pre>        def create_method(name, method):</pre></li>
                
                  <li onclick="toggle('pre139628497162176', 'post139628497162176')"><pre>            @wraps(method)</pre></li>
                
                  <li onclick="toggle('pre139628497162176', 'post139628497162176')"><pre>            def manager_method(self, *args, **kwargs):</pre></li>
                
                </ol>
              
              <ol start="87" class="context-line">
                <li onclick="toggle('pre139628497162176', 'post139628497162176')"><pre>                return getattr(self.get_queryset(), name)(*args, **kwargs)</pre> <span>…</span></li>
              </ol>
              
                <ol start='88' class="post-context" id="post139628497162176">
                  
                  <li onclick="toggle('pre139628497162176', 'post139628497162176')"><pre></pre></li>
                  
                  <li onclick="toggle('pre139628497162176', 'post139628497162176')"><pre>            return manager_method</pre></li>
                  
                  <li onclick="toggle('pre139628497162176', 'post139628497162176')"><pre></pre></li>
                  
                  <li onclick="toggle('pre139628497162176', 'post139628497162176')"><pre>        new_methods = {}</pre></li>
                  
                  <li onclick="toggle('pre139628497162176', 'post139628497162176')"><pre>        for name, method in inspect.getmembers(</pre></li>
                  
                  <li onclick="toggle('pre139628497162176', 'post139628497162176')"><pre>            queryset_class, predicate=inspect.isfunction</pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v139628497162176">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>args</td>
                    <td class="code"><pre>()</pre></td>
                  </tr>
                
                  <tr>
                    <td>kwargs</td>
                    <td class="code"><pre>{&#x27;contact_id&#x27;: &#x27;79db7607-6088-44c1-a010-ed4ef39d4f37&#x27;,
 &#x27;contact_number&#x27;: &#x27;5588988562749&#x27;,
 &#x27;is_from_me&#x27;: [True],
 &#x27;message_id&#x27;: &#x27;24ff7095-cca9-46f7-9b17-fd61b3f9c633&#x27;,
 &#x27;message_type&#x27;: &#x27;chat&#x27;,
 &#x27;period&#x27;: &#x27;2023-05-01&#x27;,
 &#x27;retries&#x27;: 0,
 &#x27;status&#x27;: 0,
 &#x27;ticket_service_id&#x27;: &#x27;3e14aea2-bc69-4e56-b20b-1b6d63ade6d5&#x27;,
 &#x27;timestamp&#x27;: &#x27;2023-05-21T23:34:08.156Z&#x27;}</pre></td>
                  </tr>
                
                  <tr>
                    <td>name</td>
                    <td class="code"><pre>&#x27;create&#x27;</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;django.db.models.manager.Manager object at 0x7efdcc7520b0&gt;</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
        <li class="frame django">
          
            <code class="fname">/home/jpfilho/.local/lib/python3.10/site-packages/django/db/models/query.py</code>, line 658, in create
          

          
            <div class="context" id="c139628496871744">
              
                <ol start="651" class="pre-context" id="pre139628496871744">
                
                  <li onclick="toggle('pre139628496871744', 'post139628496871744')"><pre>    def create(self, **kwargs):</pre></li>
                
                  <li onclick="toggle('pre139628496871744', 'post139628496871744')"><pre>        &quot;&quot;&quot;</pre></li>
                
                  <li onclick="toggle('pre139628496871744', 'post139628496871744')"><pre>        Create a new object with the given kwargs, saving it to the database</pre></li>
                
                  <li onclick="toggle('pre139628496871744', 'post139628496871744')"><pre>        and returning the created object.</pre></li>
                
                  <li onclick="toggle('pre139628496871744', 'post139628496871744')"><pre>        &quot;&quot;&quot;</pre></li>
                
                  <li onclick="toggle('pre139628496871744', 'post139628496871744')"><pre>        obj = self.model(**kwargs)</pre></li>
                
                  <li onclick="toggle('pre139628496871744', 'post139628496871744')"><pre>        self._for_write = True</pre></li>
                
                </ol>
              
              <ol start="658" class="context-line">
                <li onclick="toggle('pre139628496871744', 'post139628496871744')"><pre>        obj.save(force_insert=True, using=self.db)</pre> <span>…</span></li>
              </ol>
              
                <ol start='659' class="post-context" id="post139628496871744">
                  
                  <li onclick="toggle('pre139628496871744', 'post139628496871744')"><pre>        return obj</pre></li>
                  
                  <li onclick="toggle('pre139628496871744', 'post139628496871744')"><pre></pre></li>
                  
                  <li onclick="toggle('pre139628496871744', 'post139628496871744')"><pre>    async def acreate(self, **kwargs):</pre></li>
                  
                  <li onclick="toggle('pre139628496871744', 'post139628496871744')"><pre>        return await sync_to_async(self.create)(**kwargs)</pre></li>
                  
                  <li onclick="toggle('pre139628496871744', 'post139628496871744')"><pre></pre></li>
                  
                  <li onclick="toggle('pre139628496871744', 'post139628496871744')"><pre>    def _prepare_for_bulk_create(self, objs):</pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v139628496871744">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>kwargs</td>
                    <td class="code"><pre>{&#x27;contact_id&#x27;: &#x27;79db7607-6088-44c1-a010-ed4ef39d4f37&#x27;,
 &#x27;contact_number&#x27;: &#x27;5588988562749&#x27;,
 &#x27;is_from_me&#x27;: [True],
 &#x27;message_id&#x27;: &#x27;24ff7095-cca9-46f7-9b17-fd61b3f9c633&#x27;,
 &#x27;message_type&#x27;: &#x27;chat&#x27;,
 &#x27;period&#x27;: &#x27;2023-05-01&#x27;,
 &#x27;retries&#x27;: 0,
 &#x27;status&#x27;: 0,
 &#x27;ticket_service_id&#x27;: &#x27;3e14aea2-bc69-4e56-b20b-1b6d63ade6d5&#x27;,
 &#x27;timestamp&#x27;: &#x27;2023-05-21T23:34:08.156Z&#x27;}</pre></td>
                  </tr>
                
                  <tr>
                    <td>obj</td>
                    <td class="code"><pre>&lt;Message: 5588988562749 - 2023-05-01 - 0&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;QuerySet [&lt;Message: 5588988562749 - 2023-05-01 - 0&gt;, &lt;Message: 5588988562749 - 2023-05-01 - 0&gt;, &lt;Message: 5588988562749 - 2023-05-01 - 0&gt;, &lt;Message: 5588988562749 - 2023-05-01 - 0&gt;, &lt;Message: 5588988562749 - 2023-05-01 - 0&gt;, &lt;Message: 5588988562749 - 2023-05-01 - 0&gt;, &lt;Message: 5588988562749 - 2023-05-01 - 0&gt;, &lt;Message: 5588988562749 - 2023-05-01 - 0&gt;]&gt;</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
        <li class="frame django">
          
            <code class="fname">/home/jpfilho/.local/lib/python3.10/site-packages/django/db/models/base.py</code>, line 814, in save
          

          
            <div class="context" id="c139628497160832">
              
                <ol start="807" class="pre-context" id="pre139628497160832">
                
                  <li onclick="toggle('pre139628497160832', 'post139628497160832')"><pre>            for field in self._meta.concrete_fields:</pre></li>
                
                  <li onclick="toggle('pre139628497160832', 'post139628497160832')"><pre>                if not field.primary_key and not hasattr(field, &quot;through&quot;):</pre></li>
                
                  <li onclick="toggle('pre139628497160832', 'post139628497160832')"><pre>                    field_names.add(field.attname)</pre></li>
                
                  <li onclick="toggle('pre139628497160832', 'post139628497160832')"><pre>            loaded_fields = field_names.difference(deferred_fields)</pre></li>
                
                  <li onclick="toggle('pre139628497160832', 'post139628497160832')"><pre>            if loaded_fields:</pre></li>
                
                  <li onclick="toggle('pre139628497160832', 'post139628497160832')"><pre>                update_fields = frozenset(loaded_fields)</pre></li>
                
                  <li onclick="toggle('pre139628497160832', 'post139628497160832')"><pre></pre></li>
                
                </ol>
              
              <ol start="814" class="context-line">
                <li onclick="toggle('pre139628497160832', 'post139628497160832')"><pre>        self.save_base(</pre> <span>…</span></li>
              </ol>
              
                <ol start='815' class="post-context" id="post139628497160832">
                  
                  <li onclick="toggle('pre139628497160832', 'post139628497160832')"><pre>            using=using,</pre></li>
                  
                  <li onclick="toggle('pre139628497160832', 'post139628497160832')"><pre>            force_insert=force_insert,</pre></li>
                  
                  <li onclick="toggle('pre139628497160832', 'post139628497160832')"><pre>            force_update=force_update,</pre></li>
                  
                  <li onclick="toggle('pre139628497160832', 'post139628497160832')"><pre>            update_fields=update_fields,</pre></li>
                  
                  <li onclick="toggle('pre139628497160832', 'post139628497160832')"><pre>        )</pre></li>
                  
                  <li onclick="toggle('pre139628497160832', 'post139628497160832')"><pre></pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v139628497160832">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>deferred_fields</td>
                    <td class="code"><pre>set()</pre></td>
                  </tr>
                
                  <tr>
                    <td>force_insert</td>
                    <td class="code"><pre>True</pre></td>
                  </tr>
                
                  <tr>
                    <td>force_update</td>
                    <td class="code"><pre>False</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;Message: 5588988562749 - 2023-05-01 - 0&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>update_fields</td>
                    <td class="code"><pre>None</pre></td>
                  </tr>
                
                  <tr>
                    <td>using</td>
                    <td class="code"><pre>&#x27;default&#x27;</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
        <li class="frame django">
          
            <code class="fname">/home/jpfilho/.local/lib/python3.10/site-packages/django/db/models/base.py</code>, line 877, in save_base
          

          
            <div class="context" id="c139628497162240">
              
                <ol start="870" class="pre-context" id="pre139628497162240">
                
                  <li onclick="toggle('pre139628497162240', 'post139628497162240')"><pre>            context_manager = transaction.atomic(using=using, savepoint=False)</pre></li>
                
                  <li onclick="toggle('pre139628497162240', 'post139628497162240')"><pre>        else:</pre></li>
                
                  <li onclick="toggle('pre139628497162240', 'post139628497162240')"><pre>            context_manager = transaction.mark_for_rollback_on_error(using=using)</pre></li>
                
                  <li onclick="toggle('pre139628497162240', 'post139628497162240')"><pre>        with context_manager:</pre></li>
                
                  <li onclick="toggle('pre139628497162240', 'post139628497162240')"><pre>            parent_inserted = False</pre></li>
                
                  <li onclick="toggle('pre139628497162240', 'post139628497162240')"><pre>            if not raw:</pre></li>
                
                  <li onclick="toggle('pre139628497162240', 'post139628497162240')"><pre>                parent_inserted = self._save_parents(cls, using, update_fields)</pre></li>
                
                </ol>
              
              <ol start="877" class="context-line">
                <li onclick="toggle('pre139628497162240', 'post139628497162240')"><pre>            updated = self._save_table(</pre> <span>…</span></li>
              </ol>
              
                <ol start='878' class="post-context" id="post139628497162240">
                  
                  <li onclick="toggle('pre139628497162240', 'post139628497162240')"><pre>                raw,</pre></li>
                  
                  <li onclick="toggle('pre139628497162240', 'post139628497162240')"><pre>                cls,</pre></li>
                  
                  <li onclick="toggle('pre139628497162240', 'post139628497162240')"><pre>                force_insert or parent_inserted,</pre></li>
                  
                  <li onclick="toggle('pre139628497162240', 'post139628497162240')"><pre>                force_update,</pre></li>
                  
                  <li onclick="toggle('pre139628497162240', 'post139628497162240')"><pre>                using,</pre></li>
                  
                  <li onclick="toggle('pre139628497162240', 'post139628497162240')"><pre>                update_fields,</pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v139628497162240">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>cls</td>
                    <td class="code"><pre>&lt;class &#x27;messages_api.models.Message&#x27;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>context_manager</td>
                    <td class="code"><pre>&lt;contextlib._GeneratorContextManager object at 0x7efdcb36ac20&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>force_insert</td>
                    <td class="code"><pre>True</pre></td>
                  </tr>
                
                  <tr>
                    <td>force_update</td>
                    <td class="code"><pre>False</pre></td>
                  </tr>
                
                  <tr>
                    <td>meta</td>
                    <td class="code"><pre>&lt;Options for Message&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>origin</td>
                    <td class="code"><pre>&lt;class &#x27;messages_api.models.Message&#x27;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>parent_inserted</td>
                    <td class="code"><pre>False</pre></td>
                  </tr>
                
                  <tr>
                    <td>raw</td>
                    <td class="code"><pre>False</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;Message: 5588988562749 - 2023-05-01 - 0&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>update_fields</td>
                    <td class="code"><pre>None</pre></td>
                  </tr>
                
                  <tr>
                    <td>using</td>
                    <td class="code"><pre>&#x27;default&#x27;</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
        <li class="frame django">
          
            <code class="fname">/home/jpfilho/.local/lib/python3.10/site-packages/django/db/models/base.py</code>, line 1020, in _save_table
          

          
            <div class="context" id="c139628497162496">
              
                <ol start="1013" class="pre-context" id="pre139628497162496">
                
                  <li onclick="toggle('pre139628497162496', 'post139628497162496')"><pre>                    )[&quot;_order__max&quot;]</pre></li>
                
                  <li onclick="toggle('pre139628497162496', 'post139628497162496')"><pre>                )</pre></li>
                
                  <li onclick="toggle('pre139628497162496', 'post139628497162496')"><pre>            fields = meta.local_concrete_fields</pre></li>
                
                  <li onclick="toggle('pre139628497162496', 'post139628497162496')"><pre>            if not pk_set:</pre></li>
                
                  <li onclick="toggle('pre139628497162496', 'post139628497162496')"><pre>                fields = [f for f in fields if f is not meta.auto_field]</pre></li>
                
                  <li onclick="toggle('pre139628497162496', 'post139628497162496')"><pre></pre></li>
                
                  <li onclick="toggle('pre139628497162496', 'post139628497162496')"><pre>            returning_fields = meta.db_returning_fields</pre></li>
                
                </ol>
              
              <ol start="1020" class="context-line">
                <li onclick="toggle('pre139628497162496', 'post139628497162496')"><pre>            results = self._do_insert(</pre> <span>…</span></li>
              </ol>
              
                <ol start='1021' class="post-context" id="post139628497162496">
                  
                  <li onclick="toggle('pre139628497162496', 'post139628497162496')"><pre>                cls._base_manager, using, fields, returning_fields, raw</pre></li>
                  
                  <li onclick="toggle('pre139628497162496', 'post139628497162496')"><pre>            )</pre></li>
                  
                  <li onclick="toggle('pre139628497162496', 'post139628497162496')"><pre>            if results:</pre></li>
                  
                  <li onclick="toggle('pre139628497162496', 'post139628497162496')"><pre>                for value, field in zip(results[0], returning_fields):</pre></li>
                  
                  <li onclick="toggle('pre139628497162496', 'post139628497162496')"><pre>                    setattr(self, field.attname, value)</pre></li>
                  
                  <li onclick="toggle('pre139628497162496', 'post139628497162496')"><pre>        return updated</pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v139628497162496">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>cls</td>
                    <td class="code"><pre>&lt;class &#x27;messages_api.models.Message&#x27;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>fields</td>
                    <td class="code"><pre>(&lt;django.db.models.fields.CharField: message_id&gt;,
 &lt;django.db.models.fields.CharField: contact_id&gt;,
 &lt;django.db.models.fields.CharField: contact_number&gt;,
 &lt;django.db.models.fields.DateField: period&gt;,
 &lt;django.db.models.fields.DateTimeField: timestamp&gt;,
 &lt;django.db.models.fields.IntegerField: status&gt;,
 &lt;django.db.models.fields.CharField: ticket_service_id&gt;,
 &lt;django.db.models.fields.CharField: message_type&gt;,
 &lt;django.db.models.fields.BooleanField: is_from_me&gt;,
 &lt;django.db.models.fields.IntegerField: retries&gt;)</pre></td>
                  </tr>
                
                  <tr>
                    <td>force_insert</td>
                    <td class="code"><pre>True</pre></td>
                  </tr>
                
                  <tr>
                    <td>force_update</td>
                    <td class="code"><pre>False</pre></td>
                  </tr>
                
                  <tr>
                    <td>meta</td>
                    <td class="code"><pre>&lt;Options for Message&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>non_pks</td>
                    <td class="code"><pre>[&lt;django.db.models.fields.CharField: contact_id&gt;,
 &lt;django.db.models.fields.CharField: contact_number&gt;,
 &lt;django.db.models.fields.DateField: period&gt;,
 &lt;django.db.models.fields.DateTimeField: timestamp&gt;,
 &lt;django.db.models.fields.IntegerField: status&gt;,
 &lt;django.db.models.fields.CharField: ticket_service_id&gt;,
 &lt;django.db.models.fields.CharField: message_type&gt;,
 &lt;django.db.models.fields.BooleanField: is_from_me&gt;,
 &lt;django.db.models.fields.IntegerField: retries&gt;]</pre></td>
                  </tr>
                
                  <tr>
                    <td>pk_set</td>
                    <td class="code"><pre>True</pre></td>
                  </tr>
                
                  <tr>
                    <td>pk_val</td>
                    <td class="code"><pre>&#x27;24ff7095-cca9-46f7-9b17-fd61b3f9c633&#x27;</pre></td>
                  </tr>
                
                  <tr>
                    <td>raw</td>
                    <td class="code"><pre>False</pre></td>
                  </tr>
                
                  <tr>
                    <td>returning_fields</td>
                    <td class="code"><pre>[]</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;Message: 5588988562749 - 2023-05-01 - 0&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>update_fields</td>
                    <td class="code"><pre>None</pre></td>
                  </tr>
                
                  <tr>
                    <td>updated</td>
                    <td class="code"><pre>False</pre></td>
                  </tr>
                
                  <tr>
                    <td>using</td>
                    <td class="code"><pre>&#x27;default&#x27;</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
        <li class="frame django">
          
            <code class="fname">/home/jpfilho/.local/lib/python3.10/site-packages/django/db/models/base.py</code>, line 1061, in _do_insert
          

          
            <div class="context" id="c139628497163264">
              
                <ol start="1054" class="pre-context" id="pre139628497163264">
                
                  <li onclick="toggle('pre139628497163264', 'post139628497163264')"><pre>        return filtered._update(values) &gt; 0</pre></li>
                
                  <li onclick="toggle('pre139628497163264', 'post139628497163264')"><pre></pre></li>
                
                  <li onclick="toggle('pre139628497163264', 'post139628497163264')"><pre>    def _do_insert(self, manager, using, fields, returning_fields, raw):</pre></li>
                
                  <li onclick="toggle('pre139628497163264', 'post139628497163264')"><pre>        &quot;&quot;&quot;</pre></li>
                
                  <li onclick="toggle('pre139628497163264', 'post139628497163264')"><pre>        Do an INSERT. If returning_fields is defined then this method should</pre></li>
                
                  <li onclick="toggle('pre139628497163264', 'post139628497163264')"><pre>        return the newly created data for the model.</pre></li>
                
                  <li onclick="toggle('pre139628497163264', 'post139628497163264')"><pre>        &quot;&quot;&quot;</pre></li>
                
                </ol>
              
              <ol start="1061" class="context-line">
                <li onclick="toggle('pre139628497163264', 'post139628497163264')"><pre>        return manager._insert(</pre> <span>…</span></li>
              </ol>
              
                <ol start='1062' class="post-context" id="post139628497163264">
                  
                  <li onclick="toggle('pre139628497163264', 'post139628497163264')"><pre>            [self],</pre></li>
                  
                  <li onclick="toggle('pre139628497163264', 'post139628497163264')"><pre>            fields=fields,</pre></li>
                  
                  <li onclick="toggle('pre139628497163264', 'post139628497163264')"><pre>            returning_fields=returning_fields,</pre></li>
                  
                  <li onclick="toggle('pre139628497163264', 'post139628497163264')"><pre>            using=using,</pre></li>
                  
                  <li onclick="toggle('pre139628497163264', 'post139628497163264')"><pre>            raw=raw,</pre></li>
                  
                  <li onclick="toggle('pre139628497163264', 'post139628497163264')"><pre>        )</pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v139628497163264">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>fields</td>
                    <td class="code"><pre>(&lt;django.db.models.fields.CharField: message_id&gt;,
 &lt;django.db.models.fields.CharField: contact_id&gt;,
 &lt;django.db.models.fields.CharField: contact_number&gt;,
 &lt;django.db.models.fields.DateField: period&gt;,
 &lt;django.db.models.fields.DateTimeField: timestamp&gt;,
 &lt;django.db.models.fields.IntegerField: status&gt;,
 &lt;django.db.models.fields.CharField: ticket_service_id&gt;,
 &lt;django.db.models.fields.CharField: message_type&gt;,
 &lt;django.db.models.fields.BooleanField: is_from_me&gt;,
 &lt;django.db.models.fields.IntegerField: retries&gt;)</pre></td>
                  </tr>
                
                  <tr>
                    <td>manager</td>
                    <td class="code"><pre>&lt;django.db.models.manager.Manager object at 0x7efdcb369330&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>raw</td>
                    <td class="code"><pre>False</pre></td>
                  </tr>
                
                  <tr>
                    <td>returning_fields</td>
                    <td class="code"><pre>[]</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;Message: 5588988562749 - 2023-05-01 - 0&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>using</td>
                    <td class="code"><pre>&#x27;default&#x27;</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
        <li class="frame django">
          
            <code class="fname">/home/jpfilho/.local/lib/python3.10/site-packages/django/db/models/manager.py</code>, line 87, in manager_method
          

          
            <div class="context" id="c139628497486272">
              
                <ol start="80" class="pre-context" id="pre139628497486272">
                
                  <li onclick="toggle('pre139628497486272', 'post139628497486272')"><pre>        return []</pre></li>
                
                  <li onclick="toggle('pre139628497486272', 'post139628497486272')"><pre></pre></li>
                
                  <li onclick="toggle('pre139628497486272', 'post139628497486272')"><pre>    @classmethod</pre></li>
                
                  <li onclick="toggle('pre139628497486272', 'post139628497486272')"><pre>    def _get_queryset_methods(cls, queryset_class):</pre></li>
                
                  <li onclick="toggle('pre139628497486272', 'post139628497486272')"><pre>        def create_method(name, method):</pre></li>
                
                  <li onclick="toggle('pre139628497486272', 'post139628497486272')"><pre>            @wraps(method)</pre></li>
                
                  <li onclick="toggle('pre139628497486272', 'post139628497486272')"><pre>            def manager_method(self, *args, **kwargs):</pre></li>
                
                </ol>
              
              <ol start="87" class="context-line">
                <li onclick="toggle('pre139628497486272', 'post139628497486272')"><pre>                return getattr(self.get_queryset(), name)(*args, **kwargs)</pre> <span>…</span></li>
              </ol>
              
                <ol start='88' class="post-context" id="post139628497486272">
                  
                  <li onclick="toggle('pre139628497486272', 'post139628497486272')"><pre></pre></li>
                  
                  <li onclick="toggle('pre139628497486272', 'post139628497486272')"><pre>            return manager_method</pre></li>
                  
                  <li onclick="toggle('pre139628497486272', 'post139628497486272')"><pre></pre></li>
                  
                  <li onclick="toggle('pre139628497486272', 'post139628497486272')"><pre>        new_methods = {}</pre></li>
                  
                  <li onclick="toggle('pre139628497486272', 'post139628497486272')"><pre>        for name, method in inspect.getmembers(</pre></li>
                  
                  <li onclick="toggle('pre139628497486272', 'post139628497486272')"><pre>            queryset_class, predicate=inspect.isfunction</pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v139628497486272">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>args</td>
                    <td class="code"><pre>([&lt;Message: 5588988562749 - 2023-05-01 - 0&gt;],)</pre></td>
                  </tr>
                
                  <tr>
                    <td>kwargs</td>
                    <td class="code"><pre>{&#x27;fields&#x27;: (&lt;django.db.models.fields.CharField: message_id&gt;,
            &lt;django.db.models.fields.CharField: contact_id&gt;,
            &lt;django.db.models.fields.CharField: contact_number&gt;,
            &lt;django.db.models.fields.DateField: period&gt;,
            &lt;django.db.models.fields.DateTimeField: timestamp&gt;,
            &lt;django.db.models.fields.IntegerField: status&gt;,
            &lt;django.db.models.fields.CharField: ticket_service_id&gt;,
            &lt;django.db.models.fields.CharField: message_type&gt;,
            &lt;django.db.models.fields.BooleanField: is_from_me&gt;,
            &lt;django.db.models.fields.IntegerField: retries&gt;),
 &#x27;raw&#x27;: False,
 &#x27;returning_fields&#x27;: [],
 &#x27;using&#x27;: &#x27;default&#x27;}</pre></td>
                  </tr>
                
                  <tr>
                    <td>name</td>
                    <td class="code"><pre>&#x27;_insert&#x27;</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;django.db.models.manager.Manager object at 0x7efdcb369330&gt;</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
        <li class="frame django">
          
            <code class="fname">/home/jpfilho/.local/lib/python3.10/site-packages/django/db/models/query.py</code>, line 1805, in _insert
          

          
            <div class="context" id="c139628522035712">
              
                <ol start="1798" class="pre-context" id="pre139628522035712">
                
                  <li onclick="toggle('pre139628522035712', 'post139628522035712')"><pre>        query = sql.InsertQuery(</pre></li>
                
                  <li onclick="toggle('pre139628522035712', 'post139628522035712')"><pre>            self.model,</pre></li>
                
                  <li onclick="toggle('pre139628522035712', 'post139628522035712')"><pre>            on_conflict=on_conflict,</pre></li>
                
                  <li onclick="toggle('pre139628522035712', 'post139628522035712')"><pre>            update_fields=update_fields,</pre></li>
                
                  <li onclick="toggle('pre139628522035712', 'post139628522035712')"><pre>            unique_fields=unique_fields,</pre></li>
                
                  <li onclick="toggle('pre139628522035712', 'post139628522035712')"><pre>        )</pre></li>
                
                  <li onclick="toggle('pre139628522035712', 'post139628522035712')"><pre>        query.insert_values(fields, objs, raw=raw)</pre></li>
                
                </ol>
              
              <ol start="1805" class="context-line">
                <li onclick="toggle('pre139628522035712', 'post139628522035712')"><pre>        return query.get_compiler(using=using).execute_sql(returning_fields)</pre> <span>…</span></li>
              </ol>
              
                <ol start='1806' class="post-context" id="post139628522035712">
                  
                  <li onclick="toggle('pre139628522035712', 'post139628522035712')"><pre></pre></li>
                  
                  <li onclick="toggle('pre139628522035712', 'post139628522035712')"><pre>    _insert.alters_data = True</pre></li>
                  
                  <li onclick="toggle('pre139628522035712', 'post139628522035712')"><pre>    _insert.queryset_only = False</pre></li>
                  
                  <li onclick="toggle('pre139628522035712', 'post139628522035712')"><pre></pre></li>
                  
                  <li onclick="toggle('pre139628522035712', 'post139628522035712')"><pre>    def _batched_insert(</pre></li>
                  
                  <li onclick="toggle('pre139628522035712', 'post139628522035712')"><pre>        self,</pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v139628522035712">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>fields</td>
                    <td class="code"><pre>(&lt;django.db.models.fields.CharField: message_id&gt;,
 &lt;django.db.models.fields.CharField: contact_id&gt;,
 &lt;django.db.models.fields.CharField: contact_number&gt;,
 &lt;django.db.models.fields.DateField: period&gt;,
 &lt;django.db.models.fields.DateTimeField: timestamp&gt;,
 &lt;django.db.models.fields.IntegerField: status&gt;,
 &lt;django.db.models.fields.CharField: ticket_service_id&gt;,
 &lt;django.db.models.fields.CharField: message_type&gt;,
 &lt;django.db.models.fields.BooleanField: is_from_me&gt;,
 &lt;django.db.models.fields.IntegerField: retries&gt;)</pre></td>
                  </tr>
                
                  <tr>
                    <td>objs</td>
                    <td class="code"><pre>[&lt;Message: 5588988562749 - 2023-05-01 - 0&gt;]</pre></td>
                  </tr>
                
                  <tr>
                    <td>on_conflict</td>
                    <td class="code"><pre>None</pre></td>
                  </tr>
                
                  <tr>
                    <td>query</td>
                    <td class="code"><pre>&lt;django.db.models.sql.subqueries.InsertQuery object at 0x7efdcb368d00&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>raw</td>
                    <td class="code"><pre>False</pre></td>
                  </tr>
                
                  <tr>
                    <td>returning_fields</td>
                    <td class="code"><pre>[]</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;QuerySet [&lt;Message: 5588988562749 - 2023-05-01 - 0&gt;, &lt;Message: 5588988562749 - 2023-05-01 - 0&gt;, &lt;Message: 5588988562749 - 2023-05-01 - 0&gt;, &lt;Message: 5588988562749 - 2023-05-01 - 0&gt;, &lt;Message: 5588988562749 - 2023-05-01 - 0&gt;, &lt;Message: 5588988562749 - 2023-05-01 - 0&gt;, &lt;Message: 5588988562749 - 2023-05-01 - 0&gt;, &lt;Message: 5588988562749 - 2023-05-01 - 0&gt;]&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>unique_fields</td>
                    <td class="code"><pre>None</pre></td>
                  </tr>
                
                  <tr>
                    <td>update_fields</td>
                    <td class="code"><pre>None</pre></td>
                  </tr>
                
                  <tr>
                    <td>using</td>
                    <td class="code"><pre>&#x27;default&#x27;</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
        <li class="frame django">
          
            <code class="fname">/home/jpfilho/.local/lib/python3.10/site-packages/django/db/models/sql/compiler.py</code>, line 1819, in execute_sql
          

          
            <div class="context" id="c139628497487104">
              
                <ol start="1812" class="pre-context" id="pre139628497487104">
                
                  <li onclick="toggle('pre139628497487104', 'post139628497487104')"><pre>            returning_fields</pre></li>
                
                  <li onclick="toggle('pre139628497487104', 'post139628497487104')"><pre>            and len(self.query.objs) != 1</pre></li>
                
                  <li onclick="toggle('pre139628497487104', 'post139628497487104')"><pre>            and not self.connection.features.can_return_rows_from_bulk_insert</pre></li>
                
                  <li onclick="toggle('pre139628497487104', 'post139628497487104')"><pre>        )</pre></li>
                
                  <li onclick="toggle('pre139628497487104', 'post139628497487104')"><pre>        opts = self.query.get_meta()</pre></li>
                
                  <li onclick="toggle('pre139628497487104', 'post139628497487104')"><pre>        self.returning_fields = returning_fields</pre></li>
                
                  <li onclick="toggle('pre139628497487104', 'post139628497487104')"><pre>        with self.connection.cursor() as cursor:</pre></li>
                
                </ol>
              
              <ol start="1819" class="context-line">
                <li onclick="toggle('pre139628497487104', 'post139628497487104')"><pre>            for sql, params in self.as_sql():</pre> <span>…</span></li>
              </ol>
              
                <ol start='1820' class="post-context" id="post139628497487104">
                  
                  <li onclick="toggle('pre139628497487104', 'post139628497487104')"><pre>                cursor.execute(sql, params)</pre></li>
                  
                  <li onclick="toggle('pre139628497487104', 'post139628497487104')"><pre>            if not self.returning_fields:</pre></li>
                  
                  <li onclick="toggle('pre139628497487104', 'post139628497487104')"><pre>                return []</pre></li>
                  
                  <li onclick="toggle('pre139628497487104', 'post139628497487104')"><pre>            if (</pre></li>
                  
                  <li onclick="toggle('pre139628497487104', 'post139628497487104')"><pre>                self.connection.features.can_return_rows_from_bulk_insert</pre></li>
                  
                  <li onclick="toggle('pre139628497487104', 'post139628497487104')"><pre>                and len(self.query.objs) &gt; 1</pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v139628497487104">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>cursor</td>
                    <td class="code"><pre>&lt;django.db.backends.postgresql.base.CursorDebugWrapper object at 0x7efdcdd58280&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>opts</td>
                    <td class="code"><pre>&lt;Options for Message&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>returning_fields</td>
                    <td class="code"><pre>[]</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;SQLInsertCompiler model=Message connection=&lt;DatabaseWrapper vendor=&#x27;postgresql&#x27; alias=&#x27;default&#x27;&gt; using=&#x27;default&#x27;&gt;</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
        <li class="frame django">
          
            <code class="fname">/home/jpfilho/.local/lib/python3.10/site-packages/django/db/models/sql/compiler.py</code>, line 1743, in as_sql
          

          
            <div class="context" id="c139628505445312">
              
                <ol start="1736" class="pre-context" id="pre139628505445312">
                
                  <li onclick="toggle('pre139628505445312', 'post139628505445312')"><pre>            on_conflict=self.query.on_conflict,</pre></li>
                
                  <li onclick="toggle('pre139628505445312', 'post139628505445312')"><pre>        )</pre></li>
                
                  <li onclick="toggle('pre139628505445312', 'post139628505445312')"><pre>        result = [&quot;%s %s&quot; % (insert_statement, qn(opts.db_table))]</pre></li>
                
                  <li onclick="toggle('pre139628505445312', 'post139628505445312')"><pre>        fields = self.query.fields or [opts.pk]</pre></li>
                
                  <li onclick="toggle('pre139628505445312', 'post139628505445312')"><pre>        result.append(&quot;(%s)&quot; % &quot;, &quot;.join(qn(f.column) for f in fields))</pre></li>
                
                  <li onclick="toggle('pre139628505445312', 'post139628505445312')"><pre></pre></li>
                
                  <li onclick="toggle('pre139628505445312', 'post139628505445312')"><pre>        if self.query.fields:</pre></li>
                
                </ol>
              
              <ol start="1743" class="context-line">
                <li onclick="toggle('pre139628505445312', 'post139628505445312')"><pre>            value_rows = [</pre> <span>…</span></li>
              </ol>
              
                <ol start='1744' class="post-context" id="post139628505445312">
                  
                  <li onclick="toggle('pre139628505445312', 'post139628505445312')"><pre>                [</pre></li>
                  
                  <li onclick="toggle('pre139628505445312', 'post139628505445312')"><pre>                    self.prepare_value(field, self.pre_save_val(field, obj))</pre></li>
                  
                  <li onclick="toggle('pre139628505445312', 'post139628505445312')"><pre>                    for field in fields</pre></li>
                  
                  <li onclick="toggle('pre139628505445312', 'post139628505445312')"><pre>                ]</pre></li>
                  
                  <li onclick="toggle('pre139628505445312', 'post139628505445312')"><pre>                for obj in self.query.objs</pre></li>
                  
                  <li onclick="toggle('pre139628505445312', 'post139628505445312')"><pre>            ]</pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v139628505445312">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>fields</td>
                    <td class="code"><pre>(&lt;django.db.models.fields.CharField: message_id&gt;,
 &lt;django.db.models.fields.CharField: contact_id&gt;,
 &lt;django.db.models.fields.CharField: contact_number&gt;,
 &lt;django.db.models.fields.DateField: period&gt;,
 &lt;django.db.models.fields.DateTimeField: timestamp&gt;,
 &lt;django.db.models.fields.IntegerField: status&gt;,
 &lt;django.db.models.fields.CharField: ticket_service_id&gt;,
 &lt;django.db.models.fields.CharField: message_type&gt;,
 &lt;django.db.models.fields.BooleanField: is_from_me&gt;,
 &lt;django.db.models.fields.IntegerField: retries&gt;)</pre></td>
                  </tr>
                
                  <tr>
                    <td>insert_statement</td>
                    <td class="code"><pre>&#x27;INSERT INTO&#x27;</pre></td>
                  </tr>
                
                  <tr>
                    <td>opts</td>
                    <td class="code"><pre>&lt;Options for Message&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>qn</td>
                    <td class="code"><pre>&lt;bound method DatabaseOperations.quote_name of &lt;django.db.backends.postgresql.operations.DatabaseOperations object at 0x7efdcb36abc0&gt;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>result</td>
                    <td class="code"><pre>[&#x27;INSERT INTO &quot;messages_api_message&quot;&#x27;,
 &#x27;(&quot;message_id&quot;, &quot;contact_id&quot;, &quot;contact_number&quot;, &quot;period&quot;, &quot;timestamp&quot;, &#x27;
 &#x27;&quot;status&quot;, &quot;ticket_service_id&quot;, &quot;message_type&quot;, &quot;is_from_me&quot;, &quot;retries&quot;)&#x27;]</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;SQLInsertCompiler model=Message connection=&lt;DatabaseWrapper vendor=&#x27;postgresql&#x27; alias=&#x27;default&#x27;&gt; using=&#x27;default&#x27;&gt;</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
        <li class="frame django">
          
            <code class="fname">/home/jpfilho/.local/lib/python3.10/site-packages/django/db/models/sql/compiler.py</code>, line 1744, in &lt;listcomp&gt;
          

          
            <div class="context" id="c139628505533504">
              
                <ol start="1737" class="pre-context" id="pre139628505533504">
                
                  <li onclick="toggle('pre139628505533504', 'post139628505533504')"><pre>        )</pre></li>
                
                  <li onclick="toggle('pre139628505533504', 'post139628505533504')"><pre>        result = [&quot;%s %s&quot; % (insert_statement, qn(opts.db_table))]</pre></li>
                
                  <li onclick="toggle('pre139628505533504', 'post139628505533504')"><pre>        fields = self.query.fields or [opts.pk]</pre></li>
                
                  <li onclick="toggle('pre139628505533504', 'post139628505533504')"><pre>        result.append(&quot;(%s)&quot; % &quot;, &quot;.join(qn(f.column) for f in fields))</pre></li>
                
                  <li onclick="toggle('pre139628505533504', 'post139628505533504')"><pre></pre></li>
                
                  <li onclick="toggle('pre139628505533504', 'post139628505533504')"><pre>        if self.query.fields:</pre></li>
                
                  <li onclick="toggle('pre139628505533504', 'post139628505533504')"><pre>            value_rows = [</pre></li>
                
                </ol>
              
              <ol start="1744" class="context-line">
                <li onclick="toggle('pre139628505533504', 'post139628505533504')"><pre>                [</pre> <span>…</span></li>
              </ol>
              
                <ol start='1745' class="post-context" id="post139628505533504">
                  
                  <li onclick="toggle('pre139628505533504', 'post139628505533504')"><pre>                    self.prepare_value(field, self.pre_save_val(field, obj))</pre></li>
                  
                  <li onclick="toggle('pre139628505533504', 'post139628505533504')"><pre>                    for field in fields</pre></li>
                  
                  <li onclick="toggle('pre139628505533504', 'post139628505533504')"><pre>                ]</pre></li>
                  
                  <li onclick="toggle('pre139628505533504', 'post139628505533504')"><pre>                for obj in self.query.objs</pre></li>
                  
                  <li onclick="toggle('pre139628505533504', 'post139628505533504')"><pre>            ]</pre></li>
                  
                  <li onclick="toggle('pre139628505533504', 'post139628505533504')"><pre>        else:</pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v139628505533504">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>.0</td>
                    <td class="code"><pre>&lt;list_iterator object at 0x7efdcaf35390&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>fields</td>
                    <td class="code"><pre>(&lt;django.db.models.fields.CharField: message_id&gt;,
 &lt;django.db.models.fields.CharField: contact_id&gt;,
 &lt;django.db.models.fields.CharField: contact_number&gt;,
 &lt;django.db.models.fields.DateField: period&gt;,
 &lt;django.db.models.fields.DateTimeField: timestamp&gt;,
 &lt;django.db.models.fields.IntegerField: status&gt;,
 &lt;django.db.models.fields.CharField: ticket_service_id&gt;,
 &lt;django.db.models.fields.CharField: message_type&gt;,
 &lt;django.db.models.fields.BooleanField: is_from_me&gt;,
 &lt;django.db.models.fields.IntegerField: retries&gt;)</pre></td>
                  </tr>
                
                  <tr>
                    <td>obj</td>
                    <td class="code"><pre>&lt;Message: 5588988562749 - 2023-05-01 - 0&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;SQLInsertCompiler model=Message connection=&lt;DatabaseWrapper vendor=&#x27;postgresql&#x27; alias=&#x27;default&#x27;&gt; using=&#x27;default&#x27;&gt;</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
        <li class="frame django">
          
            <code class="fname">/home/jpfilho/.local/lib/python3.10/site-packages/django/db/models/sql/compiler.py</code>, line 1745, in &lt;listcomp&gt;
          

          
            <div class="context" id="c139628505446272">
              
                <ol start="1738" class="pre-context" id="pre139628505446272">
                
                  <li onclick="toggle('pre139628505446272', 'post139628505446272')"><pre>        result = [&quot;%s %s&quot; % (insert_statement, qn(opts.db_table))]</pre></li>
                
                  <li onclick="toggle('pre139628505446272', 'post139628505446272')"><pre>        fields = self.query.fields or [opts.pk]</pre></li>
                
                  <li onclick="toggle('pre139628505446272', 'post139628505446272')"><pre>        result.append(&quot;(%s)&quot; % &quot;, &quot;.join(qn(f.column) for f in fields))</pre></li>
                
                  <li onclick="toggle('pre139628505446272', 'post139628505446272')"><pre></pre></li>
                
                  <li onclick="toggle('pre139628505446272', 'post139628505446272')"><pre>        if self.query.fields:</pre></li>
                
                  <li onclick="toggle('pre139628505446272', 'post139628505446272')"><pre>            value_rows = [</pre></li>
                
                  <li onclick="toggle('pre139628505446272', 'post139628505446272')"><pre>                [</pre></li>
                
                </ol>
              
              <ol start="1745" class="context-line">
                <li onclick="toggle('pre139628505446272', 'post139628505446272')"><pre>                    self.prepare_value(field, self.pre_save_val(field, obj))</pre> <span>…</span></li>
              </ol>
              
                <ol start='1746' class="post-context" id="post139628505446272">
                  
                  <li onclick="toggle('pre139628505446272', 'post139628505446272')"><pre>                    for field in fields</pre></li>
                  
                  <li onclick="toggle('pre139628505446272', 'post139628505446272')"><pre>                ]</pre></li>
                  
                  <li onclick="toggle('pre139628505446272', 'post139628505446272')"><pre>                for obj in self.query.objs</pre></li>
                  
                  <li onclick="toggle('pre139628505446272', 'post139628505446272')"><pre>            ]</pre></li>
                  
                  <li onclick="toggle('pre139628505446272', 'post139628505446272')"><pre>        else:</pre></li>
                  
                  <li onclick="toggle('pre139628505446272', 'post139628505446272')"><pre>            # An empty object.</pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v139628505446272">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>.0</td>
                    <td class="code"><pre>&lt;tuple_iterator object at 0x7efdcaf35a20&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>field</td>
                    <td class="code"><pre>&lt;django.db.models.fields.BooleanField: is_from_me&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>obj</td>
                    <td class="code"><pre>&lt;Message: 5588988562749 - 2023-05-01 - 0&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;SQLInsertCompiler model=Message connection=&lt;DatabaseWrapper vendor=&#x27;postgresql&#x27; alias=&#x27;default&#x27;&gt; using=&#x27;default&#x27;&gt;</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
        <li class="frame django">
          
            <code class="fname">/home/jpfilho/.local/lib/python3.10/site-packages/django/db/models/sql/compiler.py</code>, line 1684, in prepare_value
          

          
            <div class="context" id="c139628510078720">
              
                <ol start="1677" class="pre-context" id="pre139628510078720">
                
                  <li onclick="toggle('pre139628510078720', 'post139628510078720')"><pre>                    &quot;(%s=%r).&quot; % (field.name, value)</pre></li>
                
                  <li onclick="toggle('pre139628510078720', 'post139628510078720')"><pre>                )</pre></li>
                
                  <li onclick="toggle('pre139628510078720', 'post139628510078720')"><pre>            if value.contains_over_clause:</pre></li>
                
                  <li onclick="toggle('pre139628510078720', 'post139628510078720')"><pre>                raise FieldError(</pre></li>
                
                  <li onclick="toggle('pre139628510078720', 'post139628510078720')"><pre>                    &quot;Window expressions are not allowed in this query (%s=%r).&quot;</pre></li>
                
                  <li onclick="toggle('pre139628510078720', 'post139628510078720')"><pre>                    % (field.name, value)</pre></li>
                
                  <li onclick="toggle('pre139628510078720', 'post139628510078720')"><pre>                )</pre></li>
                
                </ol>
              
              <ol start="1684" class="context-line">
                <li onclick="toggle('pre139628510078720', 'post139628510078720')"><pre>        return field.get_db_prep_save(value, connection=self.connection)</pre> <span>…</span></li>
              </ol>
              
                <ol start='1685' class="post-context" id="post139628510078720">
                  
                  <li onclick="toggle('pre139628510078720', 'post139628510078720')"><pre></pre></li>
                  
                  <li onclick="toggle('pre139628510078720', 'post139628510078720')"><pre>    def pre_save_val(self, field, obj):</pre></li>
                  
                  <li onclick="toggle('pre139628510078720', 'post139628510078720')"><pre>        &quot;&quot;&quot;</pre></li>
                  
                  <li onclick="toggle('pre139628510078720', 'post139628510078720')"><pre>        Get the given field&#x27;s value off the given obj. pre_save() is used for</pre></li>
                  
                  <li onclick="toggle('pre139628510078720', 'post139628510078720')"><pre>        things like auto_now on DateTimeField. Skip it if this is a raw query.</pre></li>
                  
                  <li onclick="toggle('pre139628510078720', 'post139628510078720')"><pre>        &quot;&quot;&quot;</pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v139628510078720">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>field</td>
                    <td class="code"><pre>&lt;django.db.models.fields.BooleanField: is_from_me&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;SQLInsertCompiler model=Message connection=&lt;DatabaseWrapper vendor=&#x27;postgresql&#x27; alias=&#x27;default&#x27;&gt; using=&#x27;default&#x27;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>value</td>
                    <td class="code"><pre>[True]</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
        <li class="frame django">
          
            <code class="fname">/home/jpfilho/.local/lib/python3.10/site-packages/django/db/models/fields/__init__.py</code>, line 954, in get_db_prep_save
          

          
            <div class="context" id="c139628510081344">
              
                <ol start="947" class="pre-context" id="pre139628510081344">
                
                  <li onclick="toggle('pre139628510081344', 'post139628510081344')"><pre>            value = self.get_prep_value(value)</pre></li>
                
                  <li onclick="toggle('pre139628510081344', 'post139628510081344')"><pre>        return value</pre></li>
                
                  <li onclick="toggle('pre139628510081344', 'post139628510081344')"><pre></pre></li>
                
                  <li onclick="toggle('pre139628510081344', 'post139628510081344')"><pre>    def get_db_prep_save(self, value, connection):</pre></li>
                
                  <li onclick="toggle('pre139628510081344', 'post139628510081344')"><pre>        &quot;&quot;&quot;Return field&#x27;s value prepared for saving into a database.&quot;&quot;&quot;</pre></li>
                
                  <li onclick="toggle('pre139628510081344', 'post139628510081344')"><pre>        if hasattr(value, &quot;as_sql&quot;):</pre></li>
                
                  <li onclick="toggle('pre139628510081344', 'post139628510081344')"><pre>            return value</pre></li>
                
                </ol>
              
              <ol start="954" class="context-line">
                <li onclick="toggle('pre139628510081344', 'post139628510081344')"><pre>        return self.get_db_prep_value(value, connection=connection, prepared=False)</pre> <span>…</span></li>
              </ol>
              
                <ol start='955' class="post-context" id="post139628510081344">
                  
                  <li onclick="toggle('pre139628510081344', 'post139628510081344')"><pre></pre></li>
                  
                  <li onclick="toggle('pre139628510081344', 'post139628510081344')"><pre>    def has_default(self):</pre></li>
                  
                  <li onclick="toggle('pre139628510081344', 'post139628510081344')"><pre>        &quot;&quot;&quot;Return a boolean of whether this field has a default value.&quot;&quot;&quot;</pre></li>
                  
                  <li onclick="toggle('pre139628510081344', 'post139628510081344')"><pre>        return self.default is not NOT_PROVIDED</pre></li>
                  
                  <li onclick="toggle('pre139628510081344', 'post139628510081344')"><pre></pre></li>
                  
                  <li onclick="toggle('pre139628510081344', 'post139628510081344')"><pre>    def get_default(self):</pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v139628510081344">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>connection</td>
                    <td class="code"><pre>&lt;DatabaseWrapper vendor=&#x27;postgresql&#x27; alias=&#x27;default&#x27;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;django.db.models.fields.BooleanField: is_from_me&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>value</td>
                    <td class="code"><pre>[True]</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
        <li class="frame django">
          
            <code class="fname">/home/jpfilho/.local/lib/python3.10/site-packages/django/db/models/fields/__init__.py</code>, line 947, in get_db_prep_value
          

          
            <div class="context" id="c139628505432832">
              
                <ol start="940" class="pre-context" id="pre139628505432832">
                
                  <li onclick="toggle('pre139628505432832', 'post139628505432832')"><pre>    def get_db_prep_value(self, value, connection, prepared=False):</pre></li>
                
                  <li onclick="toggle('pre139628505432832', 'post139628505432832')"><pre>        &quot;&quot;&quot;</pre></li>
                
                  <li onclick="toggle('pre139628505432832', 'post139628505432832')"><pre>        Return field&#x27;s value prepared for interacting with the database backend.</pre></li>
                
                  <li onclick="toggle('pre139628505432832', 'post139628505432832')"><pre></pre></li>
                
                  <li onclick="toggle('pre139628505432832', 'post139628505432832')"><pre>        Used by the default implementations of get_db_prep_save().</pre></li>
                
                  <li onclick="toggle('pre139628505432832', 'post139628505432832')"><pre>        &quot;&quot;&quot;</pre></li>
                
                  <li onclick="toggle('pre139628505432832', 'post139628505432832')"><pre>        if not prepared:</pre></li>
                
                </ol>
              
              <ol start="947" class="context-line">
                <li onclick="toggle('pre139628505432832', 'post139628505432832')"><pre>            value = self.get_prep_value(value)</pre> <span>…</span></li>
              </ol>
              
                <ol start='948' class="post-context" id="post139628505432832">
                  
                  <li onclick="toggle('pre139628505432832', 'post139628505432832')"><pre>        return value</pre></li>
                  
                  <li onclick="toggle('pre139628505432832', 'post139628505432832')"><pre></pre></li>
                  
                  <li onclick="toggle('pre139628505432832', 'post139628505432832')"><pre>    def get_db_prep_save(self, value, connection):</pre></li>
                  
                  <li onclick="toggle('pre139628505432832', 'post139628505432832')"><pre>        &quot;&quot;&quot;Return field&#x27;s value prepared for saving into a database.&quot;&quot;&quot;</pre></li>
                  
                  <li onclick="toggle('pre139628505432832', 'post139628505432832')"><pre>        if hasattr(value, &quot;as_sql&quot;):</pre></li>
                  
                  <li onclick="toggle('pre139628505432832', 'post139628505432832')"><pre>            return value</pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v139628505432832">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>connection</td>
                    <td class="code"><pre>&lt;DatabaseWrapper vendor=&#x27;postgresql&#x27; alias=&#x27;default&#x27;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>prepared</td>
                    <td class="code"><pre>False</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;django.db.models.fields.BooleanField: is_from_me&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>value</td>
                    <td class="code"><pre>[True]</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
        <li class="frame django">
          
            <code class="fname">/home/jpfilho/.local/lib/python3.10/site-packages/django/db/models/fields/__init__.py</code>, line 1122, in get_prep_value
          

          
            <div class="context" id="c139628505448192">
              
                <ol start="1115" class="pre-context" id="pre139628505448192">
                
                  <li onclick="toggle('pre139628505448192', 'post139628505448192')"><pre>            params={&quot;value&quot;: value},</pre></li>
                
                  <li onclick="toggle('pre139628505448192', 'post139628505448192')"><pre>        )</pre></li>
                
                  <li onclick="toggle('pre139628505448192', 'post139628505448192')"><pre></pre></li>
                
                  <li onclick="toggle('pre139628505448192', 'post139628505448192')"><pre>    def get_prep_value(self, value):</pre></li>
                
                  <li onclick="toggle('pre139628505448192', 'post139628505448192')"><pre>        value = super().get_prep_value(value)</pre></li>
                
                  <li onclick="toggle('pre139628505448192', 'post139628505448192')"><pre>        if value is None:</pre></li>
                
                  <li onclick="toggle('pre139628505448192', 'post139628505448192')"><pre>            return None</pre></li>
                
                </ol>
              
              <ol start="1122" class="context-line">
                <li onclick="toggle('pre139628505448192', 'post139628505448192')"><pre>        return self.to_python(value)</pre> <span>…</span></li>
              </ol>
              
                <ol start='1123' class="post-context" id="post139628505448192">
                  
                  <li onclick="toggle('pre139628505448192', 'post139628505448192')"><pre></pre></li>
                  
                  <li onclick="toggle('pre139628505448192', 'post139628505448192')"><pre>    def formfield(self, **kwargs):</pre></li>
                  
                  <li onclick="toggle('pre139628505448192', 'post139628505448192')"><pre>        if self.choices is not None:</pre></li>
                  
                  <li onclick="toggle('pre139628505448192', 'post139628505448192')"><pre>            include_blank = not (self.has_default() or &quot;initial&quot; in kwargs)</pre></li>
                  
                  <li onclick="toggle('pre139628505448192', 'post139628505448192')"><pre>            defaults = {&quot;choices&quot;: self.get_choices(include_blank=include_blank)}</pre></li>
                  
                  <li onclick="toggle('pre139628505448192', 'post139628505448192')"><pre>        else:</pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v139628505448192">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>__class__</td>
                    <td class="code"><pre>&lt;class &#x27;django.db.models.fields.BooleanField&#x27;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;django.db.models.fields.BooleanField: is_from_me&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>value</td>
                    <td class="code"><pre>[True]</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
        <li class="frame django">
          
            <code class="fname">/home/jpfilho/.local/lib/python3.10/site-packages/django/db/models/fields/__init__.py</code>, line 1112, in to_python
          

          
            <div class="context" id="c139628535791296">
              
                <ol start="1105" class="pre-context" id="pre139628535791296">
                
                  <li onclick="toggle('pre139628535791296', 'post139628535791296')"><pre>        if value in (True, False):</pre></li>
                
                  <li onclick="toggle('pre139628535791296', 'post139628535791296')"><pre>            # 1/0 are equal to True/False. bool() converts former to latter.</pre></li>
                
                  <li onclick="toggle('pre139628535791296', 'post139628535791296')"><pre>            return bool(value)</pre></li>
                
                  <li onclick="toggle('pre139628535791296', 'post139628535791296')"><pre>        if value in (&quot;t&quot;, &quot;True&quot;, &quot;1&quot;):</pre></li>
                
                  <li onclick="toggle('pre139628535791296', 'post139628535791296')"><pre>            return True</pre></li>
                
                  <li onclick="toggle('pre139628535791296', 'post139628535791296')"><pre>        if value in (&quot;f&quot;, &quot;False&quot;, &quot;0&quot;):</pre></li>
                
                  <li onclick="toggle('pre139628535791296', 'post139628535791296')"><pre>            return False</pre></li>
                
                </ol>
              
              <ol start="1112" class="context-line">
                <li onclick="toggle('pre139628535791296', 'post139628535791296')"><pre>        raise exceptions.ValidationError(</pre> <span>…</span></li>
              </ol>
              
                <ol start='1113' class="post-context" id="post139628535791296">
                  
                  <li onclick="toggle('pre139628535791296', 'post139628535791296')"><pre>            self.error_messages[&quot;invalid_nullable&quot; if self.null else &quot;invalid&quot;],</pre></li>
                  
                  <li onclick="toggle('pre139628535791296', 'post139628535791296')"><pre>            code=&quot;invalid&quot;,</pre></li>
                  
                  <li onclick="toggle('pre139628535791296', 'post139628535791296')"><pre>            params={&quot;value&quot;: value},</pre></li>
                  
                  <li onclick="toggle('pre139628535791296', 'post139628535791296')"><pre>        )</pre></li>
                  
                  <li onclick="toggle('pre139628535791296', 'post139628535791296')"><pre></pre></li>
                  
                  <li onclick="toggle('pre139628535791296', 'post139628535791296')"><pre>    def get_prep_value(self, value):</pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v139628535791296">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;django.db.models.fields.BooleanField: is_from_me&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>value</td>
                    <td class="code"><pre>[True]</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
    </ul>
  </div>

  <form action="https://dpaste.com/" name="pasteform" id="pasteform" method="post">
  <div id="pastebinTraceback" class="pastebin">
    <input type="hidden" name="language" value="PythonConsole">
    <input type="hidden" name="title"
      value="ValidationError at /webhook/messages/create">
    <input type="hidden" name="source" value="Django Dpaste Agent">
    <input type="hidden" name="poster" value="Django">
    <textarea name="content" id="traceback_area" cols="140" rows="25">
Environment:


Request Method: POST
Request URL: http://woz.serveo.net/webhook/messages/create?phone=5588988562749&amp;period=05%2F23

Django Version: 4.2.1
Python Version: 3.10.7
Installed Applications:
[&#x27;django.contrib.admin&#x27;,
 &#x27;django.contrib.auth&#x27;,
 &#x27;django.contrib.contenttypes&#x27;,
 &#x27;django.contrib.sessions&#x27;,
 &#x27;django.contrib.messages&#x27;,
 &#x27;django.contrib.staticfiles&#x27;,
 &#x27;drf_yasg&#x27;,
 &#x27;rest_framework&#x27;,
 &#x27;example&#x27;,
 &#x27;messages_api&#x27;,
 &#x27;celery&#x27;,
 &#x27;django_filters&#x27;]
Installed Middleware:
[&#x27;django.middleware.security.SecurityMiddleware&#x27;,
 &#x27;django.contrib.sessions.middleware.SessionMiddleware&#x27;,
 &#x27;django.middleware.common.CommonMiddleware&#x27;,
 &#x27;django.middleware.csrf.CsrfViewMiddleware&#x27;,
 &#x27;django.contrib.auth.middleware.AuthenticationMiddleware&#x27;,
 &#x27;django.contrib.messages.middleware.MessageMiddleware&#x27;,
 &#x27;django.middleware.clickjacking.XFrameOptionsMiddleware&#x27;]



Traceback (most recent call last):
  File "/home/jpfilho/.local/lib/python3.10/site-packages/django/core/handlers/exception.py", line 55, in inner
    response = get_response(request)
  File "/home/jpfilho/.local/lib/python3.10/site-packages/django/core/handlers/base.py", line 197, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/home/jpfilho/.local/lib/python3.10/site-packages/django/views/decorators/csrf.py", line 56, in wrapper_view
    return view_func(*args, **kwargs)
  File "/home/jpfilho/.local/lib/python3.10/site-packages/rest_framework/viewsets.py", line 125, in view
    return self.dispatch(request, *args, **kwargs)
  File "/home/jpfilho/.local/lib/python3.10/site-packages/rest_framework/views.py", line 509, in dispatch
    response = self.handle_exception(exc)
  File "/home/jpfilho/.local/lib/python3.10/site-packages/rest_framework/views.py", line 469, in handle_exception
    self.raise_uncaught_exception(exc)
  File "/home/jpfilho/.local/lib/python3.10/site-packages/rest_framework/views.py", line 480, in raise_uncaught_exception
    raise exc
  File "/home/jpfilho/.local/lib/python3.10/site-packages/rest_framework/views.py", line 506, in dispatch
    response = handler(request, *args, **kwargs)
  File "/home/jpfilho/Documents/code-ws/python/webhook/messages_api/views.py", line 153, in create
    message = Message.objects.create(
  File "/home/jpfilho/.local/lib/python3.10/site-packages/django/db/models/manager.py", line 87, in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
  File "/home/jpfilho/.local/lib/python3.10/site-packages/django/db/models/query.py", line 658, in create
    obj.save(force_insert=True, using=self.db)
  File "/home/jpfilho/.local/lib/python3.10/site-packages/django/db/models/base.py", line 814, in save
    self.save_base(
  File "/home/jpfilho/.local/lib/python3.10/site-packages/django/db/models/base.py", line 877, in save_base
    updated = self._save_table(
  File "/home/jpfilho/.local/lib/python3.10/site-packages/django/db/models/base.py", line 1020, in _save_table
    results = self._do_insert(
  File "/home/jpfilho/.local/lib/python3.10/site-packages/django/db/models/base.py", line 1061, in _do_insert
    return manager._insert(
  File "/home/jpfilho/.local/lib/python3.10/site-packages/django/db/models/manager.py", line 87, in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
  File "/home/jpfilho/.local/lib/python3.10/site-packages/django/db/models/query.py", line 1805, in _insert
    return query.get_compiler(using=using).execute_sql(returning_fields)
  File "/home/jpfilho/.local/lib/python3.10/site-packages/django/db/models/sql/compiler.py", line 1819, in execute_sql
    for sql, params in self.as_sql():
  File "/home/jpfilho/.local/lib/python3.10/site-packages/django/db/models/sql/compiler.py", line 1743, in as_sql
    value_rows = [
  File "/home/jpfilho/.local/lib/python3.10/site-packages/django/db/models/sql/compiler.py", line 1744, in &lt;listcomp&gt;
    [
  File "/home/jpfilho/.local/lib/python3.10/site-packages/django/db/models/sql/compiler.py", line 1745, in &lt;listcomp&gt;
    self.prepare_value(field, self.pre_save_val(field, obj))
  File "/home/jpfilho/.local/lib/python3.10/site-packages/django/db/models/sql/compiler.py", line 1684, in prepare_value
    return field.get_db_prep_save(value, connection=self.connection)
  File "/home/jpfilho/.local/lib/python3.10/site-packages/django/db/models/fields/__init__.py", line 954, in get_db_prep_save
    return self.get_db_prep_value(value, connection=connection, prepared=False)
  File "/home/jpfilho/.local/lib/python3.10/site-packages/django/db/models/fields/__init__.py", line 947, in get_db_prep_value
    value = self.get_prep_value(value)
  File "/home/jpfilho/.local/lib/python3.10/site-packages/django/db/models/fields/__init__.py", line 1122, in get_prep_value
    return self.to_python(value)
  File "/home/jpfilho/.local/lib/python3.10/site-packages/django/db/models/fields/__init__.py", line 1112, in to_python
    raise exceptions.ValidationError(

Exception Type: ValidationError at /webhook/messages/create
Exception Value: [&#x27;o valor “[True]”  deve ser True ou False.&#x27;]
</textarea>
  <br><br>
  <input type="submit" value="Share this traceback on a public website">
  </div>
</form>

</div>


<div id="requestinfo">
  <h2>Request information</h2>


  
    <h3 id="user-info">USER</h3>
    <p>AnonymousUser</p>
  

  <h3 id="get-info">GET</h3>
  
    <table class="req">
      <thead>
        <tr>
          <th>Variable</th>
          <th>Value</th>
        </tr>
      </thead>
      <tbody>
        
          <tr>
            <td>phone</td>
            <td class="code"><pre>&#x27;5588988562749&#x27;</pre></td>
          </tr>
        
          <tr>
            <td>period</td>
            <td class="code"><pre>&#x27;05/23&#x27;</pre></td>
          </tr>
        
      </tbody>
    </table>
  

  <h3 id="post-info">POST</h3>
  
    <p>No POST data</p>
  

  <h3 id="files-info">FILES</h3>
  
    <p>No FILES data</p>
  

  <h3 id="cookie-info">COOKIES</h3>
  
    <p>No cookie data</p>
  

  <h3 id="meta-info">META</h3>
  <table class="req">
    <thead>
      <tr>
        <th>Variable</th>
        <th>Value</th>
      </tr>
    </thead>
    <tbody>
      
        <tr>
          <td>API_URL</td>
          <td class="code"><pre>&#x27;********************&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>BAMF_DESKTOP_FILE_HINT</td>
          <td class="code"><pre>&#x27;/var/lib/snapd/desktop/applications/code_code.desktop&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>CHROME_DESKTOP</td>
          <td class="code"><pre>&#x27;code-url-handler.desktop&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>CLOUDAMQP_URL</td>
          <td class="code"><pre>&#x27;amqps://kzthoddb:3CziblJY4U4tFRNmARuMMdIDu8z53Ql6@fly.rmq.cloudamqp.com/kzthoddb&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>COLORTERM</td>
          <td class="code"><pre>&#x27;truecolor&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>COMPANIES_API</td>
          <td class="code"><pre>&#x27;********************&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>CONTENT_LENGTH</td>
          <td class="code"><pre>&#x27;261&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>CONTENT_TYPE</td>
          <td class="code"><pre>&#x27;application/json&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>DBUS_SESSION_BUS_ADDRESS</td>
          <td class="code"><pre>&#x27;unix:path=/run/user/1000/bus&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>DEBUGINFOD_URLS</td>
          <td class="code"><pre>&#x27;https://debuginfod.ubuntu.com &#x27;</pre></td>
        </tr>
      
        <tr>
          <td>DESKTOP_SESSION</td>
          <td class="code"><pre>&#x27;ubuntu&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>DISPLAY</td>
          <td class="code"><pre>&#x27;:1&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>DJANGO_SETTINGS_MODULE</td>
          <td class="code"><pre>&#x27;webhook.settings&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>GATEWAY_INTERFACE</td>
          <td class="code"><pre>&#x27;CGI/1.1&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>GDK_BACKEND</td>
          <td class="code"><pre>&#x27;x11&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>GDMSESSION</td>
          <td class="code"><pre>&#x27;ubuntu&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>GIO_LAUNCHED_DESKTOP_FILE</td>
          <td class="code"><pre>&#x27;/var/lib/snapd/desktop/applications/code_code.desktop&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>GIO_LAUNCHED_DESKTOP_FILE_PID</td>
          <td class="code"><pre>&#x27;2895&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>GIO_MODULE_DIR</td>
          <td class="code"><pre>&#x27;/home/jpfilho/snap/code/common/.cache/gio-modules&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>GIT_ASKPASS</td>
          <td class="code"><pre>&#x27;********************&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>GJS_DEBUG_OUTPUT</td>
          <td class="code"><pre>&#x27;stderr&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>GJS_DEBUG_TOPICS</td>
          <td class="code"><pre>&#x27;JS ERROR;JS LOG&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>GNOME_DESKTOP_SESSION_ID</td>
          <td class="code"><pre>&#x27;this-is-deprecated&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>GNOME_SHELL_SESSION_MODE</td>
          <td class="code"><pre>&#x27;ubuntu&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>GPG_AGENT_INFO</td>
          <td class="code"><pre>&#x27;/run/user/1000/gnupg/S.gpg-agent:0:1&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>GROUP_ID</td>
          <td class="code"><pre>&#x27;4bf3c03a-2d33-439c-8b13-efb50531e9c1&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>GSETTINGS_SCHEMA_DIR</td>
          <td class="code"><pre>&#x27;/home/jpfilho/snap/code/129/.local/share/glib-2.0/schemas&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>GTK_EXE_PREFIX</td>
          <td class="code"><pre>&#x27;/snap/code/129/usr&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>GTK_IM_MODULE_FILE</td>
          <td class="code"><pre>&#x27;/home/jpfilho/snap/code/common/.cache/immodules/immodules.cache&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>GTK_MODULES</td>
          <td class="code"><pre>&#x27;gail:atk-bridge&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>GTK_PATH</td>
          <td class="code"><pre>&#x27;/snap/code/129/usr/lib/x86_64-linux-gnu/gtk-3.0&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>HEROKU_API</td>
          <td class="code"><pre>&#x27;********************&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>HEROKU_API_KEY</td>
          <td class="code"><pre>&#x27;********************&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>HEROKU_DYNO_ID</td>
          <td class="code"><pre>&#x27;ba6aefd9-0ff3-4cfb-a04b-42b7bf6cf560&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>HOME</td>
          <td class="code"><pre>&#x27;/home/jpfilho&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>HTTP_ACCEPT</td>
          <td class="code"><pre>&#x27;*/*&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>HTTP_ACCEPT_ENCODING</td>
          <td class="code"><pre>&#x27;gzip, deflate&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>HTTP_HOST</td>
          <td class="code"><pre>&#x27;woz.serveo.net&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>HTTP_USER_AGENT</td>
          <td class="code"><pre>&#x27;python-requests/2.30.0&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>HTTP_X_FORWARDED_FOR</td>
          <td class="code"><pre>&#x27;177.37.130.81&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>ID_SERVICE</td>
          <td class="code"><pre>&#x27;83108c28-14f7-4646-acb8-dab165397fd5&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>INVOCATION_ID</td>
          <td class="code"><pre>&#x27;d9e9633aebb14edaa8abde0b26e491bc&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>JAVA_HOME</td>
          <td class="code"><pre>&#x27;/home/jpfilho/.sdkman/candidates/java/current&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>JOURNAL_STREAM</td>
          <td class="code"><pre>&#x27;8:33740&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>LANG</td>
          <td class="code"><pre>&#x27;pt_BR.UTF-8&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>LANGUAGE</td>
          <td class="code"><pre>&#x27;pt_BR:pt:pt_PT:en&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>LC_ADDRESS</td>
          <td class="code"><pre>&#x27;pt_BR.UTF-8&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>LC_IDENTIFICATION</td>
          <td class="code"><pre>&#x27;pt_BR.UTF-8&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>LC_MEASUREMENT</td>
          <td class="code"><pre>&#x27;pt_BR.UTF-8&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>LC_MONETARY</td>
          <td class="code"><pre>&#x27;pt_BR.UTF-8&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>LC_NAME</td>
          <td class="code"><pre>&#x27;pt_BR.UTF-8&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>LC_NUMERIC</td>
          <td class="code"><pre>&#x27;pt_BR.UTF-8&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>LC_PAPER</td>
          <td class="code"><pre>&#x27;pt_BR.UTF-8&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>LC_TELEPHONE</td>
          <td class="code"><pre>&#x27;pt_BR.UTF-8&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>LC_TIME</td>
          <td class="code"><pre>&#x27;pt_BR.UTF-8&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>LESSCLOSE</td>
          <td class="code"><pre>&#x27;/usr/bin/lesspipe %s %s&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>LESSOPEN</td>
          <td class="code"><pre>&#x27;| /usr/bin/lesspipe %s&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>LOCPATH</td>
          <td class="code"><pre>&#x27;/snap/code/129/usr/lib/locale&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>LOGNAME</td>
          <td class="code"><pre>&#x27;jpfilho&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>LS_COLORS</td>
          <td class="code"><pre>&#x27;rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:mi=00:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arc=01;31:*.arj=01;31:*.taz=01;31:*.lha=01;31:*.lz4=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.tzo=01;31:*.t7z=01;31:*.zip=01;31:*.z=01;31:*.dz=01;31:*.gz=01;31:*.lrz=01;31:*.lz=01;31:*.lzo=01;31:*.xz=01;31:*.zst=01;31:*.tzst=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.alz=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.cab=01;31:*.wim=01;31:*.swm=01;31:*.dwm=01;31:*.esd=01;31:*.jpg=01;35:*.jpeg=01;35:*.mjpg=01;35:*.mjpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.webp=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=00;36:*.au=00;36:*.flac=00;36:*.m4a=00;36:*.mid=00;36:*.midi=00;36:*.mka=00;36:*.mp3=00;36:*.mpc=00;36:*.ogg=00;36:*.ra=00;36:*.wav=00;36:*.oga=00;36:*.opus=00;36:*.spx=00;36:*.xspf=00;36:&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>MANAGERPID</td>
          <td class="code"><pre>&#x27;1783&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>MAVEN_HOME</td>
          <td class="code"><pre>&#x27;/home/jpfilho/.sdkman/candidates/maven/current&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>NVM_BIN</td>
          <td class="code"><pre>&#x27;/home/jpfilho/.nvm/versions/node/v18.16.0/bin&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>NVM_CD_FLAGS</td>
          <td class="code"><pre>&#x27;&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>NVM_DIR</td>
          <td class="code"><pre>&#x27;/home/jpfilho/.nvm&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>NVM_INC</td>
          <td class="code"><pre>&#x27;/home/jpfilho/.nvm/versions/node/v18.16.0/include/node&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>ORIGINAL_XDG_CURRENT_DESKTOP</td>
          <td class="code"><pre>&#x27;ubuntu:GNOME&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>PATH</td>
          <td class="code"><pre>&#x27;/home/jpfilho/.pyenv/libexec:/home/jpfilho/.pyenv/plugins/python-build/bin:/home/jpfilho/.pyenv/plugins/pyenv-virtualenv/bin:/home/jpfilho/.pyenv/plugins/pyenv-update/bin:/home/jpfilho/.pyenv/plugins/pyenv-doctor/bin:/home/jpfilho/.pyenv/shims:/home/jpfilho/.local/bin:/home/jpfilho/.pyenv/bin:/home/jpfilho/.nvm/versions/node/v18.16.0/bin:/home/jpfilho/.sdkman/candidates/maven/current/bin:/home/jpfilho/.sdkman/candidates/java/current/bin:/home/jpfilho/.local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:/snap/bin&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>PATH_INFO</td>
          <td class="code"><pre>&#x27;/webhook/messages/create&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>PWD</td>
          <td class="code"><pre>&#x27;/home/jpfilho/Documents/code-ws/python/webhook&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>PYENV_DIR</td>
          <td class="code"><pre>&#x27;/home/jpfilho/Documents/code-ws/python/webhook&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>PYENV_HOOK_PATH</td>
          <td class="code"><pre>&#x27;/home/jpfilho/.pyenv/pyenv.d:/usr/local/etc/pyenv.d:/etc/pyenv.d:/usr/lib/pyenv/hooks:/home/jpfilho/.pyenv/plugins/pyenv-virtualenv/etc/pyenv.d&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>PYENV_ROOT</td>
          <td class="code"><pre>&#x27;/home/jpfilho/.pyenv&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>PYENV_SHELL</td>
          <td class="code"><pre>&#x27;bash&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>PYENV_VERSION</td>
          <td class="code"><pre>&#x27;system&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>QT_ACCESSIBILITY</td>
          <td class="code"><pre>&#x27;1&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>QT_IM_MODULE</td>
          <td class="code"><pre>&#x27;ibus&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>QUERY_STRING</td>
          <td class="code"><pre>&#x27;phone=5588988562749&amp;period=05%2F23&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>REMOTE_ADDR</td>
          <td class="code"><pre>&#x27;127.0.0.1&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>REMOTE_HOST</td>
          <td class="code"><pre>&#x27;&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>REQUEST_METHOD</td>
          <td class="code"><pre>&#x27;POST&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>RUN_MAIN</td>
          <td class="code"><pre>&#x27;true&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SCRIPT_NAME</td>
          <td class="code"><pre>&#x27;&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SDKMAN_CANDIDATES_API</td>
          <td class="code"><pre>&#x27;********************&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SDKMAN_CANDIDATES_DIR</td>
          <td class="code"><pre>&#x27;/home/jpfilho/.sdkman/candidates&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SDKMAN_DIR</td>
          <td class="code"><pre>&#x27;/home/jpfilho/.sdkman&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SDKMAN_PLATFORM</td>
          <td class="code"><pre>&#x27;linuxx64&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SDKMAN_VERSION</td>
          <td class="code"><pre>&#x27;5.16.0&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SERVER_NAME</td>
          <td class="code"><pre>&#x27;localhost&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SERVER_PORT</td>
          <td class="code"><pre>&#x27;8000&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SERVER_PROTOCOL</td>
          <td class="code"><pre>&#x27;HTTP/1.1&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SERVER_SOFTWARE</td>
          <td class="code"><pre>&#x27;WSGIServer/0.2&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_MANAGER</td>
          <td class="code"><pre>&#x27;local/JPSERVER:@/tmp/.ICE-unix/2038,unix/JPSERVER:/tmp/.ICE-unix/2038&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SHELL</td>
          <td class="code"><pre>&#x27;/bin/bash&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SHLVL</td>
          <td class="code"><pre>&#x27;1&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SSH_AGENT_LAUNCHER</td>
          <td class="code"><pre>&#x27;openssh&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SSH_AUTH_SOCK</td>
          <td class="code"><pre>&#x27;/run/user/1000/keyring/ssh&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SYSTEMD_EXEC_PID</td>
          <td class="code"><pre>&#x27;2065&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>TERM</td>
          <td class="code"><pre>&#x27;xterm-256color&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>TERM_PROGRAM</td>
          <td class="code"><pre>&#x27;vscode&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>TERM_PROGRAM_VERSION</td>
          <td class="code"><pre>&#x27;1.78.2&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>TOKEN_API</td>
          <td class="code"><pre>&#x27;********************&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>TZ</td>
          <td class="code"><pre>&#x27;UTC&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>USER</td>
          <td class="code"><pre>&#x27;jpfilho&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>USERNAME</td>
          <td class="code"><pre>&#x27;jpfilho&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>VSCODE_GIT_ASKPASS_EXTRA_ARGS</td>
          <td class="code"><pre>&#x27;********************&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>VSCODE_GIT_ASKPASS_MAIN</td>
          <td class="code"><pre>&#x27;********************&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>VSCODE_GIT_ASKPASS_NODE</td>
          <td class="code"><pre>&#x27;********************&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>VSCODE_GIT_IPC_HANDLE</td>
          <td class="code"><pre>&#x27;/run/user/1000/vscode-git-1d8a16cec2.sock&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>WEBHOOK_API</td>
          <td class="code"><pre>&#x27;********************&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>WEB_URL</td>
          <td class="code"><pre>&#x27;https://woz.herokuapp.com&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>WINDOWPATH</td>
          <td class="code"><pre>&#x27;2&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>XAUTHORITY</td>
          <td class="code"><pre>&#x27;/run/user/1000/gdm/Xauthority&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>XDG_CONFIG_DIRS</td>
          <td class="code"><pre>&#x27;/etc/xdg/xdg-ubuntu:/etc/xdg&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>XDG_CURRENT_DESKTOP</td>
          <td class="code"><pre>&#x27;Unity&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>XDG_DATA_DIRS</td>
          <td class="code"><pre>&#x27;/home/jpfilho/snap/code/129/.local/share:/home/jpfilho/snap/code/129:/snap/code/129/usr/share:/usr/share/ubuntu:/usr/share/gnome:/usr/local/share/:/usr/share/:/var/lib/snapd/desktop&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>XDG_MENU_PREFIX</td>
          <td class="code"><pre>&#x27;gnome-&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>XDG_RUNTIME_DIR</td>
          <td class="code"><pre>&#x27;/run/user/1000&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>XDG_SESSION_CLASS</td>
          <td class="code"><pre>&#x27;user&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>XDG_SESSION_DESKTOP</td>
          <td class="code"><pre>&#x27;ubuntu&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>XDG_SESSION_TYPE</td>
          <td class="code"><pre>&#x27;x11&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>XMODIFIERS</td>
          <td class="code"><pre>&#x27;@im=ibus&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>wsgi.errors</td>
          <td class="code"><pre>&lt;_io.TextIOWrapper name=&#x27;&lt;stderr&gt;&#x27; mode=&#x27;w&#x27; encoding=&#x27;utf-8&#x27;&gt;</pre></td>
        </tr>
      
        <tr>
          <td>wsgi.file_wrapper</td>
          <td class="code"><pre>&lt;class &#x27;wsgiref.util.FileWrapper&#x27;&gt;</pre></td>
        </tr>
      
        <tr>
          <td>wsgi.input</td>
          <td class="code"><pre>&lt;django.core.handlers.wsgi.LimitedStream object at 0x7efdcb3ecaf0&gt;</pre></td>
        </tr>
      
        <tr>
          <td>wsgi.multiprocess</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>wsgi.multithread</td>
          <td class="code"><pre>True</pre></td>
        </tr>
      
        <tr>
          <td>wsgi.run_once</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>wsgi.url_scheme</td>
          <td class="code"><pre>&#x27;http&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>wsgi.version</td>
          <td class="code"><pre>(1, 0)</pre></td>
        </tr>
      
    </tbody>
  </table>


  <h3 id="settings-info">Settings</h3>
  <h4>Using settings module <code>webhook.settings</code></h4>
  <table class="req">
    <thead>
      <tr>
        <th>Setting</th>
        <th>Value</th>
      </tr>
    </thead>
    <tbody>
      
        <tr>
          <td>ABSOLUTE_URL_OVERRIDES</td>
          <td class="code"><pre>{}</pre></td>
        </tr>
      
        <tr>
          <td>ADMINS</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>ALLOWED_HOSTS</td>
          <td class="code"><pre>[&#x27;*&#x27;]</pre></td>
        </tr>
      
        <tr>
          <td>APPEND_SLASH</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>AUTHENTICATION_BACKENDS</td>
          <td class="code"><pre>[&#x27;django.contrib.auth.backends.ModelBackend&#x27;]</pre></td>
        </tr>
      
        <tr>
          <td>AUTH_PASSWORD_VALIDATORS</td>
          <td class="code"><pre>&#x27;********************&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>AUTH_USER_MODEL</td>
          <td class="code"><pre>&#x27;auth.User&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>BASE_DIR</td>
          <td class="code"><pre>PosixPath(&#x27;/home/jpfilho/Documents/code-ws/python/webhook&#x27;)</pre></td>
        </tr>
      
        <tr>
          <td>BROKER_URL</td>
          <td class="code"><pre>&#x27;amqps://kzthoddb:3CziblJY4U4tFRNmARuMMdIDu8z53Ql6@fly.rmq.cloudamqp.com/kzthoddb&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>CACHES</td>
          <td class="code"><pre>{&#x27;default&#x27;: {&#x27;BACKEND&#x27;: &#x27;django.core.cache.backends.locmem.LocMemCache&#x27;}}</pre></td>
        </tr>
      
        <tr>
          <td>CACHE_MIDDLEWARE_ALIAS</td>
          <td class="code"><pre>&#x27;default&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>CACHE_MIDDLEWARE_KEY_PREFIX</td>
          <td class="code"><pre>&#x27;********************&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>CACHE_MIDDLEWARE_SECONDS</td>
          <td class="code"><pre>600</pre></td>
        </tr>
      
        <tr>
          <td>CELERY_BROKER_URL</td>
          <td class="code"><pre>&#x27;amqps://kzthoddb:3CziblJY4U4tFRNmARuMMdIDu8z53Ql6@fly.rmq.cloudamqp.com/kzthoddb&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>CSRF_COOKIE_AGE</td>
          <td class="code"><pre>31449600</pre></td>
        </tr>
      
        <tr>
          <td>CSRF_COOKIE_DOMAIN</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>CSRF_COOKIE_HTTPONLY</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>CSRF_COOKIE_MASKED</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>CSRF_COOKIE_NAME</td>
          <td class="code"><pre>&#x27;csrftoken&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>CSRF_COOKIE_PATH</td>
          <td class="code"><pre>&#x27;/&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>CSRF_COOKIE_SAMESITE</td>
          <td class="code"><pre>&#x27;Lax&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>CSRF_COOKIE_SECURE</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>CSRF_FAILURE_VIEW</td>
          <td class="code"><pre>&#x27;django.views.csrf.csrf_failure&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>CSRF_HEADER_NAME</td>
          <td class="code"><pre>&#x27;HTTP_X_CSRFTOKEN&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>CSRF_TRUSTED_ORIGINS</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>CSRF_USE_SESSIONS</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>DATABASES</td>
          <td class="code"><pre>{&#x27;default&#x27;: {&#x27;ATOMIC_REQUESTS&#x27;: False,
             &#x27;AUTOCOMMIT&#x27;: True,
             &#x27;CONN_HEALTH_CHECKS&#x27;: False,
             &#x27;CONN_MAX_AGE&#x27;: 0,
             &#x27;ENGINE&#x27;: &#x27;django.db.backends.postgresql&#x27;,
             &#x27;HOST&#x27;: &#x27;ep-young-feather-699075.us-east-1.aws.neon.tech&#x27;,
             &#x27;NAME&#x27;: &#x27;neondb&#x27;,
             &#x27;OPTIONS&#x27;: {},
             &#x27;PASSWORD&#x27;: &#x27;********************&#x27;,
             &#x27;PORT&#x27;: &#x27;5432&#x27;,
             &#x27;TEST&#x27;: {&#x27;CHARSET&#x27;: None,
                      &#x27;COLLATION&#x27;: None,
                      &#x27;MIGRATE&#x27;: True,
                      &#x27;MIRROR&#x27;: None,
                      &#x27;NAME&#x27;: None},
             &#x27;TIME_ZONE&#x27;: None,
             &#x27;USER&#x27;: &#x27;psousaj&#x27;}}</pre></td>
        </tr>
      
        <tr>
          <td>DATABASE_ROUTERS</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>DATA_UPLOAD_MAX_MEMORY_SIZE</td>
          <td class="code"><pre>2621440</pre></td>
        </tr>
      
        <tr>
          <td>DATA_UPLOAD_MAX_NUMBER_FIELDS</td>
          <td class="code"><pre>1000</pre></td>
        </tr>
      
        <tr>
          <td>DATA_UPLOAD_MAX_NUMBER_FILES</td>
          <td class="code"><pre>100</pre></td>
        </tr>
      
        <tr>
          <td>DATETIME_FORMAT</td>
          <td class="code"><pre>&#x27;N j, Y, P&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>DATETIME_INPUT_FORMATS</td>
          <td class="code"><pre>[&#x27;%Y-%m-%d %H:%M:%S&#x27;,
 &#x27;%Y-%m-%d %H:%M:%S.%f&#x27;,
 &#x27;%Y-%m-%d %H:%M&#x27;,
 &#x27;%m/%d/%Y %H:%M:%S&#x27;,
 &#x27;%m/%d/%Y %H:%M:%S.%f&#x27;,
 &#x27;%m/%d/%Y %H:%M&#x27;,
 &#x27;%m/%d/%y %H:%M:%S&#x27;,
 &#x27;%m/%d/%y %H:%M:%S.%f&#x27;,
 &#x27;%m/%d/%y %H:%M&#x27;]</pre></td>
        </tr>
      
        <tr>
          <td>DATE_FORMAT</td>
          <td class="code"><pre>&#x27;N j, Y&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>DATE_INPUT_FORMATS</td>
          <td class="code"><pre>[&#x27;%Y-%m-%d&#x27;,
 &#x27;%m/%d/%Y&#x27;,
 &#x27;%m/%d/%y&#x27;,
 &#x27;%b %d %Y&#x27;,
 &#x27;%b %d, %Y&#x27;,
 &#x27;%d %b %Y&#x27;,
 &#x27;%d %b, %Y&#x27;,
 &#x27;%B %d %Y&#x27;,
 &#x27;%B %d, %Y&#x27;,
 &#x27;%d %B %Y&#x27;,
 &#x27;%d %B, %Y&#x27;]</pre></td>
        </tr>
      
        <tr>
          <td>DEBUG</td>
          <td class="code"><pre>True</pre></td>
        </tr>
      
        <tr>
          <td>DEBUG_PROPAGATE_EXCEPTIONS</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>DECIMAL_SEPARATOR</td>
          <td class="code"><pre>&#x27;.&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>DEFAULT_AUTO_FIELD</td>
          <td class="code"><pre>&#x27;django.db.models.BigAutoField&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>DEFAULT_CHARSET</td>
          <td class="code"><pre>&#x27;utf-8&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>DEFAULT_EXCEPTION_REPORTER</td>
          <td class="code"><pre>&#x27;django.views.debug.ExceptionReporter&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>DEFAULT_EXCEPTION_REPORTER_FILTER</td>
          <td class="code"><pre>&#x27;django.views.debug.SafeExceptionReporterFilter&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>DEFAULT_FILE_STORAGE</td>
          <td class="code"><pre>&#x27;django.core.files.storage.FileSystemStorage&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>DEFAULT_FROM_EMAIL</td>
          <td class="code"><pre>&#x27;webmaster@localhost&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>DEFAULT_INDEX_TABLESPACE</td>
          <td class="code"><pre>&#x27;&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>DEFAULT_TABLESPACE</td>
          <td class="code"><pre>&#x27;&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>DISALLOWED_USER_AGENTS</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>EMAIL_BACKEND</td>
          <td class="code"><pre>&#x27;django.core.mail.backends.smtp.EmailBackend&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>EMAIL_HOST</td>
          <td class="code"><pre>&#x27;localhost&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>EMAIL_HOST_PASSWORD</td>
          <td class="code"><pre>&#x27;********************&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>EMAIL_HOST_USER</td>
          <td class="code"><pre>&#x27;&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>EMAIL_PORT</td>
          <td class="code"><pre>25</pre></td>
        </tr>
      
        <tr>
          <td>EMAIL_SSL_CERTFILE</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>EMAIL_SSL_KEYFILE</td>
          <td class="code"><pre>&#x27;********************&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>EMAIL_SUBJECT_PREFIX</td>
          <td class="code"><pre>&#x27;[Django] &#x27;</pre></td>
        </tr>
      
        <tr>
          <td>EMAIL_TIMEOUT</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>EMAIL_USE_LOCALTIME</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>EMAIL_USE_SSL</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>EMAIL_USE_TLS</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>FILE_UPLOAD_DIRECTORY_PERMISSIONS</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>FILE_UPLOAD_HANDLERS</td>
          <td class="code"><pre>[&#x27;django.core.files.uploadhandler.MemoryFileUploadHandler&#x27;,
 &#x27;django.core.files.uploadhandler.TemporaryFileUploadHandler&#x27;]</pre></td>
        </tr>
      
        <tr>
          <td>FILE_UPLOAD_MAX_MEMORY_SIZE</td>
          <td class="code"><pre>2621440</pre></td>
        </tr>
      
        <tr>
          <td>FILE_UPLOAD_PERMISSIONS</td>
          <td class="code"><pre>420</pre></td>
        </tr>
      
        <tr>
          <td>FILE_UPLOAD_TEMP_DIR</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>FIRST_DAY_OF_WEEK</td>
          <td class="code"><pre>0</pre></td>
        </tr>
      
        <tr>
          <td>FIXTURE_DIRS</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>FORCE_SCRIPT_NAME</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>FORMAT_MODULE_PATH</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>FORM_RENDERER</td>
          <td class="code"><pre>&#x27;django.forms.renderers.DjangoTemplates&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>IGNORABLE_404_URLS</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>INSTALLED_APPS</td>
          <td class="code"><pre>[&#x27;django.contrib.admin&#x27;,
 &#x27;django.contrib.auth&#x27;,
 &#x27;django.contrib.contenttypes&#x27;,
 &#x27;django.contrib.sessions&#x27;,
 &#x27;django.contrib.messages&#x27;,
 &#x27;django.contrib.staticfiles&#x27;,
 &#x27;drf_yasg&#x27;,
 &#x27;rest_framework&#x27;,
 &#x27;example&#x27;,
 &#x27;messages_api&#x27;,
 &#x27;celery&#x27;,
 &#x27;django_filters&#x27;]</pre></td>
        </tr>
      
        <tr>
          <td>INTERNAL_IPS</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>LANGUAGES</td>
          <td class="code"><pre>[(&#x27;af&#x27;, &#x27;Afrikaans&#x27;),
 (&#x27;ar&#x27;, &#x27;Arabic&#x27;),
 (&#x27;ar-dz&#x27;, &#x27;Algerian Arabic&#x27;),
 (&#x27;ast&#x27;, &#x27;Asturian&#x27;),
 (&#x27;az&#x27;, &#x27;Azerbaijani&#x27;),
 (&#x27;bg&#x27;, &#x27;Bulgarian&#x27;),
 (&#x27;be&#x27;, &#x27;Belarusian&#x27;),
 (&#x27;bn&#x27;, &#x27;Bengali&#x27;),
 (&#x27;br&#x27;, &#x27;Breton&#x27;),
 (&#x27;bs&#x27;, &#x27;Bosnian&#x27;),
 (&#x27;ca&#x27;, &#x27;Catalan&#x27;),
 (&#x27;ckb&#x27;, &#x27;Central Kurdish (Sorani)&#x27;),
 (&#x27;cs&#x27;, &#x27;Czech&#x27;),
 (&#x27;cy&#x27;, &#x27;Welsh&#x27;),
 (&#x27;da&#x27;, &#x27;Danish&#x27;),
 (&#x27;de&#x27;, &#x27;German&#x27;),
 (&#x27;dsb&#x27;, &#x27;Lower Sorbian&#x27;),
 (&#x27;el&#x27;, &#x27;Greek&#x27;),
 (&#x27;en&#x27;, &#x27;English&#x27;),
 (&#x27;en-au&#x27;, &#x27;Australian English&#x27;),
 (&#x27;en-gb&#x27;, &#x27;British English&#x27;),
 (&#x27;eo&#x27;, &#x27;Esperanto&#x27;),
 (&#x27;es&#x27;, &#x27;Spanish&#x27;),
 (&#x27;es-ar&#x27;, &#x27;Argentinian Spanish&#x27;),
 (&#x27;es-co&#x27;, &#x27;Colombian Spanish&#x27;),
 (&#x27;es-mx&#x27;, &#x27;Mexican Spanish&#x27;),
 (&#x27;es-ni&#x27;, &#x27;Nicaraguan Spanish&#x27;),
 (&#x27;es-ve&#x27;, &#x27;Venezuelan Spanish&#x27;),
 (&#x27;et&#x27;, &#x27;Estonian&#x27;),
 (&#x27;eu&#x27;, &#x27;Basque&#x27;),
 (&#x27;fa&#x27;, &#x27;Persian&#x27;),
 (&#x27;fi&#x27;, &#x27;Finnish&#x27;),
 (&#x27;fr&#x27;, &#x27;French&#x27;),
 (&#x27;fy&#x27;, &#x27;Frisian&#x27;),
 (&#x27;ga&#x27;, &#x27;Irish&#x27;),
 (&#x27;gd&#x27;, &#x27;Scottish Gaelic&#x27;),
 (&#x27;gl&#x27;, &#x27;Galician&#x27;),
 (&#x27;he&#x27;, &#x27;Hebrew&#x27;),
 (&#x27;hi&#x27;, &#x27;Hindi&#x27;),
 (&#x27;hr&#x27;, &#x27;Croatian&#x27;),
 (&#x27;hsb&#x27;, &#x27;Upper Sorbian&#x27;),
 (&#x27;hu&#x27;, &#x27;Hungarian&#x27;),
 (&#x27;hy&#x27;, &#x27;Armenian&#x27;),
 (&#x27;ia&#x27;, &#x27;Interlingua&#x27;),
 (&#x27;id&#x27;, &#x27;Indonesian&#x27;),
 (&#x27;ig&#x27;, &#x27;Igbo&#x27;),
 (&#x27;io&#x27;, &#x27;Ido&#x27;),
 (&#x27;is&#x27;, &#x27;Icelandic&#x27;),
 (&#x27;it&#x27;, &#x27;Italian&#x27;),
 (&#x27;ja&#x27;, &#x27;Japanese&#x27;),
 (&#x27;ka&#x27;, &#x27;Georgian&#x27;),
 (&#x27;kab&#x27;, &#x27;Kabyle&#x27;),
 (&#x27;kk&#x27;, &#x27;Kazakh&#x27;),
 (&#x27;km&#x27;, &#x27;Khmer&#x27;),
 (&#x27;kn&#x27;, &#x27;Kannada&#x27;),
 (&#x27;ko&#x27;, &#x27;Korean&#x27;),
 (&#x27;ky&#x27;, &#x27;Kyrgyz&#x27;),
 (&#x27;lb&#x27;, &#x27;Luxembourgish&#x27;),
 (&#x27;lt&#x27;, &#x27;Lithuanian&#x27;),
 (&#x27;lv&#x27;, &#x27;Latvian&#x27;),
 (&#x27;mk&#x27;, &#x27;Macedonian&#x27;),
 (&#x27;ml&#x27;, &#x27;Malayalam&#x27;),
 (&#x27;mn&#x27;, &#x27;Mongolian&#x27;),
 (&#x27;mr&#x27;, &#x27;Marathi&#x27;),
 (&#x27;ms&#x27;, &#x27;Malay&#x27;),
 (&#x27;my&#x27;, &#x27;Burmese&#x27;),
 (&#x27;nb&#x27;, &#x27;Norwegian Bokmål&#x27;),
 (&#x27;ne&#x27;, &#x27;Nepali&#x27;),
 (&#x27;nl&#x27;, &#x27;Dutch&#x27;),
 (&#x27;nn&#x27;, &#x27;Norwegian Nynorsk&#x27;),
 (&#x27;os&#x27;, &#x27;Ossetic&#x27;),
 (&#x27;pa&#x27;, &#x27;Punjabi&#x27;),
 (&#x27;pl&#x27;, &#x27;Polish&#x27;),
 (&#x27;pt&#x27;, &#x27;Portuguese&#x27;),
 (&#x27;pt-br&#x27;, &#x27;Brazilian Portuguese&#x27;),
 (&#x27;ro&#x27;, &#x27;Romanian&#x27;),
 (&#x27;ru&#x27;, &#x27;Russian&#x27;),
 (&#x27;sk&#x27;, &#x27;Slovak&#x27;),
 (&#x27;sl&#x27;, &#x27;Slovenian&#x27;),
 (&#x27;sq&#x27;, &#x27;Albanian&#x27;),
 (&#x27;sr&#x27;, &#x27;Serbian&#x27;),
 (&#x27;sr-latn&#x27;, &#x27;Serbian Latin&#x27;),
 (&#x27;sv&#x27;, &#x27;Swedish&#x27;),
 (&#x27;sw&#x27;, &#x27;Swahili&#x27;),
 (&#x27;ta&#x27;, &#x27;Tamil&#x27;),
 (&#x27;te&#x27;, &#x27;Telugu&#x27;),
 (&#x27;tg&#x27;, &#x27;Tajik&#x27;),
 (&#x27;th&#x27;, &#x27;Thai&#x27;),
 (&#x27;tk&#x27;, &#x27;Turkmen&#x27;),
 (&#x27;tr&#x27;, &#x27;Turkish&#x27;),
 (&#x27;tt&#x27;, &#x27;Tatar&#x27;),
 (&#x27;udm&#x27;, &#x27;Udmurt&#x27;),
 (&#x27;uk&#x27;, &#x27;Ukrainian&#x27;),
 (&#x27;ur&#x27;, &#x27;Urdu&#x27;),
 (&#x27;uz&#x27;, &#x27;Uzbek&#x27;),
 (&#x27;vi&#x27;, &#x27;Vietnamese&#x27;),
 (&#x27;zh-hans&#x27;, &#x27;Simplified Chinese&#x27;),
 (&#x27;zh-hant&#x27;, &#x27;Traditional Chinese&#x27;)]</pre></td>
        </tr>
      
        <tr>
          <td>LANGUAGES_BIDI</td>
          <td class="code"><pre>[&#x27;he&#x27;, &#x27;ar&#x27;, &#x27;ar-dz&#x27;, &#x27;ckb&#x27;, &#x27;fa&#x27;, &#x27;ur&#x27;]</pre></td>
        </tr>
      
        <tr>
          <td>LANGUAGE_CODE</td>
          <td class="code"><pre>&#x27;pt-BR&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>LANGUAGE_COOKIE_AGE</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>LANGUAGE_COOKIE_DOMAIN</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>LANGUAGE_COOKIE_HTTPONLY</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>LANGUAGE_COOKIE_NAME</td>
          <td class="code"><pre>&#x27;django_language&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>LANGUAGE_COOKIE_PATH</td>
          <td class="code"><pre>&#x27;/&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>LANGUAGE_COOKIE_SAMESITE</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>LANGUAGE_COOKIE_SECURE</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>LOCALE_PATHS</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>LOGGING</td>
          <td class="code"><pre>{}</pre></td>
        </tr>
      
        <tr>
          <td>LOGGING_CONFIG</td>
          <td class="code"><pre>&#x27;logging.config.dictConfig&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>LOGIN_REDIRECT_URL</td>
          <td class="code"><pre>&#x27;/accounts/profile/&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>LOGIN_URL</td>
          <td class="code"><pre>&#x27;/accounts/login/&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>LOGOUT_REDIRECT_URL</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>MANAGERS</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>MEDIA_ROOT</td>
          <td class="code"><pre>&#x27;&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>MEDIA_URL</td>
          <td class="code"><pre>&#x27;/&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>MESSAGE_STORAGE</td>
          <td class="code"><pre>&#x27;django.contrib.messages.storage.fallback.FallbackStorage&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>MIDDLEWARE</td>
          <td class="code"><pre>[&#x27;django.middleware.security.SecurityMiddleware&#x27;,
 &#x27;django.contrib.sessions.middleware.SessionMiddleware&#x27;,
 &#x27;django.middleware.common.CommonMiddleware&#x27;,
 &#x27;django.middleware.csrf.CsrfViewMiddleware&#x27;,
 &#x27;django.contrib.auth.middleware.AuthenticationMiddleware&#x27;,
 &#x27;django.contrib.messages.middleware.MessageMiddleware&#x27;,
 &#x27;django.middleware.clickjacking.XFrameOptionsMiddleware&#x27;]</pre></td>
        </tr>
      
        <tr>
          <td>MIGRATION_MODULES</td>
          <td class="code"><pre>{}</pre></td>
        </tr>
      
        <tr>
          <td>MONTH_DAY_FORMAT</td>
          <td class="code"><pre>&#x27;F j&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>NUMBER_GROUPING</td>
          <td class="code"><pre>0</pre></td>
        </tr>
      
        <tr>
          <td>PASSWORD_HASHERS</td>
          <td class="code"><pre>&#x27;********************&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>PASSWORD_RESET_TIMEOUT</td>
          <td class="code"><pre>&#x27;********************&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>PREPEND_WWW</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>ROOT_URLCONF</td>
          <td class="code"><pre>&#x27;webhook.urls&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SECRET_KEY</td>
          <td class="code"><pre>&#x27;********************&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SECRET_KEY_FALLBACKS</td>
          <td class="code"><pre>&#x27;********************&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SECURE_CONTENT_TYPE_NOSNIFF</td>
          <td class="code"><pre>True</pre></td>
        </tr>
      
        <tr>
          <td>SECURE_CROSS_ORIGIN_OPENER_POLICY</td>
          <td class="code"><pre>&#x27;same-origin&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SECURE_HSTS_INCLUDE_SUBDOMAINS</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>SECURE_HSTS_PRELOAD</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>SECURE_HSTS_SECONDS</td>
          <td class="code"><pre>0</pre></td>
        </tr>
      
        <tr>
          <td>SECURE_PROXY_SSL_HEADER</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>SECURE_REDIRECT_EXEMPT</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>SECURE_REFERRER_POLICY</td>
          <td class="code"><pre>&#x27;same-origin&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SECURE_SSL_HOST</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>SECURE_SSL_REDIRECT</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>SERVER_EMAIL</td>
          <td class="code"><pre>&#x27;root@localhost&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_CACHE_ALIAS</td>
          <td class="code"><pre>&#x27;default&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_COOKIE_AGE</td>
          <td class="code"><pre>1209600</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_COOKIE_DOMAIN</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_COOKIE_HTTPONLY</td>
          <td class="code"><pre>True</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_COOKIE_NAME</td>
          <td class="code"><pre>&#x27;sessionid&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_COOKIE_PATH</td>
          <td class="code"><pre>&#x27;/&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_COOKIE_SAMESITE</td>
          <td class="code"><pre>&#x27;Lax&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_COOKIE_SECURE</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_ENGINE</td>
          <td class="code"><pre>&#x27;django.contrib.sessions.backends.db&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_EXPIRE_AT_BROWSER_CLOSE</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_FILE_PATH</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_SAVE_EVERY_REQUEST</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_SERIALIZER</td>
          <td class="code"><pre>&#x27;django.contrib.sessions.serializers.JSONSerializer&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SETTINGS_MODULE</td>
          <td class="code"><pre>&#x27;webhook.settings&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SHORT_DATETIME_FORMAT</td>
          <td class="code"><pre>&#x27;m/d/Y P&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SHORT_DATE_FORMAT</td>
          <td class="code"><pre>&#x27;m/d/Y&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SIGNING_BACKEND</td>
          <td class="code"><pre>&#x27;django.core.signing.TimestampSigner&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SILENCED_SYSTEM_CHECKS</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>STATICFILES_DIRS</td>
          <td class="code"><pre>[&#x27;/home/jpfilho/Documents/code-ws/python/webhook/statics&#x27;]</pre></td>
        </tr>
      
        <tr>
          <td>STATICFILES_FINDERS</td>
          <td class="code"><pre>[&#x27;django.contrib.staticfiles.finders.FileSystemFinder&#x27;,
 &#x27;django.contrib.staticfiles.finders.AppDirectoriesFinder&#x27;]</pre></td>
        </tr>
      
        <tr>
          <td>STATICFILES_STORAGE</td>
          <td class="code"><pre>&#x27;django.contrib.staticfiles.storage.StaticFilesStorage&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>STATIC_ROOT</td>
          <td class="code"><pre>&#x27;/home/jpfilho/Documents/code-ws/python/webhook/static&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>STATIC_URL</td>
          <td class="code"><pre>&#x27;/static/&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>STORAGES</td>
          <td class="code"><pre>{&#x27;default&#x27;: {&#x27;BACKEND&#x27;: &#x27;django.core.files.storage.FileSystemStorage&#x27;},
 &#x27;staticfiles&#x27;: {&#x27;BACKEND&#x27;: &#x27;django.contrib.staticfiles.storage.StaticFilesStorage&#x27;}}</pre></td>
        </tr>
      
        <tr>
          <td>TEMPLATES</td>
          <td class="code"><pre>[{&#x27;APP_DIRS&#x27;: True,
  &#x27;BACKEND&#x27;: &#x27;django.template.backends.django.DjangoTemplates&#x27;,
  &#x27;DIRS&#x27;: [],
  &#x27;OPTIONS&#x27;: {&#x27;context_processors&#x27;: [&#x27;django.template.context_processors.debug&#x27;,
                                     &#x27;django.template.context_processors.request&#x27;,
                                     &#x27;django.contrib.auth.context_processors.auth&#x27;,
                                     &#x27;django.contrib.messages.context_processors.messages&#x27;]}}]</pre></td>
        </tr>
      
        <tr>
          <td>TEST_NON_SERIALIZED_APPS</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>TEST_RUNNER</td>
          <td class="code"><pre>&#x27;django.test.runner.DiscoverRunner&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>THOUSAND_SEPARATOR</td>
          <td class="code"><pre>&#x27;,&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>TIME_FORMAT</td>
          <td class="code"><pre>&#x27;P&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>TIME_INPUT_FORMATS</td>
          <td class="code"><pre>[&#x27;%H:%M:%S&#x27;, &#x27;%H:%M:%S.%f&#x27;, &#x27;%H:%M&#x27;]</pre></td>
        </tr>
      
        <tr>
          <td>TIME_ZONE</td>
          <td class="code"><pre>&#x27;UTC&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>USE_DEPRECATED_PYTZ</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>USE_I18N</td>
          <td class="code"><pre>True</pre></td>
        </tr>
      
        <tr>
          <td>USE_L10N</td>
          <td class="code"><pre>True</pre></td>
        </tr>
      
        <tr>
          <td>USE_THOUSAND_SEPARATOR</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>USE_TZ</td>
          <td class="code"><pre>True</pre></td>
        </tr>
      
        <tr>
          <td>USE_X_FORWARDED_HOST</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>USE_X_FORWARDED_PORT</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>WSGI_APPLICATION</td>
          <td class="code"><pre>&#x27;webhook.wsgi.app&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>X_FRAME_OPTIONS</td>
          <td class="code"><pre>&#x27;DENY&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>YEAR_MONTH_FORMAT</td>
          <td class="code"><pre>&#x27;F Y&#x27;</pre></td>
        </tr>
      
    </tbody>
  </table>

</div>

  <div id="explanation">
    <p>
      You’re seeing this error because you have <code>DEBUG = True</code> in your
      Django settings file. Change that to <code>False</code>, and Django will
      display a standard page generated by the handler for this status code.
    </p>
  </div>

</body>
</html>

21/05/2023|23:38:26 - webhook.views -INFO- Received webhook request
{'event': 'message.updated', 'data': {'id': '99e9b939-bf41-4b49-9421-ebbb4b58f6a6', 'isFromMe': True, 'sent': True, 'type': 'chat', 'timestamp': '2023-05-21T23:29:59.000Z', 'data': {'ack': 3, 'isNew': True, 'isFirst': False}, 'visible': True, 'accountId': '966b70ba-27d8-43ae-a295-35e59f0007be', 'contactId': '79db7607-6088-44c1-a010-ed4ef39d4f37', 'fromId': 'e12d3a56-0c52-43ac-b33c-15c399eb06d4', 'serviceId': '83108c28-14f7-4646-acb8-dab165397fd5', 'toId': None, 'userId': '3f4cc332-516e-4f48-aff2-df6eaa2e5034', 'ticketId': '3e14aea2-bc69-4e56-b20b-1b6d63ade6d5', 'ticketUserId': '3f4cc332-516e-4f48-aff2-df6eaa2e5034', 'ticketDepartmentId': 'a78046d7-809d-4cdb-a72a-31dfbc47d862', 'quotedMessageId': None, 'origin': 'user', 'hsmId': None, 'text': 'Nattan', 'obfuscated': False, 'files': None, 'quotedMessage': None, 'isFromBot': False}, 'webhookId': '27b4c18d-2ab0-4c70-a592-46bbe7e00bc8', 'timestamp': '2023-05-21T23:38:25.610Z'}
21/05/2023|23:38:26 - webhook.views -INFO- Received webhook request
{'event': 'message.updated', 'data': {'id': 'de0dca0e-703b-4403-af36-aa2c616326fd', 'isFromMe': True, 'sent': True, 'type': 'chat', 'timestamp': '2023-05-21T23:13:54.000Z', 'data': {'ack': 3, 'isNew': True, 'isFirst': False}, 'visible': True, 'accountId': '966b70ba-27d8-43ae-a295-35e59f0007be', 'contactId': '79db7607-6088-44c1-a010-ed4ef39d4f37', 'fromId': 'e12d3a56-0c52-43ac-b33c-15c399eb06d4', 'serviceId': '83108c28-14f7-4646-acb8-dab165397fd5', 'toId': None, 'userId': '3f4cc332-516e-4f48-aff2-df6eaa2e5034', 'ticketId': '3e14aea2-bc69-4e56-b20b-1b6d63ade6d5', 'ticketUserId': '3f4cc332-516e-4f48-aff2-df6eaa2e5034', 'ticketDepartmentId': 'a78046d7-809d-4cdb-a72a-31dfbc47d862', 'quotedMessageId': None, 'origin': 'user', 'hsmId': None, 'text': 'Show', 'obfuscated': False, 'files': None, 'quotedMessage': None, 'isFromBot': False}, 'webhookId': '27b4c18d-2ab0-4c70-a592-46bbe7e00bc8', 'timestamp': '2023-05-21T23:38:25.633Z'}
21/05/2023|23:38:26 - webhook.views -INFO- Received webhook request
{'event': 'message.updated', 'data': {'id': '97f16e71-ce9b-40de-9fc0-7a9379af58c1', 'isFromMe': True, 'sent': True, 'type': 'chat', 'timestamp': '2023-05-21T23:10:17.000Z', 'data': {'ack': 3, 'isNew': True, 'isFirst': False}, 'visible': True, 'accountId': '966b70ba-27d8-43ae-a295-35e59f0007be', 'contactId': '79db7607-6088-44c1-a010-ed4ef39d4f37', 'fromId': 'e12d3a56-0c52-43ac-b33c-15c399eb06d4', 'serviceId': '83108c28-14f7-4646-acb8-dab165397fd5', 'toId': None, 'userId': '3f4cc332-516e-4f48-aff2-df6eaa2e5034', 'ticketId': '3e14aea2-bc69-4e56-b20b-1b6d63ade6d5', 'ticketUserId': '3f4cc332-516e-4f48-aff2-df6eaa2e5034', 'ticketDepartmentId': 'a78046d7-809d-4cdb-a72a-31dfbc47d862', 'quotedMessageId': None, 'origin': 'user', 'hsmId': None, 'text': 'E ai', 'obfuscated': False, 'files': None, 'quotedMessage': None, 'isFromBot': False}, 'webhookId': '27b4c18d-2ab0-4c70-a592-46bbe7e00bc8', 'timestamp': '2023-05-21T23:38:25.648Z'}
21/05/2023|23:38:26 - webhook.views -INFO- Received webhook request
{'event': 'message.updated', 'data': {'id': '46312842-ba2f-4fdd-a3d1-cda3d6bc968f', 'isFromMe': True, 'sent': True, 'type': 'chat', 'timestamp': '2023-05-21T23:28:39.000Z', 'data': {'ack': 3, 'isNew': True, 'isFirst': False}, 'visible': True, 'accountId': '966b70ba-27d8-43ae-a295-35e59f0007be', 'contactId': '79db7607-6088-44c1-a010-ed4ef39d4f37', 'fromId': 'e12d3a56-0c52-43ac-b33c-15c399eb06d4', 'serviceId': '83108c28-14f7-4646-acb8-dab165397fd5', 'toId': None, 'userId': '3f4cc332-516e-4f48-aff2-df6eaa2e5034', 'ticketId': '3e14aea2-bc69-4e56-b20b-1b6d63ade6d5', 'ticketUserId': '3f4cc332-516e-4f48-aff2-df6eaa2e5034', 'ticketDepartmentId': 'a78046d7-809d-4cdb-a72a-31dfbc47d862', 'quotedMessageId': None, 'origin': 'user', 'hsmId': None, 'text': 'HAUSHUAHS', 'obfuscated': False, 'files': None, 'quotedMessage': None, 'isFromBot': False}, 'webhookId': '27b4c18d-2ab0-4c70-a592-46bbe7e00bc8', 'timestamp': '2023-05-21T23:38:25.620Z'}
21/05/2023|23:38:26 - webhook.views -INFO- Received webhook request
{'event': 'message.updated', 'data': {'id': 'ec859f85-55db-454d-a7a2-a7e1e3a12727', 'isFromMe': True, 'sent': True, 'type': 'chat', 'timestamp': '2023-05-21T23:02:58.000Z', 'data': {'ack': 3, 'isNew': True, 'isFirst': False}, 'visible': True, 'accountId': '966b70ba-27d8-43ae-a295-35e59f0007be', 'contactId': '79db7607-6088-44c1-a010-ed4ef39d4f37', 'fromId': 'e12d3a56-0c52-43ac-b33c-15c399eb06d4', 'serviceId': '83108c28-14f7-4646-acb8-dab165397fd5', 'toId': None, 'userId': '3f4cc332-516e-4f48-aff2-df6eaa2e5034', 'ticketId': '3e14aea2-bc69-4e56-b20b-1b6d63ade6d5', 'ticketUserId': '3f4cc332-516e-4f48-aff2-df6eaa2e5034', 'ticketDepartmentId': 'a78046d7-809d-4cdb-a72a-31dfbc47d862', 'quotedMessageId': None, 'origin': 'user', 'hsmId': None, 'text': 'Olá, isso é um teste', 'obfuscated': False, 'files': None, 'quotedMessage': None, 'isFromBot': False}, 'webhookId': '27b4c18d-2ab0-4c70-a592-46bbe7e00bc8', 'timestamp': '2023-05-21T23:38:25.616Z'}
21/05/2023|23:38:26 - webhook.views -INFO- Received webhook request
{'event': 'message.updated', 'data': {'id': '1f4681a1-8101-4cdb-95f6-56121de2cb80', 'isFromMe': True, 'sent': True, 'type': 'chat', 'timestamp': '2023-05-21T23:01:01.000Z', 'data': {'ack': 3, 'isNew': True, 'isFirst': False}, 'visible': True, 'accountId': '966b70ba-27d8-43ae-a295-35e59f0007be', 'contactId': '79db7607-6088-44c1-a010-ed4ef39d4f37', 'fromId': 'e12d3a56-0c52-43ac-b33c-15c399eb06d4', 'serviceId': '83108c28-14f7-4646-acb8-dab165397fd5', 'toId': None, 'userId': '3f4cc332-516e-4f48-aff2-df6eaa2e5034', 'ticketId': '4a0a9a8f-702a-4854-9a8c-f4d462240939', 'ticketUserId': '3f4cc332-516e-4f48-aff2-df6eaa2e5034', 'ticketDepartmentId': 'a78046d7-809d-4cdb-a72a-31dfbc47d862', 'quotedMessageId': None, 'origin': 'user', 'hsmId': None, 'text': 'Teste celery 2', 'obfuscated': False, 'files': None, 'quotedMessage': None, 'isFromBot': False}, 'webhookId': '27b4c18d-2ab0-4c70-a592-46bbe7e00bc8', 'timestamp': '2023-05-21T23:38:25.702Z'}
21/05/2023|23:38:26 - webhook.views -INFO- Received webhook request
{'event': 'message.updated', 'data': {'id': '9a7d899e-104d-4d0f-bfa7-b6e3f2cac593', 'isFromMe': True, 'sent': True, 'type': 'chat', 'timestamp': '2023-05-21T23:17:22.000Z', 'data': {'ack': 3, 'isNew': True, 'isFirst': False}, 'visible': True, 'accountId': '966b70ba-27d8-43ae-a295-35e59f0007be', 'contactId': '79db7607-6088-44c1-a010-ed4ef39d4f37', 'fromId': 'e12d3a56-0c52-43ac-b33c-15c399eb06d4', 'serviceId': '83108c28-14f7-4646-acb8-dab165397fd5', 'toId': None, 'userId': '3f4cc332-516e-4f48-aff2-df6eaa2e5034', 'ticketId': '3e14aea2-bc69-4e56-b20b-1b6d63ade6d5', 'ticketUserId': '3f4cc332-516e-4f48-aff2-df6eaa2e5034', 'ticketDepartmentId': 'a78046d7-809d-4cdb-a72a-31dfbc47d862', 'quotedMessageId': None, 'origin': 'user', 'hsmId': None, 'text': 'Show', 'obfuscated': False, 'files': None, 'quotedMessage': None, 'isFromBot': False}, 'webhookId': '27b4c18d-2ab0-4c70-a592-46bbe7e00bc8', 'timestamp': '2023-05-21T23:38:25.633Z'}
21/05/2023|23:38:26 - webhook.views -INFO- Received webhook request
{'event': 'message.updated', 'data': {'id': 'd69ffd12-7437-4825-8eaf-cb08a33df24d', 'isFromMe': True, 'sent': True, 'type': 'chat', 'timestamp': '2023-05-21T23:14:54.000Z', 'data': {'ack': 3, 'isNew': True, 'isFirst': False}, 'visible': True, 'accountId': '966b70ba-27d8-43ae-a295-35e59f0007be', 'contactId': '79db7607-6088-44c1-a010-ed4ef39d4f37', 'fromId': 'e12d3a56-0c52-43ac-b33c-15c399eb06d4', 'serviceId': '83108c28-14f7-4646-acb8-dab165397fd5', 'toId': None, 'userId': '3f4cc332-516e-4f48-aff2-df6eaa2e5034', 'ticketId': '3e14aea2-bc69-4e56-b20b-1b6d63ade6d5', 'ticketUserId': '3f4cc332-516e-4f48-aff2-df6eaa2e5034', 'ticketDepartmentId': 'a78046d7-809d-4cdb-a72a-31dfbc47d862', 'quotedMessageId': None, 'origin': 'user', 'hsmId': None, 'text': 'ie', 'obfuscated': False, 'files': None, 'quotedMessage': None, 'isFromBot': False}, 'webhookId': '27b4c18d-2ab0-4c70-a592-46bbe7e00bc8', 'timestamp': '2023-05-21T23:38:25.670Z'}
21/05/2023|23:38:26 - webhook.views -INFO- Received webhook request
{'event': 'message.updated', 'data': {'id': 'cd1bece8-5870-41f6-a064-ce2c32faa4d8', 'isFromMe': True, 'sent': True, 'type': 'chat', 'timestamp': '2023-05-21T21:33:47.000Z', 'data': {'ack': 3, 'isNew': True, 'isFirst': False}, 'visible': True, 'accountId': '966b70ba-27d8-43ae-a295-35e59f0007be', 'contactId': '79db7607-6088-44c1-a010-ed4ef39d4f37', 'fromId': 'e12d3a56-0c52-43ac-b33c-15c399eb06d4', 'serviceId': '83108c28-14f7-4646-acb8-dab165397fd5', 'toId': None, 'userId': '3f4cc332-516e-4f48-aff2-df6eaa2e5034', 'ticketId': '4a0a9a8f-702a-4854-9a8c-f4d462240939', 'ticketUserId': '3f4cc332-516e-4f48-aff2-df6eaa2e5034', 'ticketDepartmentId': 'a78046d7-809d-4cdb-a72a-31dfbc47d862', 'quotedMessageId': None, 'origin': 'user', 'hsmId': None, 'text': 'Olá', 'obfuscated': False, 'files': None, 'quotedMessage': None, 'isFromBot': False}, 'webhookId': '27b4c18d-2ab0-4c70-a592-46bbe7e00bc8', 'timestamp': '2023-05-21T23:38:25.738Z'}
21/05/2023|23:38:26 - webhook.views -INFO- Received webhook request
{'event': 'message.updated', 'data': {'id': '9bd8e24b-d0fd-46c5-a6a2-ce622cea680b', 'isFromMe': True, 'sent': True, 'type': 'chat', 'timestamp': '2023-05-21T23:14:25.000Z', 'data': {'ack': 3, 'isNew': True, 'isFirst': False}, 'visible': True, 'accountId': '966b70ba-27d8-43ae-a295-35e59f0007be', 'contactId': '79db7607-6088-44c1-a010-ed4ef39d4f37', 'fromId': 'e12d3a56-0c52-43ac-b33c-15c399eb06d4', 'serviceId': '83108c28-14f7-4646-acb8-dab165397fd5', 'toId': None, 'userId': '3f4cc332-516e-4f48-aff2-df6eaa2e5034', 'ticketId': '3e14aea2-bc69-4e56-b20b-1b6d63ade6d5', 'ticketUserId': '3f4cc332-516e-4f48-aff2-df6eaa2e5034', 'ticketDepartmentId': 'a78046d7-809d-4cdb-a72a-31dfbc47d862', 'quotedMessageId': None, 'origin': 'user', 'hsmId': None, 'text': 'Show Show', 'obfuscated': False, 'files': None, 'quotedMessage': None, 'isFromBot': False}, 'webhookId': '27b4c18d-2ab0-4c70-a592-46bbe7e00bc8', 'timestamp': '2023-05-21T23:38:25.648Z'}
21/05/2023|23:38:26 - webhook.views -INFO- Received webhook request
{'event': 'message.updated', 'data': {'id': 'a161fac8-df10-435b-a5b3-4578cd22db06', 'isFromMe': True, 'sent': True, 'type': 'chat', 'timestamp': '2023-05-21T23:01:57.000Z', 'data': {'ack': 3, 'isNew': True, 'isFirst': False}, 'visible': True, 'accountId': '966b70ba-27d8-43ae-a295-35e59f0007be', 'contactId': '79db7607-6088-44c1-a010-ed4ef39d4f37', 'fromId': 'e12d3a56-0c52-43ac-b33c-15c399eb06d4', 'serviceId': '83108c28-14f7-4646-acb8-dab165397fd5', 'toId': None, 'userId': '3f4cc332-516e-4f48-aff2-df6eaa2e5034', 'ticketId': '4a0a9a8f-702a-4854-9a8c-f4d462240939', 'ticketUserId': '3f4cc332-516e-4f48-aff2-df6eaa2e5034', 'ticketDepartmentId': 'a78046d7-809d-4cdb-a72a-31dfbc47d862', 'quotedMessageId': None, 'origin': 'user', 'hsmId': None, 'text': 'Teste', 'obfuscated': False, 'files': None, 'quotedMessage': None, 'isFromBot': False}, 'webhookId': '27b4c18d-2ab0-4c70-a592-46bbe7e00bc8', 'timestamp': '2023-05-21T23:38:25.648Z'}
21/05/2023|23:38:26 - webhook.views -INFO- Received webhook request
{'event': 'message.updated', 'data': {'id': 'be5f804b-b9b7-4f93-9221-17adb4a419a6', 'isFromMe': True, 'sent': True, 'type': 'chat', 'timestamp': '2023-05-21T21:12:07.000Z', 'data': {'ack': 3, 'isNew': True, 'isFirst': False}, 'visible': True, 'accountId': '966b70ba-27d8-43ae-a295-35e59f0007be', 'contactId': '79db7607-6088-44c1-a010-ed4ef39d4f37', 'fromId': 'e12d3a56-0c52-43ac-b33c-15c399eb06d4', 'serviceId': '83108c28-14f7-4646-acb8-dab165397fd5', 'toId': None, 'userId': '3f4cc332-516e-4f48-aff2-df6eaa2e5034', 'ticketId': '4a0a9a8f-702a-4854-9a8c-f4d462240939', 'ticketUserId': '3f4cc332-516e-4f48-aff2-df6eaa2e5034', 'ticketDepartmentId': 'a78046d7-809d-4cdb-a72a-31dfbc47d862', 'quotedMessageId': None, 'origin': 'user', 'hsmId': None, 'text': 'Opa', 'obfuscated': False, 'files': None, 'quotedMessage': None, 'isFromBot': False}, 'webhookId': '27b4c18d-2ab0-4c70-a592-46bbe7e00bc8', 'timestamp': '2023-05-21T23:38:25.738Z'}
21/05/2023|23:38:26 - webhook.views -INFO- Received webhook request
{'event': 'message.updated', 'data': {'id': 'e7c002fc-523f-4747-8f41-c4515f1cab1c', 'isFromMe': True, 'sent': True, 'type': 'chat', 'timestamp': '2023-05-21T22:52:56.000Z', 'data': {'ack': 3, 'isNew': True, 'isFirst': False}, 'visible': True, 'accountId': '966b70ba-27d8-43ae-a295-35e59f0007be', 'contactId': '79db7607-6088-44c1-a010-ed4ef39d4f37', 'fromId': 'e12d3a56-0c52-43ac-b33c-15c399eb06d4', 'serviceId': '83108c28-14f7-4646-acb8-dab165397fd5', 'toId': None, 'userId': '3f4cc332-516e-4f48-aff2-df6eaa2e5034', 'ticketId': '4a0a9a8f-702a-4854-9a8c-f4d462240939', 'ticketUserId': '3f4cc332-516e-4f48-aff2-df6eaa2e5034', 'ticketDepartmentId': 'a78046d7-809d-4cdb-a72a-31dfbc47d862', 'quotedMessageId': None, 'origin': 'user', 'hsmId': None, 'text': 'Novo teste 2', 'obfuscated': False, 'files': None, 'quotedMessage': None, 'isFromBot': False}, 'webhookId': '27b4c18d-2ab0-4c70-a592-46bbe7e00bc8', 'timestamp': '2023-05-21T23:38:25.707Z'}
21/05/2023|23:38:26 - webhook.views -INFO- Received webhook request
{'event': 'message.updated', 'data': {'id': '3054dac5-9233-4375-8918-584f21bc87d9', 'isFromMe': True, 'sent': True, 'type': 'chat', 'timestamp': '2023-05-21T22:52:12.000Z', 'data': {'ack': 3, 'isNew': True, 'isFirst': False}, 'visible': True, 'accountId': '966b70ba-27d8-43ae-a295-35e59f0007be', 'contactId': '79db7607-6088-44c1-a010-ed4ef39d4f37', 'fromId': 'e12d3a56-0c52-43ac-b33c-15c399eb06d4', 'serviceId': '83108c28-14f7-4646-acb8-dab165397fd5', 'toId': None, 'userId': '3f4cc332-516e-4f48-aff2-df6eaa2e5034', 'ticketId': '4a0a9a8f-702a-4854-9a8c-f4d462240939', 'ticketUserId': '3f4cc332-516e-4f48-aff2-df6eaa2e5034', 'ticketDepartmentId': 'a78046d7-809d-4cdb-a72a-31dfbc47d862', 'quotedMessageId': None, 'origin': 'user', 'hsmId': None, 'text': 'Novo teste', 'obfuscated': False, 'files': None, 'quotedMessage': None, 'isFromBot': False}, 'webhookId': '27b4c18d-2ab0-4c70-a592-46bbe7e00bc8', 'timestamp': '2023-05-21T23:38:25.706Z'}
21/05/2023|23:38:26 - webhook.views -INFO- Received webhook request
{'event': 'message.updated', 'data': {'id': 'd9499982-a373-4d22-8f96-eec1d185cc62', 'isFromMe': True, 'sent': True, 'type': 'chat', 'timestamp': '2023-05-21T23:25:15.000Z', 'data': {'ack': 3, 'isNew': True, 'isFirst': False}, 'visible': True, 'accountId': '966b70ba-27d8-43ae-a295-35e59f0007be', 'contactId': '79db7607-6088-44c1-a010-ed4ef39d4f37', 'fromId': 'e12d3a56-0c52-43ac-b33c-15c399eb06d4', 'serviceId': '83108c28-14f7-4646-acb8-dab165397fd5', 'toId': None, 'userId': '3f4cc332-516e-4f48-aff2-df6eaa2e5034', 'ticketId': '3e14aea2-bc69-4e56-b20b-1b6d63ade6d5', 'ticketUserId': '3f4cc332-516e-4f48-aff2-df6eaa2e5034', 'ticketDepartmentId': 'a78046d7-809d-4cdb-a72a-31dfbc47d862', 'quotedMessageId': None, 'origin': 'user', 'hsmId': None, 'text': 'E agora com essa modificação?', 'obfuscated': False, 'files': None, 'quotedMessage': None, 'isFromBot': False}, 'webhookId': '27b4c18d-2ab0-4c70-a592-46bbe7e00bc8', 'timestamp': '2023-05-21T23:38:25.648Z'}
21/05/2023|23:38:26 - webhook.views -INFO- Received webhook request
{'event': 'message.updated', 'data': {'id': 'e16c3d02-ac74-4785-a7d6-6ea4523048db', 'isFromMe': True, 'sent': True, 'type': 'chat', 'timestamp': '2023-05-21T21:14:25.000Z', 'data': {'ack': 3, 'isNew': True, 'isFirst': False}, 'visible': True, 'accountId': '966b70ba-27d8-43ae-a295-35e59f0007be', 'contactId': '79db7607-6088-44c1-a010-ed4ef39d4f37', 'fromId': 'e12d3a56-0c52-43ac-b33c-15c399eb06d4', 'serviceId': '83108c28-14f7-4646-acb8-dab165397fd5', 'toId': None, 'userId': '3f4cc332-516e-4f48-aff2-df6eaa2e5034', 'ticketId': '4a0a9a8f-702a-4854-9a8c-f4d462240939', 'ticketUserId': '3f4cc332-516e-4f48-aff2-df6eaa2e5034', 'ticketDepartmentId': 'a78046d7-809d-4cdb-a72a-31dfbc47d862', 'quotedMessageId': None, 'origin': 'user', 'hsmId': None, 'text': 'teste', 'obfuscated': False, 'files': None, 'quotedMessage': None, 'isFromBot': False}, 'webhookId': '27b4c18d-2ab0-4c70-a592-46bbe7e00bc8', 'timestamp': '2023-05-21T23:38:25.764Z'}
21/05/2023|23:38:26 - webhook.views -INFO- Received webhook request
{'event': 'message.updated', 'data': {'id': '8856f64c-3770-4dae-88bc-a056cf4acdd9', 'isFromMe': True, 'sent': True, 'type': 'chat', 'timestamp': '2023-05-21T22:49:58.000Z', 'data': {'ack': 3, 'isNew': True, 'isFirst': False}, 'visible': True, 'accountId': '966b70ba-27d8-43ae-a295-35e59f0007be', 'contactId': '79db7607-6088-44c1-a010-ed4ef39d4f37', 'fromId': 'e12d3a56-0c52-43ac-b33c-15c399eb06d4', 'serviceId': '83108c28-14f7-4646-acb8-dab165397fd5', 'toId': None, 'userId': '3f4cc332-516e-4f48-aff2-df6eaa2e5034', 'ticketId': '4a0a9a8f-702a-4854-9a8c-f4d462240939', 'ticketUserId': '3f4cc332-516e-4f48-aff2-df6eaa2e5034', 'ticketDepartmentId': 'a78046d7-809d-4cdb-a72a-31dfbc47d862', 'quotedMessageId': None, 'origin': 'user', 'hsmId': None, 'text': 'Alou', 'obfuscated': False, 'files': None, 'quotedMessage': None, 'isFromBot': False}, 'webhookId': '27b4c18d-2ab0-4c70-a592-46bbe7e00bc8', 'timestamp': '2023-05-21T23:38:25.737Z'}
21/05/2023|23:38:26 - webhook.views -INFO- Received webhook request
{'event': 'message.updated', 'data': {'id': 'e2691f0a-b8fe-45a5-99db-0f7ad4b1828f', 'isFromMe': True, 'sent': True, 'type': 'chat', 'timestamp': '2023-05-21T21:32:06.000Z', 'data': {'ack': 3, 'isNew': True, 'isFirst': False}, 'visible': True, 'accountId': '966b70ba-27d8-43ae-a295-35e59f0007be', 'contactId': '79db7607-6088-44c1-a010-ed4ef39d4f37', 'fromId': 'e12d3a56-0c52-43ac-b33c-15c399eb06d4', 'serviceId': '83108c28-14f7-4646-acb8-dab165397fd5', 'toId': None, 'userId': '3f4cc332-516e-4f48-aff2-df6eaa2e5034', 'ticketId': '4a0a9a8f-702a-4854-9a8c-f4d462240939', 'ticketUserId': '3f4cc332-516e-4f48-aff2-df6eaa2e5034', 'ticketDepartmentId': 'a78046d7-809d-4cdb-a72a-31dfbc47d862', 'quotedMessageId': None, 'origin': 'user', 'hsmId': None, 'text': 'Legal', 'obfuscated': False, 'files': None, 'quotedMessage': None, 'isFromBot': False}, 'webhookId': '27b4c18d-2ab0-4c70-a592-46bbe7e00bc8', 'timestamp': '2023-05-21T23:38:25.738Z'}
21/05/2023|23:38:27 - webhook.views -INFO- Received webhook request
{'event': 'message.updated', 'data': {'id': '4157f93b-1dcb-44bc-ba48-896e7725fd4f', 'isFromMe': True, 'sent': True, 'type': 'chat', 'timestamp': '2023-05-21T21:12:55.000Z', 'data': {'ack': 3, 'isNew': True, 'isFirst': False}, 'visible': True, 'accountId': '966b70ba-27d8-43ae-a295-35e59f0007be', 'contactId': '79db7607-6088-44c1-a010-ed4ef39d4f37', 'fromId': 'e12d3a56-0c52-43ac-b33c-15c399eb06d4', 'serviceId': '83108c28-14f7-4646-acb8-dab165397fd5', 'toId': None, 'userId': '3f4cc332-516e-4f48-aff2-df6eaa2e5034', 'ticketId': '4a0a9a8f-702a-4854-9a8c-f4d462240939', 'ticketUserId': '3f4cc332-516e-4f48-aff2-df6eaa2e5034', 'ticketDepartmentId': 'a78046d7-809d-4cdb-a72a-31dfbc47d862', 'quotedMessageId': None, 'origin': 'user', 'hsmId': None, 'text': 'qwerty', 'obfuscated': False, 'files': None, 'quotedMessage': None, 'isFromBot': False}, 'webhookId': '27b4c18d-2ab0-4c70-a592-46bbe7e00bc8', 'timestamp': '2023-05-21T23:38:25.738Z'}
21/05/2023|23:38:27 - webhook.views -INFO- Received webhook request
{'event': 'message.updated', 'data': {'id': 'b01125a2-446b-4518-a8ad-bc78735228d0', 'isFromMe': True, 'sent': True, 'type': 'chat', 'timestamp': '2023-05-21T21:31:51.000Z', 'data': {'ack': 3, 'isNew': True, 'isFirst': False}, 'visible': True, 'accountId': '966b70ba-27d8-43ae-a295-35e59f0007be', 'contactId': '79db7607-6088-44c1-a010-ed4ef39d4f37', 'fromId': 'e12d3a56-0c52-43ac-b33c-15c399eb06d4', 'serviceId': '83108c28-14f7-4646-acb8-dab165397fd5', 'toId': None, 'userId': '3f4cc332-516e-4f48-aff2-df6eaa2e5034', 'ticketId': '4a0a9a8f-702a-4854-9a8c-f4d462240939', 'ticketUserId': '3f4cc332-516e-4f48-aff2-df6eaa2e5034', 'ticketDepartmentId': 'a78046d7-809d-4cdb-a72a-31dfbc47d862', 'quotedMessageId': None, 'origin': 'user', 'hsmId': None, 'text': 'Legal', 'obfuscated': False, 'files': None, 'quotedMessage': None, 'isFromBot': False}, 'webhookId': '27b4c18d-2ab0-4c70-a592-46bbe7e00bc8', 'timestamp': '2023-05-21T23:38:25.707Z'}
21/05/2023|23:38:27 - webhook.views -INFO- Received webhook request
{'event': 'message.updated', 'data': {'id': '2d228766-4adf-431c-895d-60be316a210e', 'isFromMe': True, 'sent': True, 'type': 'chat', 'timestamp': '2023-05-21T22:48:30.000Z', 'data': {'ack': 3, 'isNew': True, 'isFirst': False}, 'visible': True, 'accountId': '966b70ba-27d8-43ae-a295-35e59f0007be', 'contactId': '79db7607-6088-44c1-a010-ed4ef39d4f37', 'fromId': 'e12d3a56-0c52-43ac-b33c-15c399eb06d4', 'serviceId': '83108c28-14f7-4646-acb8-dab165397fd5', 'toId': None, 'userId': '3f4cc332-516e-4f48-aff2-df6eaa2e5034', 'ticketId': '4a0a9a8f-702a-4854-9a8c-f4d462240939', 'ticketUserId': '3f4cc332-516e-4f48-aff2-df6eaa2e5034', 'ticketDepartmentId': 'a78046d7-809d-4cdb-a72a-31dfbc47d862', 'quotedMessageId': None, 'origin': 'user', 'hsmId': None, 'text': 'Uopa', 'obfuscated': False, 'files': None, 'quotedMessage': None, 'isFromBot': False}, 'webhookId': '27b4c18d-2ab0-4c70-a592-46bbe7e00bc8', 'timestamp': '2023-05-21T23:38:25.702Z'}
21/05/2023|23:38:27 - webhook.views -INFO- Received webhook request
{'event': 'message.updated', 'data': {'id': '24ff7095-cca9-46f7-9b17-fd61b3f9c633', 'isFromMe': True, 'sent': True, 'type': 'chat', 'timestamp': '2023-05-21T23:34:07.000Z', 'data': {'ack': 3, 'isNew': True, 'isFirst': False}, 'visible': True, 'accountId': '966b70ba-27d8-43ae-a295-35e59f0007be', 'contactId': '79db7607-6088-44c1-a010-ed4ef39d4f37', 'fromId': 'e12d3a56-0c52-43ac-b33c-15c399eb06d4', 'serviceId': '83108c28-14f7-4646-acb8-dab165397fd5', 'toId': None, 'userId': '3f4cc332-516e-4f48-aff2-df6eaa2e5034', 'ticketId': '3e14aea2-bc69-4e56-b20b-1b6d63ade6d5', 'ticketUserId': '3f4cc332-516e-4f48-aff2-df6eaa2e5034', 'ticketDepartmentId': 'a78046d7-809d-4cdb-a72a-31dfbc47d862', 'quotedMessageId': None, 'origin': 'user', 'hsmId': None, 'text': 'Opa', 'obfuscated': False, 'files': None, 'quotedMessage': None, 'isFromBot': False}, 'webhookId': '27b4c18d-2ab0-4c70-a592-46bbe7e00bc8', 'timestamp': '2023-05-21T23:38:25.764Z'}
21/05/2023|23:38:27 - webhook.views -INFO- Received webhook request
{'event': 'message.updated', 'data': {'id': 'f07c86f1-ed16-46dd-873f-7a4264e3ab32', 'isFromMe': True, 'sent': True, 'type': 'chat', 'timestamp': '2023-05-21T21:10:12.000Z', 'data': {'ack': 3, 'isNew': True, 'isFirst': False}, 'visible': True, 'accountId': '966b70ba-27d8-43ae-a295-35e59f0007be', 'contactId': '79db7607-6088-44c1-a010-ed4ef39d4f37', 'fromId': 'e12d3a56-0c52-43ac-b33c-15c399eb06d4', 'serviceId': '83108c28-14f7-4646-acb8-dab165397fd5', 'toId': None, 'userId': '3f4cc332-516e-4f48-aff2-df6eaa2e5034', 'ticketId': '4a0a9a8f-702a-4854-9a8c-f4d462240939', 'ticketUserId': '3f4cc332-516e-4f48-aff2-df6eaa2e5034', 'ticketDepartmentId': 'a78046d7-809d-4cdb-a72a-31dfbc47d862', 'quotedMessageId': None, 'origin': 'user', 'hsmId': None, 'text': '1', 'obfuscated': False, 'files': None, 'quotedMessage': None, 'isFromBot': False}, 'webhookId': '27b4c18d-2ab0-4c70-a592-46bbe7e00bc8', 'timestamp': '2023-05-21T23:38:25.763Z'}
21/05/2023|23:38:27 - webhook.views -INFO- Received webhook request
{'event': 'message.updated', 'data': {'id': 'eb0e202f-6b22-4d28-9323-ae695d69229d', 'isFromMe': True, 'sent': True, 'type': 'chat', 'timestamp': '2023-05-21T21:11:43.000Z', 'data': {'ack': 3, 'isNew': True, 'isFirst': False}, 'visible': True, 'accountId': '966b70ba-27d8-43ae-a295-35e59f0007be', 'contactId': '79db7607-6088-44c1-a010-ed4ef39d4f37', 'fromId': 'e12d3a56-0c52-43ac-b33c-15c399eb06d4', 'serviceId': '83108c28-14f7-4646-acb8-dab165397fd5', 'toId': None, 'userId': '3f4cc332-516e-4f48-aff2-df6eaa2e5034', 'ticketId': '4a0a9a8f-702a-4854-9a8c-f4d462240939', 'ticketUserId': '3f4cc332-516e-4f48-aff2-df6eaa2e5034', 'ticketDepartmentId': 'a78046d7-809d-4cdb-a72a-31dfbc47d862', 'quotedMessageId': None, 'origin': 'user', 'hsmId': None, 'text': 'asdf', 'obfuscated': False, 'files': None, 'quotedMessage': None, 'isFromBot': False}, 'webhookId': '27b4c18d-2ab0-4c70-a592-46bbe7e00bc8', 'timestamp': '2023-05-21T23:38:25.738Z'}
21/05/2023|23:38:27 - webhook.views -INFO- Received webhook request
{'event': 'message.updated', 'data': {'id': '7a1e71dc-fe6b-4438-8457-4c6c6e187dcf', 'isFromMe': True, 'sent': True, 'type': 'chat', 'timestamp': '2023-05-21T21:16:42.000Z', 'data': {'ack': 3, 'isNew': True, 'isFirst': False}, 'visible': True, 'accountId': '966b70ba-27d8-43ae-a295-35e59f0007be', 'contactId': '79db7607-6088-44c1-a010-ed4ef39d4f37', 'fromId': 'e12d3a56-0c52-43ac-b33c-15c399eb06d4', 'serviceId': '83108c28-14f7-4646-acb8-dab165397fd5', 'toId': None, 'userId': '3f4cc332-516e-4f48-aff2-df6eaa2e5034', 'ticketId': '4a0a9a8f-702a-4854-9a8c-f4d462240939', 'ticketUserId': '3f4cc332-516e-4f48-aff2-df6eaa2e5034', 'ticketDepartmentId': 'a78046d7-809d-4cdb-a72a-31dfbc47d862', 'quotedMessageId': None, 'origin': 'user', 'hsmId': None, 'text': 'Agora vai', 'obfuscated': False, 'files': None, 'quotedMessage': None, 'isFromBot': False}, 'webhookId': '27b4c18d-2ab0-4c70-a592-46bbe7e00bc8', 'timestamp': '2023-05-21T23:38:25.738Z'}
21/05/2023|23:38:27 - webhook.views -INFO- Received webhook request
{'event': 'message.updated', 'data': {'id': 'f822c179-49b2-4bf2-9fa0-7b3f6002b529', 'isFromMe': True, 'sent': True, 'type': 'chat', 'timestamp': '2023-05-21T21:10:42.000Z', 'data': {'ack': 3, 'isNew': True, 'isFirst': False}, 'visible': True, 'accountId': '966b70ba-27d8-43ae-a295-35e59f0007be', 'contactId': '79db7607-6088-44c1-a010-ed4ef39d4f37', 'fromId': 'e12d3a56-0c52-43ac-b33c-15c399eb06d4', 'serviceId': '83108c28-14f7-4646-acb8-dab165397fd5', 'toId': None, 'userId': '3f4cc332-516e-4f48-aff2-df6eaa2e5034', 'ticketId': '4a0a9a8f-702a-4854-9a8c-f4d462240939', 'ticketUserId': '3f4cc332-516e-4f48-aff2-df6eaa2e5034', 'ticketDepartmentId': 'a78046d7-809d-4cdb-a72a-31dfbc47d862', 'quotedMessageId': None, 'origin': 'user', 'hsmId': None, 'text': '2', 'obfuscated': False, 'files': None, 'quotedMessage': None, 'isFromBot': False}, 'webhookId': '27b4c18d-2ab0-4c70-a592-46bbe7e00bc8', 'timestamp': '2023-05-21T23:38:25.738Z'}
21/05/2023|23:38:28 - webhook.views -INFO- Received webhook request
{'event': 'message.updated', 'data': {'id': 'cbee5000-c2fc-4a64-bb03-c58a298ecb42', 'isFromMe': True, 'sent': True, 'type': 'chat', 'timestamp': '2023-05-21T21:17:28.000Z', 'data': {'ack': 3, 'isNew': True, 'isFirst': False}, 'visible': True, 'accountId': '966b70ba-27d8-43ae-a295-35e59f0007be', 'contactId': '79db7607-6088-44c1-a010-ed4ef39d4f37', 'fromId': 'e12d3a56-0c52-43ac-b33c-15c399eb06d4', 'serviceId': '83108c28-14f7-4646-acb8-dab165397fd5', 'toId': None, 'userId': '3f4cc332-516e-4f48-aff2-df6eaa2e5034', 'ticketId': '4a0a9a8f-702a-4854-9a8c-f4d462240939', 'ticketUserId': '3f4cc332-516e-4f48-aff2-df6eaa2e5034', 'ticketDepartmentId': 'a78046d7-809d-4cdb-a72a-31dfbc47d862', 'quotedMessageId': None, 'origin': 'user', 'hsmId': None, 'text': 'As', 'obfuscated': False, 'files': None, 'quotedMessage': None, 'isFromBot': False}, 'webhookId': '27b4c18d-2ab0-4c70-a592-46bbe7e00bc8', 'timestamp': '2023-05-21T23:38:25.738Z'}
21/05/2023|23:38:28 - webhook.views -INFO- Received webhook request
{'event': 'message.updated', 'data': {'id': '8b834995-d44d-46fa-ac17-a1bd3b640624', 'isFromMe': True, 'sent': True, 'type': 'chat', 'timestamp': '2023-05-21T21:11:12.000Z', 'data': {'ack': 3, 'isNew': True, 'isFirst': False}, 'visible': True, 'accountId': '966b70ba-27d8-43ae-a295-35e59f0007be', 'contactId': '79db7607-6088-44c1-a010-ed4ef39d4f37', 'fromId': 'e12d3a56-0c52-43ac-b33c-15c399eb06d4', 'serviceId': '83108c28-14f7-4646-acb8-dab165397fd5', 'toId': None, 'userId': '3f4cc332-516e-4f48-aff2-df6eaa2e5034', 'ticketId': '4a0a9a8f-702a-4854-9a8c-f4d462240939', 'ticketUserId': '3f4cc332-516e-4f48-aff2-df6eaa2e5034', 'ticketDepartmentId': 'a78046d7-809d-4cdb-a72a-31dfbc47d862', 'quotedMessageId': None, 'origin': 'user', 'hsmId': None, 'text': '3', 'obfuscated': False, 'files': None, 'quotedMessage': None, 'isFromBot': False}, 'webhookId': '27b4c18d-2ab0-4c70-a592-46bbe7e00bc8', 'timestamp': '2023-05-21T23:38:25.738Z'}
21/05/2023|23:38:31 - webhook.views -DEBUG- Exceção ocorreu na função webhook_receiver, linha 20: handle_message_updated() takes 2 positional arguments but 3 were given
21/05/2023|23:38:31 - webhook.views -INFO- Exception occurred. handle_message_updated() takes 2 positional arguments but 3 were given
21/05/2023|23:38:31 - webhook.views -DEBUG- Exceção ocorreu na função webhook_receiver, linha 20: handle_message_updated() takes 2 positional arguments but 3 were given
21/05/2023|23:38:31 - webhook.views -INFO- Exception occurred. handle_message_updated() takes 2 positional arguments but 3 were given
21/05/2023|23:38:32 - webhook.views -DEBUG- Exceção ocorreu na função webhook_receiver, linha 20: handle_message_updated() takes 2 positional arguments but 3 were given
21/05/2023|23:38:32 - webhook.views -DEBUG- Exceção ocorreu na função webhook_receiver, linha 20: handle_message_updated() takes 2 positional arguments but 3 were given
21/05/2023|23:38:32 - webhook.views -DEBUG- Exceção ocorreu na função webhook_receiver, linha 20: handle_message_updated() takes 2 positional arguments but 3 were given
21/05/2023|23:38:32 - webhook.views -DEBUG- Exceção ocorreu na função webhook_receiver, linha 20: handle_message_updated() takes 2 positional arguments but 3 were given
21/05/2023|23:38:32 - webhook.views -DEBUG- Exceção ocorreu na função webhook_receiver, linha 20: handle_message_updated() takes 2 positional arguments but 3 were given
21/05/2023|23:38:32 - webhook.views -INFO- Exception occurred. handle_message_updated() takes 2 positional arguments but 3 were given
21/05/2023|23:38:32 - webhook.views -INFO- Exception occurred. handle_message_updated() takes 2 positional arguments but 3 were given
21/05/2023|23:38:32 - webhook.views -DEBUG- Exceção ocorreu na função webhook_receiver, linha 20: handle_message_updated() takes 2 positional arguments but 3 were given
21/05/2023|23:38:32 - webhook.views -DEBUG- Exceção ocorreu na função webhook_receiver, linha 20: handle_message_updated() takes 2 positional arguments but 3 were given
21/05/2023|23:38:32 - webhook.views -INFO- Exception occurred. handle_message_updated() takes 2 positional arguments but 3 were given
21/05/2023|23:38:32 - webhook.views -DEBUG- Exceção ocorreu na função webhook_receiver, linha 20: handle_message_updated() takes 2 positional arguments but 3 were given
21/05/2023|23:38:32 - webhook.views -INFO- Exception occurred. handle_message_updated() takes 2 positional arguments but 3 were given
21/05/2023|23:38:32 - webhook.views -INFO- Exception occurred. handle_message_updated() takes 2 positional arguments but 3 were given
21/05/2023|23:38:32 - webhook.views -DEBUG- Exceção ocorreu na função webhook_receiver, linha 20: handle_message_updated() takes 2 positional arguments but 3 were given
21/05/2023|23:38:32 - webhook.views -INFO- Exception occurred. handle_message_updated() takes 2 positional arguments but 3 were given
21/05/2023|23:38:32 - webhook.views -DEBUG- Exceção ocorreu na função webhook_receiver, linha 20: handle_message_updated() takes 2 positional arguments but 3 were given
21/05/2023|23:38:32 - webhook.views -INFO- Exception occurred. handle_message_updated() takes 2 positional arguments but 3 were given
21/05/2023|23:38:32 - webhook.views -DEBUG- Exceção ocorreu na função webhook_receiver, linha 20: handle_message_updated() takes 2 positional arguments but 3 were given
21/05/2023|23:38:32 - webhook.views -INFO- Exception occurred. handle_message_updated() takes 2 positional arguments but 3 were given
21/05/2023|23:38:32 - webhook.views -DEBUG- Exceção ocorreu na função webhook_receiver, linha 20: handle_message_updated() takes 2 positional arguments but 3 were given
21/05/2023|23:38:32 - webhook.views -INFO- Exception occurred. handle_message_updated() takes 2 positional arguments but 3 were given
21/05/2023|23:38:32 - webhook.views -DEBUG- Exceção ocorreu na função webhook_receiver, linha 20: handle_message_updated() takes 2 positional arguments but 3 were given
21/05/2023|23:38:32 - webhook.views -INFO- Exception occurred. handle_message_updated() takes 2 positional arguments but 3 were given
21/05/2023|23:38:32 - webhook.views -DEBUG- Exceção ocorreu na função webhook_receiver, linha 20: handle_message_updated() takes 2 positional arguments but 3 were given
21/05/2023|23:38:32 - webhook.views -INFO- Exception occurred. handle_message_updated() takes 2 positional arguments but 3 were given
21/05/2023|23:38:32 - webhook.views -DEBUG- Exceção ocorreu na função webhook_receiver, linha 20: handle_message_updated() takes 2 positional arguments but 3 were given
21/05/2023|23:38:32 - webhook.views -INFO- Exception occurred. handle_message_updated() takes 2 positional arguments but 3 were given
21/05/2023|23:38:32 - webhook.views -DEBUG- Exceção ocorreu na função webhook_receiver, linha 20: handle_message_updated() takes 2 positional arguments but 3 were given
21/05/2023|23:38:32 - webhook.views -INFO- Exception occurred. handle_message_updated() takes 2 positional arguments but 3 were given
21/05/2023|23:38:32 - webhook.views -DEBUG- Exceção ocorreu na função webhook_receiver, linha 20: handle_message_updated() takes 2 positional arguments but 3 were given
21/05/2023|23:38:32 - webhook.views -INFO- Exception occurred. handle_message_updated() takes 2 positional arguments but 3 were given
21/05/2023|23:38:32 - webhook.views -DEBUG- Exceção ocorreu na função webhook_receiver, linha 20: handle_message_updated() takes 2 positional arguments but 3 were given
21/05/2023|23:38:32 - webhook.views -DEBUG- Exceção ocorreu na função webhook_receiver, linha 20: handle_message_updated() takes 2 positional arguments but 3 were given
21/05/2023|23:38:32 - webhook.views -INFO- Exception occurred. handle_message_updated() takes 2 positional arguments but 3 were given
21/05/2023|23:38:32 - webhook.views -DEBUG- Exceção ocorreu na função webhook_receiver, linha 20: handle_message_updated() takes 2 positional arguments but 3 were given
21/05/2023|23:38:32 - webhook.views -DEBUG- Exceção ocorreu na função webhook_receiver, linha 20: handle_message_updated() takes 2 positional arguments but 3 were given
21/05/2023|23:38:32 - webhook.views -DEBUG- Exceção ocorreu na função webhook_receiver, linha 20: handle_message_updated() takes 2 positional arguments but 3 were given
21/05/2023|23:38:32 - webhook.views -DEBUG- Exceção ocorreu na função webhook_receiver, linha 20: handle_message_updated() takes 2 positional arguments but 3 were given
21/05/2023|23:38:32 - webhook.views -INFO- Exception occurred. handle_message_updated() takes 2 positional arguments but 3 were given
21/05/2023|23:38:32 - webhook.views -DEBUG- Exceção ocorreu na função webhook_receiver, linha 20: handle_message_updated() takes 2 positional arguments but 3 were given
21/05/2023|23:38:32 - webhook.views -INFO- Exception occurred. handle_message_updated() takes 2 positional arguments but 3 were given
21/05/2023|23:38:32 - webhook.views -DEBUG- Exceção ocorreu na função webhook_receiver, linha 20: handle_message_updated() takes 2 positional arguments but 3 were given
21/05/2023|23:38:32 - webhook.views -INFO- Exception occurred. handle_message_updated() takes 2 positional arguments but 3 were given
21/05/2023|23:38:32 - webhook.views -INFO- Exception occurred. handle_message_updated() takes 2 positional arguments but 3 were given
21/05/2023|23:38:32 - webhook.views -INFO- Exception occurred. handle_message_updated() takes 2 positional arguments but 3 were given
21/05/2023|23:38:32 - webhook.views -INFO- Exception occurred. handle_message_updated() takes 2 positional arguments but 3 were given
21/05/2023|23:38:32 - webhook.views -INFO- Exception occurred. handle_message_updated() takes 2 positional arguments but 3 were given
21/05/2023|23:38:32 - webhook.views -INFO- Exception occurred. handle_message_updated() takes 2 positional arguments but 3 were given
21/05/2023|23:38:32 - webhook.views -INFO- Exception occurred. handle_message_updated() takes 2 positional arguments but 3 were given
21/05/2023|23:38:32 - webhook.views -INFO- Exception occurred. handle_message_updated() takes 2 positional arguments but 3 were given
21/05/2023|23:38:32 - webhook.views -DEBUG- Exceção ocorreu na função webhook_receiver, linha 20: handle_message_updated() takes 2 positional arguments but 3 were given
21/05/2023|23:38:32 - webhook.views -INFO- Exception occurred. handle_message_updated() takes 2 positional arguments but 3 were given
21/05/2023|23:39:35 - webhook.views -INFO- Received webhook request
{'event': 'message.created', 'data': {'id': '4a6a2656-1dd7-4146-aff3-13e6123487be', 'isFromMe': True, 'sent': True, 'type': 'chat', 'timestamp': '2023-05-21T23:39:34.000Z', 'data': {'ack': 0, 'isNew': True, 'isFirst': False}, 'visible': True, 'accountId': '966b70ba-27d8-43ae-a295-35e59f0007be', 'contactId': '79db7607-6088-44c1-a010-ed4ef39d4f37', 'fromId': 'e12d3a56-0c52-43ac-b33c-15c399eb06d4', 'serviceId': '83108c28-14f7-4646-acb8-dab165397fd5', 'toId': None, 'userId': '3f4cc332-516e-4f48-aff2-df6eaa2e5034', 'ticketId': '3e14aea2-bc69-4e56-b20b-1b6d63ade6d5', 'ticketUserId': None, 'ticketDepartmentId': None, 'quotedMessageId': None, 'origin': 'user', 'hsmId': None, 'text': 'Bacana', 'obfuscated': False, 'files': None, 'quotedMessage': None, 'isFromBot': False}, 'webhookId': '27b4c18d-2ab0-4c70-a592-46bbe7e00bc8', 'timestamp': '2023-05-21T23:39:35.188Z'}
21/05/2023|23:39:35 - webhook.views -INFO- Received webhook request
{'event': 'message.updated', 'data': {'id': '4a6a2656-1dd7-4146-aff3-13e6123487be', 'isFromMe': True, 'sent': True, 'type': 'chat', 'timestamp': '2023-05-21T23:39:34.000Z', 'data': {'ack': 1, 'isNew': True, 'isFirst': False}, 'visible': True, 'accountId': '966b70ba-27d8-43ae-a295-35e59f0007be', 'contactId': '79db7607-6088-44c1-a010-ed4ef39d4f37', 'fromId': 'e12d3a56-0c52-43ac-b33c-15c399eb06d4', 'serviceId': '83108c28-14f7-4646-acb8-dab165397fd5', 'toId': None, 'userId': '3f4cc332-516e-4f48-aff2-df6eaa2e5034', 'ticketId': '3e14aea2-bc69-4e56-b20b-1b6d63ade6d5', 'ticketUserId': '3f4cc332-516e-4f48-aff2-df6eaa2e5034', 'ticketDepartmentId': 'a78046d7-809d-4cdb-a72a-31dfbc47d862', 'quotedMessageId': None, 'origin': 'user', 'hsmId': None, 'text': 'Bacana', 'obfuscated': False, 'files': None, 'quotedMessage': None, 'isFromBot': False}, 'webhookId': '27b4c18d-2ab0-4c70-a592-46bbe7e00bc8', 'timestamp': '2023-05-21T23:39:35.274Z'}
21/05/2023|23:39:36 - webhook.views -INFO- Received webhook request
{'event': 'message.updated', 'data': {'id': '4a6a2656-1dd7-4146-aff3-13e6123487be', 'isFromMe': True, 'sent': True, 'type': 'chat', 'timestamp': '2023-05-21T23:39:34.000Z', 'data': {'ack': 2, 'isNew': True, 'isFirst': False}, 'visible': True, 'accountId': '966b70ba-27d8-43ae-a295-35e59f0007be', 'contactId': '79db7607-6088-44c1-a010-ed4ef39d4f37', 'fromId': 'e12d3a56-0c52-43ac-b33c-15c399eb06d4', 'serviceId': '83108c28-14f7-4646-acb8-dab165397fd5', 'toId': None, 'userId': '3f4cc332-516e-4f48-aff2-df6eaa2e5034', 'ticketId': '3e14aea2-bc69-4e56-b20b-1b6d63ade6d5', 'ticketUserId': '3f4cc332-516e-4f48-aff2-df6eaa2e5034', 'ticketDepartmentId': 'a78046d7-809d-4cdb-a72a-31dfbc47d862', 'quotedMessageId': None, 'origin': 'user', 'hsmId': None, 'text': 'Bacana', 'obfuscated': False, 'files': None, 'quotedMessage': None, 'isFromBot': False}, 'webhookId': '27b4c18d-2ab0-4c70-a592-46bbe7e00bc8', 'timestamp': '2023-05-21T23:39:35.716Z'}
21/05/2023|23:39:36 - webhook.views -DEBUG- Exceção ocorreu na função webhook_receiver, linha 20: handle_message_updated() takes 2 positional arguments but 3 were given
21/05/2023|23:39:36 - webhook.views -DEBUG- Exceção ocorreu na função webhook_receiver, linha 20: 'handle_message_created' object has no attribute 'apply_ayns'
21/05/2023|23:39:36 - webhook.views -INFO- Exception occurred. handle_message_updated() takes 2 positional arguments but 3 were given
21/05/2023|23:39:36 - webhook.views -INFO- Exception occurred. 'handle_message_created' object has no attribute 'apply_ayns'
21/05/2023|23:39:36 - webhook.views -DEBUG- Exceção ocorreu na função webhook_receiver, linha 20: handle_message_updated() takes 2 positional arguments but 3 were given
21/05/2023|23:39:36 - webhook.views -INFO- Exception occurred. handle_message_updated() takes 2 positional arguments but 3 were given
21/05/2023|23:40:45 - webhook.views -INFO- Received webhook request
{'event': 'message.created', 'data': {'id': '2d4d5d7d-18b3-4e00-87ef-3d66826e86ed', 'isFromMe': True, 'sent': True, 'type': 'chat', 'timestamp': '2023-05-21T23:40:43.000Z', 'data': {'ack': 0, 'isNew': True, 'isFirst': False}, 'visible': True, 'accountId': '966b70ba-27d8-43ae-a295-35e59f0007be', 'contactId': '79db7607-6088-44c1-a010-ed4ef39d4f37', 'fromId': 'e12d3a56-0c52-43ac-b33c-15c399eb06d4', 'serviceId': '83108c28-14f7-4646-acb8-dab165397fd5', 'toId': None, 'userId': '3f4cc332-516e-4f48-aff2-df6eaa2e5034', 'ticketId': '3e14aea2-bc69-4e56-b20b-1b6d63ade6d5', 'ticketUserId': None, 'ticketDepartmentId': None, 'quotedMessageId': None, 'origin': 'user', 'hsmId': None, 'text': 'que coisa', 'obfuscated': False, 'files': None, 'quotedMessage': None, 'isFromBot': False}, 'webhookId': '27b4c18d-2ab0-4c70-a592-46bbe7e00bc8', 'timestamp': '2023-05-21T23:40:44.366Z'}
21/05/2023|23:40:45 - webhook.views -INFO- Received webhook request
{'event': 'message.updated', 'data': {'id': '2d4d5d7d-18b3-4e00-87ef-3d66826e86ed', 'isFromMe': True, 'sent': True, 'type': 'chat', 'timestamp': '2023-05-21T23:40:43.000Z', 'data': {'ack': 1, 'isNew': True, 'isFirst': False}, 'visible': True, 'accountId': '966b70ba-27d8-43ae-a295-35e59f0007be', 'contactId': '79db7607-6088-44c1-a010-ed4ef39d4f37', 'fromId': 'e12d3a56-0c52-43ac-b33c-15c399eb06d4', 'serviceId': '83108c28-14f7-4646-acb8-dab165397fd5', 'toId': None, 'userId': '3f4cc332-516e-4f48-aff2-df6eaa2e5034', 'ticketId': '3e14aea2-bc69-4e56-b20b-1b6d63ade6d5', 'ticketUserId': '3f4cc332-516e-4f48-aff2-df6eaa2e5034', 'ticketDepartmentId': 'a78046d7-809d-4cdb-a72a-31dfbc47d862', 'quotedMessageId': None, 'origin': 'user', 'hsmId': None, 'text': 'que coisa', 'obfuscated': False, 'files': None, 'quotedMessage': None, 'isFromBot': False}, 'webhookId': '27b4c18d-2ab0-4c70-a592-46bbe7e00bc8', 'timestamp': '2023-05-21T23:40:44.466Z'}
21/05/2023|23:40:45 - webhook.views -INFO- Received webhook request
{'event': 'message.updated', 'data': {'id': '2d4d5d7d-18b3-4e00-87ef-3d66826e86ed', 'isFromMe': True, 'sent': True, 'type': 'chat', 'timestamp': '2023-05-21T23:40:43.000Z', 'data': {'ack': 2, 'isNew': True, 'isFirst': False}, 'visible': True, 'accountId': '966b70ba-27d8-43ae-a295-35e59f0007be', 'contactId': '79db7607-6088-44c1-a010-ed4ef39d4f37', 'fromId': 'e12d3a56-0c52-43ac-b33c-15c399eb06d4', 'serviceId': '83108c28-14f7-4646-acb8-dab165397fd5', 'toId': None, 'userId': '3f4cc332-516e-4f48-aff2-df6eaa2e5034', 'ticketId': '3e14aea2-bc69-4e56-b20b-1b6d63ade6d5', 'ticketUserId': '3f4cc332-516e-4f48-aff2-df6eaa2e5034', 'ticketDepartmentId': 'a78046d7-809d-4cdb-a72a-31dfbc47d862', 'quotedMessageId': None, 'origin': 'user', 'hsmId': None, 'text': 'que coisa', 'obfuscated': False, 'files': None, 'quotedMessage': None, 'isFromBot': False}, 'webhookId': '27b4c18d-2ab0-4c70-a592-46bbe7e00bc8', 'timestamp': '2023-05-21T23:40:44.684Z'}
21/05/2023|23:40:45 - webhook.views -DEBUG- Exceção ocorreu na função webhook_receiver, linha 20: 'handle_message_created' object has no attribute 'apply_ayns'
21/05/2023|23:40:45 - webhook.views -DEBUG- Exceção ocorreu na função webhook_receiver, linha 20: handle_message_updated() takes 2 positional arguments but 3 were given
21/05/2023|23:40:45 - webhook.views -INFO- Exception occurred. handle_message_updated() takes 2 positional arguments but 3 were given
21/05/2023|23:40:45 - webhook.views -DEBUG- Exceção ocorreu na função webhook_receiver, linha 20: handle_message_updated() takes 2 positional arguments but 3 were given
21/05/2023|23:40:45 - webhook.views -INFO- Exception occurred. handle_message_updated() takes 2 positional arguments but 3 were given
21/05/2023|23:40:46 - webhook.views -INFO- Exception occurred. 'handle_message_created' object has no attribute 'apply_ayns'
21/05/2023|23:41:38 - webhook.views -INFO- Received webhook request
{'event': 'message.created', 'data': {'id': '5a2c0ddd-3dba-4733-854e-3332ffefb3f7', 'isFromMe': True, 'sent': True, 'type': 'chat', 'timestamp': '2023-05-21T23:41:37.000Z', 'data': {'ack': 0, 'isNew': True, 'isFirst': False}, 'visible': True, 'accountId': '966b70ba-27d8-43ae-a295-35e59f0007be', 'contactId': '79db7607-6088-44c1-a010-ed4ef39d4f37', 'fromId': 'e12d3a56-0c52-43ac-b33c-15c399eb06d4', 'serviceId': '83108c28-14f7-4646-acb8-dab165397fd5', 'toId': None, 'userId': '3f4cc332-516e-4f48-aff2-df6eaa2e5034', 'ticketId': '3e14aea2-bc69-4e56-b20b-1b6d63ade6d5', 'ticketUserId': None, 'ticketDepartmentId': None, 'quotedMessageId': None, 'origin': 'user', 'hsmId': None, 'text': 'Que coisa', 'obfuscated': False, 'files': None, 'quotedMessage': None, 'isFromBot': False}, 'webhookId': '27b4c18d-2ab0-4c70-a592-46bbe7e00bc8', 'timestamp': '2023-05-21T23:41:38.180Z'}
21/05/2023|23:41:38 - webhook.views -INFO- Received webhook request
{'event': 'message.updated', 'data': {'id': '5a2c0ddd-3dba-4733-854e-3332ffefb3f7', 'isFromMe': True, 'sent': True, 'type': 'chat', 'timestamp': '2023-05-21T23:41:37.000Z', 'data': {'ack': 1, 'isNew': True, 'isFirst': False}, 'visible': True, 'accountId': '966b70ba-27d8-43ae-a295-35e59f0007be', 'contactId': '79db7607-6088-44c1-a010-ed4ef39d4f37', 'fromId': 'e12d3a56-0c52-43ac-b33c-15c399eb06d4', 'serviceId': '83108c28-14f7-4646-acb8-dab165397fd5', 'toId': None, 'userId': '3f4cc332-516e-4f48-aff2-df6eaa2e5034', 'ticketId': '3e14aea2-bc69-4e56-b20b-1b6d63ade6d5', 'ticketUserId': '3f4cc332-516e-4f48-aff2-df6eaa2e5034', 'ticketDepartmentId': 'a78046d7-809d-4cdb-a72a-31dfbc47d862', 'quotedMessageId': None, 'origin': 'user', 'hsmId': None, 'text': 'Que coisa', 'obfuscated': False, 'files': None, 'quotedMessage': None, 'isFromBot': False}, 'webhookId': '27b4c18d-2ab0-4c70-a592-46bbe7e00bc8', 'timestamp': '2023-05-21T23:41:38.283Z'}
21/05/2023|23:41:39 - webhook.views -INFO- Received webhook request
{'event': 'message.updated', 'data': {'id': '5a2c0ddd-3dba-4733-854e-3332ffefb3f7', 'isFromMe': True, 'sent': True, 'type': 'chat', 'timestamp': '2023-05-21T23:41:37.000Z', 'data': {'ack': 2, 'isNew': True, 'isFirst': False}, 'visible': True, 'accountId': '966b70ba-27d8-43ae-a295-35e59f0007be', 'contactId': '79db7607-6088-44c1-a010-ed4ef39d4f37', 'fromId': 'e12d3a56-0c52-43ac-b33c-15c399eb06d4', 'serviceId': '83108c28-14f7-4646-acb8-dab165397fd5', 'toId': None, 'userId': '3f4cc332-516e-4f48-aff2-df6eaa2e5034', 'ticketId': '3e14aea2-bc69-4e56-b20b-1b6d63ade6d5', 'ticketUserId': '3f4cc332-516e-4f48-aff2-df6eaa2e5034', 'ticketDepartmentId': 'a78046d7-809d-4cdb-a72a-31dfbc47d862', 'quotedMessageId': None, 'origin': 'user', 'hsmId': None, 'text': 'Que coisa', 'obfuscated': False, 'files': None, 'quotedMessage': None, 'isFromBot': False}, 'webhookId': '27b4c18d-2ab0-4c70-a592-46bbe7e00bc8', 'timestamp': '2023-05-21T23:41:38.851Z'}
21/05/2023|23:41:46 - messages_api.event -DEBUG- Failed to create message_id: 5a2c0ddd-3dba-4733-854e-3332ffefb3f7
<Response [500]>-<!DOCTYPE html>
<html lang="en">
<head>
  <meta http-equiv="content-type" content="text/html; charset=utf-8">
  <meta name="robots" content="NONE,NOARCHIVE">
  <title>ValidationError
          at /webhook/messages/create</title>
  <style type="text/css">
    html * { padding:0; margin:0; }
    body * { padding:10px 20px; }
    body * * { padding:0; }
    body { font:small sans-serif; background-color:#fff; color:#000; }
    body>div { border-bottom:1px solid #ddd; }
    h1 { font-weight:normal; }
    h2 { margin-bottom:.8em; }
    h3 { margin:1em 0 .5em 0; }
    h4 { margin:0 0 .5em 0; font-weight: normal; }
    code, pre { font-size: 100%; white-space: pre-wrap; word-break: break-word; }
    summary { cursor: pointer; }
    table { border:1px solid #ccc; border-collapse: collapse; width:100%; background:white; }
    tbody td, tbody th { vertical-align:top; padding:2px 3px; }
    thead th {
      padding:1px 6px 1px 3px; background:#fefefe; text-align:left;
      font-weight:normal; font-size:11px; border:1px solid #ddd;
    }
    tbody th { width:12em; text-align:right; color:#666; padding-right:.5em; }
    table.vars { margin:5px 10px 2px 40px; width: auto; }
    table.vars td, table.req td { font-family:monospace; }
    table td.code { width:100%; }
    table td.code pre { overflow:hidden; }
    table.source th { color:#666; }
    table.source td { font-family:monospace; white-space:pre; border-bottom:1px solid #eee; }
    ul.traceback { list-style-type:none; color: #222; }
    ul.traceback li.cause { word-break: break-word; }
    ul.traceback li.frame { padding-bottom:1em; color:#4f4f4f; }
    ul.traceback li.user { background-color:#e0e0e0; color:#000 }
    div.context { padding:10px 0; overflow:hidden; }
    div.context ol { padding-left:30px; margin:0 10px; list-style-position: inside; }
    div.context ol li { font-family:monospace; white-space:pre; color:#777; cursor:pointer; padding-left: 2px; }
    div.context ol li pre { display:inline; }
    div.context ol.context-line li { color:#464646; background-color:#dfdfdf; padding: 3px 2px; }
    div.context ol.context-line li span { position:absolute; right:32px; }
    .user div.context ol.context-line li { background-color:#bbb; color:#000; }
    .user div.context ol li { color:#666; }
    div.commands, summary.commands { margin-left: 40px; }
    div.commands a, summary.commands { color:#555; text-decoration:none; }
    .user div.commands a { color: black; }
    #summary { background: #ffc; }
    #summary h2 { font-weight: normal; color: #666; }
    #explanation { background:#eee; }
    #template, #template-not-exist { background:#f6f6f6; }
    #template-not-exist ul { margin: 0 0 10px 20px; }
    #template-not-exist .postmortem-section { margin-bottom: 3px; }
    #unicode-hint { background:#eee; }
    #traceback { background:#eee; }
    #requestinfo { background:#f6f6f6; padding-left:120px; }
    #summary table { border:none; background:transparent; }
    #requestinfo h2, #requestinfo h3 { position:relative; margin-left:-100px; }
    #requestinfo h3 { margin-bottom:-1em; }
    .error { background: #ffc; }
    .specific { color:#cc3300; font-weight:bold; }
    h2 span.commands { font-size:.7em; font-weight:normal; }
    span.commands a:link {color:#5E5694;}
    pre.exception_value { font-family: sans-serif; color: #575757; font-size: 1.5em; margin: 10px 0 10px 0; }
    .append-bottom { margin-bottom: 10px; }
    .fname { user-select: all; }
  </style>
  
  <script>
    function hideAll(elems) {
      for (var e = 0; e < elems.length; e++) {
        elems[e].style.display = 'none';
      }
    }
    window.onload = function() {
      hideAll(document.querySelectorAll('ol.pre-context'));
      hideAll(document.querySelectorAll('ol.post-context'));
      hideAll(document.querySelectorAll('div.pastebin'));
    }
    function toggle() {
      for (var i = 0; i < arguments.length; i++) {
        var e = document.getElementById(arguments[i]);
        if (e) {
          e.style.display = e.style.display == 'none' ? 'block': 'none';
        }
      }
      return false;
    }
    function switchPastebinFriendly(link) {
      s1 = "Switch to copy-and-paste view";
      s2 = "Switch back to interactive view";
      link.textContent = link.textContent.trim() == s1 ? s2: s1;
      toggle('browserTraceback', 'pastebinTraceback');
      return false;
    }
  </script>
  
</head>
<body>
<div id="summary">
  <h1>ValidationError
       at /webhook/messages/create</h1>
  <pre class="exception_value">[&#x27;o valor “[True]”  deve ser True ou False.&#x27;]</pre>
  <table class="meta">

    <tr>
      <th>Request Method:</th>
      <td>POST</td>
    </tr>
    <tr>
      <th>Request URL:</th>
      <td>http://woz.serveo.net/webhook/messages/create?phone=5588988562749&amp;period=05%2F23</td>
    </tr>

    <tr>
      <th>Django Version:</th>
      <td>4.2.1</td>
    </tr>

    <tr>
      <th>Exception Type:</th>
      <td>ValidationError</td>
    </tr>


    <tr>
      <th>Exception Value:</th>
      <td><pre>[&#x27;o valor “[True]”  deve ser True ou False.&#x27;]</pre></td>
    </tr>


    <tr>
      <th>Exception Location:</th>
      <td><span class="fname">/home/jpfilho/.local/lib/python3.10/site-packages/django/db/models/fields/__init__.py</span>, line 1112, in to_python</td>
    </tr>


    <tr>
      <th>Raised during:</th>
      <td>messages_api.views.MessageViewSet</td>
    </tr>

    <tr>
      <th>Python Executable:</th>
      <td>/usr/bin/python3</td>
    </tr>
    <tr>
      <th>Python Version:</th>
      <td>3.10.7</td>
    </tr>
    <tr>
      <th>Python Path:</th>
      <td><pre>[&#x27;/home/jpfilho/Documents/code-ws/python/webhook&#x27;,
 &#x27;/home/jpfilho/Documents/code-ws/python/webhook&#x27;,
 &#x27;/usr/lib/python310.zip&#x27;,
 &#x27;/usr/lib/python3.10&#x27;,
 &#x27;/usr/lib/python3.10/lib-dynload&#x27;,
 &#x27;/home/jpfilho/.local/lib/python3.10/site-packages&#x27;,
 &#x27;/usr/local/lib/python3.10/dist-packages&#x27;,
 &#x27;/usr/lib/python3/dist-packages&#x27;]</pre></td>
    </tr>
    <tr>
      <th>Server time:</th>
      <td>Sun, 21 May 2023 23:41:44 +0000</td>
    </tr>
  </table>
</div>




<div id="traceback">
  <h2>Traceback <span class="commands"><a href="#" onclick="return switchPastebinFriendly(this);">
    Switch to copy-and-paste view</a></span>
  </h2>
  <div id="browserTraceback">
    <ul class="traceback">
      
        
        <li class="frame django">
          
            <code class="fname">/home/jpfilho/.local/lib/python3.10/site-packages/django/core/handlers/exception.py</code>, line 55, in inner
          

          
            <div class="context" id="c139813564216960">
              
                <ol start="48" class="pre-context" id="pre139813564216960">
                
                  <li onclick="toggle('pre139813564216960', 'post139813564216960')"><pre></pre></li>
                
                  <li onclick="toggle('pre139813564216960', 'post139813564216960')"><pre>        return inner</pre></li>
                
                  <li onclick="toggle('pre139813564216960', 'post139813564216960')"><pre>    else:</pre></li>
                
                  <li onclick="toggle('pre139813564216960', 'post139813564216960')"><pre></pre></li>
                
                  <li onclick="toggle('pre139813564216960', 'post139813564216960')"><pre>        @wraps(get_response)</pre></li>
                
                  <li onclick="toggle('pre139813564216960', 'post139813564216960')"><pre>        def inner(request):</pre></li>
                
                  <li onclick="toggle('pre139813564216960', 'post139813564216960')"><pre>            try:</pre></li>
                
                </ol>
              
              <ol start="55" class="context-line">
                <li onclick="toggle('pre139813564216960', 'post139813564216960')"><pre>                response = get_response(request)</pre> <span>…</span></li>
              </ol>
              
                <ol start='56' class="post-context" id="post139813564216960">
                  
                  <li onclick="toggle('pre139813564216960', 'post139813564216960')"><pre>            except Exception as exc:</pre></li>
                  
                  <li onclick="toggle('pre139813564216960', 'post139813564216960')"><pre>                response = response_for_exception(request, exc)</pre></li>
                  
                  <li onclick="toggle('pre139813564216960', 'post139813564216960')"><pre>            return response</pre></li>
                  
                  <li onclick="toggle('pre139813564216960', 'post139813564216960')"><pre></pre></li>
                  
                  <li onclick="toggle('pre139813564216960', 'post139813564216960')"><pre>        return inner</pre></li>
                  
                  <li onclick="toggle('pre139813564216960', 'post139813564216960')"><pre></pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v139813564216960">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>exc</td>
                    <td class="code"><pre>ValidationError([&#x27;o valor “[True]”  deve ser True ou False.&#x27;])</pre></td>
                  </tr>
                
                  <tr>
                    <td>get_response</td>
                    <td class="code"><pre>&lt;bound method BaseHandler._get_response of &lt;django.core.handlers.wsgi.WSGIHandler object at 0x7f28e292fdf0&gt;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>request</td>
                    <td class="code"><pre>&lt;WSGIRequest: POST &#x27;/webhook/messages/create?phone=5588988562749&amp;period=05%2F23&#x27;&gt;</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
        <li class="frame django">
          
            <code class="fname">/home/jpfilho/.local/lib/python3.10/site-packages/django/core/handlers/base.py</code>, line 197, in _get_response
          

          
            <div class="context" id="c139813564217984">
              
                <ol start="190" class="pre-context" id="pre139813564217984">
                
                  <li onclick="toggle('pre139813564217984', 'post139813564217984')"><pre></pre></li>
                
                  <li onclick="toggle('pre139813564217984', 'post139813564217984')"><pre>        if response is None:</pre></li>
                
                  <li onclick="toggle('pre139813564217984', 'post139813564217984')"><pre>            wrapped_callback = self.make_view_atomic(callback)</pre></li>
                
                  <li onclick="toggle('pre139813564217984', 'post139813564217984')"><pre>            # If it is an asynchronous view, run it in a subthread.</pre></li>
                
                  <li onclick="toggle('pre139813564217984', 'post139813564217984')"><pre>            if iscoroutinefunction(wrapped_callback):</pre></li>
                
                  <li onclick="toggle('pre139813564217984', 'post139813564217984')"><pre>                wrapped_callback = async_to_sync(wrapped_callback)</pre></li>
                
                  <li onclick="toggle('pre139813564217984', 'post139813564217984')"><pre>            try:</pre></li>
                
                </ol>
              
              <ol start="197" class="context-line">
                <li onclick="toggle('pre139813564217984', 'post139813564217984')"><pre>                response = wrapped_callback(request, *callback_args, **callback_kwargs)</pre> <span>…</span></li>
              </ol>
              
                <ol start='198' class="post-context" id="post139813564217984">
                  
                  <li onclick="toggle('pre139813564217984', 'post139813564217984')"><pre>            except Exception as e:</pre></li>
                  
                  <li onclick="toggle('pre139813564217984', 'post139813564217984')"><pre>                response = self.process_exception_by_middleware(e, request)</pre></li>
                  
                  <li onclick="toggle('pre139813564217984', 'post139813564217984')"><pre>                if response is None:</pre></li>
                  
                  <li onclick="toggle('pre139813564217984', 'post139813564217984')"><pre>                    raise</pre></li>
                  
                  <li onclick="toggle('pre139813564217984', 'post139813564217984')"><pre></pre></li>
                  
                  <li onclick="toggle('pre139813564217984', 'post139813564217984')"><pre>        # Complain if the view returned None (a common error).</pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v139813564217984">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>callback</td>
                    <td class="code"><pre>&lt;function MessageViewSet at 0x7f28e31da560&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>callback_args</td>
                    <td class="code"><pre>()</pre></td>
                  </tr>
                
                  <tr>
                    <td>callback_kwargs</td>
                    <td class="code"><pre>{}</pre></td>
                  </tr>
                
                  <tr>
                    <td>middleware_method</td>
                    <td class="code"><pre>&lt;bound method CsrfViewMiddleware.process_view of &lt;CsrfViewMiddleware get_response=convert_exception_to_response.&lt;locals&gt;.inner&gt;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>request</td>
                    <td class="code"><pre>&lt;WSGIRequest: POST &#x27;/webhook/messages/create?phone=5588988562749&amp;period=05%2F23&#x27;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>response</td>
                    <td class="code"><pre>None</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;django.core.handlers.wsgi.WSGIHandler object at 0x7f28e292fdf0&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>wrapped_callback</td>
                    <td class="code"><pre>&lt;function MessageViewSet at 0x7f28e31da560&gt;</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
        <li class="frame django">
          
            <code class="fname">/home/jpfilho/.local/lib/python3.10/site-packages/django/views/decorators/csrf.py</code>, line 56, in wrapper_view
          

          
            <div class="context" id="c139813564218688">
              
                <ol start="49" class="pre-context" id="pre139813564218688">
                
                  <li onclick="toggle('pre139813564218688', 'post139813564218688')"><pre>def csrf_exempt(view_func):</pre></li>
                
                  <li onclick="toggle('pre139813564218688', 'post139813564218688')"><pre>    &quot;&quot;&quot;Mark a view function as being exempt from the CSRF view protection.&quot;&quot;&quot;</pre></li>
                
                  <li onclick="toggle('pre139813564218688', 'post139813564218688')"><pre></pre></li>
                
                  <li onclick="toggle('pre139813564218688', 'post139813564218688')"><pre>    # view_func.csrf_exempt = True would also work, but decorators are nicer</pre></li>
                
                  <li onclick="toggle('pre139813564218688', 'post139813564218688')"><pre>    # if they don&#x27;t have side effects, so return a new function.</pre></li>
                
                  <li onclick="toggle('pre139813564218688', 'post139813564218688')"><pre>    @wraps(view_func)</pre></li>
                
                  <li onclick="toggle('pre139813564218688', 'post139813564218688')"><pre>    def wrapper_view(*args, **kwargs):</pre></li>
                
                </ol>
              
              <ol start="56" class="context-line">
                <li onclick="toggle('pre139813564218688', 'post139813564218688')"><pre>        return view_func(*args, **kwargs)</pre> <span>…</span></li>
              </ol>
              
                <ol start='57' class="post-context" id="post139813564218688">
                  
                  <li onclick="toggle('pre139813564218688', 'post139813564218688')"><pre></pre></li>
                  
                  <li onclick="toggle('pre139813564218688', 'post139813564218688')"><pre>    wrapper_view.csrf_exempt = True</pre></li>
                  
                  <li onclick="toggle('pre139813564218688', 'post139813564218688')"><pre>    return wrapper_view</pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v139813564218688">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>args</td>
                    <td class="code"><pre>(&lt;WSGIRequest: POST &#x27;/webhook/messages/create?phone=5588988562749&amp;period=05%2F23&#x27;&gt;,)</pre></td>
                  </tr>
                
                  <tr>
                    <td>kwargs</td>
                    <td class="code"><pre>{}</pre></td>
                  </tr>
                
                  <tr>
                    <td>view_func</td>
                    <td class="code"><pre>&lt;function MessageViewSet at 0x7f28e31da4d0&gt;</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
        <li class="frame user">
          
            <code class="fname">/home/jpfilho/.local/lib/python3.10/site-packages/rest_framework/viewsets.py</code>, line 125, in view
          

          
            <div class="context" id="c139813577542848">
              
                <ol start="118" class="pre-context" id="pre139813577542848">
                
                  <li onclick="toggle('pre139813577542848', 'post139813577542848')"><pre>                setattr(self, method, handler)</pre></li>
                
                  <li onclick="toggle('pre139813577542848', 'post139813577542848')"><pre></pre></li>
                
                  <li onclick="toggle('pre139813577542848', 'post139813577542848')"><pre>            self.request = request</pre></li>
                
                  <li onclick="toggle('pre139813577542848', 'post139813577542848')"><pre>            self.args = args</pre></li>
                
                  <li onclick="toggle('pre139813577542848', 'post139813577542848')"><pre>            self.kwargs = kwargs</pre></li>
                
                  <li onclick="toggle('pre139813577542848', 'post139813577542848')"><pre></pre></li>
                
                  <li onclick="toggle('pre139813577542848', 'post139813577542848')"><pre>            # And continue as usual</pre></li>
                
                </ol>
              
              <ol start="125" class="context-line">
                <li onclick="toggle('pre139813577542848', 'post139813577542848')"><pre>            return self.dispatch(request, *args, **kwargs)</pre> <span>…</span></li>
              </ol>
              
                <ol start='126' class="post-context" id="post139813577542848">
                  
                  <li onclick="toggle('pre139813577542848', 'post139813577542848')"><pre></pre></li>
                  
                  <li onclick="toggle('pre139813577542848', 'post139813577542848')"><pre>        # take name and docstring from class</pre></li>
                  
                  <li onclick="toggle('pre139813577542848', 'post139813577542848')"><pre>        update_wrapper(view, cls, updated=())</pre></li>
                  
                  <li onclick="toggle('pre139813577542848', 'post139813577542848')"><pre></pre></li>
                  
                  <li onclick="toggle('pre139813577542848', 'post139813577542848')"><pre>        # and possible attributes set by decorators</pre></li>
                  
                  <li onclick="toggle('pre139813577542848', 'post139813577542848')"><pre>        # like csrf_exempt from dispatch</pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v139813577542848">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>action</td>
                    <td class="code"><pre>&#x27;create&#x27;</pre></td>
                  </tr>
                
                  <tr>
                    <td>actions</td>
                    <td class="code"><pre>{&#x27;post&#x27;: &#x27;create&#x27;}</pre></td>
                  </tr>
                
                  <tr>
                    <td>args</td>
                    <td class="code"><pre>()</pre></td>
                  </tr>
                
                  <tr>
                    <td>cls</td>
                    <td class="code"><pre>&lt;class &#x27;messages_api.views.MessageViewSet&#x27;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>handler</td>
                    <td class="code"><pre>&lt;bound method MessageViewSet.create of &lt;messages_api.views.MessageViewSet object at 0x7f28e29ef3a0&gt;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>initkwargs</td>
                    <td class="code"><pre>{}</pre></td>
                  </tr>
                
                  <tr>
                    <td>kwargs</td>
                    <td class="code"><pre>{}</pre></td>
                  </tr>
                
                  <tr>
                    <td>method</td>
                    <td class="code"><pre>&#x27;post&#x27;</pre></td>
                  </tr>
                
                  <tr>
                    <td>request</td>
                    <td class="code"><pre>&lt;WSGIRequest: POST &#x27;/webhook/messages/create?phone=5588988562749&amp;period=05%2F23&#x27;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;messages_api.views.MessageViewSet object at 0x7f28e29ef3a0&gt;</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
        <li class="frame user">
          
            <code class="fname">/home/jpfilho/.local/lib/python3.10/site-packages/rest_framework/views.py</code>, line 509, in dispatch
          

          
            <div class="context" id="c139813564216768">
              
                <ol start="502" class="pre-context" id="pre139813564216768">
                
                  <li onclick="toggle('pre139813564216768', 'post139813564216768')"><pre>                                  self.http_method_not_allowed)</pre></li>
                
                  <li onclick="toggle('pre139813564216768', 'post139813564216768')"><pre>            else:</pre></li>
                
                  <li onclick="toggle('pre139813564216768', 'post139813564216768')"><pre>                handler = self.http_method_not_allowed</pre></li>
                
                  <li onclick="toggle('pre139813564216768', 'post139813564216768')"><pre></pre></li>
                
                  <li onclick="toggle('pre139813564216768', 'post139813564216768')"><pre>            response = handler(request, *args, **kwargs)</pre></li>
                
                  <li onclick="toggle('pre139813564216768', 'post139813564216768')"><pre></pre></li>
                
                  <li onclick="toggle('pre139813564216768', 'post139813564216768')"><pre>        except Exception as exc:</pre></li>
                
                </ol>
              
              <ol start="509" class="context-line">
                <li onclick="toggle('pre139813564216768', 'post139813564216768')"><pre>            response = self.handle_exception(exc)</pre> <span>…</span></li>
              </ol>
              
                <ol start='510' class="post-context" id="post139813564216768">
                  
                  <li onclick="toggle('pre139813564216768', 'post139813564216768')"><pre></pre></li>
                  
                  <li onclick="toggle('pre139813564216768', 'post139813564216768')"><pre>        self.response = self.finalize_response(request, response, *args, **kwargs)</pre></li>
                  
                  <li onclick="toggle('pre139813564216768', 'post139813564216768')"><pre>        return self.response</pre></li>
                  
                  <li onclick="toggle('pre139813564216768', 'post139813564216768')"><pre></pre></li>
                  
                  <li onclick="toggle('pre139813564216768', 'post139813564216768')"><pre>    def options(self, request, *args, **kwargs):</pre></li>
                  
                  <li onclick="toggle('pre139813564216768', 'post139813564216768')"><pre>        &quot;&quot;&quot;</pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v139813564216768">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>args</td>
                    <td class="code"><pre>()</pre></td>
                  </tr>
                
                  <tr>
                    <td>handler</td>
                    <td class="code"><pre>&lt;bound method MessageViewSet.create of &lt;messages_api.views.MessageViewSet object at 0x7f28e29ef3a0&gt;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>kwargs</td>
                    <td class="code"><pre>{}</pre></td>
                  </tr>
                
                  <tr>
                    <td>request</td>
                    <td class="code"><pre>&lt;rest_framework.request.Request: POST &#x27;/webhook/messages/create?phone=5588988562749&amp;period=05%2F23&#x27;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;messages_api.views.MessageViewSet object at 0x7f28e29ef3a0&gt;</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
        <li class="frame user">
          
            <code class="fname">/home/jpfilho/.local/lib/python3.10/site-packages/rest_framework/views.py</code>, line 469, in handle_exception
          

          
            <div class="context" id="c139813564206528">
              
                <ol start="462" class="pre-context" id="pre139813564206528">
                
                  <li onclick="toggle('pre139813564206528', 'post139813564206528')"><pre></pre></li>
                
                  <li onclick="toggle('pre139813564206528', 'post139813564206528')"><pre>        exception_handler = self.get_exception_handler()</pre></li>
                
                  <li onclick="toggle('pre139813564206528', 'post139813564206528')"><pre></pre></li>
                
                  <li onclick="toggle('pre139813564206528', 'post139813564206528')"><pre>        context = self.get_exception_handler_context()</pre></li>
                
                  <li onclick="toggle('pre139813564206528', 'post139813564206528')"><pre>        response = exception_handler(exc, context)</pre></li>
                
                  <li onclick="toggle('pre139813564206528', 'post139813564206528')"><pre></pre></li>
                
                  <li onclick="toggle('pre139813564206528', 'post139813564206528')"><pre>        if response is None:</pre></li>
                
                </ol>
              
              <ol start="469" class="context-line">
                <li onclick="toggle('pre139813564206528', 'post139813564206528')"><pre>            self.raise_uncaught_exception(exc)</pre> <span>…</span></li>
              </ol>
              
                <ol start='470' class="post-context" id="post139813564206528">
                  
                  <li onclick="toggle('pre139813564206528', 'post139813564206528')"><pre></pre></li>
                  
                  <li onclick="toggle('pre139813564206528', 'post139813564206528')"><pre>        response.exception = True</pre></li>
                  
                  <li onclick="toggle('pre139813564206528', 'post139813564206528')"><pre>        return response</pre></li>
                  
                  <li onclick="toggle('pre139813564206528', 'post139813564206528')"><pre></pre></li>
                  
                  <li onclick="toggle('pre139813564206528', 'post139813564206528')"><pre>    def raise_uncaught_exception(self, exc):</pre></li>
                  
                  <li onclick="toggle('pre139813564206528', 'post139813564206528')"><pre>        if settings.DEBUG:</pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v139813564206528">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>context</td>
                    <td class="code"><pre>{&#x27;args&#x27;: (),
 &#x27;kwargs&#x27;: {},
 &#x27;request&#x27;: &lt;rest_framework.request.Request: POST &#x27;/webhook/messages/create?phone=5588988562749&amp;period=05%2F23&#x27;&gt;,
 &#x27;view&#x27;: &lt;messages_api.views.MessageViewSet object at 0x7f28e29ef3a0&gt;}</pre></td>
                  </tr>
                
                  <tr>
                    <td>exc</td>
                    <td class="code"><pre>ValidationError([&#x27;o valor “[True]”  deve ser True ou False.&#x27;])</pre></td>
                  </tr>
                
                  <tr>
                    <td>exception_handler</td>
                    <td class="code"><pre>&lt;function exception_handler at 0x7f28e319c700&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>response</td>
                    <td class="code"><pre>None</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;messages_api.views.MessageViewSet object at 0x7f28e29ef3a0&gt;</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
        <li class="frame user">
          
            <code class="fname">/home/jpfilho/.local/lib/python3.10/site-packages/rest_framework/views.py</code>, line 480, in raise_uncaught_exception
          

          
            <div class="context" id="c139813585845248">
              
                <ol start="473" class="pre-context" id="pre139813585845248">
                
                  <li onclick="toggle('pre139813585845248', 'post139813585845248')"><pre></pre></li>
                
                  <li onclick="toggle('pre139813585845248', 'post139813585845248')"><pre>    def raise_uncaught_exception(self, exc):</pre></li>
                
                  <li onclick="toggle('pre139813585845248', 'post139813585845248')"><pre>        if settings.DEBUG:</pre></li>
                
                  <li onclick="toggle('pre139813585845248', 'post139813585845248')"><pre>            request = self.request</pre></li>
                
                  <li onclick="toggle('pre139813585845248', 'post139813585845248')"><pre>            renderer_format = getattr(request.accepted_renderer, &#x27;format&#x27;)</pre></li>
                
                  <li onclick="toggle('pre139813585845248', 'post139813585845248')"><pre>            use_plaintext_traceback = renderer_format not in (&#x27;html&#x27;, &#x27;api&#x27;, &#x27;admin&#x27;)</pre></li>
                
                  <li onclick="toggle('pre139813585845248', 'post139813585845248')"><pre>            request.force_plaintext_errors(use_plaintext_traceback)</pre></li>
                
                </ol>
              
              <ol start="480" class="context-line">
                <li onclick="toggle('pre139813585845248', 'post139813585845248')"><pre>        raise exc</pre> <span>…</span></li>
              </ol>
              
                <ol start='481' class="post-context" id="post139813585845248">
                  
                  <li onclick="toggle('pre139813585845248', 'post139813585845248')"><pre></pre></li>
                  
                  <li onclick="toggle('pre139813585845248', 'post139813585845248')"><pre>    # Note: Views are made CSRF exempt from within `as_view` as to prevent</pre></li>
                  
                  <li onclick="toggle('pre139813585845248', 'post139813585845248')"><pre>    # accidental removal of this exemption in cases where `dispatch` needs to</pre></li>
                  
                  <li onclick="toggle('pre139813585845248', 'post139813585845248')"><pre>    # be overridden.</pre></li>
                  
                  <li onclick="toggle('pre139813585845248', 'post139813585845248')"><pre>    def dispatch(self, request, *args, **kwargs):</pre></li>
                  
                  <li onclick="toggle('pre139813585845248', 'post139813585845248')"><pre>        &quot;&quot;&quot;</pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v139813585845248">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>exc</td>
                    <td class="code"><pre>ValidationError([&#x27;o valor “[True]”  deve ser True ou False.&#x27;])</pre></td>
                  </tr>
                
                  <tr>
                    <td>renderer_format</td>
                    <td class="code"><pre>&#x27;json&#x27;</pre></td>
                  </tr>
                
                  <tr>
                    <td>request</td>
                    <td class="code"><pre>&lt;rest_framework.request.Request: POST &#x27;/webhook/messages/create?phone=5588988562749&amp;period=05%2F23&#x27;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;messages_api.views.MessageViewSet object at 0x7f28e29ef3a0&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>use_plaintext_traceback</td>
                    <td class="code"><pre>True</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
        <li class="frame user">
          
            <code class="fname">/home/jpfilho/.local/lib/python3.10/site-packages/rest_framework/views.py</code>, line 506, in dispatch
          

          
            <div class="context" id="c139813564422400">
              
                <ol start="499" class="pre-context" id="pre139813564422400">
                
                  <li onclick="toggle('pre139813564422400', 'post139813564422400')"><pre>            # Get the appropriate handler method</pre></li>
                
                  <li onclick="toggle('pre139813564422400', 'post139813564422400')"><pre>            if request.method.lower() in self.http_method_names:</pre></li>
                
                  <li onclick="toggle('pre139813564422400', 'post139813564422400')"><pre>                handler = getattr(self, request.method.lower(),</pre></li>
                
                  <li onclick="toggle('pre139813564422400', 'post139813564422400')"><pre>                                  self.http_method_not_allowed)</pre></li>
                
                  <li onclick="toggle('pre139813564422400', 'post139813564422400')"><pre>            else:</pre></li>
                
                  <li onclick="toggle('pre139813564422400', 'post139813564422400')"><pre>                handler = self.http_method_not_allowed</pre></li>
                
                  <li onclick="toggle('pre139813564422400', 'post139813564422400')"><pre></pre></li>
                
                </ol>
              
              <ol start="506" class="context-line">
                <li onclick="toggle('pre139813564422400', 'post139813564422400')"><pre>            response = handler(request, *args, **kwargs)</pre> <span>…</span></li>
              </ol>
              
                <ol start='507' class="post-context" id="post139813564422400">
                  
                  <li onclick="toggle('pre139813564422400', 'post139813564422400')"><pre></pre></li>
                  
                  <li onclick="toggle('pre139813564422400', 'post139813564422400')"><pre>        except Exception as exc:</pre></li>
                  
                  <li onclick="toggle('pre139813564422400', 'post139813564422400')"><pre>            response = self.handle_exception(exc)</pre></li>
                  
                  <li onclick="toggle('pre139813564422400', 'post139813564422400')"><pre></pre></li>
                  
                  <li onclick="toggle('pre139813564422400', 'post139813564422400')"><pre>        self.response = self.finalize_response(request, response, *args, **kwargs)</pre></li>
                  
                  <li onclick="toggle('pre139813564422400', 'post139813564422400')"><pre>        return self.response</pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v139813564422400">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>args</td>
                    <td class="code"><pre>()</pre></td>
                  </tr>
                
                  <tr>
                    <td>handler</td>
                    <td class="code"><pre>&lt;bound method MessageViewSet.create of &lt;messages_api.views.MessageViewSet object at 0x7f28e29ef3a0&gt;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>kwargs</td>
                    <td class="code"><pre>{}</pre></td>
                  </tr>
                
                  <tr>
                    <td>request</td>
                    <td class="code"><pre>&lt;rest_framework.request.Request: POST &#x27;/webhook/messages/create?phone=5588988562749&amp;period=05%2F23&#x27;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;messages_api.views.MessageViewSet object at 0x7f28e29ef3a0&gt;</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
        <li class="frame user">
          
            <code class="fname">/home/jpfilho/Documents/code-ws/python/webhook/messages_api/views.py</code>, line 153, in create
          

          
            <div class="context" id="c139813577066112">
              
                <ol start="146" class="pre-context" id="pre139813577066112">
                
                  <li onclick="toggle('pre139813577066112', 'post139813577066112')"><pre>        except ValueError:</pre></li>
                
                  <li onclick="toggle('pre139813577066112', 'post139813577066112')"><pre>            return Response({&#x27;error&#x27;: &#x27;Invalid period format, should be YYYY-MM-DD or MM-YY.&#x27;}, status=400)</pre></li>
                
                  <li onclick="toggle('pre139813577066112', 'post139813577066112')"><pre></pre></li>
                
                  <li onclick="toggle('pre139813577066112', 'post139813577066112')"><pre>        if len(period) == 5:</pre></li>
                
                  <li onclick="toggle('pre139813577066112', 'post139813577066112')"><pre>            period = dt.now().strftime(</pre></li>
                
                  <li onclick="toggle('pre139813577066112', 'post139813577066112')"><pre>                &#x27;%Y-&#x27;) + period[-2:] + &#x27;-&#x27; + period[:2] + &#x27; 00:00:00&#x27;</pre></li>
                
                  <li onclick="toggle('pre139813577066112', 'post139813577066112')"><pre>        try:</pre></li>
                
                </ol>
              
              <ol start="153" class="context-line">
                <li onclick="toggle('pre139813577066112', 'post139813577066112')"><pre>            message = Message.objects.create(</pre> <span>…</span></li>
              </ol>
              
                <ol start='154' class="post-context" id="post139813577066112">
                  
                  <li onclick="toggle('pre139813577066112', 'post139813577066112')"><pre>                contact_id=contact_id,</pre></li>
                  
                  <li onclick="toggle('pre139813577066112', 'post139813577066112')"><pre>                contact_number=contact_number,</pre></li>
                  
                  <li onclick="toggle('pre139813577066112', 'post139813577066112')"><pre>                period=period,</pre></li>
                  
                  <li onclick="toggle('pre139813577066112', 'post139813577066112')"><pre>                timestamp=timestamp,</pre></li>
                  
                  <li onclick="toggle('pre139813577066112', 'post139813577066112')"><pre>                status=status,</pre></li>
                  
                  <li onclick="toggle('pre139813577066112', 'post139813577066112')"><pre>                message_id=message_id,</pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v139813577066112">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>args</td>
                    <td class="code"><pre>()</pre></td>
                  </tr>
                
                  <tr>
                    <td>contact_id</td>
                    <td class="code"><pre>&#x27;79db7607-6088-44c1-a010-ed4ef39d4f37&#x27;</pre></td>
                  </tr>
                
                  <tr>
                    <td>contact_number</td>
                    <td class="code"><pre>&#x27;5588988562749&#x27;</pre></td>
                  </tr>
                
                  <tr>
                    <td>isFromMe</td>
                    <td class="code"><pre>[True]</pre></td>
                  </tr>
                
                  <tr>
                    <td>kwargs</td>
                    <td class="code"><pre>{}</pre></td>
                  </tr>
                
                  <tr>
                    <td>message_id</td>
                    <td class="code"><pre>&#x27;5a2c0ddd-3dba-4733-854e-3332ffefb3f7&#x27;</pre></td>
                  </tr>
                
                  <tr>
                    <td>message_type</td>
                    <td class="code"><pre>&#x27;chat&#x27;</pre></td>
                  </tr>
                
                  <tr>
                    <td>period</td>
                    <td class="code"><pre>&#x27;2023-05-01&#x27;</pre></td>
                  </tr>
                
                  <tr>
                    <td>request</td>
                    <td class="code"><pre>&lt;rest_framework.request.Request: POST &#x27;/webhook/messages/create?phone=5588988562749&amp;period=05%2F23&#x27;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;messages_api.views.MessageViewSet object at 0x7f28e29ef3a0&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>status</td>
                    <td class="code"><pre>0</pre></td>
                  </tr>
                
                  <tr>
                    <td>ticket_id</td>
                    <td class="code"><pre>&#x27;3e14aea2-bc69-4e56-b20b-1b6d63ade6d5&#x27;</pre></td>
                  </tr>
                
                  <tr>
                    <td>timestamp</td>
                    <td class="code"><pre>&#x27;2023-05-21T23:41:38.180Z&#x27;</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
        <li class="frame django">
          
            <code class="fname">/home/jpfilho/.local/lib/python3.10/site-packages/django/db/models/manager.py</code>, line 87, in manager_method
          

          
            <div class="context" id="c139813640534784">
              
                <ol start="80" class="pre-context" id="pre139813640534784">
                
                  <li onclick="toggle('pre139813640534784', 'post139813640534784')"><pre>        return []</pre></li>
                
                  <li onclick="toggle('pre139813640534784', 'post139813640534784')"><pre></pre></li>
                
                  <li onclick="toggle('pre139813640534784', 'post139813640534784')"><pre>    @classmethod</pre></li>
                
                  <li onclick="toggle('pre139813640534784', 'post139813640534784')"><pre>    def _get_queryset_methods(cls, queryset_class):</pre></li>
                
                  <li onclick="toggle('pre139813640534784', 'post139813640534784')"><pre>        def create_method(name, method):</pre></li>
                
                  <li onclick="toggle('pre139813640534784', 'post139813640534784')"><pre>            @wraps(method)</pre></li>
                
                  <li onclick="toggle('pre139813640534784', 'post139813640534784')"><pre>            def manager_method(self, *args, **kwargs):</pre></li>
                
                </ol>
              
              <ol start="87" class="context-line">
                <li onclick="toggle('pre139813640534784', 'post139813640534784')"><pre>                return getattr(self.get_queryset(), name)(*args, **kwargs)</pre> <span>…</span></li>
              </ol>
              
                <ol start='88' class="post-context" id="post139813640534784">
                  
                  <li onclick="toggle('pre139813640534784', 'post139813640534784')"><pre></pre></li>
                  
                  <li onclick="toggle('pre139813640534784', 'post139813640534784')"><pre>            return manager_method</pre></li>
                  
                  <li onclick="toggle('pre139813640534784', 'post139813640534784')"><pre></pre></li>
                  
                  <li onclick="toggle('pre139813640534784', 'post139813640534784')"><pre>        new_methods = {}</pre></li>
                  
                  <li onclick="toggle('pre139813640534784', 'post139813640534784')"><pre>        for name, method in inspect.getmembers(</pre></li>
                  
                  <li onclick="toggle('pre139813640534784', 'post139813640534784')"><pre>            queryset_class, predicate=inspect.isfunction</pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v139813640534784">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>args</td>
                    <td class="code"><pre>()</pre></td>
                  </tr>
                
                  <tr>
                    <td>kwargs</td>
                    <td class="code"><pre>{&#x27;contact_id&#x27;: &#x27;79db7607-6088-44c1-a010-ed4ef39d4f37&#x27;,
 &#x27;contact_number&#x27;: &#x27;5588988562749&#x27;,
 &#x27;is_from_me&#x27;: [True],
 &#x27;message_id&#x27;: &#x27;5a2c0ddd-3dba-4733-854e-3332ffefb3f7&#x27;,
 &#x27;message_type&#x27;: &#x27;chat&#x27;,
 &#x27;period&#x27;: &#x27;2023-05-01&#x27;,
 &#x27;retries&#x27;: 0,
 &#x27;status&#x27;: 0,
 &#x27;ticket_service_id&#x27;: &#x27;3e14aea2-bc69-4e56-b20b-1b6d63ade6d5&#x27;,
 &#x27;timestamp&#x27;: &#x27;2023-05-21T23:41:38.180Z&#x27;}</pre></td>
                  </tr>
                
                  <tr>
                    <td>name</td>
                    <td class="code"><pre>&#x27;create&#x27;</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;django.db.models.manager.Manager object at 0x7f28e3dba980&gt;</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
        <li class="frame django">
          
            <code class="fname">/home/jpfilho/.local/lib/python3.10/site-packages/django/db/models/query.py</code>, line 658, in create
          

          
            <div class="context" id="c139813577467584">
              
                <ol start="651" class="pre-context" id="pre139813577467584">
                
                  <li onclick="toggle('pre139813577467584', 'post139813577467584')"><pre>    def create(self, **kwargs):</pre></li>
                
                  <li onclick="toggle('pre139813577467584', 'post139813577467584')"><pre>        &quot;&quot;&quot;</pre></li>
                
                  <li onclick="toggle('pre139813577467584', 'post139813577467584')"><pre>        Create a new object with the given kwargs, saving it to the database</pre></li>
                
                  <li onclick="toggle('pre139813577467584', 'post139813577467584')"><pre>        and returning the created object.</pre></li>
                
                  <li onclick="toggle('pre139813577467584', 'post139813577467584')"><pre>        &quot;&quot;&quot;</pre></li>
                
                  <li onclick="toggle('pre139813577467584', 'post139813577467584')"><pre>        obj = self.model(**kwargs)</pre></li>
                
                  <li onclick="toggle('pre139813577467584', 'post139813577467584')"><pre>        self._for_write = True</pre></li>
                
                </ol>
              
              <ol start="658" class="context-line">
                <li onclick="toggle('pre139813577467584', 'post139813577467584')"><pre>        obj.save(force_insert=True, using=self.db)</pre> <span>…</span></li>
              </ol>
              
                <ol start='659' class="post-context" id="post139813577467584">
                  
                  <li onclick="toggle('pre139813577467584', 'post139813577467584')"><pre>        return obj</pre></li>
                  
                  <li onclick="toggle('pre139813577467584', 'post139813577467584')"><pre></pre></li>
                  
                  <li onclick="toggle('pre139813577467584', 'post139813577467584')"><pre>    async def acreate(self, **kwargs):</pre></li>
                  
                  <li onclick="toggle('pre139813577467584', 'post139813577467584')"><pre>        return await sync_to_async(self.create)(**kwargs)</pre></li>
                  
                  <li onclick="toggle('pre139813577467584', 'post139813577467584')"><pre></pre></li>
                  
                  <li onclick="toggle('pre139813577467584', 'post139813577467584')"><pre>    def _prepare_for_bulk_create(self, objs):</pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v139813577467584">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>kwargs</td>
                    <td class="code"><pre>{&#x27;contact_id&#x27;: &#x27;79db7607-6088-44c1-a010-ed4ef39d4f37&#x27;,
 &#x27;contact_number&#x27;: &#x27;5588988562749&#x27;,
 &#x27;is_from_me&#x27;: [True],
 &#x27;message_id&#x27;: &#x27;5a2c0ddd-3dba-4733-854e-3332ffefb3f7&#x27;,
 &#x27;message_type&#x27;: &#x27;chat&#x27;,
 &#x27;period&#x27;: &#x27;2023-05-01&#x27;,
 &#x27;retries&#x27;: 0,
 &#x27;status&#x27;: 0,
 &#x27;ticket_service_id&#x27;: &#x27;3e14aea2-bc69-4e56-b20b-1b6d63ade6d5&#x27;,
 &#x27;timestamp&#x27;: &#x27;2023-05-21T23:41:38.180Z&#x27;}</pre></td>
                  </tr>
                
                  <tr>
                    <td>obj</td>
                    <td class="code"><pre>&lt;Message: 5588988562749 - 2023-05-01 - 0&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;QuerySet [&lt;Message: 5588988562749 - 2023-05-01 - 0&gt;, &lt;Message: 5588988562749 - 2023-05-01 - 0&gt;, &lt;Message: 5588988562749 - 2023-05-01 - 0&gt;, &lt;Message: 5588988562749 - 2023-05-01 - 0&gt;, &lt;Message: 5588988562749 - 2023-05-01 - 0&gt;, &lt;Message: 5588988562749 - 2023-05-01 - 0&gt;, &lt;Message: 5588988562749 - 2023-05-01 - 0&gt;, &lt;Message: 5588988562749 - 2023-05-01 - 0&gt;]&gt;</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
        <li class="frame django">
          
            <code class="fname">/home/jpfilho/.local/lib/python3.10/site-packages/django/db/models/base.py</code>, line 814, in save
          

          
            <div class="context" id="c139813577469312">
              
                <ol start="807" class="pre-context" id="pre139813577469312">
                
                  <li onclick="toggle('pre139813577469312', 'post139813577469312')"><pre>            for field in self._meta.concrete_fields:</pre></li>
                
                  <li onclick="toggle('pre139813577469312', 'post139813577469312')"><pre>                if not field.primary_key and not hasattr(field, &quot;through&quot;):</pre></li>
                
                  <li onclick="toggle('pre139813577469312', 'post139813577469312')"><pre>                    field_names.add(field.attname)</pre></li>
                
                  <li onclick="toggle('pre139813577469312', 'post139813577469312')"><pre>            loaded_fields = field_names.difference(deferred_fields)</pre></li>
                
                  <li onclick="toggle('pre139813577469312', 'post139813577469312')"><pre>            if loaded_fields:</pre></li>
                
                  <li onclick="toggle('pre139813577469312', 'post139813577469312')"><pre>                update_fields = frozenset(loaded_fields)</pre></li>
                
                  <li onclick="toggle('pre139813577469312', 'post139813577469312')"><pre></pre></li>
                
                </ol>
              
              <ol start="814" class="context-line">
                <li onclick="toggle('pre139813577469312', 'post139813577469312')"><pre>        self.save_base(</pre> <span>…</span></li>
              </ol>
              
                <ol start='815' class="post-context" id="post139813577469312">
                  
                  <li onclick="toggle('pre139813577469312', 'post139813577469312')"><pre>            using=using,</pre></li>
                  
                  <li onclick="toggle('pre139813577469312', 'post139813577469312')"><pre>            force_insert=force_insert,</pre></li>
                  
                  <li onclick="toggle('pre139813577469312', 'post139813577469312')"><pre>            force_update=force_update,</pre></li>
                  
                  <li onclick="toggle('pre139813577469312', 'post139813577469312')"><pre>            update_fields=update_fields,</pre></li>
                  
                  <li onclick="toggle('pre139813577469312', 'post139813577469312')"><pre>        )</pre></li>
                  
                  <li onclick="toggle('pre139813577469312', 'post139813577469312')"><pre></pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v139813577469312">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>deferred_fields</td>
                    <td class="code"><pre>set()</pre></td>
                  </tr>
                
                  <tr>
                    <td>force_insert</td>
                    <td class="code"><pre>True</pre></td>
                  </tr>
                
                  <tr>
                    <td>force_update</td>
                    <td class="code"><pre>False</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;Message: 5588988562749 - 2023-05-01 - 0&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>update_fields</td>
                    <td class="code"><pre>None</pre></td>
                  </tr>
                
                  <tr>
                    <td>using</td>
                    <td class="code"><pre>&#x27;default&#x27;</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
        <li class="frame django">
          
            <code class="fname">/home/jpfilho/.local/lib/python3.10/site-packages/django/db/models/base.py</code>, line 877, in save_base
          

          
            <div class="context" id="c139813564204096">
              
                <ol start="870" class="pre-context" id="pre139813564204096">
                
                  <li onclick="toggle('pre139813564204096', 'post139813564204096')"><pre>            context_manager = transaction.atomic(using=using, savepoint=False)</pre></li>
                
                  <li onclick="toggle('pre139813564204096', 'post139813564204096')"><pre>        else:</pre></li>
                
                  <li onclick="toggle('pre139813564204096', 'post139813564204096')"><pre>            context_manager = transaction.mark_for_rollback_on_error(using=using)</pre></li>
                
                  <li onclick="toggle('pre139813564204096', 'post139813564204096')"><pre>        with context_manager:</pre></li>
                
                  <li onclick="toggle('pre139813564204096', 'post139813564204096')"><pre>            parent_inserted = False</pre></li>
                
                  <li onclick="toggle('pre139813564204096', 'post139813564204096')"><pre>            if not raw:</pre></li>
                
                  <li onclick="toggle('pre139813564204096', 'post139813564204096')"><pre>                parent_inserted = self._save_parents(cls, using, update_fields)</pre></li>
                
                </ol>
              
              <ol start="877" class="context-line">
                <li onclick="toggle('pre139813564204096', 'post139813564204096')"><pre>            updated = self._save_table(</pre> <span>…</span></li>
              </ol>
              
                <ol start='878' class="post-context" id="post139813564204096">
                  
                  <li onclick="toggle('pre139813564204096', 'post139813564204096')"><pre>                raw,</pre></li>
                  
                  <li onclick="toggle('pre139813564204096', 'post139813564204096')"><pre>                cls,</pre></li>
                  
                  <li onclick="toggle('pre139813564204096', 'post139813564204096')"><pre>                force_insert or parent_inserted,</pre></li>
                  
                  <li onclick="toggle('pre139813564204096', 'post139813564204096')"><pre>                force_update,</pre></li>
                  
                  <li onclick="toggle('pre139813564204096', 'post139813564204096')"><pre>                using,</pre></li>
                  
                  <li onclick="toggle('pre139813564204096', 'post139813564204096')"><pre>                update_fields,</pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v139813564204096">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>cls</td>
                    <td class="code"><pre>&lt;class &#x27;messages_api.models.Message&#x27;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>context_manager</td>
                    <td class="code"><pre>&lt;contextlib._GeneratorContextManager object at 0x7f28e5aaa9e0&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>force_insert</td>
                    <td class="code"><pre>True</pre></td>
                  </tr>
                
                  <tr>
                    <td>force_update</td>
                    <td class="code"><pre>False</pre></td>
                  </tr>
                
                  <tr>
                    <td>meta</td>
                    <td class="code"><pre>&lt;Options for Message&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>origin</td>
                    <td class="code"><pre>&lt;class &#x27;messages_api.models.Message&#x27;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>parent_inserted</td>
                    <td class="code"><pre>False</pre></td>
                  </tr>
                
                  <tr>
                    <td>raw</td>
                    <td class="code"><pre>False</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;Message: 5588988562749 - 2023-05-01 - 0&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>update_fields</td>
                    <td class="code"><pre>None</pre></td>
                  </tr>
                
                  <tr>
                    <td>using</td>
                    <td class="code"><pre>&#x27;default&#x27;</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
        <li class="frame django">
          
            <code class="fname">/home/jpfilho/.local/lib/python3.10/site-packages/django/db/models/base.py</code>, line 1020, in _save_table
          

          
            <div class="context" id="c139813564203392">
              
                <ol start="1013" class="pre-context" id="pre139813564203392">
                
                  <li onclick="toggle('pre139813564203392', 'post139813564203392')"><pre>                    )[&quot;_order__max&quot;]</pre></li>
                
                  <li onclick="toggle('pre139813564203392', 'post139813564203392')"><pre>                )</pre></li>
                
                  <li onclick="toggle('pre139813564203392', 'post139813564203392')"><pre>            fields = meta.local_concrete_fields</pre></li>
                
                  <li onclick="toggle('pre139813564203392', 'post139813564203392')"><pre>            if not pk_set:</pre></li>
                
                  <li onclick="toggle('pre139813564203392', 'post139813564203392')"><pre>                fields = [f for f in fields if f is not meta.auto_field]</pre></li>
                
                  <li onclick="toggle('pre139813564203392', 'post139813564203392')"><pre></pre></li>
                
                  <li onclick="toggle('pre139813564203392', 'post139813564203392')"><pre>            returning_fields = meta.db_returning_fields</pre></li>
                
                </ol>
              
              <ol start="1020" class="context-line">
                <li onclick="toggle('pre139813564203392', 'post139813564203392')"><pre>            results = self._do_insert(</pre> <span>…</span></li>
              </ol>
              
                <ol start='1021' class="post-context" id="post139813564203392">
                  
                  <li onclick="toggle('pre139813564203392', 'post139813564203392')"><pre>                cls._base_manager, using, fields, returning_fields, raw</pre></li>
                  
                  <li onclick="toggle('pre139813564203392', 'post139813564203392')"><pre>            )</pre></li>
                  
                  <li onclick="toggle('pre139813564203392', 'post139813564203392')"><pre>            if results:</pre></li>
                  
                  <li onclick="toggle('pre139813564203392', 'post139813564203392')"><pre>                for value, field in zip(results[0], returning_fields):</pre></li>
                  
                  <li onclick="toggle('pre139813564203392', 'post139813564203392')"><pre>                    setattr(self, field.attname, value)</pre></li>
                  
                  <li onclick="toggle('pre139813564203392', 'post139813564203392')"><pre>        return updated</pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v139813564203392">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>cls</td>
                    <td class="code"><pre>&lt;class &#x27;messages_api.models.Message&#x27;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>fields</td>
                    <td class="code"><pre>(&lt;django.db.models.fields.CharField: message_id&gt;,
 &lt;django.db.models.fields.CharField: contact_id&gt;,
 &lt;django.db.models.fields.CharField: contact_number&gt;,
 &lt;django.db.models.fields.DateField: period&gt;,
 &lt;django.db.models.fields.DateTimeField: timestamp&gt;,
 &lt;django.db.models.fields.IntegerField: status&gt;,
 &lt;django.db.models.fields.CharField: ticket_service_id&gt;,
 &lt;django.db.models.fields.CharField: message_type&gt;,
 &lt;django.db.models.fields.BooleanField: is_from_me&gt;,
 &lt;django.db.models.fields.IntegerField: retries&gt;)</pre></td>
                  </tr>
                
                  <tr>
                    <td>force_insert</td>
                    <td class="code"><pre>True</pre></td>
                  </tr>
                
                  <tr>
                    <td>force_update</td>
                    <td class="code"><pre>False</pre></td>
                  </tr>
                
                  <tr>
                    <td>meta</td>
                    <td class="code"><pre>&lt;Options for Message&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>non_pks</td>
                    <td class="code"><pre>[&lt;django.db.models.fields.CharField: contact_id&gt;,
 &lt;django.db.models.fields.CharField: contact_number&gt;,
 &lt;django.db.models.fields.DateField: period&gt;,
 &lt;django.db.models.fields.DateTimeField: timestamp&gt;,
 &lt;django.db.models.fields.IntegerField: status&gt;,
 &lt;django.db.models.fields.CharField: ticket_service_id&gt;,
 &lt;django.db.models.fields.CharField: message_type&gt;,
 &lt;django.db.models.fields.BooleanField: is_from_me&gt;,
 &lt;django.db.models.fields.IntegerField: retries&gt;]</pre></td>
                  </tr>
                
                  <tr>
                    <td>pk_set</td>
                    <td class="code"><pre>True</pre></td>
                  </tr>
                
                  <tr>
                    <td>pk_val</td>
                    <td class="code"><pre>&#x27;5a2c0ddd-3dba-4733-854e-3332ffefb3f7&#x27;</pre></td>
                  </tr>
                
                  <tr>
                    <td>raw</td>
                    <td class="code"><pre>False</pre></td>
                  </tr>
                
                  <tr>
                    <td>returning_fields</td>
                    <td class="code"><pre>[]</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;Message: 5588988562749 - 2023-05-01 - 0&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>update_fields</td>
                    <td class="code"><pre>None</pre></td>
                  </tr>
                
                  <tr>
                    <td>updated</td>
                    <td class="code"><pre>False</pre></td>
                  </tr>
                
                  <tr>
                    <td>using</td>
                    <td class="code"><pre>&#x27;default&#x27;</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
        <li class="frame django">
          
            <code class="fname">/home/jpfilho/.local/lib/python3.10/site-packages/django/db/models/base.py</code>, line 1061, in _do_insert
          

          
            <div class="context" id="c139813628045696">
              
                <ol start="1054" class="pre-context" id="pre139813628045696">
                
                  <li onclick="toggle('pre139813628045696', 'post139813628045696')"><pre>        return filtered._update(values) &gt; 0</pre></li>
                
                  <li onclick="toggle('pre139813628045696', 'post139813628045696')"><pre></pre></li>
                
                  <li onclick="toggle('pre139813628045696', 'post139813628045696')"><pre>    def _do_insert(self, manager, using, fields, returning_fields, raw):</pre></li>
                
                  <li onclick="toggle('pre139813628045696', 'post139813628045696')"><pre>        &quot;&quot;&quot;</pre></li>
                
                  <li onclick="toggle('pre139813628045696', 'post139813628045696')"><pre>        Do an INSERT. If returning_fields is defined then this method should</pre></li>
                
                  <li onclick="toggle('pre139813628045696', 'post139813628045696')"><pre>        return the newly created data for the model.</pre></li>
                
                  <li onclick="toggle('pre139813628045696', 'post139813628045696')"><pre>        &quot;&quot;&quot;</pre></li>
                
                </ol>
              
              <ol start="1061" class="context-line">
                <li onclick="toggle('pre139813628045696', 'post139813628045696')"><pre>        return manager._insert(</pre> <span>…</span></li>
              </ol>
              
                <ol start='1062' class="post-context" id="post139813628045696">
                  
                  <li onclick="toggle('pre139813628045696', 'post139813628045696')"><pre>            [self],</pre></li>
                  
                  <li onclick="toggle('pre139813628045696', 'post139813628045696')"><pre>            fields=fields,</pre></li>
                  
                  <li onclick="toggle('pre139813628045696', 'post139813628045696')"><pre>            returning_fields=returning_fields,</pre></li>
                  
                  <li onclick="toggle('pre139813628045696', 'post139813628045696')"><pre>            using=using,</pre></li>
                  
                  <li onclick="toggle('pre139813628045696', 'post139813628045696')"><pre>            raw=raw,</pre></li>
                  
                  <li onclick="toggle('pre139813628045696', 'post139813628045696')"><pre>        )</pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v139813628045696">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>fields</td>
                    <td class="code"><pre>(&lt;django.db.models.fields.CharField: message_id&gt;,
 &lt;django.db.models.fields.CharField: contact_id&gt;,
 &lt;django.db.models.fields.CharField: contact_number&gt;,
 &lt;django.db.models.fields.DateField: period&gt;,
 &lt;django.db.models.fields.DateTimeField: timestamp&gt;,
 &lt;django.db.models.fields.IntegerField: status&gt;,
 &lt;django.db.models.fields.CharField: ticket_service_id&gt;,
 &lt;django.db.models.fields.CharField: message_type&gt;,
 &lt;django.db.models.fields.BooleanField: is_from_me&gt;,
 &lt;django.db.models.fields.IntegerField: retries&gt;)</pre></td>
                  </tr>
                
                  <tr>
                    <td>manager</td>
                    <td class="code"><pre>&lt;django.db.models.manager.Manager object at 0x7f28e5aaaa40&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>raw</td>
                    <td class="code"><pre>False</pre></td>
                  </tr>
                
                  <tr>
                    <td>returning_fields</td>
                    <td class="code"><pre>[]</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;Message: 5588988562749 - 2023-05-01 - 0&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>using</td>
                    <td class="code"><pre>&#x27;default&#x27;</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
        <li class="frame django">
          
            <code class="fname">/home/jpfilho/.local/lib/python3.10/site-packages/django/db/models/manager.py</code>, line 87, in manager_method
          

          
            <div class="context" id="c139813564418176">
              
                <ol start="80" class="pre-context" id="pre139813564418176">
                
                  <li onclick="toggle('pre139813564418176', 'post139813564418176')"><pre>        return []</pre></li>
                
                  <li onclick="toggle('pre139813564418176', 'post139813564418176')"><pre></pre></li>
                
                  <li onclick="toggle('pre139813564418176', 'post139813564418176')"><pre>    @classmethod</pre></li>
                
                  <li onclick="toggle('pre139813564418176', 'post139813564418176')"><pre>    def _get_queryset_methods(cls, queryset_class):</pre></li>
                
                  <li onclick="toggle('pre139813564418176', 'post139813564418176')"><pre>        def create_method(name, method):</pre></li>
                
                  <li onclick="toggle('pre139813564418176', 'post139813564418176')"><pre>            @wraps(method)</pre></li>
                
                  <li onclick="toggle('pre139813564418176', 'post139813564418176')"><pre>            def manager_method(self, *args, **kwargs):</pre></li>
                
                </ol>
              
              <ol start="87" class="context-line">
                <li onclick="toggle('pre139813564418176', 'post139813564418176')"><pre>                return getattr(self.get_queryset(), name)(*args, **kwargs)</pre> <span>…</span></li>
              </ol>
              
                <ol start='88' class="post-context" id="post139813564418176">
                  
                  <li onclick="toggle('pre139813564418176', 'post139813564418176')"><pre></pre></li>
                  
                  <li onclick="toggle('pre139813564418176', 'post139813564418176')"><pre>            return manager_method</pre></li>
                  
                  <li onclick="toggle('pre139813564418176', 'post139813564418176')"><pre></pre></li>
                  
                  <li onclick="toggle('pre139813564418176', 'post139813564418176')"><pre>        new_methods = {}</pre></li>
                  
                  <li onclick="toggle('pre139813564418176', 'post139813564418176')"><pre>        for name, method in inspect.getmembers(</pre></li>
                  
                  <li onclick="toggle('pre139813564418176', 'post139813564418176')"><pre>            queryset_class, predicate=inspect.isfunction</pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v139813564418176">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>args</td>
                    <td class="code"><pre>([&lt;Message: 5588988562749 - 2023-05-01 - 0&gt;],)</pre></td>
                  </tr>
                
                  <tr>
                    <td>kwargs</td>
                    <td class="code"><pre>{&#x27;fields&#x27;: (&lt;django.db.models.fields.CharField: message_id&gt;,
            &lt;django.db.models.fields.CharField: contact_id&gt;,
            &lt;django.db.models.fields.CharField: contact_number&gt;,
            &lt;django.db.models.fields.DateField: period&gt;,
            &lt;django.db.models.fields.DateTimeField: timestamp&gt;,
            &lt;django.db.models.fields.IntegerField: status&gt;,
            &lt;django.db.models.fields.CharField: ticket_service_id&gt;,
            &lt;django.db.models.fields.CharField: message_type&gt;,
            &lt;django.db.models.fields.BooleanField: is_from_me&gt;,
            &lt;django.db.models.fields.IntegerField: retries&gt;),
 &#x27;raw&#x27;: False,
 &#x27;returning_fields&#x27;: [],
 &#x27;using&#x27;: &#x27;default&#x27;}</pre></td>
                  </tr>
                
                  <tr>
                    <td>name</td>
                    <td class="code"><pre>&#x27;_insert&#x27;</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;django.db.models.manager.Manager object at 0x7f28e5aaaa40&gt;</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
        <li class="frame django">
          
            <code class="fname">/home/jpfilho/.local/lib/python3.10/site-packages/django/db/models/query.py</code>, line 1805, in _insert
          

          
            <div class="context" id="c139813628255744">
              
                <ol start="1798" class="pre-context" id="pre139813628255744">
                
                  <li onclick="toggle('pre139813628255744', 'post139813628255744')"><pre>        query = sql.InsertQuery(</pre></li>
                
                  <li onclick="toggle('pre139813628255744', 'post139813628255744')"><pre>            self.model,</pre></li>
                
                  <li onclick="toggle('pre139813628255744', 'post139813628255744')"><pre>            on_conflict=on_conflict,</pre></li>
                
                  <li onclick="toggle('pre139813628255744', 'post139813628255744')"><pre>            update_fields=update_fields,</pre></li>
                
                  <li onclick="toggle('pre139813628255744', 'post139813628255744')"><pre>            unique_fields=unique_fields,</pre></li>
                
                  <li onclick="toggle('pre139813628255744', 'post139813628255744')"><pre>        )</pre></li>
                
                  <li onclick="toggle('pre139813628255744', 'post139813628255744')"><pre>        query.insert_values(fields, objs, raw=raw)</pre></li>
                
                </ol>
              
              <ol start="1805" class="context-line">
                <li onclick="toggle('pre139813628255744', 'post139813628255744')"><pre>        return query.get_compiler(using=using).execute_sql(returning_fields)</pre> <span>…</span></li>
              </ol>
              
                <ol start='1806' class="post-context" id="post139813628255744">
                  
                  <li onclick="toggle('pre139813628255744', 'post139813628255744')"><pre></pre></li>
                  
                  <li onclick="toggle('pre139813628255744', 'post139813628255744')"><pre>    _insert.alters_data = True</pre></li>
                  
                  <li onclick="toggle('pre139813628255744', 'post139813628255744')"><pre>    _insert.queryset_only = False</pre></li>
                  
                  <li onclick="toggle('pre139813628255744', 'post139813628255744')"><pre></pre></li>
                  
                  <li onclick="toggle('pre139813628255744', 'post139813628255744')"><pre>    def _batched_insert(</pre></li>
                  
                  <li onclick="toggle('pre139813628255744', 'post139813628255744')"><pre>        self,</pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v139813628255744">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>fields</td>
                    <td class="code"><pre>(&lt;django.db.models.fields.CharField: message_id&gt;,
 &lt;django.db.models.fields.CharField: contact_id&gt;,
 &lt;django.db.models.fields.CharField: contact_number&gt;,
 &lt;django.db.models.fields.DateField: period&gt;,
 &lt;django.db.models.fields.DateTimeField: timestamp&gt;,
 &lt;django.db.models.fields.IntegerField: status&gt;,
 &lt;django.db.models.fields.CharField: ticket_service_id&gt;,
 &lt;django.db.models.fields.CharField: message_type&gt;,
 &lt;django.db.models.fields.BooleanField: is_from_me&gt;,
 &lt;django.db.models.fields.IntegerField: retries&gt;)</pre></td>
                  </tr>
                
                  <tr>
                    <td>objs</td>
                    <td class="code"><pre>[&lt;Message: 5588988562749 - 2023-05-01 - 0&gt;]</pre></td>
                  </tr>
                
                  <tr>
                    <td>on_conflict</td>
                    <td class="code"><pre>None</pre></td>
                  </tr>
                
                  <tr>
                    <td>query</td>
                    <td class="code"><pre>&lt;django.db.models.sql.subqueries.InsertQuery object at 0x7f28e5aa9b70&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>raw</td>
                    <td class="code"><pre>False</pre></td>
                  </tr>
                
                  <tr>
                    <td>returning_fields</td>
                    <td class="code"><pre>[]</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;QuerySet [&lt;Message: 5588988562749 - 2023-05-01 - 0&gt;, &lt;Message: 5588988562749 - 2023-05-01 - 0&gt;, &lt;Message: 5588988562749 - 2023-05-01 - 0&gt;, &lt;Message: 5588988562749 - 2023-05-01 - 0&gt;, &lt;Message: 5588988562749 - 2023-05-01 - 0&gt;, &lt;Message: 5588988562749 - 2023-05-01 - 0&gt;, &lt;Message: 5588988562749 - 2023-05-01 - 0&gt;, &lt;Message: 5588988562749 - 2023-05-01 - 0&gt;]&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>unique_fields</td>
                    <td class="code"><pre>None</pre></td>
                  </tr>
                
                  <tr>
                    <td>update_fields</td>
                    <td class="code"><pre>None</pre></td>
                  </tr>
                
                  <tr>
                    <td>using</td>
                    <td class="code"><pre>&#x27;default&#x27;</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
        <li class="frame django">
          
            <code class="fname">/home/jpfilho/.local/lib/python3.10/site-packages/django/db/models/sql/compiler.py</code>, line 1819, in execute_sql
          

          
            <div class="context" id="c139813564218368">
              
                <ol start="1812" class="pre-context" id="pre139813564218368">
                
                  <li onclick="toggle('pre139813564218368', 'post139813564218368')"><pre>            returning_fields</pre></li>
                
                  <li onclick="toggle('pre139813564218368', 'post139813564218368')"><pre>            and len(self.query.objs) != 1</pre></li>
                
                  <li onclick="toggle('pre139813564218368', 'post139813564218368')"><pre>            and not self.connection.features.can_return_rows_from_bulk_insert</pre></li>
                
                  <li onclick="toggle('pre139813564218368', 'post139813564218368')"><pre>        )</pre></li>
                
                  <li onclick="toggle('pre139813564218368', 'post139813564218368')"><pre>        opts = self.query.get_meta()</pre></li>
                
                  <li onclick="toggle('pre139813564218368', 'post139813564218368')"><pre>        self.returning_fields = returning_fields</pre></li>
                
                  <li onclick="toggle('pre139813564218368', 'post139813564218368')"><pre>        with self.connection.cursor() as cursor:</pre></li>
                
                </ol>
              
              <ol start="1819" class="context-line">
                <li onclick="toggle('pre139813564218368', 'post139813564218368')"><pre>            for sql, params in self.as_sql():</pre> <span>…</span></li>
              </ol>
              
                <ol start='1820' class="post-context" id="post139813564218368">
                  
                  <li onclick="toggle('pre139813564218368', 'post139813564218368')"><pre>                cursor.execute(sql, params)</pre></li>
                  
                  <li onclick="toggle('pre139813564218368', 'post139813564218368')"><pre>            if not self.returning_fields:</pre></li>
                  
                  <li onclick="toggle('pre139813564218368', 'post139813564218368')"><pre>                return []</pre></li>
                  
                  <li onclick="toggle('pre139813564218368', 'post139813564218368')"><pre>            if (</pre></li>
                  
                  <li onclick="toggle('pre139813564218368', 'post139813564218368')"><pre>                self.connection.features.can_return_rows_from_bulk_insert</pre></li>
                  
                  <li onclick="toggle('pre139813564218368', 'post139813564218368')"><pre>                and len(self.query.objs) &gt; 1</pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v139813564218368">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>cursor</td>
                    <td class="code"><pre>&lt;django.db.backends.postgresql.base.CursorDebugWrapper object at 0x7f28e1d3e110&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>opts</td>
                    <td class="code"><pre>&lt;Options for Message&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>returning_fields</td>
                    <td class="code"><pre>[]</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;SQLInsertCompiler model=Message connection=&lt;DatabaseWrapper vendor=&#x27;postgresql&#x27; alias=&#x27;default&#x27;&gt; using=&#x27;default&#x27;&gt;</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
        <li class="frame django">
          
            <code class="fname">/home/jpfilho/.local/lib/python3.10/site-packages/django/db/models/sql/compiler.py</code>, line 1743, in as_sql
          

          
            <div class="context" id="c139813564203584">
              
                <ol start="1736" class="pre-context" id="pre139813564203584">
                
                  <li onclick="toggle('pre139813564203584', 'post139813564203584')"><pre>            on_conflict=self.query.on_conflict,</pre></li>
                
                  <li onclick="toggle('pre139813564203584', 'post139813564203584')"><pre>        )</pre></li>
                
                  <li onclick="toggle('pre139813564203584', 'post139813564203584')"><pre>        result = [&quot;%s %s&quot; % (insert_statement, qn(opts.db_table))]</pre></li>
                
                  <li onclick="toggle('pre139813564203584', 'post139813564203584')"><pre>        fields = self.query.fields or [opts.pk]</pre></li>
                
                  <li onclick="toggle('pre139813564203584', 'post139813564203584')"><pre>        result.append(&quot;(%s)&quot; % &quot;, &quot;.join(qn(f.column) for f in fields))</pre></li>
                
                  <li onclick="toggle('pre139813564203584', 'post139813564203584')"><pre></pre></li>
                
                  <li onclick="toggle('pre139813564203584', 'post139813564203584')"><pre>        if self.query.fields:</pre></li>
                
                </ol>
              
              <ol start="1743" class="context-line">
                <li onclick="toggle('pre139813564203584', 'post139813564203584')"><pre>            value_rows = [</pre> <span>…</span></li>
              </ol>
              
                <ol start='1744' class="post-context" id="post139813564203584">
                  
                  <li onclick="toggle('pre139813564203584', 'post139813564203584')"><pre>                [</pre></li>
                  
                  <li onclick="toggle('pre139813564203584', 'post139813564203584')"><pre>                    self.prepare_value(field, self.pre_save_val(field, obj))</pre></li>
                  
                  <li onclick="toggle('pre139813564203584', 'post139813564203584')"><pre>                    for field in fields</pre></li>
                  
                  <li onclick="toggle('pre139813564203584', 'post139813564203584')"><pre>                ]</pre></li>
                  
                  <li onclick="toggle('pre139813564203584', 'post139813564203584')"><pre>                for obj in self.query.objs</pre></li>
                  
                  <li onclick="toggle('pre139813564203584', 'post139813564203584')"><pre>            ]</pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v139813564203584">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>fields</td>
                    <td class="code"><pre>(&lt;django.db.models.fields.CharField: message_id&gt;,
 &lt;django.db.models.fields.CharField: contact_id&gt;,
 &lt;django.db.models.fields.CharField: contact_number&gt;,
 &lt;django.db.models.fields.DateField: period&gt;,
 &lt;django.db.models.fields.DateTimeField: timestamp&gt;,
 &lt;django.db.models.fields.IntegerField: status&gt;,
 &lt;django.db.models.fields.CharField: ticket_service_id&gt;,
 &lt;django.db.models.fields.CharField: message_type&gt;,
 &lt;django.db.models.fields.BooleanField: is_from_me&gt;,
 &lt;django.db.models.fields.IntegerField: retries&gt;)</pre></td>
                  </tr>
                
                  <tr>
                    <td>insert_statement</td>
                    <td class="code"><pre>&#x27;INSERT INTO&#x27;</pre></td>
                  </tr>
                
                  <tr>
                    <td>opts</td>
                    <td class="code"><pre>&lt;Options for Message&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>qn</td>
                    <td class="code"><pre>&lt;bound method DatabaseOperations.quote_name of &lt;django.db.backends.postgresql.operations.DatabaseOperations object at 0x7f28e5aa8d90&gt;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>result</td>
                    <td class="code"><pre>[&#x27;INSERT INTO &quot;messages_api_message&quot;&#x27;,
 &#x27;(&quot;message_id&quot;, &quot;contact_id&quot;, &quot;contact_number&quot;, &quot;period&quot;, &quot;timestamp&quot;, &#x27;
 &#x27;&quot;status&quot;, &quot;ticket_service_id&quot;, &quot;message_type&quot;, &quot;is_from_me&quot;, &quot;retries&quot;)&#x27;]</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;SQLInsertCompiler model=Message connection=&lt;DatabaseWrapper vendor=&#x27;postgresql&#x27; alias=&#x27;default&#x27;&gt; using=&#x27;default&#x27;&gt;</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
        <li class="frame django">
          
            <code class="fname">/home/jpfilho/.local/lib/python3.10/site-packages/django/db/models/sql/compiler.py</code>, line 1744, in &lt;listcomp&gt;
          

          
            <div class="context" id="c139813564207168">
              
                <ol start="1737" class="pre-context" id="pre139813564207168">
                
                  <li onclick="toggle('pre139813564207168', 'post139813564207168')"><pre>        )</pre></li>
                
                  <li onclick="toggle('pre139813564207168', 'post139813564207168')"><pre>        result = [&quot;%s %s&quot; % (insert_statement, qn(opts.db_table))]</pre></li>
                
                  <li onclick="toggle('pre139813564207168', 'post139813564207168')"><pre>        fields = self.query.fields or [opts.pk]</pre></li>
                
                  <li onclick="toggle('pre139813564207168', 'post139813564207168')"><pre>        result.append(&quot;(%s)&quot; % &quot;, &quot;.join(qn(f.column) for f in fields))</pre></li>
                
                  <li onclick="toggle('pre139813564207168', 'post139813564207168')"><pre></pre></li>
                
                  <li onclick="toggle('pre139813564207168', 'post139813564207168')"><pre>        if self.query.fields:</pre></li>
                
                  <li onclick="toggle('pre139813564207168', 'post139813564207168')"><pre>            value_rows = [</pre></li>
                
                </ol>
              
              <ol start="1744" class="context-line">
                <li onclick="toggle('pre139813564207168', 'post139813564207168')"><pre>                [</pre> <span>…</span></li>
              </ol>
              
                <ol start='1745' class="post-context" id="post139813564207168">
                  
                  <li onclick="toggle('pre139813564207168', 'post139813564207168')"><pre>                    self.prepare_value(field, self.pre_save_val(field, obj))</pre></li>
                  
                  <li onclick="toggle('pre139813564207168', 'post139813564207168')"><pre>                    for field in fields</pre></li>
                  
                  <li onclick="toggle('pre139813564207168', 'post139813564207168')"><pre>                ]</pre></li>
                  
                  <li onclick="toggle('pre139813564207168', 'post139813564207168')"><pre>                for obj in self.query.objs</pre></li>
                  
                  <li onclick="toggle('pre139813564207168', 'post139813564207168')"><pre>            ]</pre></li>
                  
                  <li onclick="toggle('pre139813564207168', 'post139813564207168')"><pre>        else:</pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v139813564207168">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>.0</td>
                    <td class="code"><pre>&lt;list_iterator object at 0x7f28e5a0c880&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>fields</td>
                    <td class="code"><pre>(&lt;django.db.models.fields.CharField: message_id&gt;,
 &lt;django.db.models.fields.CharField: contact_id&gt;,
 &lt;django.db.models.fields.CharField: contact_number&gt;,
 &lt;django.db.models.fields.DateField: period&gt;,
 &lt;django.db.models.fields.DateTimeField: timestamp&gt;,
 &lt;django.db.models.fields.IntegerField: status&gt;,
 &lt;django.db.models.fields.CharField: ticket_service_id&gt;,
 &lt;django.db.models.fields.CharField: message_type&gt;,
 &lt;django.db.models.fields.BooleanField: is_from_me&gt;,
 &lt;django.db.models.fields.IntegerField: retries&gt;)</pre></td>
                  </tr>
                
                  <tr>
                    <td>obj</td>
                    <td class="code"><pre>&lt;Message: 5588988562749 - 2023-05-01 - 0&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;SQLInsertCompiler model=Message connection=&lt;DatabaseWrapper vendor=&#x27;postgresql&#x27; alias=&#x27;default&#x27;&gt; using=&#x27;default&#x27;&gt;</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
        <li class="frame django">
          
            <code class="fname">/home/jpfilho/.local/lib/python3.10/site-packages/django/db/models/sql/compiler.py</code>, line 1745, in &lt;listcomp&gt;
          

          
            <div class="context" id="c139813564209600">
              
                <ol start="1738" class="pre-context" id="pre139813564209600">
                
                  <li onclick="toggle('pre139813564209600', 'post139813564209600')"><pre>        result = [&quot;%s %s&quot; % (insert_statement, qn(opts.db_table))]</pre></li>
                
                  <li onclick="toggle('pre139813564209600', 'post139813564209600')"><pre>        fields = self.query.fields or [opts.pk]</pre></li>
                
                  <li onclick="toggle('pre139813564209600', 'post139813564209600')"><pre>        result.append(&quot;(%s)&quot; % &quot;, &quot;.join(qn(f.column) for f in fields))</pre></li>
                
                  <li onclick="toggle('pre139813564209600', 'post139813564209600')"><pre></pre></li>
                
                  <li onclick="toggle('pre139813564209600', 'post139813564209600')"><pre>        if self.query.fields:</pre></li>
                
                  <li onclick="toggle('pre139813564209600', 'post139813564209600')"><pre>            value_rows = [</pre></li>
                
                  <li onclick="toggle('pre139813564209600', 'post139813564209600')"><pre>                [</pre></li>
                
                </ol>
              
              <ol start="1745" class="context-line">
                <li onclick="toggle('pre139813564209600', 'post139813564209600')"><pre>                    self.prepare_value(field, self.pre_save_val(field, obj))</pre> <span>…</span></li>
              </ol>
              
                <ol start='1746' class="post-context" id="post139813564209600">
                  
                  <li onclick="toggle('pre139813564209600', 'post139813564209600')"><pre>                    for field in fields</pre></li>
                  
                  <li onclick="toggle('pre139813564209600', 'post139813564209600')"><pre>                ]</pre></li>
                  
                  <li onclick="toggle('pre139813564209600', 'post139813564209600')"><pre>                for obj in self.query.objs</pre></li>
                  
                  <li onclick="toggle('pre139813564209600', 'post139813564209600')"><pre>            ]</pre></li>
                  
                  <li onclick="toggle('pre139813564209600', 'post139813564209600')"><pre>        else:</pre></li>
                  
                  <li onclick="toggle('pre139813564209600', 'post139813564209600')"><pre>            # An empty object.</pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v139813564209600">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>.0</td>
                    <td class="code"><pre>&lt;tuple_iterator object at 0x7f28e5a0da50&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>field</td>
                    <td class="code"><pre>&lt;django.db.models.fields.BooleanField: is_from_me&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>obj</td>
                    <td class="code"><pre>&lt;Message: 5588988562749 - 2023-05-01 - 0&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;SQLInsertCompiler model=Message connection=&lt;DatabaseWrapper vendor=&#x27;postgresql&#x27; alias=&#x27;default&#x27;&gt; using=&#x27;default&#x27;&gt;</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
        <li class="frame django">
          
            <code class="fname">/home/jpfilho/.local/lib/python3.10/site-packages/django/db/models/sql/compiler.py</code>, line 1684, in prepare_value
          

          
            <div class="context" id="c139813564218816">
              
                <ol start="1677" class="pre-context" id="pre139813564218816">
                
                  <li onclick="toggle('pre139813564218816', 'post139813564218816')"><pre>                    &quot;(%s=%r).&quot; % (field.name, value)</pre></li>
                
                  <li onclick="toggle('pre139813564218816', 'post139813564218816')"><pre>                )</pre></li>
                
                  <li onclick="toggle('pre139813564218816', 'post139813564218816')"><pre>            if value.contains_over_clause:</pre></li>
                
                  <li onclick="toggle('pre139813564218816', 'post139813564218816')"><pre>                raise FieldError(</pre></li>
                
                  <li onclick="toggle('pre139813564218816', 'post139813564218816')"><pre>                    &quot;Window expressions are not allowed in this query (%s=%r).&quot;</pre></li>
                
                  <li onclick="toggle('pre139813564218816', 'post139813564218816')"><pre>                    % (field.name, value)</pre></li>
                
                  <li onclick="toggle('pre139813564218816', 'post139813564218816')"><pre>                )</pre></li>
                
                </ol>
              
              <ol start="1684" class="context-line">
                <li onclick="toggle('pre139813564218816', 'post139813564218816')"><pre>        return field.get_db_prep_save(value, connection=self.connection)</pre> <span>…</span></li>
              </ol>
              
                <ol start='1685' class="post-context" id="post139813564218816">
                  
                  <li onclick="toggle('pre139813564218816', 'post139813564218816')"><pre></pre></li>
                  
                  <li onclick="toggle('pre139813564218816', 'post139813564218816')"><pre>    def pre_save_val(self, field, obj):</pre></li>
                  
                  <li onclick="toggle('pre139813564218816', 'post139813564218816')"><pre>        &quot;&quot;&quot;</pre></li>
                  
                  <li onclick="toggle('pre139813564218816', 'post139813564218816')"><pre>        Get the given field&#x27;s value off the given obj. pre_save() is used for</pre></li>
                  
                  <li onclick="toggle('pre139813564218816', 'post139813564218816')"><pre>        things like auto_now on DateTimeField. Skip it if this is a raw query.</pre></li>
                  
                  <li onclick="toggle('pre139813564218816', 'post139813564218816')"><pre>        &quot;&quot;&quot;</pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v139813564218816">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>field</td>
                    <td class="code"><pre>&lt;django.db.models.fields.BooleanField: is_from_me&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;SQLInsertCompiler model=Message connection=&lt;DatabaseWrapper vendor=&#x27;postgresql&#x27; alias=&#x27;default&#x27;&gt; using=&#x27;default&#x27;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>value</td>
                    <td class="code"><pre>[True]</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
        <li class="frame django">
          
            <code class="fname">/home/jpfilho/.local/lib/python3.10/site-packages/django/db/models/fields/__init__.py</code>, line 954, in get_db_prep_save
          

          
            <div class="context" id="c139813564204992">
              
                <ol start="947" class="pre-context" id="pre139813564204992">
                
                  <li onclick="toggle('pre139813564204992', 'post139813564204992')"><pre>            value = self.get_prep_value(value)</pre></li>
                
                  <li onclick="toggle('pre139813564204992', 'post139813564204992')"><pre>        return value</pre></li>
                
                  <li onclick="toggle('pre139813564204992', 'post139813564204992')"><pre></pre></li>
                
                  <li onclick="toggle('pre139813564204992', 'post139813564204992')"><pre>    def get_db_prep_save(self, value, connection):</pre></li>
                
                  <li onclick="toggle('pre139813564204992', 'post139813564204992')"><pre>        &quot;&quot;&quot;Return field&#x27;s value prepared for saving into a database.&quot;&quot;&quot;</pre></li>
                
                  <li onclick="toggle('pre139813564204992', 'post139813564204992')"><pre>        if hasattr(value, &quot;as_sql&quot;):</pre></li>
                
                  <li onclick="toggle('pre139813564204992', 'post139813564204992')"><pre>            return value</pre></li>
                
                </ol>
              
              <ol start="954" class="context-line">
                <li onclick="toggle('pre139813564204992', 'post139813564204992')"><pre>        return self.get_db_prep_value(value, connection=connection, prepared=False)</pre> <span>…</span></li>
              </ol>
              
                <ol start='955' class="post-context" id="post139813564204992">
                  
                  <li onclick="toggle('pre139813564204992', 'post139813564204992')"><pre></pre></li>
                  
                  <li onclick="toggle('pre139813564204992', 'post139813564204992')"><pre>    def has_default(self):</pre></li>
                  
                  <li onclick="toggle('pre139813564204992', 'post139813564204992')"><pre>        &quot;&quot;&quot;Return a boolean of whether this field has a default value.&quot;&quot;&quot;</pre></li>
                  
                  <li onclick="toggle('pre139813564204992', 'post139813564204992')"><pre>        return self.default is not NOT_PROVIDED</pre></li>
                  
                  <li onclick="toggle('pre139813564204992', 'post139813564204992')"><pre></pre></li>
                  
                  <li onclick="toggle('pre139813564204992', 'post139813564204992')"><pre>    def get_default(self):</pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v139813564204992">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>connection</td>
                    <td class="code"><pre>&lt;DatabaseWrapper vendor=&#x27;postgresql&#x27; alias=&#x27;default&#x27;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;django.db.models.fields.BooleanField: is_from_me&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>value</td>
                    <td class="code"><pre>[True]</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
        <li class="frame django">
          
            <code class="fname">/home/jpfilho/.local/lib/python3.10/site-packages/django/db/models/fields/__init__.py</code>, line 947, in get_db_prep_value
          

          
            <div class="context" id="c139813564204736">
              
                <ol start="940" class="pre-context" id="pre139813564204736">
                
                  <li onclick="toggle('pre139813564204736', 'post139813564204736')"><pre>    def get_db_prep_value(self, value, connection, prepared=False):</pre></li>
                
                  <li onclick="toggle('pre139813564204736', 'post139813564204736')"><pre>        &quot;&quot;&quot;</pre></li>
                
                  <li onclick="toggle('pre139813564204736', 'post139813564204736')"><pre>        Return field&#x27;s value prepared for interacting with the database backend.</pre></li>
                
                  <li onclick="toggle('pre139813564204736', 'post139813564204736')"><pre></pre></li>
                
                  <li onclick="toggle('pre139813564204736', 'post139813564204736')"><pre>        Used by the default implementations of get_db_prep_save().</pre></li>
                
                  <li onclick="toggle('pre139813564204736', 'post139813564204736')"><pre>        &quot;&quot;&quot;</pre></li>
                
                  <li onclick="toggle('pre139813564204736', 'post139813564204736')"><pre>        if not prepared:</pre></li>
                
                </ol>
              
              <ol start="947" class="context-line">
                <li onclick="toggle('pre139813564204736', 'post139813564204736')"><pre>            value = self.get_prep_value(value)</pre> <span>…</span></li>
              </ol>
              
                <ol start='948' class="post-context" id="post139813564204736">
                  
                  <li onclick="toggle('pre139813564204736', 'post139813564204736')"><pre>        return value</pre></li>
                  
                  <li onclick="toggle('pre139813564204736', 'post139813564204736')"><pre></pre></li>
                  
                  <li onclick="toggle('pre139813564204736', 'post139813564204736')"><pre>    def get_db_prep_save(self, value, connection):</pre></li>
                  
                  <li onclick="toggle('pre139813564204736', 'post139813564204736')"><pre>        &quot;&quot;&quot;Return field&#x27;s value prepared for saving into a database.&quot;&quot;&quot;</pre></li>
                  
                  <li onclick="toggle('pre139813564204736', 'post139813564204736')"><pre>        if hasattr(value, &quot;as_sql&quot;):</pre></li>
                  
                  <li onclick="toggle('pre139813564204736', 'post139813564204736')"><pre>            return value</pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v139813564204736">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>connection</td>
                    <td class="code"><pre>&lt;DatabaseWrapper vendor=&#x27;postgresql&#x27; alias=&#x27;default&#x27;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>prepared</td>
                    <td class="code"><pre>False</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;django.db.models.fields.BooleanField: is_from_me&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>value</td>
                    <td class="code"><pre>[True]</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
        <li class="frame django">
          
            <code class="fname">/home/jpfilho/.local/lib/python3.10/site-packages/django/db/models/fields/__init__.py</code>, line 1122, in get_prep_value
          

          
            <div class="context" id="c139813564204032">
              
                <ol start="1115" class="pre-context" id="pre139813564204032">
                
                  <li onclick="toggle('pre139813564204032', 'post139813564204032')"><pre>            params={&quot;value&quot;: value},</pre></li>
                
                  <li onclick="toggle('pre139813564204032', 'post139813564204032')"><pre>        )</pre></li>
                
                  <li onclick="toggle('pre139813564204032', 'post139813564204032')"><pre></pre></li>
                
                  <li onclick="toggle('pre139813564204032', 'post139813564204032')"><pre>    def get_prep_value(self, value):</pre></li>
                
                  <li onclick="toggle('pre139813564204032', 'post139813564204032')"><pre>        value = super().get_prep_value(value)</pre></li>
                
                  <li onclick="toggle('pre139813564204032', 'post139813564204032')"><pre>        if value is None:</pre></li>
                
                  <li onclick="toggle('pre139813564204032', 'post139813564204032')"><pre>            return None</pre></li>
                
                </ol>
              
              <ol start="1122" class="context-line">
                <li onclick="toggle('pre139813564204032', 'post139813564204032')"><pre>        return self.to_python(value)</pre> <span>…</span></li>
              </ol>
              
                <ol start='1123' class="post-context" id="post139813564204032">
                  
                  <li onclick="toggle('pre139813564204032', 'post139813564204032')"><pre></pre></li>
                  
                  <li onclick="toggle('pre139813564204032', 'post139813564204032')"><pre>    def formfield(self, **kwargs):</pre></li>
                  
                  <li onclick="toggle('pre139813564204032', 'post139813564204032')"><pre>        if self.choices is not None:</pre></li>
                  
                  <li onclick="toggle('pre139813564204032', 'post139813564204032')"><pre>            include_blank = not (self.has_default() or &quot;initial&quot; in kwargs)</pre></li>
                  
                  <li onclick="toggle('pre139813564204032', 'post139813564204032')"><pre>            defaults = {&quot;choices&quot;: self.get_choices(include_blank=include_blank)}</pre></li>
                  
                  <li onclick="toggle('pre139813564204032', 'post139813564204032')"><pre>        else:</pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v139813564204032">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>__class__</td>
                    <td class="code"><pre>&lt;class &#x27;django.db.models.fields.BooleanField&#x27;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;django.db.models.fields.BooleanField: is_from_me&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>value</td>
                    <td class="code"><pre>[True]</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
        <li class="frame django">
          
            <code class="fname">/home/jpfilho/.local/lib/python3.10/site-packages/django/db/models/fields/__init__.py</code>, line 1112, in to_python
          

          
            <div class="context" id="c139813564206272">
              
                <ol start="1105" class="pre-context" id="pre139813564206272">
                
                  <li onclick="toggle('pre139813564206272', 'post139813564206272')"><pre>        if value in (True, False):</pre></li>
                
                  <li onclick="toggle('pre139813564206272', 'post139813564206272')"><pre>            # 1/0 are equal to True/False. bool() converts former to latter.</pre></li>
                
                  <li onclick="toggle('pre139813564206272', 'post139813564206272')"><pre>            return bool(value)</pre></li>
                
                  <li onclick="toggle('pre139813564206272', 'post139813564206272')"><pre>        if value in (&quot;t&quot;, &quot;True&quot;, &quot;1&quot;):</pre></li>
                
                  <li onclick="toggle('pre139813564206272', 'post139813564206272')"><pre>            return True</pre></li>
                
                  <li onclick="toggle('pre139813564206272', 'post139813564206272')"><pre>        if value in (&quot;f&quot;, &quot;False&quot;, &quot;0&quot;):</pre></li>
                
                  <li onclick="toggle('pre139813564206272', 'post139813564206272')"><pre>            return False</pre></li>
                
                </ol>
              
              <ol start="1112" class="context-line">
                <li onclick="toggle('pre139813564206272', 'post139813564206272')"><pre>        raise exceptions.ValidationError(</pre> <span>…</span></li>
              </ol>
              
                <ol start='1113' class="post-context" id="post139813564206272">
                  
                  <li onclick="toggle('pre139813564206272', 'post139813564206272')"><pre>            self.error_messages[&quot;invalid_nullable&quot; if self.null else &quot;invalid&quot;],</pre></li>
                  
                  <li onclick="toggle('pre139813564206272', 'post139813564206272')"><pre>            code=&quot;invalid&quot;,</pre></li>
                  
                  <li onclick="toggle('pre139813564206272', 'post139813564206272')"><pre>            params={&quot;value&quot;: value},</pre></li>
                  
                  <li onclick="toggle('pre139813564206272', 'post139813564206272')"><pre>        )</pre></li>
                  
                  <li onclick="toggle('pre139813564206272', 'post139813564206272')"><pre></pre></li>
                  
                  <li onclick="toggle('pre139813564206272', 'post139813564206272')"><pre>    def get_prep_value(self, value):</pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v139813564206272">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;django.db.models.fields.BooleanField: is_from_me&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>value</td>
                    <td class="code"><pre>[True]</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
    </ul>
  </div>

  <form action="https://dpaste.com/" name="pasteform" id="pasteform" method="post">
  <div id="pastebinTraceback" class="pastebin">
    <input type="hidden" name="language" value="PythonConsole">
    <input type="hidden" name="title"
      value="ValidationError at /webhook/messages/create">
    <input type="hidden" name="source" value="Django Dpaste Agent">
    <input type="hidden" name="poster" value="Django">
    <textarea name="content" id="traceback_area" cols="140" rows="25">
Environment:


Request Method: POST
Request URL: http://woz.serveo.net/webhook/messages/create?phone=5588988562749&amp;period=05%2F23

Django Version: 4.2.1
Python Version: 3.10.7
Installed Applications:
[&#x27;django.contrib.admin&#x27;,
 &#x27;django.contrib.auth&#x27;,
 &#x27;django.contrib.contenttypes&#x27;,
 &#x27;django.contrib.sessions&#x27;,
 &#x27;django.contrib.messages&#x27;,
 &#x27;django.contrib.staticfiles&#x27;,
 &#x27;drf_yasg&#x27;,
 &#x27;rest_framework&#x27;,
 &#x27;example&#x27;,
 &#x27;messages_api&#x27;,
 &#x27;celery&#x27;,
 &#x27;django_filters&#x27;]
Installed Middleware:
[&#x27;django.middleware.security.SecurityMiddleware&#x27;,
 &#x27;django.contrib.sessions.middleware.SessionMiddleware&#x27;,
 &#x27;django.middleware.common.CommonMiddleware&#x27;,
 &#x27;django.middleware.csrf.CsrfViewMiddleware&#x27;,
 &#x27;django.contrib.auth.middleware.AuthenticationMiddleware&#x27;,
 &#x27;django.contrib.messages.middleware.MessageMiddleware&#x27;,
 &#x27;django.middleware.clickjacking.XFrameOptionsMiddleware&#x27;]



Traceback (most recent call last):
  File "/home/jpfilho/.local/lib/python3.10/site-packages/django/core/handlers/exception.py", line 55, in inner
    response = get_response(request)
  File "/home/jpfilho/.local/lib/python3.10/site-packages/django/core/handlers/base.py", line 197, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/home/jpfilho/.local/lib/python3.10/site-packages/django/views/decorators/csrf.py", line 56, in wrapper_view
    return view_func(*args, **kwargs)
  File "/home/jpfilho/.local/lib/python3.10/site-packages/rest_framework/viewsets.py", line 125, in view
    return self.dispatch(request, *args, **kwargs)
  File "/home/jpfilho/.local/lib/python3.10/site-packages/rest_framework/views.py", line 509, in dispatch
    response = self.handle_exception(exc)
  File "/home/jpfilho/.local/lib/python3.10/site-packages/rest_framework/views.py", line 469, in handle_exception
    self.raise_uncaught_exception(exc)
  File "/home/jpfilho/.local/lib/python3.10/site-packages/rest_framework/views.py", line 480, in raise_uncaught_exception
    raise exc
  File "/home/jpfilho/.local/lib/python3.10/site-packages/rest_framework/views.py", line 506, in dispatch
    response = handler(request, *args, **kwargs)
  File "/home/jpfilho/Documents/code-ws/python/webhook/messages_api/views.py", line 153, in create
    message = Message.objects.create(
  File "/home/jpfilho/.local/lib/python3.10/site-packages/django/db/models/manager.py", line 87, in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
  File "/home/jpfilho/.local/lib/python3.10/site-packages/django/db/models/query.py", line 658, in create
    obj.save(force_insert=True, using=self.db)
  File "/home/jpfilho/.local/lib/python3.10/site-packages/django/db/models/base.py", line 814, in save
    self.save_base(
  File "/home/jpfilho/.local/lib/python3.10/site-packages/django/db/models/base.py", line 877, in save_base
    updated = self._save_table(
  File "/home/jpfilho/.local/lib/python3.10/site-packages/django/db/models/base.py", line 1020, in _save_table
    results = self._do_insert(
  File "/home/jpfilho/.local/lib/python3.10/site-packages/django/db/models/base.py", line 1061, in _do_insert
    return manager._insert(
  File "/home/jpfilho/.local/lib/python3.10/site-packages/django/db/models/manager.py", line 87, in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
  File "/home/jpfilho/.local/lib/python3.10/site-packages/django/db/models/query.py", line 1805, in _insert
    return query.get_compiler(using=using).execute_sql(returning_fields)
  File "/home/jpfilho/.local/lib/python3.10/site-packages/django/db/models/sql/compiler.py", line 1819, in execute_sql
    for sql, params in self.as_sql():
  File "/home/jpfilho/.local/lib/python3.10/site-packages/django/db/models/sql/compiler.py", line 1743, in as_sql
    value_rows = [
  File "/home/jpfilho/.local/lib/python3.10/site-packages/django/db/models/sql/compiler.py", line 1744, in &lt;listcomp&gt;
    [
  File "/home/jpfilho/.local/lib/python3.10/site-packages/django/db/models/sql/compiler.py", line 1745, in &lt;listcomp&gt;
    self.prepare_value(field, self.pre_save_val(field, obj))
  File "/home/jpfilho/.local/lib/python3.10/site-packages/django/db/models/sql/compiler.py", line 1684, in prepare_value
    return field.get_db_prep_save(value, connection=self.connection)
  File "/home/jpfilho/.local/lib/python3.10/site-packages/django/db/models/fields/__init__.py", line 954, in get_db_prep_save
    return self.get_db_prep_value(value, connection=connection, prepared=False)
  File "/home/jpfilho/.local/lib/python3.10/site-packages/django/db/models/fields/__init__.py", line 947, in get_db_prep_value
    value = self.get_prep_value(value)
  File "/home/jpfilho/.local/lib/python3.10/site-packages/django/db/models/fields/__init__.py", line 1122, in get_prep_value
    return self.to_python(value)
  File "/home/jpfilho/.local/lib/python3.10/site-packages/django/db/models/fields/__init__.py", line 1112, in to_python
    raise exceptions.ValidationError(

Exception Type: ValidationError at /webhook/messages/create
Exception Value: [&#x27;o valor “[True]”  deve ser True ou False.&#x27;]
</textarea>
  <br><br>
  <input type="submit" value="Share this traceback on a public website">
  </div>
</form>

</div>


<div id="requestinfo">
  <h2>Request information</h2>


  
    <h3 id="user-info">USER</h3>
    <p>AnonymousUser</p>
  

  <h3 id="get-info">GET</h3>
  
    <table class="req">
      <thead>
        <tr>
          <th>Variable</th>
          <th>Value</th>
        </tr>
      </thead>
      <tbody>
        
          <tr>
            <td>phone</td>
            <td class="code"><pre>&#x27;5588988562749&#x27;</pre></td>
          </tr>
        
          <tr>
            <td>period</td>
            <td class="code"><pre>&#x27;05/23&#x27;</pre></td>
          </tr>
        
      </tbody>
    </table>
  

  <h3 id="post-info">POST</h3>
  
    <p>No POST data</p>
  

  <h3 id="files-info">FILES</h3>
  
    <p>No FILES data</p>
  

  <h3 id="cookie-info">COOKIES</h3>
  
    <p>No cookie data</p>
  

  <h3 id="meta-info">META</h3>
  <table class="req">
    <thead>
      <tr>
        <th>Variable</th>
        <th>Value</th>
      </tr>
    </thead>
    <tbody>
      
        <tr>
          <td>API_URL</td>
          <td class="code"><pre>&#x27;********************&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>BAMF_DESKTOP_FILE_HINT</td>
          <td class="code"><pre>&#x27;/var/lib/snapd/desktop/applications/code_code.desktop&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>CHROME_DESKTOP</td>
          <td class="code"><pre>&#x27;code-url-handler.desktop&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>CLOUDAMQP_URL</td>
          <td class="code"><pre>&#x27;amqps://kzthoddb:3CziblJY4U4tFRNmARuMMdIDu8z53Ql6@fly.rmq.cloudamqp.com/kzthoddb&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>COLORTERM</td>
          <td class="code"><pre>&#x27;truecolor&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>COMPANIES_API</td>
          <td class="code"><pre>&#x27;********************&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>CONTENT_LENGTH</td>
          <td class="code"><pre>&#x27;261&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>CONTENT_TYPE</td>
          <td class="code"><pre>&#x27;application/json&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>DBUS_SESSION_BUS_ADDRESS</td>
          <td class="code"><pre>&#x27;unix:path=/run/user/1000/bus&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>DEBUGINFOD_URLS</td>
          <td class="code"><pre>&#x27;https://debuginfod.ubuntu.com &#x27;</pre></td>
        </tr>
      
        <tr>
          <td>DESKTOP_SESSION</td>
          <td class="code"><pre>&#x27;ubuntu&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>DISPLAY</td>
          <td class="code"><pre>&#x27;:1&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>DJANGO_SETTINGS_MODULE</td>
          <td class="code"><pre>&#x27;webhook.settings&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>GATEWAY_INTERFACE</td>
          <td class="code"><pre>&#x27;CGI/1.1&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>GDK_BACKEND</td>
          <td class="code"><pre>&#x27;x11&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>GDMSESSION</td>
          <td class="code"><pre>&#x27;ubuntu&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>GIO_LAUNCHED_DESKTOP_FILE</td>
          <td class="code"><pre>&#x27;/var/lib/snapd/desktop/applications/code_code.desktop&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>GIO_LAUNCHED_DESKTOP_FILE_PID</td>
          <td class="code"><pre>&#x27;2895&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>GIO_MODULE_DIR</td>
          <td class="code"><pre>&#x27;/home/jpfilho/snap/code/common/.cache/gio-modules&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>GIT_ASKPASS</td>
          <td class="code"><pre>&#x27;********************&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>GJS_DEBUG_OUTPUT</td>
          <td class="code"><pre>&#x27;stderr&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>GJS_DEBUG_TOPICS</td>
          <td class="code"><pre>&#x27;JS ERROR;JS LOG&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>GNOME_DESKTOP_SESSION_ID</td>
          <td class="code"><pre>&#x27;this-is-deprecated&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>GNOME_SHELL_SESSION_MODE</td>
          <td class="code"><pre>&#x27;ubuntu&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>GPG_AGENT_INFO</td>
          <td class="code"><pre>&#x27;/run/user/1000/gnupg/S.gpg-agent:0:1&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>GROUP_ID</td>
          <td class="code"><pre>&#x27;4bf3c03a-2d33-439c-8b13-efb50531e9c1&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>GSETTINGS_SCHEMA_DIR</td>
          <td class="code"><pre>&#x27;/home/jpfilho/snap/code/129/.local/share/glib-2.0/schemas&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>GTK_EXE_PREFIX</td>
          <td class="code"><pre>&#x27;/snap/code/129/usr&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>GTK_IM_MODULE_FILE</td>
          <td class="code"><pre>&#x27;/home/jpfilho/snap/code/common/.cache/immodules/immodules.cache&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>GTK_MODULES</td>
          <td class="code"><pre>&#x27;gail:atk-bridge&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>GTK_PATH</td>
          <td class="code"><pre>&#x27;/snap/code/129/usr/lib/x86_64-linux-gnu/gtk-3.0&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>HEROKU_API</td>
          <td class="code"><pre>&#x27;********************&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>HEROKU_API_KEY</td>
          <td class="code"><pre>&#x27;********************&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>HEROKU_DYNO_ID</td>
          <td class="code"><pre>&#x27;ba6aefd9-0ff3-4cfb-a04b-42b7bf6cf560&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>HOME</td>
          <td class="code"><pre>&#x27;/home/jpfilho&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>HTTP_ACCEPT</td>
          <td class="code"><pre>&#x27;*/*&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>HTTP_ACCEPT_ENCODING</td>
          <td class="code"><pre>&#x27;gzip, deflate&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>HTTP_HOST</td>
          <td class="code"><pre>&#x27;woz.serveo.net&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>HTTP_USER_AGENT</td>
          <td class="code"><pre>&#x27;python-requests/2.30.0&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>HTTP_X_FORWARDED_FOR</td>
          <td class="code"><pre>&#x27;177.37.130.81&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>ID_SERVICE</td>
          <td class="code"><pre>&#x27;83108c28-14f7-4646-acb8-dab165397fd5&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>INVOCATION_ID</td>
          <td class="code"><pre>&#x27;d9e9633aebb14edaa8abde0b26e491bc&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>JAVA_HOME</td>
          <td class="code"><pre>&#x27;/home/jpfilho/.sdkman/candidates/java/current&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>JOURNAL_STREAM</td>
          <td class="code"><pre>&#x27;8:33740&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>LANG</td>
          <td class="code"><pre>&#x27;pt_BR.UTF-8&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>LANGUAGE</td>
          <td class="code"><pre>&#x27;pt_BR:pt:pt_PT:en&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>LC_ADDRESS</td>
          <td class="code"><pre>&#x27;pt_BR.UTF-8&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>LC_IDENTIFICATION</td>
          <td class="code"><pre>&#x27;pt_BR.UTF-8&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>LC_MEASUREMENT</td>
          <td class="code"><pre>&#x27;pt_BR.UTF-8&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>LC_MONETARY</td>
          <td class="code"><pre>&#x27;pt_BR.UTF-8&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>LC_NAME</td>
          <td class="code"><pre>&#x27;pt_BR.UTF-8&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>LC_NUMERIC</td>
          <td class="code"><pre>&#x27;pt_BR.UTF-8&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>LC_PAPER</td>
          <td class="code"><pre>&#x27;pt_BR.UTF-8&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>LC_TELEPHONE</td>
          <td class="code"><pre>&#x27;pt_BR.UTF-8&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>LC_TIME</td>
          <td class="code"><pre>&#x27;pt_BR.UTF-8&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>LESSCLOSE</td>
          <td class="code"><pre>&#x27;/usr/bin/lesspipe %s %s&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>LESSOPEN</td>
          <td class="code"><pre>&#x27;| /usr/bin/lesspipe %s&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>LOCPATH</td>
          <td class="code"><pre>&#x27;/snap/code/129/usr/lib/locale&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>LOGNAME</td>
          <td class="code"><pre>&#x27;jpfilho&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>LS_COLORS</td>
          <td class="code"><pre>&#x27;rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:mi=00:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arc=01;31:*.arj=01;31:*.taz=01;31:*.lha=01;31:*.lz4=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.tzo=01;31:*.t7z=01;31:*.zip=01;31:*.z=01;31:*.dz=01;31:*.gz=01;31:*.lrz=01;31:*.lz=01;31:*.lzo=01;31:*.xz=01;31:*.zst=01;31:*.tzst=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.alz=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.cab=01;31:*.wim=01;31:*.swm=01;31:*.dwm=01;31:*.esd=01;31:*.jpg=01;35:*.jpeg=01;35:*.mjpg=01;35:*.mjpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.webp=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=00;36:*.au=00;36:*.flac=00;36:*.m4a=00;36:*.mid=00;36:*.midi=00;36:*.mka=00;36:*.mp3=00;36:*.mpc=00;36:*.ogg=00;36:*.ra=00;36:*.wav=00;36:*.oga=00;36:*.opus=00;36:*.spx=00;36:*.xspf=00;36:&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>MANAGERPID</td>
          <td class="code"><pre>&#x27;1783&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>MAVEN_HOME</td>
          <td class="code"><pre>&#x27;/home/jpfilho/.sdkman/candidates/maven/current&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>NVM_BIN</td>
          <td class="code"><pre>&#x27;/home/jpfilho/.nvm/versions/node/v18.16.0/bin&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>NVM_CD_FLAGS</td>
          <td class="code"><pre>&#x27;&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>NVM_DIR</td>
          <td class="code"><pre>&#x27;/home/jpfilho/.nvm&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>NVM_INC</td>
          <td class="code"><pre>&#x27;/home/jpfilho/.nvm/versions/node/v18.16.0/include/node&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>ORIGINAL_XDG_CURRENT_DESKTOP</td>
          <td class="code"><pre>&#x27;ubuntu:GNOME&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>PATH</td>
          <td class="code"><pre>&#x27;/home/jpfilho/.pyenv/libexec:/home/jpfilho/.pyenv/plugins/python-build/bin:/home/jpfilho/.pyenv/plugins/pyenv-virtualenv/bin:/home/jpfilho/.pyenv/plugins/pyenv-update/bin:/home/jpfilho/.pyenv/plugins/pyenv-doctor/bin:/home/jpfilho/.pyenv/shims:/home/jpfilho/.local/bin:/home/jpfilho/.pyenv/bin:/home/jpfilho/.nvm/versions/node/v18.16.0/bin:/home/jpfilho/.sdkman/candidates/maven/current/bin:/home/jpfilho/.sdkman/candidates/java/current/bin:/home/jpfilho/.local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:/snap/bin&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>PATH_INFO</td>
          <td class="code"><pre>&#x27;/webhook/messages/create&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>PWD</td>
          <td class="code"><pre>&#x27;/home/jpfilho/Documents/code-ws/python/webhook&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>PYENV_DIR</td>
          <td class="code"><pre>&#x27;/home/jpfilho/Documents/code-ws/python/webhook&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>PYENV_HOOK_PATH</td>
          <td class="code"><pre>&#x27;/home/jpfilho/.pyenv/pyenv.d:/usr/local/etc/pyenv.d:/etc/pyenv.d:/usr/lib/pyenv/hooks:/home/jpfilho/.pyenv/plugins/pyenv-virtualenv/etc/pyenv.d&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>PYENV_ROOT</td>
          <td class="code"><pre>&#x27;/home/jpfilho/.pyenv&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>PYENV_SHELL</td>
          <td class="code"><pre>&#x27;bash&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>PYENV_VERSION</td>
          <td class="code"><pre>&#x27;system&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>QT_ACCESSIBILITY</td>
          <td class="code"><pre>&#x27;1&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>QT_IM_MODULE</td>
          <td class="code"><pre>&#x27;ibus&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>QUERY_STRING</td>
          <td class="code"><pre>&#x27;phone=5588988562749&amp;period=05%2F23&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>REMOTE_ADDR</td>
          <td class="code"><pre>&#x27;127.0.0.1&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>REMOTE_HOST</td>
          <td class="code"><pre>&#x27;&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>REQUEST_METHOD</td>
          <td class="code"><pre>&#x27;POST&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>RUN_MAIN</td>
          <td class="code"><pre>&#x27;true&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SCRIPT_NAME</td>
          <td class="code"><pre>&#x27;&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SDKMAN_CANDIDATES_API</td>
          <td class="code"><pre>&#x27;********************&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SDKMAN_CANDIDATES_DIR</td>
          <td class="code"><pre>&#x27;/home/jpfilho/.sdkman/candidates&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SDKMAN_DIR</td>
          <td class="code"><pre>&#x27;/home/jpfilho/.sdkman&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SDKMAN_PLATFORM</td>
          <td class="code"><pre>&#x27;linuxx64&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SDKMAN_VERSION</td>
          <td class="code"><pre>&#x27;5.16.0&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SERVER_NAME</td>
          <td class="code"><pre>&#x27;localhost&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SERVER_PORT</td>
          <td class="code"><pre>&#x27;8000&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SERVER_PROTOCOL</td>
          <td class="code"><pre>&#x27;HTTP/1.1&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SERVER_SOFTWARE</td>
          <td class="code"><pre>&#x27;WSGIServer/0.2&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_MANAGER</td>
          <td class="code"><pre>&#x27;local/JPSERVER:@/tmp/.ICE-unix/2038,unix/JPSERVER:/tmp/.ICE-unix/2038&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SHELL</td>
          <td class="code"><pre>&#x27;/bin/bash&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SHLVL</td>
          <td class="code"><pre>&#x27;1&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SSH_AGENT_LAUNCHER</td>
          <td class="code"><pre>&#x27;openssh&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SSH_AUTH_SOCK</td>
          <td class="code"><pre>&#x27;/run/user/1000/keyring/ssh&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SYSTEMD_EXEC_PID</td>
          <td class="code"><pre>&#x27;2065&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>TERM</td>
          <td class="code"><pre>&#x27;xterm-256color&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>TERM_PROGRAM</td>
          <td class="code"><pre>&#x27;vscode&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>TERM_PROGRAM_VERSION</td>
          <td class="code"><pre>&#x27;1.78.2&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>TOKEN_API</td>
          <td class="code"><pre>&#x27;********************&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>TZ</td>
          <td class="code"><pre>&#x27;UTC&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>USER</td>
          <td class="code"><pre>&#x27;jpfilho&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>USERNAME</td>
          <td class="code"><pre>&#x27;jpfilho&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>VSCODE_GIT_ASKPASS_EXTRA_ARGS</td>
          <td class="code"><pre>&#x27;********************&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>VSCODE_GIT_ASKPASS_MAIN</td>
          <td class="code"><pre>&#x27;********************&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>VSCODE_GIT_ASKPASS_NODE</td>
          <td class="code"><pre>&#x27;********************&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>VSCODE_GIT_IPC_HANDLE</td>
          <td class="code"><pre>&#x27;/run/user/1000/vscode-git-1d8a16cec2.sock&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>WEBHOOK_API</td>
          <td class="code"><pre>&#x27;********************&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>WEB_URL</td>
          <td class="code"><pre>&#x27;https://woz.herokuapp.com&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>WINDOWPATH</td>
          <td class="code"><pre>&#x27;2&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>XAUTHORITY</td>
          <td class="code"><pre>&#x27;/run/user/1000/gdm/Xauthority&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>XDG_CONFIG_DIRS</td>
          <td class="code"><pre>&#x27;/etc/xdg/xdg-ubuntu:/etc/xdg&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>XDG_CURRENT_DESKTOP</td>
          <td class="code"><pre>&#x27;Unity&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>XDG_DATA_DIRS</td>
          <td class="code"><pre>&#x27;/home/jpfilho/snap/code/129/.local/share:/home/jpfilho/snap/code/129:/snap/code/129/usr/share:/usr/share/ubuntu:/usr/share/gnome:/usr/local/share/:/usr/share/:/var/lib/snapd/desktop&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>XDG_MENU_PREFIX</td>
          <td class="code"><pre>&#x27;gnome-&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>XDG_RUNTIME_DIR</td>
          <td class="code"><pre>&#x27;/run/user/1000&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>XDG_SESSION_CLASS</td>
          <td class="code"><pre>&#x27;user&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>XDG_SESSION_DESKTOP</td>
          <td class="code"><pre>&#x27;ubuntu&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>XDG_SESSION_TYPE</td>
          <td class="code"><pre>&#x27;x11&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>XMODIFIERS</td>
          <td class="code"><pre>&#x27;@im=ibus&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>wsgi.errors</td>
          <td class="code"><pre>&lt;_io.TextIOWrapper name=&#x27;&lt;stderr&gt;&#x27; mode=&#x27;w&#x27; encoding=&#x27;utf-8&#x27;&gt;</pre></td>
        </tr>
      
        <tr>
          <td>wsgi.file_wrapper</td>
          <td class="code"><pre>&lt;class &#x27;wsgiref.util.FileWrapper&#x27;&gt;</pre></td>
        </tr>
      
        <tr>
          <td>wsgi.input</td>
          <td class="code"><pre>&lt;django.core.handlers.wsgi.LimitedStream object at 0x7f28e29efc10&gt;</pre></td>
        </tr>
      
        <tr>
          <td>wsgi.multiprocess</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>wsgi.multithread</td>
          <td class="code"><pre>True</pre></td>
        </tr>
      
        <tr>
          <td>wsgi.run_once</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>wsgi.url_scheme</td>
          <td class="code"><pre>&#x27;http&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>wsgi.version</td>
          <td class="code"><pre>(1, 0)</pre></td>
        </tr>
      
    </tbody>
  </table>


  <h3 id="settings-info">Settings</h3>
  <h4>Using settings module <code>webhook.settings</code></h4>
  <table class="req">
    <thead>
      <tr>
        <th>Setting</th>
        <th>Value</th>
      </tr>
    </thead>
    <tbody>
      
        <tr>
          <td>ABSOLUTE_URL_OVERRIDES</td>
          <td class="code"><pre>{}</pre></td>
        </tr>
      
        <tr>
          <td>ADMINS</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>ALLOWED_HOSTS</td>
          <td class="code"><pre>[&#x27;*&#x27;]</pre></td>
        </tr>
      
        <tr>
          <td>APPEND_SLASH</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>AUTHENTICATION_BACKENDS</td>
          <td class="code"><pre>[&#x27;django.contrib.auth.backends.ModelBackend&#x27;]</pre></td>
        </tr>
      
        <tr>
          <td>AUTH_PASSWORD_VALIDATORS</td>
          <td class="code"><pre>&#x27;********************&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>AUTH_USER_MODEL</td>
          <td class="code"><pre>&#x27;auth.User&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>BASE_DIR</td>
          <td class="code"><pre>PosixPath(&#x27;/home/jpfilho/Documents/code-ws/python/webhook&#x27;)</pre></td>
        </tr>
      
        <tr>
          <td>BROKER_URL</td>
          <td class="code"><pre>&#x27;amqps://kzthoddb:3CziblJY4U4tFRNmARuMMdIDu8z53Ql6@fly.rmq.cloudamqp.com/kzthoddb&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>CACHES</td>
          <td class="code"><pre>{&#x27;default&#x27;: {&#x27;BACKEND&#x27;: &#x27;django.core.cache.backends.locmem.LocMemCache&#x27;}}</pre></td>
        </tr>
      
        <tr>
          <td>CACHE_MIDDLEWARE_ALIAS</td>
          <td class="code"><pre>&#x27;default&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>CACHE_MIDDLEWARE_KEY_PREFIX</td>
          <td class="code"><pre>&#x27;********************&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>CACHE_MIDDLEWARE_SECONDS</td>
          <td class="code"><pre>600</pre></td>
        </tr>
      
        <tr>
          <td>CELERY_BROKER_URL</td>
          <td class="code"><pre>&#x27;amqps://kzthoddb:3CziblJY4U4tFRNmARuMMdIDu8z53Ql6@fly.rmq.cloudamqp.com/kzthoddb&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>CSRF_COOKIE_AGE</td>
          <td class="code"><pre>31449600</pre></td>
        </tr>
      
        <tr>
          <td>CSRF_COOKIE_DOMAIN</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>CSRF_COOKIE_HTTPONLY</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>CSRF_COOKIE_MASKED</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>CSRF_COOKIE_NAME</td>
          <td class="code"><pre>&#x27;csrftoken&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>CSRF_COOKIE_PATH</td>
          <td class="code"><pre>&#x27;/&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>CSRF_COOKIE_SAMESITE</td>
          <td class="code"><pre>&#x27;Lax&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>CSRF_COOKIE_SECURE</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>CSRF_FAILURE_VIEW</td>
          <td class="code"><pre>&#x27;django.views.csrf.csrf_failure&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>CSRF_HEADER_NAME</td>
          <td class="code"><pre>&#x27;HTTP_X_CSRFTOKEN&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>CSRF_TRUSTED_ORIGINS</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>CSRF_USE_SESSIONS</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>DATABASES</td>
          <td class="code"><pre>{&#x27;default&#x27;: {&#x27;ATOMIC_REQUESTS&#x27;: False,
             &#x27;AUTOCOMMIT&#x27;: True,
             &#x27;CONN_HEALTH_CHECKS&#x27;: False,
             &#x27;CONN_MAX_AGE&#x27;: 0,
             &#x27;ENGINE&#x27;: &#x27;django.db.backends.postgresql&#x27;,
             &#x27;HOST&#x27;: &#x27;ep-young-feather-699075.us-east-1.aws.neon.tech&#x27;,
             &#x27;NAME&#x27;: &#x27;neondb&#x27;,
             &#x27;OPTIONS&#x27;: {},
             &#x27;PASSWORD&#x27;: &#x27;********************&#x27;,
             &#x27;PORT&#x27;: &#x27;5432&#x27;,
             &#x27;TEST&#x27;: {&#x27;CHARSET&#x27;: None,
                      &#x27;COLLATION&#x27;: None,
                      &#x27;MIGRATE&#x27;: True,
                      &#x27;MIRROR&#x27;: None,
                      &#x27;NAME&#x27;: None},
             &#x27;TIME_ZONE&#x27;: None,
             &#x27;USER&#x27;: &#x27;psousaj&#x27;}}</pre></td>
        </tr>
      
        <tr>
          <td>DATABASE_ROUTERS</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>DATA_UPLOAD_MAX_MEMORY_SIZE</td>
          <td class="code"><pre>2621440</pre></td>
        </tr>
      
        <tr>
          <td>DATA_UPLOAD_MAX_NUMBER_FIELDS</td>
          <td class="code"><pre>1000</pre></td>
        </tr>
      
        <tr>
          <td>DATA_UPLOAD_MAX_NUMBER_FILES</td>
          <td class="code"><pre>100</pre></td>
        </tr>
      
        <tr>
          <td>DATETIME_FORMAT</td>
          <td class="code"><pre>&#x27;N j, Y, P&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>DATETIME_INPUT_FORMATS</td>
          <td class="code"><pre>[&#x27;%Y-%m-%d %H:%M:%S&#x27;,
 &#x27;%Y-%m-%d %H:%M:%S.%f&#x27;,
 &#x27;%Y-%m-%d %H:%M&#x27;,
 &#x27;%m/%d/%Y %H:%M:%S&#x27;,
 &#x27;%m/%d/%Y %H:%M:%S.%f&#x27;,
 &#x27;%m/%d/%Y %H:%M&#x27;,
 &#x27;%m/%d/%y %H:%M:%S&#x27;,
 &#x27;%m/%d/%y %H:%M:%S.%f&#x27;,
 &#x27;%m/%d/%y %H:%M&#x27;]</pre></td>
        </tr>
      
        <tr>
          <td>DATE_FORMAT</td>
          <td class="code"><pre>&#x27;N j, Y&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>DATE_INPUT_FORMATS</td>
          <td class="code"><pre>[&#x27;%Y-%m-%d&#x27;,
 &#x27;%m/%d/%Y&#x27;,
 &#x27;%m/%d/%y&#x27;,
 &#x27;%b %d %Y&#x27;,
 &#x27;%b %d, %Y&#x27;,
 &#x27;%d %b %Y&#x27;,
 &#x27;%d %b, %Y&#x27;,
 &#x27;%B %d %Y&#x27;,
 &#x27;%B %d, %Y&#x27;,
 &#x27;%d %B %Y&#x27;,
 &#x27;%d %B, %Y&#x27;]</pre></td>
        </tr>
      
        <tr>
          <td>DEBUG</td>
          <td class="code"><pre>True</pre></td>
        </tr>
      
        <tr>
          <td>DEBUG_PROPAGATE_EXCEPTIONS</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>DECIMAL_SEPARATOR</td>
          <td class="code"><pre>&#x27;.&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>DEFAULT_AUTO_FIELD</td>
          <td class="code"><pre>&#x27;django.db.models.BigAutoField&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>DEFAULT_CHARSET</td>
          <td class="code"><pre>&#x27;utf-8&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>DEFAULT_EXCEPTION_REPORTER</td>
          <td class="code"><pre>&#x27;django.views.debug.ExceptionReporter&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>DEFAULT_EXCEPTION_REPORTER_FILTER</td>
          <td class="code"><pre>&#x27;django.views.debug.SafeExceptionReporterFilter&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>DEFAULT_FILE_STORAGE</td>
          <td class="code"><pre>&#x27;django.core.files.storage.FileSystemStorage&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>DEFAULT_FROM_EMAIL</td>
          <td class="code"><pre>&#x27;webmaster@localhost&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>DEFAULT_INDEX_TABLESPACE</td>
          <td class="code"><pre>&#x27;&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>DEFAULT_TABLESPACE</td>
          <td class="code"><pre>&#x27;&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>DISALLOWED_USER_AGENTS</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>EMAIL_BACKEND</td>
          <td class="code"><pre>&#x27;django.core.mail.backends.smtp.EmailBackend&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>EMAIL_HOST</td>
          <td class="code"><pre>&#x27;localhost&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>EMAIL_HOST_PASSWORD</td>
          <td class="code"><pre>&#x27;********************&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>EMAIL_HOST_USER</td>
          <td class="code"><pre>&#x27;&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>EMAIL_PORT</td>
          <td class="code"><pre>25</pre></td>
        </tr>
      
        <tr>
          <td>EMAIL_SSL_CERTFILE</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>EMAIL_SSL_KEYFILE</td>
          <td class="code"><pre>&#x27;********************&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>EMAIL_SUBJECT_PREFIX</td>
          <td class="code"><pre>&#x27;[Django] &#x27;</pre></td>
        </tr>
      
        <tr>
          <td>EMAIL_TIMEOUT</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>EMAIL_USE_LOCALTIME</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>EMAIL_USE_SSL</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>EMAIL_USE_TLS</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>FILE_UPLOAD_DIRECTORY_PERMISSIONS</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>FILE_UPLOAD_HANDLERS</td>
          <td class="code"><pre>[&#x27;django.core.files.uploadhandler.MemoryFileUploadHandler&#x27;,
 &#x27;django.core.files.uploadhandler.TemporaryFileUploadHandler&#x27;]</pre></td>
        </tr>
      
        <tr>
          <td>FILE_UPLOAD_MAX_MEMORY_SIZE</td>
          <td class="code"><pre>2621440</pre></td>
        </tr>
      
        <tr>
          <td>FILE_UPLOAD_PERMISSIONS</td>
          <td class="code"><pre>420</pre></td>
        </tr>
      
        <tr>
          <td>FILE_UPLOAD_TEMP_DIR</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>FIRST_DAY_OF_WEEK</td>
          <td class="code"><pre>0</pre></td>
        </tr>
      
        <tr>
          <td>FIXTURE_DIRS</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>FORCE_SCRIPT_NAME</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>FORMAT_MODULE_PATH</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>FORM_RENDERER</td>
          <td class="code"><pre>&#x27;django.forms.renderers.DjangoTemplates&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>IGNORABLE_404_URLS</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>INSTALLED_APPS</td>
          <td class="code"><pre>[&#x27;django.contrib.admin&#x27;,
 &#x27;django.contrib.auth&#x27;,
 &#x27;django.contrib.contenttypes&#x27;,
 &#x27;django.contrib.sessions&#x27;,
 &#x27;django.contrib.messages&#x27;,
 &#x27;django.contrib.staticfiles&#x27;,
 &#x27;drf_yasg&#x27;,
 &#x27;rest_framework&#x27;,
 &#x27;example&#x27;,
 &#x27;messages_api&#x27;,
 &#x27;celery&#x27;,
 &#x27;django_filters&#x27;]</pre></td>
        </tr>
      
        <tr>
          <td>INTERNAL_IPS</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>LANGUAGES</td>
          <td class="code"><pre>[(&#x27;af&#x27;, &#x27;Afrikaans&#x27;),
 (&#x27;ar&#x27;, &#x27;Arabic&#x27;),
 (&#x27;ar-dz&#x27;, &#x27;Algerian Arabic&#x27;),
 (&#x27;ast&#x27;, &#x27;Asturian&#x27;),
 (&#x27;az&#x27;, &#x27;Azerbaijani&#x27;),
 (&#x27;bg&#x27;, &#x27;Bulgarian&#x27;),
 (&#x27;be&#x27;, &#x27;Belarusian&#x27;),
 (&#x27;bn&#x27;, &#x27;Bengali&#x27;),
 (&#x27;br&#x27;, &#x27;Breton&#x27;),
 (&#x27;bs&#x27;, &#x27;Bosnian&#x27;),
 (&#x27;ca&#x27;, &#x27;Catalan&#x27;),
 (&#x27;ckb&#x27;, &#x27;Central Kurdish (Sorani)&#x27;),
 (&#x27;cs&#x27;, &#x27;Czech&#x27;),
 (&#x27;cy&#x27;, &#x27;Welsh&#x27;),
 (&#x27;da&#x27;, &#x27;Danish&#x27;),
 (&#x27;de&#x27;, &#x27;German&#x27;),
 (&#x27;dsb&#x27;, &#x27;Lower Sorbian&#x27;),
 (&#x27;el&#x27;, &#x27;Greek&#x27;),
 (&#x27;en&#x27;, &#x27;English&#x27;),
 (&#x27;en-au&#x27;, &#x27;Australian English&#x27;),
 (&#x27;en-gb&#x27;, &#x27;British English&#x27;),
 (&#x27;eo&#x27;, &#x27;Esperanto&#x27;),
 (&#x27;es&#x27;, &#x27;Spanish&#x27;),
 (&#x27;es-ar&#x27;, &#x27;Argentinian Spanish&#x27;),
 (&#x27;es-co&#x27;, &#x27;Colombian Spanish&#x27;),
 (&#x27;es-mx&#x27;, &#x27;Mexican Spanish&#x27;),
 (&#x27;es-ni&#x27;, &#x27;Nicaraguan Spanish&#x27;),
 (&#x27;es-ve&#x27;, &#x27;Venezuelan Spanish&#x27;),
 (&#x27;et&#x27;, &#x27;Estonian&#x27;),
 (&#x27;eu&#x27;, &#x27;Basque&#x27;),
 (&#x27;fa&#x27;, &#x27;Persian&#x27;),
 (&#x27;fi&#x27;, &#x27;Finnish&#x27;),
 (&#x27;fr&#x27;, &#x27;French&#x27;),
 (&#x27;fy&#x27;, &#x27;Frisian&#x27;),
 (&#x27;ga&#x27;, &#x27;Irish&#x27;),
 (&#x27;gd&#x27;, &#x27;Scottish Gaelic&#x27;),
 (&#x27;gl&#x27;, &#x27;Galician&#x27;),
 (&#x27;he&#x27;, &#x27;Hebrew&#x27;),
 (&#x27;hi&#x27;, &#x27;Hindi&#x27;),
 (&#x27;hr&#x27;, &#x27;Croatian&#x27;),
 (&#x27;hsb&#x27;, &#x27;Upper Sorbian&#x27;),
 (&#x27;hu&#x27;, &#x27;Hungarian&#x27;),
 (&#x27;hy&#x27;, &#x27;Armenian&#x27;),
 (&#x27;ia&#x27;, &#x27;Interlingua&#x27;),
 (&#x27;id&#x27;, &#x27;Indonesian&#x27;),
 (&#x27;ig&#x27;, &#x27;Igbo&#x27;),
 (&#x27;io&#x27;, &#x27;Ido&#x27;),
 (&#x27;is&#x27;, &#x27;Icelandic&#x27;),
 (&#x27;it&#x27;, &#x27;Italian&#x27;),
 (&#x27;ja&#x27;, &#x27;Japanese&#x27;),
 (&#x27;ka&#x27;, &#x27;Georgian&#x27;),
 (&#x27;kab&#x27;, &#x27;Kabyle&#x27;),
 (&#x27;kk&#x27;, &#x27;Kazakh&#x27;),
 (&#x27;km&#x27;, &#x27;Khmer&#x27;),
 (&#x27;kn&#x27;, &#x27;Kannada&#x27;),
 (&#x27;ko&#x27;, &#x27;Korean&#x27;),
 (&#x27;ky&#x27;, &#x27;Kyrgyz&#x27;),
 (&#x27;lb&#x27;, &#x27;Luxembourgish&#x27;),
 (&#x27;lt&#x27;, &#x27;Lithuanian&#x27;),
 (&#x27;lv&#x27;, &#x27;Latvian&#x27;),
 (&#x27;mk&#x27;, &#x27;Macedonian&#x27;),
 (&#x27;ml&#x27;, &#x27;Malayalam&#x27;),
 (&#x27;mn&#x27;, &#x27;Mongolian&#x27;),
 (&#x27;mr&#x27;, &#x27;Marathi&#x27;),
 (&#x27;ms&#x27;, &#x27;Malay&#x27;),
 (&#x27;my&#x27;, &#x27;Burmese&#x27;),
 (&#x27;nb&#x27;, &#x27;Norwegian Bokmål&#x27;),
 (&#x27;ne&#x27;, &#x27;Nepali&#x27;),
 (&#x27;nl&#x27;, &#x27;Dutch&#x27;),
 (&#x27;nn&#x27;, &#x27;Norwegian Nynorsk&#x27;),
 (&#x27;os&#x27;, &#x27;Ossetic&#x27;),
 (&#x27;pa&#x27;, &#x27;Punjabi&#x27;),
 (&#x27;pl&#x27;, &#x27;Polish&#x27;),
 (&#x27;pt&#x27;, &#x27;Portuguese&#x27;),
 (&#x27;pt-br&#x27;, &#x27;Brazilian Portuguese&#x27;),
 (&#x27;ro&#x27;, &#x27;Romanian&#x27;),
 (&#x27;ru&#x27;, &#x27;Russian&#x27;),
 (&#x27;sk&#x27;, &#x27;Slovak&#x27;),
 (&#x27;sl&#x27;, &#x27;Slovenian&#x27;),
 (&#x27;sq&#x27;, &#x27;Albanian&#x27;),
 (&#x27;sr&#x27;, &#x27;Serbian&#x27;),
 (&#x27;sr-latn&#x27;, &#x27;Serbian Latin&#x27;),
 (&#x27;sv&#x27;, &#x27;Swedish&#x27;),
 (&#x27;sw&#x27;, &#x27;Swahili&#x27;),
 (&#x27;ta&#x27;, &#x27;Tamil&#x27;),
 (&#x27;te&#x27;, &#x27;Telugu&#x27;),
 (&#x27;tg&#x27;, &#x27;Tajik&#x27;),
 (&#x27;th&#x27;, &#x27;Thai&#x27;),
 (&#x27;tk&#x27;, &#x27;Turkmen&#x27;),
 (&#x27;tr&#x27;, &#x27;Turkish&#x27;),
 (&#x27;tt&#x27;, &#x27;Tatar&#x27;),
 (&#x27;udm&#x27;, &#x27;Udmurt&#x27;),
 (&#x27;uk&#x27;, &#x27;Ukrainian&#x27;),
 (&#x27;ur&#x27;, &#x27;Urdu&#x27;),
 (&#x27;uz&#x27;, &#x27;Uzbek&#x27;),
 (&#x27;vi&#x27;, &#x27;Vietnamese&#x27;),
 (&#x27;zh-hans&#x27;, &#x27;Simplified Chinese&#x27;),
 (&#x27;zh-hant&#x27;, &#x27;Traditional Chinese&#x27;)]</pre></td>
        </tr>
      
        <tr>
          <td>LANGUAGES_BIDI</td>
          <td class="code"><pre>[&#x27;he&#x27;, &#x27;ar&#x27;, &#x27;ar-dz&#x27;, &#x27;ckb&#x27;, &#x27;fa&#x27;, &#x27;ur&#x27;]</pre></td>
        </tr>
      
        <tr>
          <td>LANGUAGE_CODE</td>
          <td class="code"><pre>&#x27;pt-BR&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>LANGUAGE_COOKIE_AGE</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>LANGUAGE_COOKIE_DOMAIN</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>LANGUAGE_COOKIE_HTTPONLY</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>LANGUAGE_COOKIE_NAME</td>
          <td class="code"><pre>&#x27;django_language&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>LANGUAGE_COOKIE_PATH</td>
          <td class="code"><pre>&#x27;/&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>LANGUAGE_COOKIE_SAMESITE</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>LANGUAGE_COOKIE_SECURE</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>LOCALE_PATHS</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>LOGGING</td>
          <td class="code"><pre>{}</pre></td>
        </tr>
      
        <tr>
          <td>LOGGING_CONFIG</td>
          <td class="code"><pre>&#x27;logging.config.dictConfig&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>LOGIN_REDIRECT_URL</td>
          <td class="code"><pre>&#x27;/accounts/profile/&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>LOGIN_URL</td>
          <td class="code"><pre>&#x27;/accounts/login/&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>LOGOUT_REDIRECT_URL</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>MANAGERS</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>MEDIA_ROOT</td>
          <td class="code"><pre>&#x27;&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>MEDIA_URL</td>
          <td class="code"><pre>&#x27;/&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>MESSAGE_STORAGE</td>
          <td class="code"><pre>&#x27;django.contrib.messages.storage.fallback.FallbackStorage&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>MIDDLEWARE</td>
          <td class="code"><pre>[&#x27;django.middleware.security.SecurityMiddleware&#x27;,
 &#x27;django.contrib.sessions.middleware.SessionMiddleware&#x27;,
 &#x27;django.middleware.common.CommonMiddleware&#x27;,
 &#x27;django.middleware.csrf.CsrfViewMiddleware&#x27;,
 &#x27;django.contrib.auth.middleware.AuthenticationMiddleware&#x27;,
 &#x27;django.contrib.messages.middleware.MessageMiddleware&#x27;,
 &#x27;django.middleware.clickjacking.XFrameOptionsMiddleware&#x27;]</pre></td>
        </tr>
      
        <tr>
          <td>MIGRATION_MODULES</td>
          <td class="code"><pre>{}</pre></td>
        </tr>
      
        <tr>
          <td>MONTH_DAY_FORMAT</td>
          <td class="code"><pre>&#x27;F j&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>NUMBER_GROUPING</td>
          <td class="code"><pre>0</pre></td>
        </tr>
      
        <tr>
          <td>PASSWORD_HASHERS</td>
          <td class="code"><pre>&#x27;********************&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>PASSWORD_RESET_TIMEOUT</td>
          <td class="code"><pre>&#x27;********************&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>PREPEND_WWW</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>ROOT_URLCONF</td>
          <td class="code"><pre>&#x27;webhook.urls&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SECRET_KEY</td>
          <td class="code"><pre>&#x27;********************&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SECRET_KEY_FALLBACKS</td>
          <td class="code"><pre>&#x27;********************&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SECURE_CONTENT_TYPE_NOSNIFF</td>
          <td class="code"><pre>True</pre></td>
        </tr>
      
        <tr>
          <td>SECURE_CROSS_ORIGIN_OPENER_POLICY</td>
          <td class="code"><pre>&#x27;same-origin&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SECURE_HSTS_INCLUDE_SUBDOMAINS</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>SECURE_HSTS_PRELOAD</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>SECURE_HSTS_SECONDS</td>
          <td class="code"><pre>0</pre></td>
        </tr>
      
        <tr>
          <td>SECURE_PROXY_SSL_HEADER</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>SECURE_REDIRECT_EXEMPT</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>SECURE_REFERRER_POLICY</td>
          <td class="code"><pre>&#x27;same-origin&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SECURE_SSL_HOST</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>SECURE_SSL_REDIRECT</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>SERVER_EMAIL</td>
          <td class="code"><pre>&#x27;root@localhost&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_CACHE_ALIAS</td>
          <td class="code"><pre>&#x27;default&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_COOKIE_AGE</td>
          <td class="code"><pre>1209600</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_COOKIE_DOMAIN</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_COOKIE_HTTPONLY</td>
          <td class="code"><pre>True</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_COOKIE_NAME</td>
          <td class="code"><pre>&#x27;sessionid&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_COOKIE_PATH</td>
          <td class="code"><pre>&#x27;/&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_COOKIE_SAMESITE</td>
          <td class="code"><pre>&#x27;Lax&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_COOKIE_SECURE</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_ENGINE</td>
          <td class="code"><pre>&#x27;django.contrib.sessions.backends.db&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_EXPIRE_AT_BROWSER_CLOSE</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_FILE_PATH</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_SAVE_EVERY_REQUEST</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_SERIALIZER</td>
          <td class="code"><pre>&#x27;django.contrib.sessions.serializers.JSONSerializer&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SETTINGS_MODULE</td>
          <td class="code"><pre>&#x27;webhook.settings&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SHORT_DATETIME_FORMAT</td>
          <td class="code"><pre>&#x27;m/d/Y P&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SHORT_DATE_FORMAT</td>
          <td class="code"><pre>&#x27;m/d/Y&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SIGNING_BACKEND</td>
          <td class="code"><pre>&#x27;django.core.signing.TimestampSigner&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SILENCED_SYSTEM_CHECKS</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>STATICFILES_DIRS</td>
          <td class="code"><pre>[&#x27;/home/jpfilho/Documents/code-ws/python/webhook/statics&#x27;]</pre></td>
        </tr>
      
        <tr>
          <td>STATICFILES_FINDERS</td>
          <td class="code"><pre>[&#x27;django.contrib.staticfiles.finders.FileSystemFinder&#x27;,
 &#x27;django.contrib.staticfiles.finders.AppDirectoriesFinder&#x27;]</pre></td>
        </tr>
      
        <tr>
          <td>STATICFILES_STORAGE</td>
          <td class="code"><pre>&#x27;django.contrib.staticfiles.storage.StaticFilesStorage&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>STATIC_ROOT</td>
          <td class="code"><pre>&#x27;/home/jpfilho/Documents/code-ws/python/webhook/static&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>STATIC_URL</td>
          <td class="code"><pre>&#x27;/static/&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>STORAGES</td>
          <td class="code"><pre>{&#x27;default&#x27;: {&#x27;BACKEND&#x27;: &#x27;django.core.files.storage.FileSystemStorage&#x27;},
 &#x27;staticfiles&#x27;: {&#x27;BACKEND&#x27;: &#x27;django.contrib.staticfiles.storage.StaticFilesStorage&#x27;}}</pre></td>
        </tr>
      
        <tr>
          <td>TEMPLATES</td>
          <td class="code"><pre>[{&#x27;APP_DIRS&#x27;: True,
  &#x27;BACKEND&#x27;: &#x27;django.template.backends.django.DjangoTemplates&#x27;,
  &#x27;DIRS&#x27;: [],
  &#x27;OPTIONS&#x27;: {&#x27;context_processors&#x27;: [&#x27;django.template.context_processors.debug&#x27;,
                                     &#x27;django.template.context_processors.request&#x27;,
                                     &#x27;django.contrib.auth.context_processors.auth&#x27;,
                                     &#x27;django.contrib.messages.context_processors.messages&#x27;]}}]</pre></td>
        </tr>
      
        <tr>
          <td>TEST_NON_SERIALIZED_APPS</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>TEST_RUNNER</td>
          <td class="code"><pre>&#x27;django.test.runner.DiscoverRunner&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>THOUSAND_SEPARATOR</td>
          <td class="code"><pre>&#x27;,&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>TIME_FORMAT</td>
          <td class="code"><pre>&#x27;P&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>TIME_INPUT_FORMATS</td>
          <td class="code"><pre>[&#x27;%H:%M:%S&#x27;, &#x27;%H:%M:%S.%f&#x27;, &#x27;%H:%M&#x27;]</pre></td>
        </tr>
      
        <tr>
          <td>TIME_ZONE</td>
          <td class="code"><pre>&#x27;UTC&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>USE_DEPRECATED_PYTZ</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>USE_I18N</td>
          <td class="code"><pre>True</pre></td>
        </tr>
      
        <tr>
          <td>USE_L10N</td>
          <td class="code"><pre>True</pre></td>
        </tr>
      
        <tr>
          <td>USE_THOUSAND_SEPARATOR</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>USE_TZ</td>
          <td class="code"><pre>True</pre></td>
        </tr>
      
        <tr>
          <td>USE_X_FORWARDED_HOST</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>USE_X_FORWARDED_PORT</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>WSGI_APPLICATION</td>
          <td class="code"><pre>&#x27;webhook.wsgi.app&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>X_FRAME_OPTIONS</td>
          <td class="code"><pre>&#x27;DENY&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>YEAR_MONTH_FORMAT</td>
          <td class="code"><pre>&#x27;F Y&#x27;</pre></td>
        </tr>
      
    </tbody>
  </table>

</div>

  <div id="explanation">
    <p>
      You’re seeing this error because you have <code>DEBUG = True</code> in your
      Django settings file. Change that to <code>False</code>, and Django will
      display a standard page generated by the handler for this status code.
    </p>
  </div>

</body>
</html>

21/05/2023|23:42:27 - webhook.views -INFO- Received webhook request
{'event': 'message.created', 'data': {'id': '0cdaf52c-be39-430f-be67-3c993fc570df', 'isFromMe': True, 'sent': True, 'type': 'chat', 'timestamp': '2023-05-21T23:42:26.000Z', 'data': {'ack': 0, 'isNew': True, 'isFirst': False}, 'visible': True, 'accountId': '966b70ba-27d8-43ae-a295-35e59f0007be', 'contactId': '79db7607-6088-44c1-a010-ed4ef39d4f37', 'fromId': 'e12d3a56-0c52-43ac-b33c-15c399eb06d4', 'serviceId': '83108c28-14f7-4646-acb8-dab165397fd5', 'toId': None, 'userId': '3f4cc332-516e-4f48-aff2-df6eaa2e5034', 'ticketId': '3e14aea2-bc69-4e56-b20b-1b6d63ade6d5', 'ticketUserId': None, 'ticketDepartmentId': None, 'quotedMessageId': None, 'origin': 'user', 'hsmId': None, 'text': 'Funciona cara', 'obfuscated': False, 'files': None, 'quotedMessage': None, 'isFromBot': False}, 'webhookId': '27b4c18d-2ab0-4c70-a592-46bbe7e00bc8', 'timestamp': '2023-05-21T23:42:26.460Z'}
21/05/2023|23:42:27 - webhook.views -INFO- Received webhook request
{'event': 'message.updated', 'data': {'id': '0cdaf52c-be39-430f-be67-3c993fc570df', 'isFromMe': True, 'sent': True, 'type': 'chat', 'timestamp': '2023-05-21T23:42:26.000Z', 'data': {'ack': 1, 'isNew': True, 'isFirst': False}, 'visible': True, 'accountId': '966b70ba-27d8-43ae-a295-35e59f0007be', 'contactId': '79db7607-6088-44c1-a010-ed4ef39d4f37', 'fromId': 'e12d3a56-0c52-43ac-b33c-15c399eb06d4', 'serviceId': '83108c28-14f7-4646-acb8-dab165397fd5', 'toId': None, 'userId': '3f4cc332-516e-4f48-aff2-df6eaa2e5034', 'ticketId': '3e14aea2-bc69-4e56-b20b-1b6d63ade6d5', 'ticketUserId': '3f4cc332-516e-4f48-aff2-df6eaa2e5034', 'ticketDepartmentId': 'a78046d7-809d-4cdb-a72a-31dfbc47d862', 'quotedMessageId': None, 'origin': 'user', 'hsmId': None, 'text': 'Funciona cara', 'obfuscated': False, 'files': None, 'quotedMessage': None, 'isFromBot': False}, 'webhookId': '27b4c18d-2ab0-4c70-a592-46bbe7e00bc8', 'timestamp': '2023-05-21T23:42:26.551Z'}
21/05/2023|23:42:27 - webhook.views -INFO- Received webhook request
{'event': 'message.updated', 'data': {'id': '0cdaf52c-be39-430f-be67-3c993fc570df', 'isFromMe': True, 'sent': True, 'type': 'chat', 'timestamp': '2023-05-21T23:42:26.000Z', 'data': {'ack': 2, 'isNew': True, 'isFirst': False}, 'visible': True, 'accountId': '966b70ba-27d8-43ae-a295-35e59f0007be', 'contactId': '79db7607-6088-44c1-a010-ed4ef39d4f37', 'fromId': 'e12d3a56-0c52-43ac-b33c-15c399eb06d4', 'serviceId': '83108c28-14f7-4646-acb8-dab165397fd5', 'toId': None, 'userId': '3f4cc332-516e-4f48-aff2-df6eaa2e5034', 'ticketId': '3e14aea2-bc69-4e56-b20b-1b6d63ade6d5', 'ticketUserId': '3f4cc332-516e-4f48-aff2-df6eaa2e5034', 'ticketDepartmentId': 'a78046d7-809d-4cdb-a72a-31dfbc47d862', 'quotedMessageId': None, 'origin': 'user', 'hsmId': None, 'text': 'Funciona cara', 'obfuscated': False, 'files': None, 'quotedMessage': None, 'isFromBot': False}, 'webhookId': '27b4c18d-2ab0-4c70-a592-46bbe7e00bc8', 'timestamp': '2023-05-21T23:42:27.076Z'}
21/05/2023|23:42:28 - messages_api.event -DEBUG- <Response [400]>-{"error":400,"message":"Message matching query does not exist."}
21/05/2023|23:42:31 - messages_api.event -DEBUG- <Response [400]>-{"error":400,"message":"Message matching query does not exist."}
21/05/2023|23:42:31 - messages_api.event -DEBUG- Failed to create message_id: 0cdaf52c-be39-430f-be67-3c993fc570df
<Response [500]>-<!DOCTYPE html>
<html lang="en">
<head>
  <meta http-equiv="content-type" content="text/html; charset=utf-8">
  <meta name="robots" content="NONE,NOARCHIVE">
  <title>ValidationError
          at /webhook/messages/create</title>
  <style type="text/css">
    html * { padding:0; margin:0; }
    body * { padding:10px 20px; }
    body * * { padding:0; }
    body { font:small sans-serif; background-color:#fff; color:#000; }
    body>div { border-bottom:1px solid #ddd; }
    h1 { font-weight:normal; }
    h2 { margin-bottom:.8em; }
    h3 { margin:1em 0 .5em 0; }
    h4 { margin:0 0 .5em 0; font-weight: normal; }
    code, pre { font-size: 100%; white-space: pre-wrap; word-break: break-word; }
    summary { cursor: pointer; }
    table { border:1px solid #ccc; border-collapse: collapse; width:100%; background:white; }
    tbody td, tbody th { vertical-align:top; padding:2px 3px; }
    thead th {
      padding:1px 6px 1px 3px; background:#fefefe; text-align:left;
      font-weight:normal; font-size:11px; border:1px solid #ddd;
    }
    tbody th { width:12em; text-align:right; color:#666; padding-right:.5em; }
    table.vars { margin:5px 10px 2px 40px; width: auto; }
    table.vars td, table.req td { font-family:monospace; }
    table td.code { width:100%; }
    table td.code pre { overflow:hidden; }
    table.source th { color:#666; }
    table.source td { font-family:monospace; white-space:pre; border-bottom:1px solid #eee; }
    ul.traceback { list-style-type:none; color: #222; }
    ul.traceback li.cause { word-break: break-word; }
    ul.traceback li.frame { padding-bottom:1em; color:#4f4f4f; }
    ul.traceback li.user { background-color:#e0e0e0; color:#000 }
    div.context { padding:10px 0; overflow:hidden; }
    div.context ol { padding-left:30px; margin:0 10px; list-style-position: inside; }
    div.context ol li { font-family:monospace; white-space:pre; color:#777; cursor:pointer; padding-left: 2px; }
    div.context ol li pre { display:inline; }
    div.context ol.context-line li { color:#464646; background-color:#dfdfdf; padding: 3px 2px; }
    div.context ol.context-line li span { position:absolute; right:32px; }
    .user div.context ol.context-line li { background-color:#bbb; color:#000; }
    .user div.context ol li { color:#666; }
    div.commands, summary.commands { margin-left: 40px; }
    div.commands a, summary.commands { color:#555; text-decoration:none; }
    .user div.commands a { color: black; }
    #summary { background: #ffc; }
    #summary h2 { font-weight: normal; color: #666; }
    #explanation { background:#eee; }
    #template, #template-not-exist { background:#f6f6f6; }
    #template-not-exist ul { margin: 0 0 10px 20px; }
    #template-not-exist .postmortem-section { margin-bottom: 3px; }
    #unicode-hint { background:#eee; }
    #traceback { background:#eee; }
    #requestinfo { background:#f6f6f6; padding-left:120px; }
    #summary table { border:none; background:transparent; }
    #requestinfo h2, #requestinfo h3 { position:relative; margin-left:-100px; }
    #requestinfo h3 { margin-bottom:-1em; }
    .error { background: #ffc; }
    .specific { color:#cc3300; font-weight:bold; }
    h2 span.commands { font-size:.7em; font-weight:normal; }
    span.commands a:link {color:#5E5694;}
    pre.exception_value { font-family: sans-serif; color: #575757; font-size: 1.5em; margin: 10px 0 10px 0; }
    .append-bottom { margin-bottom: 10px; }
    .fname { user-select: all; }
  </style>
  
  <script>
    function hideAll(elems) {
      for (var e = 0; e < elems.length; e++) {
        elems[e].style.display = 'none';
      }
    }
    window.onload = function() {
      hideAll(document.querySelectorAll('ol.pre-context'));
      hideAll(document.querySelectorAll('ol.post-context'));
      hideAll(document.querySelectorAll('div.pastebin'));
    }
    function toggle() {
      for (var i = 0; i < arguments.length; i++) {
        var e = document.getElementById(arguments[i]);
        if (e) {
          e.style.display = e.style.display == 'none' ? 'block': 'none';
        }
      }
      return false;
    }
    function switchPastebinFriendly(link) {
      s1 = "Switch to copy-and-paste view";
      s2 = "Switch back to interactive view";
      link.textContent = link.textContent.trim() == s1 ? s2: s1;
      toggle('browserTraceback', 'pastebinTraceback');
      return false;
    }
  </script>
  
</head>
<body>
<div id="summary">
  <h1>ValidationError
       at /webhook/messages/create</h1>
  <pre class="exception_value">[&#x27;o valor “[True]”  deve ser True ou False.&#x27;]</pre>
  <table class="meta">

    <tr>
      <th>Request Method:</th>
      <td>POST</td>
    </tr>
    <tr>
      <th>Request URL:</th>
      <td>http://woz.serveo.net/webhook/messages/create?phone=5588988562749&amp;period=05%2F23</td>
    </tr>

    <tr>
      <th>Django Version:</th>
      <td>4.2.1</td>
    </tr>

    <tr>
      <th>Exception Type:</th>
      <td>ValidationError</td>
    </tr>


    <tr>
      <th>Exception Value:</th>
      <td><pre>[&#x27;o valor “[True]”  deve ser True ou False.&#x27;]</pre></td>
    </tr>


    <tr>
      <th>Exception Location:</th>
      <td><span class="fname">/home/jpfilho/.local/lib/python3.10/site-packages/django/db/models/fields/__init__.py</span>, line 1112, in to_python</td>
    </tr>


    <tr>
      <th>Raised during:</th>
      <td>messages_api.views.MessageViewSet</td>
    </tr>

    <tr>
      <th>Python Executable:</th>
      <td>/usr/bin/python3</td>
    </tr>
    <tr>
      <th>Python Version:</th>
      <td>3.10.7</td>
    </tr>
    <tr>
      <th>Python Path:</th>
      <td><pre>[&#x27;/home/jpfilho/Documents/code-ws/python/webhook&#x27;,
 &#x27;/home/jpfilho/Documents/code-ws/python/webhook&#x27;,
 &#x27;/usr/lib/python310.zip&#x27;,
 &#x27;/usr/lib/python3.10&#x27;,
 &#x27;/usr/lib/python3.10/lib-dynload&#x27;,
 &#x27;/home/jpfilho/.local/lib/python3.10/site-packages&#x27;,
 &#x27;/usr/local/lib/python3.10/dist-packages&#x27;,
 &#x27;/usr/lib/python3/dist-packages&#x27;]</pre></td>
    </tr>
    <tr>
      <th>Server time:</th>
      <td>Sun, 21 May 2023 23:42:30 +0000</td>
    </tr>
  </table>
</div>




<div id="traceback">
  <h2>Traceback <span class="commands"><a href="#" onclick="return switchPastebinFriendly(this);">
    Switch to copy-and-paste view</a></span>
  </h2>
  <div id="browserTraceback">
    <ul class="traceback">
      
        
        <li class="frame django">
          
            <code class="fname">/home/jpfilho/.local/lib/python3.10/site-packages/django/core/handlers/exception.py</code>, line 55, in inner
          

          
            <div class="context" id="c139813535291136">
              
                <ol start="48" class="pre-context" id="pre139813535291136">
                
                  <li onclick="toggle('pre139813535291136', 'post139813535291136')"><pre></pre></li>
                
                  <li onclick="toggle('pre139813535291136', 'post139813535291136')"><pre>        return inner</pre></li>
                
                  <li onclick="toggle('pre139813535291136', 'post139813535291136')"><pre>    else:</pre></li>
                
                  <li onclick="toggle('pre139813535291136', 'post139813535291136')"><pre></pre></li>
                
                  <li onclick="toggle('pre139813535291136', 'post139813535291136')"><pre>        @wraps(get_response)</pre></li>
                
                  <li onclick="toggle('pre139813535291136', 'post139813535291136')"><pre>        def inner(request):</pre></li>
                
                  <li onclick="toggle('pre139813535291136', 'post139813535291136')"><pre>            try:</pre></li>
                
                </ol>
              
              <ol start="55" class="context-line">
                <li onclick="toggle('pre139813535291136', 'post139813535291136')"><pre>                response = get_response(request)</pre> <span>…</span></li>
              </ol>
              
                <ol start='56' class="post-context" id="post139813535291136">
                  
                  <li onclick="toggle('pre139813535291136', 'post139813535291136')"><pre>            except Exception as exc:</pre></li>
                  
                  <li onclick="toggle('pre139813535291136', 'post139813535291136')"><pre>                response = response_for_exception(request, exc)</pre></li>
                  
                  <li onclick="toggle('pre139813535291136', 'post139813535291136')"><pre>            return response</pre></li>
                  
                  <li onclick="toggle('pre139813535291136', 'post139813535291136')"><pre></pre></li>
                  
                  <li onclick="toggle('pre139813535291136', 'post139813535291136')"><pre>        return inner</pre></li>
                  
                  <li onclick="toggle('pre139813535291136', 'post139813535291136')"><pre></pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v139813535291136">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>exc</td>
                    <td class="code"><pre>ValidationError([&#x27;o valor “[True]”  deve ser True ou False.&#x27;])</pre></td>
                  </tr>
                
                  <tr>
                    <td>get_response</td>
                    <td class="code"><pre>&lt;bound method BaseHandler._get_response of &lt;django.core.handlers.wsgi.WSGIHandler object at 0x7f28e292fdf0&gt;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>request</td>
                    <td class="code"><pre>&lt;WSGIRequest: POST &#x27;/webhook/messages/create?phone=5588988562749&amp;period=05%2F23&#x27;&gt;</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
        <li class="frame django">
          
            <code class="fname">/home/jpfilho/.local/lib/python3.10/site-packages/django/core/handlers/base.py</code>, line 197, in _get_response
          

          
            <div class="context" id="c139813535300480">
              
                <ol start="190" class="pre-context" id="pre139813535300480">
                
                  <li onclick="toggle('pre139813535300480', 'post139813535300480')"><pre></pre></li>
                
                  <li onclick="toggle('pre139813535300480', 'post139813535300480')"><pre>        if response is None:</pre></li>
                
                  <li onclick="toggle('pre139813535300480', 'post139813535300480')"><pre>            wrapped_callback = self.make_view_atomic(callback)</pre></li>
                
                  <li onclick="toggle('pre139813535300480', 'post139813535300480')"><pre>            # If it is an asynchronous view, run it in a subthread.</pre></li>
                
                  <li onclick="toggle('pre139813535300480', 'post139813535300480')"><pre>            if iscoroutinefunction(wrapped_callback):</pre></li>
                
                  <li onclick="toggle('pre139813535300480', 'post139813535300480')"><pre>                wrapped_callback = async_to_sync(wrapped_callback)</pre></li>
                
                  <li onclick="toggle('pre139813535300480', 'post139813535300480')"><pre>            try:</pre></li>
                
                </ol>
              
              <ol start="197" class="context-line">
                <li onclick="toggle('pre139813535300480', 'post139813535300480')"><pre>                response = wrapped_callback(request, *callback_args, **callback_kwargs)</pre> <span>…</span></li>
              </ol>
              
                <ol start='198' class="post-context" id="post139813535300480">
                  
                  <li onclick="toggle('pre139813535300480', 'post139813535300480')"><pre>            except Exception as e:</pre></li>
                  
                  <li onclick="toggle('pre139813535300480', 'post139813535300480')"><pre>                response = self.process_exception_by_middleware(e, request)</pre></li>
                  
                  <li onclick="toggle('pre139813535300480', 'post139813535300480')"><pre>                if response is None:</pre></li>
                  
                  <li onclick="toggle('pre139813535300480', 'post139813535300480')"><pre>                    raise</pre></li>
                  
                  <li onclick="toggle('pre139813535300480', 'post139813535300480')"><pre></pre></li>
                  
                  <li onclick="toggle('pre139813535300480', 'post139813535300480')"><pre>        # Complain if the view returned None (a common error).</pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v139813535300480">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>callback</td>
                    <td class="code"><pre>&lt;function MessageViewSet at 0x7f28e31da560&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>callback_args</td>
                    <td class="code"><pre>()</pre></td>
                  </tr>
                
                  <tr>
                    <td>callback_kwargs</td>
                    <td class="code"><pre>{}</pre></td>
                  </tr>
                
                  <tr>
                    <td>middleware_method</td>
                    <td class="code"><pre>&lt;bound method CsrfViewMiddleware.process_view of &lt;CsrfViewMiddleware get_response=convert_exception_to_response.&lt;locals&gt;.inner&gt;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>request</td>
                    <td class="code"><pre>&lt;WSGIRequest: POST &#x27;/webhook/messages/create?phone=5588988562749&amp;period=05%2F23&#x27;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>response</td>
                    <td class="code"><pre>None</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;django.core.handlers.wsgi.WSGIHandler object at 0x7f28e292fdf0&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>wrapped_callback</td>
                    <td class="code"><pre>&lt;function MessageViewSet at 0x7f28e31da560&gt;</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
        <li class="frame django">
          
            <code class="fname">/home/jpfilho/.local/lib/python3.10/site-packages/django/views/decorators/csrf.py</code>, line 56, in wrapper_view
          

          
            <div class="context" id="c139813535298304">
              
                <ol start="49" class="pre-context" id="pre139813535298304">
                
                  <li onclick="toggle('pre139813535298304', 'post139813535298304')"><pre>def csrf_exempt(view_func):</pre></li>
                
                  <li onclick="toggle('pre139813535298304', 'post139813535298304')"><pre>    &quot;&quot;&quot;Mark a view function as being exempt from the CSRF view protection.&quot;&quot;&quot;</pre></li>
                
                  <li onclick="toggle('pre139813535298304', 'post139813535298304')"><pre></pre></li>
                
                  <li onclick="toggle('pre139813535298304', 'post139813535298304')"><pre>    # view_func.csrf_exempt = True would also work, but decorators are nicer</pre></li>
                
                  <li onclick="toggle('pre139813535298304', 'post139813535298304')"><pre>    # if they don&#x27;t have side effects, so return a new function.</pre></li>
                
                  <li onclick="toggle('pre139813535298304', 'post139813535298304')"><pre>    @wraps(view_func)</pre></li>
                
                  <li onclick="toggle('pre139813535298304', 'post139813535298304')"><pre>    def wrapper_view(*args, **kwargs):</pre></li>
                
                </ol>
              
              <ol start="56" class="context-line">
                <li onclick="toggle('pre139813535298304', 'post139813535298304')"><pre>        return view_func(*args, **kwargs)</pre> <span>…</span></li>
              </ol>
              
                <ol start='57' class="post-context" id="post139813535298304">
                  
                  <li onclick="toggle('pre139813535298304', 'post139813535298304')"><pre></pre></li>
                  
                  <li onclick="toggle('pre139813535298304', 'post139813535298304')"><pre>    wrapper_view.csrf_exempt = True</pre></li>
                  
                  <li onclick="toggle('pre139813535298304', 'post139813535298304')"><pre>    return wrapper_view</pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v139813535298304">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>args</td>
                    <td class="code"><pre>(&lt;WSGIRequest: POST &#x27;/webhook/messages/create?phone=5588988562749&amp;period=05%2F23&#x27;&gt;,)</pre></td>
                  </tr>
                
                  <tr>
                    <td>kwargs</td>
                    <td class="code"><pre>{}</pre></td>
                  </tr>
                
                  <tr>
                    <td>view_func</td>
                    <td class="code"><pre>&lt;function MessageViewSet at 0x7f28e31da4d0&gt;</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
        <li class="frame user">
          
            <code class="fname">/home/jpfilho/.local/lib/python3.10/site-packages/rest_framework/viewsets.py</code>, line 125, in view
          

          
            <div class="context" id="c139813628436864">
              
                <ol start="118" class="pre-context" id="pre139813628436864">
                
                  <li onclick="toggle('pre139813628436864', 'post139813628436864')"><pre>                setattr(self, method, handler)</pre></li>
                
                  <li onclick="toggle('pre139813628436864', 'post139813628436864')"><pre></pre></li>
                
                  <li onclick="toggle('pre139813628436864', 'post139813628436864')"><pre>            self.request = request</pre></li>
                
                  <li onclick="toggle('pre139813628436864', 'post139813628436864')"><pre>            self.args = args</pre></li>
                
                  <li onclick="toggle('pre139813628436864', 'post139813628436864')"><pre>            self.kwargs = kwargs</pre></li>
                
                  <li onclick="toggle('pre139813628436864', 'post139813628436864')"><pre></pre></li>
                
                  <li onclick="toggle('pre139813628436864', 'post139813628436864')"><pre>            # And continue as usual</pre></li>
                
                </ol>
              
              <ol start="125" class="context-line">
                <li onclick="toggle('pre139813628436864', 'post139813628436864')"><pre>            return self.dispatch(request, *args, **kwargs)</pre> <span>…</span></li>
              </ol>
              
                <ol start='126' class="post-context" id="post139813628436864">
                  
                  <li onclick="toggle('pre139813628436864', 'post139813628436864')"><pre></pre></li>
                  
                  <li onclick="toggle('pre139813628436864', 'post139813628436864')"><pre>        # take name and docstring from class</pre></li>
                  
                  <li onclick="toggle('pre139813628436864', 'post139813628436864')"><pre>        update_wrapper(view, cls, updated=())</pre></li>
                  
                  <li onclick="toggle('pre139813628436864', 'post139813628436864')"><pre></pre></li>
                  
                  <li onclick="toggle('pre139813628436864', 'post139813628436864')"><pre>        # and possible attributes set by decorators</pre></li>
                  
                  <li onclick="toggle('pre139813628436864', 'post139813628436864')"><pre>        # like csrf_exempt from dispatch</pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v139813628436864">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>action</td>
                    <td class="code"><pre>&#x27;create&#x27;</pre></td>
                  </tr>
                
                  <tr>
                    <td>actions</td>
                    <td class="code"><pre>{&#x27;post&#x27;: &#x27;create&#x27;}</pre></td>
                  </tr>
                
                  <tr>
                    <td>args</td>
                    <td class="code"><pre>()</pre></td>
                  </tr>
                
                  <tr>
                    <td>cls</td>
                    <td class="code"><pre>&lt;class &#x27;messages_api.views.MessageViewSet&#x27;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>handler</td>
                    <td class="code"><pre>&lt;bound method MessageViewSet.create of &lt;messages_api.views.MessageViewSet object at 0x7f28e5a0cb80&gt;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>initkwargs</td>
                    <td class="code"><pre>{}</pre></td>
                  </tr>
                
                  <tr>
                    <td>kwargs</td>
                    <td class="code"><pre>{}</pre></td>
                  </tr>
                
                  <tr>
                    <td>method</td>
                    <td class="code"><pre>&#x27;post&#x27;</pre></td>
                  </tr>
                
                  <tr>
                    <td>request</td>
                    <td class="code"><pre>&lt;WSGIRequest: POST &#x27;/webhook/messages/create?phone=5588988562749&amp;period=05%2F23&#x27;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;messages_api.views.MessageViewSet object at 0x7f28e5a0cb80&gt;</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
        <li class="frame user">
          
            <code class="fname">/home/jpfilho/.local/lib/python3.10/site-packages/rest_framework/views.py</code>, line 509, in dispatch
          

          
            <div class="context" id="c139813535294336">
              
                <ol start="502" class="pre-context" id="pre139813535294336">
                
                  <li onclick="toggle('pre139813535294336', 'post139813535294336')"><pre>                                  self.http_method_not_allowed)</pre></li>
                
                  <li onclick="toggle('pre139813535294336', 'post139813535294336')"><pre>            else:</pre></li>
                
                  <li onclick="toggle('pre139813535294336', 'post139813535294336')"><pre>                handler = self.http_method_not_allowed</pre></li>
                
                  <li onclick="toggle('pre139813535294336', 'post139813535294336')"><pre></pre></li>
                
                  <li onclick="toggle('pre139813535294336', 'post139813535294336')"><pre>            response = handler(request, *args, **kwargs)</pre></li>
                
                  <li onclick="toggle('pre139813535294336', 'post139813535294336')"><pre></pre></li>
                
                  <li onclick="toggle('pre139813535294336', 'post139813535294336')"><pre>        except Exception as exc:</pre></li>
                
                </ol>
              
              <ol start="509" class="context-line">
                <li onclick="toggle('pre139813535294336', 'post139813535294336')"><pre>            response = self.handle_exception(exc)</pre> <span>…</span></li>
              </ol>
              
                <ol start='510' class="post-context" id="post139813535294336">
                  
                  <li onclick="toggle('pre139813535294336', 'post139813535294336')"><pre></pre></li>
                  
                  <li onclick="toggle('pre139813535294336', 'post139813535294336')"><pre>        self.response = self.finalize_response(request, response, *args, **kwargs)</pre></li>
                  
                  <li onclick="toggle('pre139813535294336', 'post139813535294336')"><pre>        return self.response</pre></li>
                  
                  <li onclick="toggle('pre139813535294336', 'post139813535294336')"><pre></pre></li>
                  
                  <li onclick="toggle('pre139813535294336', 'post139813535294336')"><pre>    def options(self, request, *args, **kwargs):</pre></li>
                  
                  <li onclick="toggle('pre139813535294336', 'post139813535294336')"><pre>        &quot;&quot;&quot;</pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v139813535294336">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>args</td>
                    <td class="code"><pre>()</pre></td>
                  </tr>
                
                  <tr>
                    <td>handler</td>
                    <td class="code"><pre>&lt;bound method MessageViewSet.create of &lt;messages_api.views.MessageViewSet object at 0x7f28e5a0cb80&gt;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>kwargs</td>
                    <td class="code"><pre>{}</pre></td>
                  </tr>
                
                  <tr>
                    <td>request</td>
                    <td class="code"><pre>&lt;rest_framework.request.Request: POST &#x27;/webhook/messages/create?phone=5588988562749&amp;period=05%2F23&#x27;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;messages_api.views.MessageViewSet object at 0x7f28e5a0cb80&gt;</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
        <li class="frame user">
          
            <code class="fname">/home/jpfilho/.local/lib/python3.10/site-packages/rest_framework/views.py</code>, line 469, in handle_exception
          

          
            <div class="context" id="c139813535505792">
              
                <ol start="462" class="pre-context" id="pre139813535505792">
                
                  <li onclick="toggle('pre139813535505792', 'post139813535505792')"><pre></pre></li>
                
                  <li onclick="toggle('pre139813535505792', 'post139813535505792')"><pre>        exception_handler = self.get_exception_handler()</pre></li>
                
                  <li onclick="toggle('pre139813535505792', 'post139813535505792')"><pre></pre></li>
                
                  <li onclick="toggle('pre139813535505792', 'post139813535505792')"><pre>        context = self.get_exception_handler_context()</pre></li>
                
                  <li onclick="toggle('pre139813535505792', 'post139813535505792')"><pre>        response = exception_handler(exc, context)</pre></li>
                
                  <li onclick="toggle('pre139813535505792', 'post139813535505792')"><pre></pre></li>
                
                  <li onclick="toggle('pre139813535505792', 'post139813535505792')"><pre>        if response is None:</pre></li>
                
                </ol>
              
              <ol start="469" class="context-line">
                <li onclick="toggle('pre139813535505792', 'post139813535505792')"><pre>            self.raise_uncaught_exception(exc)</pre> <span>…</span></li>
              </ol>
              
                <ol start='470' class="post-context" id="post139813535505792">
                  
                  <li onclick="toggle('pre139813535505792', 'post139813535505792')"><pre></pre></li>
                  
                  <li onclick="toggle('pre139813535505792', 'post139813535505792')"><pre>        response.exception = True</pre></li>
                  
                  <li onclick="toggle('pre139813535505792', 'post139813535505792')"><pre>        return response</pre></li>
                  
                  <li onclick="toggle('pre139813535505792', 'post139813535505792')"><pre></pre></li>
                  
                  <li onclick="toggle('pre139813535505792', 'post139813535505792')"><pre>    def raise_uncaught_exception(self, exc):</pre></li>
                  
                  <li onclick="toggle('pre139813535505792', 'post139813535505792')"><pre>        if settings.DEBUG:</pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v139813535505792">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>context</td>
                    <td class="code"><pre>{&#x27;args&#x27;: (),
 &#x27;kwargs&#x27;: {},
 &#x27;request&#x27;: &lt;rest_framework.request.Request: POST &#x27;/webhook/messages/create?phone=5588988562749&amp;period=05%2F23&#x27;&gt;,
 &#x27;view&#x27;: &lt;messages_api.views.MessageViewSet object at 0x7f28e5a0cb80&gt;}</pre></td>
                  </tr>
                
                  <tr>
                    <td>exc</td>
                    <td class="code"><pre>ValidationError([&#x27;o valor “[True]”  deve ser True ou False.&#x27;])</pre></td>
                  </tr>
                
                  <tr>
                    <td>exception_handler</td>
                    <td class="code"><pre>&lt;function exception_handler at 0x7f28e319c700&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>response</td>
                    <td class="code"><pre>None</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;messages_api.views.MessageViewSet object at 0x7f28e5a0cb80&gt;</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
        <li class="frame user">
          
            <code class="fname">/home/jpfilho/.local/lib/python3.10/site-packages/rest_framework/views.py</code>, line 480, in raise_uncaught_exception
          

          
            <div class="context" id="c139813535185920">
              
                <ol start="473" class="pre-context" id="pre139813535185920">
                
                  <li onclick="toggle('pre139813535185920', 'post139813535185920')"><pre></pre></li>
                
                  <li onclick="toggle('pre139813535185920', 'post139813535185920')"><pre>    def raise_uncaught_exception(self, exc):</pre></li>
                
                  <li onclick="toggle('pre139813535185920', 'post139813535185920')"><pre>        if settings.DEBUG:</pre></li>
                
                  <li onclick="toggle('pre139813535185920', 'post139813535185920')"><pre>            request = self.request</pre></li>
                
                  <li onclick="toggle('pre139813535185920', 'post139813535185920')"><pre>            renderer_format = getattr(request.accepted_renderer, &#x27;format&#x27;)</pre></li>
                
                  <li onclick="toggle('pre139813535185920', 'post139813535185920')"><pre>            use_plaintext_traceback = renderer_format not in (&#x27;html&#x27;, &#x27;api&#x27;, &#x27;admin&#x27;)</pre></li>
                
                  <li onclick="toggle('pre139813535185920', 'post139813535185920')"><pre>            request.force_plaintext_errors(use_plaintext_traceback)</pre></li>
                
                </ol>
              
              <ol start="480" class="context-line">
                <li onclick="toggle('pre139813535185920', 'post139813535185920')"><pre>        raise exc</pre> <span>…</span></li>
              </ol>
              
                <ol start='481' class="post-context" id="post139813535185920">
                  
                  <li onclick="toggle('pre139813535185920', 'post139813535185920')"><pre></pre></li>
                  
                  <li onclick="toggle('pre139813535185920', 'post139813535185920')"><pre>    # Note: Views are made CSRF exempt from within `as_view` as to prevent</pre></li>
                  
                  <li onclick="toggle('pre139813535185920', 'post139813535185920')"><pre>    # accidental removal of this exemption in cases where `dispatch` needs to</pre></li>
                  
                  <li onclick="toggle('pre139813535185920', 'post139813535185920')"><pre>    # be overridden.</pre></li>
                  
                  <li onclick="toggle('pre139813535185920', 'post139813535185920')"><pre>    def dispatch(self, request, *args, **kwargs):</pre></li>
                  
                  <li onclick="toggle('pre139813535185920', 'post139813535185920')"><pre>        &quot;&quot;&quot;</pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v139813535185920">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>exc</td>
                    <td class="code"><pre>ValidationError([&#x27;o valor “[True]”  deve ser True ou False.&#x27;])</pre></td>
                  </tr>
                
                  <tr>
                    <td>renderer_format</td>
                    <td class="code"><pre>&#x27;json&#x27;</pre></td>
                  </tr>
                
                  <tr>
                    <td>request</td>
                    <td class="code"><pre>&lt;rest_framework.request.Request: POST &#x27;/webhook/messages/create?phone=5588988562749&amp;period=05%2F23&#x27;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;messages_api.views.MessageViewSet object at 0x7f28e5a0cb80&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>use_plaintext_traceback</td>
                    <td class="code"><pre>True</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
        <li class="frame user">
          
            <code class="fname">/home/jpfilho/.local/lib/python3.10/site-packages/rest_framework/views.py</code>, line 506, in dispatch
          

          
            <div class="context" id="c139813628770752">
              
                <ol start="499" class="pre-context" id="pre139813628770752">
                
                  <li onclick="toggle('pre139813628770752', 'post139813628770752')"><pre>            # Get the appropriate handler method</pre></li>
                
                  <li onclick="toggle('pre139813628770752', 'post139813628770752')"><pre>            if request.method.lower() in self.http_method_names:</pre></li>
                
                  <li onclick="toggle('pre139813628770752', 'post139813628770752')"><pre>                handler = getattr(self, request.method.lower(),</pre></li>
                
                  <li onclick="toggle('pre139813628770752', 'post139813628770752')"><pre>                                  self.http_method_not_allowed)</pre></li>
                
                  <li onclick="toggle('pre139813628770752', 'post139813628770752')"><pre>            else:</pre></li>
                
                  <li onclick="toggle('pre139813628770752', 'post139813628770752')"><pre>                handler = self.http_method_not_allowed</pre></li>
                
                  <li onclick="toggle('pre139813628770752', 'post139813628770752')"><pre></pre></li>
                
                </ol>
              
              <ol start="506" class="context-line">
                <li onclick="toggle('pre139813628770752', 'post139813628770752')"><pre>            response = handler(request, *args, **kwargs)</pre> <span>…</span></li>
              </ol>
              
                <ol start='507' class="post-context" id="post139813628770752">
                  
                  <li onclick="toggle('pre139813628770752', 'post139813628770752')"><pre></pre></li>
                  
                  <li onclick="toggle('pre139813628770752', 'post139813628770752')"><pre>        except Exception as exc:</pre></li>
                  
                  <li onclick="toggle('pre139813628770752', 'post139813628770752')"><pre>            response = self.handle_exception(exc)</pre></li>
                  
                  <li onclick="toggle('pre139813628770752', 'post139813628770752')"><pre></pre></li>
                  
                  <li onclick="toggle('pre139813628770752', 'post139813628770752')"><pre>        self.response = self.finalize_response(request, response, *args, **kwargs)</pre></li>
                  
                  <li onclick="toggle('pre139813628770752', 'post139813628770752')"><pre>        return self.response</pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v139813628770752">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>args</td>
                    <td class="code"><pre>()</pre></td>
                  </tr>
                
                  <tr>
                    <td>handler</td>
                    <td class="code"><pre>&lt;bound method MessageViewSet.create of &lt;messages_api.views.MessageViewSet object at 0x7f28e5a0cb80&gt;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>kwargs</td>
                    <td class="code"><pre>{}</pre></td>
                  </tr>
                
                  <tr>
                    <td>request</td>
                    <td class="code"><pre>&lt;rest_framework.request.Request: POST &#x27;/webhook/messages/create?phone=5588988562749&amp;period=05%2F23&#x27;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;messages_api.views.MessageViewSet object at 0x7f28e5a0cb80&gt;</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
        <li class="frame user">
          
            <code class="fname">/home/jpfilho/Documents/code-ws/python/webhook/messages_api/views.py</code>, line 153, in create
          

          
            <div class="context" id="c139813628432704">
              
                <ol start="146" class="pre-context" id="pre139813628432704">
                
                  <li onclick="toggle('pre139813628432704', 'post139813628432704')"><pre>        except ValueError:</pre></li>
                
                  <li onclick="toggle('pre139813628432704', 'post139813628432704')"><pre>            return Response({&#x27;error&#x27;: &#x27;Invalid period format, should be YYYY-MM-DD or MM-YY.&#x27;}, status=400)</pre></li>
                
                  <li onclick="toggle('pre139813628432704', 'post139813628432704')"><pre></pre></li>
                
                  <li onclick="toggle('pre139813628432704', 'post139813628432704')"><pre>        if len(period) == 5:</pre></li>
                
                  <li onclick="toggle('pre139813628432704', 'post139813628432704')"><pre>            period = dt.now().strftime(</pre></li>
                
                  <li onclick="toggle('pre139813628432704', 'post139813628432704')"><pre>                &#x27;%Y-&#x27;) + period[-2:] + &#x27;-&#x27; + period[:2] + &#x27; 00:00:00&#x27;</pre></li>
                
                  <li onclick="toggle('pre139813628432704', 'post139813628432704')"><pre>        try:</pre></li>
                
                </ol>
              
              <ol start="153" class="context-line">
                <li onclick="toggle('pre139813628432704', 'post139813628432704')"><pre>            message = Message.objects.create(</pre> <span>…</span></li>
              </ol>
              
                <ol start='154' class="post-context" id="post139813628432704">
                  
                  <li onclick="toggle('pre139813628432704', 'post139813628432704')"><pre>                contact_id=contact_id,</pre></li>
                  
                  <li onclick="toggle('pre139813628432704', 'post139813628432704')"><pre>                contact_number=contact_number,</pre></li>
                  
                  <li onclick="toggle('pre139813628432704', 'post139813628432704')"><pre>                period=period,</pre></li>
                  
                  <li onclick="toggle('pre139813628432704', 'post139813628432704')"><pre>                timestamp=timestamp,</pre></li>
                  
                  <li onclick="toggle('pre139813628432704', 'post139813628432704')"><pre>                status=status,</pre></li>
                  
                  <li onclick="toggle('pre139813628432704', 'post139813628432704')"><pre>                message_id=message_id,</pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v139813628432704">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>args</td>
                    <td class="code"><pre>()</pre></td>
                  </tr>
                
                  <tr>
                    <td>contact_id</td>
                    <td class="code"><pre>&#x27;79db7607-6088-44c1-a010-ed4ef39d4f37&#x27;</pre></td>
                  </tr>
                
                  <tr>
                    <td>contact_number</td>
                    <td class="code"><pre>&#x27;5588988562749&#x27;</pre></td>
                  </tr>
                
                  <tr>
                    <td>isFromMe</td>
                    <td class="code"><pre>[True]</pre></td>
                  </tr>
                
                  <tr>
                    <td>kwargs</td>
                    <td class="code"><pre>{}</pre></td>
                  </tr>
                
                  <tr>
                    <td>message_id</td>
                    <td class="code"><pre>&#x27;0cdaf52c-be39-430f-be67-3c993fc570df&#x27;</pre></td>
                  </tr>
                
                  <tr>
                    <td>message_type</td>
                    <td class="code"><pre>&#x27;chat&#x27;</pre></td>
                  </tr>
                
                  <tr>
                    <td>period</td>
                    <td class="code"><pre>&#x27;2023-05-01&#x27;</pre></td>
                  </tr>
                
                  <tr>
                    <td>request</td>
                    <td class="code"><pre>&lt;rest_framework.request.Request: POST &#x27;/webhook/messages/create?phone=5588988562749&amp;period=05%2F23&#x27;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;messages_api.views.MessageViewSet object at 0x7f28e5a0cb80&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>status</td>
                    <td class="code"><pre>0</pre></td>
                  </tr>
                
                  <tr>
                    <td>ticket_id</td>
                    <td class="code"><pre>&#x27;3e14aea2-bc69-4e56-b20b-1b6d63ade6d5&#x27;</pre></td>
                  </tr>
                
                  <tr>
                    <td>timestamp</td>
                    <td class="code"><pre>&#x27;2023-05-21T23:42:26.460Z&#x27;</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
        <li class="frame django">
          
            <code class="fname">/home/jpfilho/.local/lib/python3.10/site-packages/django/db/models/manager.py</code>, line 87, in manager_method
          

          
            <div class="context" id="c139813628443072">
              
                <ol start="80" class="pre-context" id="pre139813628443072">
                
                  <li onclick="toggle('pre139813628443072', 'post139813628443072')"><pre>        return []</pre></li>
                
                  <li onclick="toggle('pre139813628443072', 'post139813628443072')"><pre></pre></li>
                
                  <li onclick="toggle('pre139813628443072', 'post139813628443072')"><pre>    @classmethod</pre></li>
                
                  <li onclick="toggle('pre139813628443072', 'post139813628443072')"><pre>    def _get_queryset_methods(cls, queryset_class):</pre></li>
                
                  <li onclick="toggle('pre139813628443072', 'post139813628443072')"><pre>        def create_method(name, method):</pre></li>
                
                  <li onclick="toggle('pre139813628443072', 'post139813628443072')"><pre>            @wraps(method)</pre></li>
                
                  <li onclick="toggle('pre139813628443072', 'post139813628443072')"><pre>            def manager_method(self, *args, **kwargs):</pre></li>
                
                </ol>
              
              <ol start="87" class="context-line">
                <li onclick="toggle('pre139813628443072', 'post139813628443072')"><pre>                return getattr(self.get_queryset(), name)(*args, **kwargs)</pre> <span>…</span></li>
              </ol>
              
                <ol start='88' class="post-context" id="post139813628443072">
                  
                  <li onclick="toggle('pre139813628443072', 'post139813628443072')"><pre></pre></li>
                  
                  <li onclick="toggle('pre139813628443072', 'post139813628443072')"><pre>            return manager_method</pre></li>
                  
                  <li onclick="toggle('pre139813628443072', 'post139813628443072')"><pre></pre></li>
                  
                  <li onclick="toggle('pre139813628443072', 'post139813628443072')"><pre>        new_methods = {}</pre></li>
                  
                  <li onclick="toggle('pre139813628443072', 'post139813628443072')"><pre>        for name, method in inspect.getmembers(</pre></li>
                  
                  <li onclick="toggle('pre139813628443072', 'post139813628443072')"><pre>            queryset_class, predicate=inspect.isfunction</pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v139813628443072">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>args</td>
                    <td class="code"><pre>()</pre></td>
                  </tr>
                
                  <tr>
                    <td>kwargs</td>
                    <td class="code"><pre>{&#x27;contact_id&#x27;: &#x27;79db7607-6088-44c1-a010-ed4ef39d4f37&#x27;,
 &#x27;contact_number&#x27;: &#x27;5588988562749&#x27;,
 &#x27;is_from_me&#x27;: [True],
 &#x27;message_id&#x27;: &#x27;0cdaf52c-be39-430f-be67-3c993fc570df&#x27;,
 &#x27;message_type&#x27;: &#x27;chat&#x27;,
 &#x27;period&#x27;: &#x27;2023-05-01&#x27;,
 &#x27;retries&#x27;: 0,
 &#x27;status&#x27;: 0,
 &#x27;ticket_service_id&#x27;: &#x27;3e14aea2-bc69-4e56-b20b-1b6d63ade6d5&#x27;,
 &#x27;timestamp&#x27;: &#x27;2023-05-21T23:42:26.460Z&#x27;}</pre></td>
                  </tr>
                
                  <tr>
                    <td>name</td>
                    <td class="code"><pre>&#x27;create&#x27;</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;django.db.models.manager.Manager object at 0x7f28e3dba980&gt;</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
        <li class="frame django">
          
            <code class="fname">/home/jpfilho/.local/lib/python3.10/site-packages/django/db/models/query.py</code>, line 658, in create
          

          
            <div class="context" id="c139813535505536">
              
                <ol start="651" class="pre-context" id="pre139813535505536">
                
                  <li onclick="toggle('pre139813535505536', 'post139813535505536')"><pre>    def create(self, **kwargs):</pre></li>
                
                  <li onclick="toggle('pre139813535505536', 'post139813535505536')"><pre>        &quot;&quot;&quot;</pre></li>
                
                  <li onclick="toggle('pre139813535505536', 'post139813535505536')"><pre>        Create a new object with the given kwargs, saving it to the database</pre></li>
                
                  <li onclick="toggle('pre139813535505536', 'post139813535505536')"><pre>        and returning the created object.</pre></li>
                
                  <li onclick="toggle('pre139813535505536', 'post139813535505536')"><pre>        &quot;&quot;&quot;</pre></li>
                
                  <li onclick="toggle('pre139813535505536', 'post139813535505536')"><pre>        obj = self.model(**kwargs)</pre></li>
                
                  <li onclick="toggle('pre139813535505536', 'post139813535505536')"><pre>        self._for_write = True</pre></li>
                
                </ol>
              
              <ol start="658" class="context-line">
                <li onclick="toggle('pre139813535505536', 'post139813535505536')"><pre>        obj.save(force_insert=True, using=self.db)</pre> <span>…</span></li>
              </ol>
              
                <ol start='659' class="post-context" id="post139813535505536">
                  
                  <li onclick="toggle('pre139813535505536', 'post139813535505536')"><pre>        return obj</pre></li>
                  
                  <li onclick="toggle('pre139813535505536', 'post139813535505536')"><pre></pre></li>
                  
                  <li onclick="toggle('pre139813535505536', 'post139813535505536')"><pre>    async def acreate(self, **kwargs):</pre></li>
                  
                  <li onclick="toggle('pre139813535505536', 'post139813535505536')"><pre>        return await sync_to_async(self.create)(**kwargs)</pre></li>
                  
                  <li onclick="toggle('pre139813535505536', 'post139813535505536')"><pre></pre></li>
                  
                  <li onclick="toggle('pre139813535505536', 'post139813535505536')"><pre>    def _prepare_for_bulk_create(self, objs):</pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v139813535505536">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>kwargs</td>
                    <td class="code"><pre>{&#x27;contact_id&#x27;: &#x27;79db7607-6088-44c1-a010-ed4ef39d4f37&#x27;,
 &#x27;contact_number&#x27;: &#x27;5588988562749&#x27;,
 &#x27;is_from_me&#x27;: [True],
 &#x27;message_id&#x27;: &#x27;0cdaf52c-be39-430f-be67-3c993fc570df&#x27;,
 &#x27;message_type&#x27;: &#x27;chat&#x27;,
 &#x27;period&#x27;: &#x27;2023-05-01&#x27;,
 &#x27;retries&#x27;: 0,
 &#x27;status&#x27;: 0,
 &#x27;ticket_service_id&#x27;: &#x27;3e14aea2-bc69-4e56-b20b-1b6d63ade6d5&#x27;,
 &#x27;timestamp&#x27;: &#x27;2023-05-21T23:42:26.460Z&#x27;}</pre></td>
                  </tr>
                
                  <tr>
                    <td>obj</td>
                    <td class="code"><pre>&lt;Message: 5588988562749 - 2023-05-01 - 0&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;QuerySet [&lt;Message: 5588988562749 - 2023-05-01 - 0&gt;, &lt;Message: 5588988562749 - 2023-05-01 - 0&gt;, &lt;Message: 5588988562749 - 2023-05-01 - 0&gt;, &lt;Message: 5588988562749 - 2023-05-01 - 0&gt;, &lt;Message: 5588988562749 - 2023-05-01 - 0&gt;, &lt;Message: 5588988562749 - 2023-05-01 - 0&gt;, &lt;Message: 5588988562749 - 2023-05-01 - 0&gt;, &lt;Message: 5588988562749 - 2023-05-01 - 0&gt;]&gt;</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
        <li class="frame django">
          
            <code class="fname">/home/jpfilho/.local/lib/python3.10/site-packages/django/db/models/base.py</code>, line 814, in save
          

          
            <div class="context" id="c139813628433152">
              
                <ol start="807" class="pre-context" id="pre139813628433152">
                
                  <li onclick="toggle('pre139813628433152', 'post139813628433152')"><pre>            for field in self._meta.concrete_fields:</pre></li>
                
                  <li onclick="toggle('pre139813628433152', 'post139813628433152')"><pre>                if not field.primary_key and not hasattr(field, &quot;through&quot;):</pre></li>
                
                  <li onclick="toggle('pre139813628433152', 'post139813628433152')"><pre>                    field_names.add(field.attname)</pre></li>
                
                  <li onclick="toggle('pre139813628433152', 'post139813628433152')"><pre>            loaded_fields = field_names.difference(deferred_fields)</pre></li>
                
                  <li onclick="toggle('pre139813628433152', 'post139813628433152')"><pre>            if loaded_fields:</pre></li>
                
                  <li onclick="toggle('pre139813628433152', 'post139813628433152')"><pre>                update_fields = frozenset(loaded_fields)</pre></li>
                
                  <li onclick="toggle('pre139813628433152', 'post139813628433152')"><pre></pre></li>
                
                </ol>
              
              <ol start="814" class="context-line">
                <li onclick="toggle('pre139813628433152', 'post139813628433152')"><pre>        self.save_base(</pre> <span>…</span></li>
              </ol>
              
                <ol start='815' class="post-context" id="post139813628433152">
                  
                  <li onclick="toggle('pre139813628433152', 'post139813628433152')"><pre>            using=using,</pre></li>
                  
                  <li onclick="toggle('pre139813628433152', 'post139813628433152')"><pre>            force_insert=force_insert,</pre></li>
                  
                  <li onclick="toggle('pre139813628433152', 'post139813628433152')"><pre>            force_update=force_update,</pre></li>
                  
                  <li onclick="toggle('pre139813628433152', 'post139813628433152')"><pre>            update_fields=update_fields,</pre></li>
                  
                  <li onclick="toggle('pre139813628433152', 'post139813628433152')"><pre>        )</pre></li>
                  
                  <li onclick="toggle('pre139813628433152', 'post139813628433152')"><pre></pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v139813628433152">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>deferred_fields</td>
                    <td class="code"><pre>set()</pre></td>
                  </tr>
                
                  <tr>
                    <td>force_insert</td>
                    <td class="code"><pre>True</pre></td>
                  </tr>
                
                  <tr>
                    <td>force_update</td>
                    <td class="code"><pre>False</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;Message: 5588988562749 - 2023-05-01 - 0&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>update_fields</td>
                    <td class="code"><pre>None</pre></td>
                  </tr>
                
                  <tr>
                    <td>using</td>
                    <td class="code"><pre>&#x27;default&#x27;</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
        <li class="frame django">
          
            <code class="fname">/home/jpfilho/.local/lib/python3.10/site-packages/django/db/models/base.py</code>, line 877, in save_base
          

          
            <div class="context" id="c139813535297088">
              
                <ol start="870" class="pre-context" id="pre139813535297088">
                
                  <li onclick="toggle('pre139813535297088', 'post139813535297088')"><pre>            context_manager = transaction.atomic(using=using, savepoint=False)</pre></li>
                
                  <li onclick="toggle('pre139813535297088', 'post139813535297088')"><pre>        else:</pre></li>
                
                  <li onclick="toggle('pre139813535297088', 'post139813535297088')"><pre>            context_manager = transaction.mark_for_rollback_on_error(using=using)</pre></li>
                
                  <li onclick="toggle('pre139813535297088', 'post139813535297088')"><pre>        with context_manager:</pre></li>
                
                  <li onclick="toggle('pre139813535297088', 'post139813535297088')"><pre>            parent_inserted = False</pre></li>
                
                  <li onclick="toggle('pre139813535297088', 'post139813535297088')"><pre>            if not raw:</pre></li>
                
                  <li onclick="toggle('pre139813535297088', 'post139813535297088')"><pre>                parent_inserted = self._save_parents(cls, using, update_fields)</pre></li>
                
                </ol>
              
              <ol start="877" class="context-line">
                <li onclick="toggle('pre139813535297088', 'post139813535297088')"><pre>            updated = self._save_table(</pre> <span>…</span></li>
              </ol>
              
                <ol start='878' class="post-context" id="post139813535297088">
                  
                  <li onclick="toggle('pre139813535297088', 'post139813535297088')"><pre>                raw,</pre></li>
                  
                  <li onclick="toggle('pre139813535297088', 'post139813535297088')"><pre>                cls,</pre></li>
                  
                  <li onclick="toggle('pre139813535297088', 'post139813535297088')"><pre>                force_insert or parent_inserted,</pre></li>
                  
                  <li onclick="toggle('pre139813535297088', 'post139813535297088')"><pre>                force_update,</pre></li>
                  
                  <li onclick="toggle('pre139813535297088', 'post139813535297088')"><pre>                using,</pre></li>
                  
                  <li onclick="toggle('pre139813535297088', 'post139813535297088')"><pre>                update_fields,</pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v139813535297088">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>cls</td>
                    <td class="code"><pre>&lt;class &#x27;messages_api.models.Message&#x27;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>context_manager</td>
                    <td class="code"><pre>&lt;contextlib._GeneratorContextManager object at 0x7f28e5a0d7b0&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>force_insert</td>
                    <td class="code"><pre>True</pre></td>
                  </tr>
                
                  <tr>
                    <td>force_update</td>
                    <td class="code"><pre>False</pre></td>
                  </tr>
                
                  <tr>
                    <td>meta</td>
                    <td class="code"><pre>&lt;Options for Message&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>origin</td>
                    <td class="code"><pre>&lt;class &#x27;messages_api.models.Message&#x27;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>parent_inserted</td>
                    <td class="code"><pre>False</pre></td>
                  </tr>
                
                  <tr>
                    <td>raw</td>
                    <td class="code"><pre>False</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;Message: 5588988562749 - 2023-05-01 - 0&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>update_fields</td>
                    <td class="code"><pre>None</pre></td>
                  </tr>
                
                  <tr>
                    <td>using</td>
                    <td class="code"><pre>&#x27;default&#x27;</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
        <li class="frame django">
          
            <code class="fname">/home/jpfilho/.local/lib/python3.10/site-packages/django/db/models/base.py</code>, line 1020, in _save_table
          

          
            <div class="context" id="c139813535300288">
              
                <ol start="1013" class="pre-context" id="pre139813535300288">
                
                  <li onclick="toggle('pre139813535300288', 'post139813535300288')"><pre>                    )[&quot;_order__max&quot;]</pre></li>
                
                  <li onclick="toggle('pre139813535300288', 'post139813535300288')"><pre>                )</pre></li>
                
                  <li onclick="toggle('pre139813535300288', 'post139813535300288')"><pre>            fields = meta.local_concrete_fields</pre></li>
                
                  <li onclick="toggle('pre139813535300288', 'post139813535300288')"><pre>            if not pk_set:</pre></li>
                
                  <li onclick="toggle('pre139813535300288', 'post139813535300288')"><pre>                fields = [f for f in fields if f is not meta.auto_field]</pre></li>
                
                  <li onclick="toggle('pre139813535300288', 'post139813535300288')"><pre></pre></li>
                
                  <li onclick="toggle('pre139813535300288', 'post139813535300288')"><pre>            returning_fields = meta.db_returning_fields</pre></li>
                
                </ol>
              
              <ol start="1020" class="context-line">
                <li onclick="toggle('pre139813535300288', 'post139813535300288')"><pre>            results = self._do_insert(</pre> <span>…</span></li>
              </ol>
              
                <ol start='1021' class="post-context" id="post139813535300288">
                  
                  <li onclick="toggle('pre139813535300288', 'post139813535300288')"><pre>                cls._base_manager, using, fields, returning_fields, raw</pre></li>
                  
                  <li onclick="toggle('pre139813535300288', 'post139813535300288')"><pre>            )</pre></li>
                  
                  <li onclick="toggle('pre139813535300288', 'post139813535300288')"><pre>            if results:</pre></li>
                  
                  <li onclick="toggle('pre139813535300288', 'post139813535300288')"><pre>                for value, field in zip(results[0], returning_fields):</pre></li>
                  
                  <li onclick="toggle('pre139813535300288', 'post139813535300288')"><pre>                    setattr(self, field.attname, value)</pre></li>
                  
                  <li onclick="toggle('pre139813535300288', 'post139813535300288')"><pre>        return updated</pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v139813535300288">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>cls</td>
                    <td class="code"><pre>&lt;class &#x27;messages_api.models.Message&#x27;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>fields</td>
                    <td class="code"><pre>(&lt;django.db.models.fields.CharField: message_id&gt;,
 &lt;django.db.models.fields.CharField: contact_id&gt;,
 &lt;django.db.models.fields.CharField: contact_number&gt;,
 &lt;django.db.models.fields.DateField: period&gt;,
 &lt;django.db.models.fields.DateTimeField: timestamp&gt;,
 &lt;django.db.models.fields.IntegerField: status&gt;,
 &lt;django.db.models.fields.CharField: ticket_service_id&gt;,
 &lt;django.db.models.fields.CharField: message_type&gt;,
 &lt;django.db.models.fields.BooleanField: is_from_me&gt;,
 &lt;django.db.models.fields.IntegerField: retries&gt;)</pre></td>
                  </tr>
                
                  <tr>
                    <td>force_insert</td>
                    <td class="code"><pre>True</pre></td>
                  </tr>
                
                  <tr>
                    <td>force_update</td>
                    <td class="code"><pre>False</pre></td>
                  </tr>
                
                  <tr>
                    <td>meta</td>
                    <td class="code"><pre>&lt;Options for Message&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>non_pks</td>
                    <td class="code"><pre>[&lt;django.db.models.fields.CharField: contact_id&gt;,
 &lt;django.db.models.fields.CharField: contact_number&gt;,
 &lt;django.db.models.fields.DateField: period&gt;,
 &lt;django.db.models.fields.DateTimeField: timestamp&gt;,
 &lt;django.db.models.fields.IntegerField: status&gt;,
 &lt;django.db.models.fields.CharField: ticket_service_id&gt;,
 &lt;django.db.models.fields.CharField: message_type&gt;,
 &lt;django.db.models.fields.BooleanField: is_from_me&gt;,
 &lt;django.db.models.fields.IntegerField: retries&gt;]</pre></td>
                  </tr>
                
                  <tr>
                    <td>pk_set</td>
                    <td class="code"><pre>True</pre></td>
                  </tr>
                
                  <tr>
                    <td>pk_val</td>
                    <td class="code"><pre>&#x27;0cdaf52c-be39-430f-be67-3c993fc570df&#x27;</pre></td>
                  </tr>
                
                  <tr>
                    <td>raw</td>
                    <td class="code"><pre>False</pre></td>
                  </tr>
                
                  <tr>
                    <td>returning_fields</td>
                    <td class="code"><pre>[]</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;Message: 5588988562749 - 2023-05-01 - 0&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>update_fields</td>
                    <td class="code"><pre>None</pre></td>
                  </tr>
                
                  <tr>
                    <td>updated</td>
                    <td class="code"><pre>False</pre></td>
                  </tr>
                
                  <tr>
                    <td>using</td>
                    <td class="code"><pre>&#x27;default&#x27;</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
        <li class="frame django">
          
            <code class="fname">/home/jpfilho/.local/lib/python3.10/site-packages/django/db/models/base.py</code>, line 1061, in _do_insert
          

          
            <div class="context" id="c139813535510400">
              
                <ol start="1054" class="pre-context" id="pre139813535510400">
                
                  <li onclick="toggle('pre139813535510400', 'post139813535510400')"><pre>        return filtered._update(values) &gt; 0</pre></li>
                
                  <li onclick="toggle('pre139813535510400', 'post139813535510400')"><pre></pre></li>
                
                  <li onclick="toggle('pre139813535510400', 'post139813535510400')"><pre>    def _do_insert(self, manager, using, fields, returning_fields, raw):</pre></li>
                
                  <li onclick="toggle('pre139813535510400', 'post139813535510400')"><pre>        &quot;&quot;&quot;</pre></li>
                
                  <li onclick="toggle('pre139813535510400', 'post139813535510400')"><pre>        Do an INSERT. If returning_fields is defined then this method should</pre></li>
                
                  <li onclick="toggle('pre139813535510400', 'post139813535510400')"><pre>        return the newly created data for the model.</pre></li>
                
                  <li onclick="toggle('pre139813535510400', 'post139813535510400')"><pre>        &quot;&quot;&quot;</pre></li>
                
                </ol>
              
              <ol start="1061" class="context-line">
                <li onclick="toggle('pre139813535510400', 'post139813535510400')"><pre>        return manager._insert(</pre> <span>…</span></li>
              </ol>
              
                <ol start='1062' class="post-context" id="post139813535510400">
                  
                  <li onclick="toggle('pre139813535510400', 'post139813535510400')"><pre>            [self],</pre></li>
                  
                  <li onclick="toggle('pre139813535510400', 'post139813535510400')"><pre>            fields=fields,</pre></li>
                  
                  <li onclick="toggle('pre139813535510400', 'post139813535510400')"><pre>            returning_fields=returning_fields,</pre></li>
                  
                  <li onclick="toggle('pre139813535510400', 'post139813535510400')"><pre>            using=using,</pre></li>
                  
                  <li onclick="toggle('pre139813535510400', 'post139813535510400')"><pre>            raw=raw,</pre></li>
                  
                  <li onclick="toggle('pre139813535510400', 'post139813535510400')"><pre>        )</pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v139813535510400">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>fields</td>
                    <td class="code"><pre>(&lt;django.db.models.fields.CharField: message_id&gt;,
 &lt;django.db.models.fields.CharField: contact_id&gt;,
 &lt;django.db.models.fields.CharField: contact_number&gt;,
 &lt;django.db.models.fields.DateField: period&gt;,
 &lt;django.db.models.fields.DateTimeField: timestamp&gt;,
 &lt;django.db.models.fields.IntegerField: status&gt;,
 &lt;django.db.models.fields.CharField: ticket_service_id&gt;,
 &lt;django.db.models.fields.CharField: message_type&gt;,
 &lt;django.db.models.fields.BooleanField: is_from_me&gt;,
 &lt;django.db.models.fields.IntegerField: retries&gt;)</pre></td>
                  </tr>
                
                  <tr>
                    <td>manager</td>
                    <td class="code"><pre>&lt;django.db.models.manager.Manager object at 0x7f28e5aaaa40&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>raw</td>
                    <td class="code"><pre>False</pre></td>
                  </tr>
                
                  <tr>
                    <td>returning_fields</td>
                    <td class="code"><pre>[]</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;Message: 5588988562749 - 2023-05-01 - 0&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>using</td>
                    <td class="code"><pre>&#x27;default&#x27;</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
        <li class="frame django">
          
            <code class="fname">/home/jpfilho/.local/lib/python3.10/site-packages/django/db/models/manager.py</code>, line 87, in manager_method
          

          
            <div class="context" id="c139813535510144">
              
                <ol start="80" class="pre-context" id="pre139813535510144">
                
                  <li onclick="toggle('pre139813535510144', 'post139813535510144')"><pre>        return []</pre></li>
                
                  <li onclick="toggle('pre139813535510144', 'post139813535510144')"><pre></pre></li>
                
                  <li onclick="toggle('pre139813535510144', 'post139813535510144')"><pre>    @classmethod</pre></li>
                
                  <li onclick="toggle('pre139813535510144', 'post139813535510144')"><pre>    def _get_queryset_methods(cls, queryset_class):</pre></li>
                
                  <li onclick="toggle('pre139813535510144', 'post139813535510144')"><pre>        def create_method(name, method):</pre></li>
                
                  <li onclick="toggle('pre139813535510144', 'post139813535510144')"><pre>            @wraps(method)</pre></li>
                
                  <li onclick="toggle('pre139813535510144', 'post139813535510144')"><pre>            def manager_method(self, *args, **kwargs):</pre></li>
                
                </ol>
              
              <ol start="87" class="context-line">
                <li onclick="toggle('pre139813535510144', 'post139813535510144')"><pre>                return getattr(self.get_queryset(), name)(*args, **kwargs)</pre> <span>…</span></li>
              </ol>
              
                <ol start='88' class="post-context" id="post139813535510144">
                  
                  <li onclick="toggle('pre139813535510144', 'post139813535510144')"><pre></pre></li>
                  
                  <li onclick="toggle('pre139813535510144', 'post139813535510144')"><pre>            return manager_method</pre></li>
                  
                  <li onclick="toggle('pre139813535510144', 'post139813535510144')"><pre></pre></li>
                  
                  <li onclick="toggle('pre139813535510144', 'post139813535510144')"><pre>        new_methods = {}</pre></li>
                  
                  <li onclick="toggle('pre139813535510144', 'post139813535510144')"><pre>        for name, method in inspect.getmembers(</pre></li>
                  
                  <li onclick="toggle('pre139813535510144', 'post139813535510144')"><pre>            queryset_class, predicate=inspect.isfunction</pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v139813535510144">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>args</td>
                    <td class="code"><pre>([&lt;Message: 5588988562749 - 2023-05-01 - 0&gt;],)</pre></td>
                  </tr>
                
                  <tr>
                    <td>kwargs</td>
                    <td class="code"><pre>{&#x27;fields&#x27;: (&lt;django.db.models.fields.CharField: message_id&gt;,
            &lt;django.db.models.fields.CharField: contact_id&gt;,
            &lt;django.db.models.fields.CharField: contact_number&gt;,
            &lt;django.db.models.fields.DateField: period&gt;,
            &lt;django.db.models.fields.DateTimeField: timestamp&gt;,
            &lt;django.db.models.fields.IntegerField: status&gt;,
            &lt;django.db.models.fields.CharField: ticket_service_id&gt;,
            &lt;django.db.models.fields.CharField: message_type&gt;,
            &lt;django.db.models.fields.BooleanField: is_from_me&gt;,
            &lt;django.db.models.fields.IntegerField: retries&gt;),
 &#x27;raw&#x27;: False,
 &#x27;returning_fields&#x27;: [],
 &#x27;using&#x27;: &#x27;default&#x27;}</pre></td>
                  </tr>
                
                  <tr>
                    <td>name</td>
                    <td class="code"><pre>&#x27;_insert&#x27;</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;django.db.models.manager.Manager object at 0x7f28e5aaaa40&gt;</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
        <li class="frame django">
          
            <code class="fname">/home/jpfilho/.local/lib/python3.10/site-packages/django/db/models/query.py</code>, line 1805, in _insert
          

          
            <div class="context" id="c139813535297920">
              
                <ol start="1798" class="pre-context" id="pre139813535297920">
                
                  <li onclick="toggle('pre139813535297920', 'post139813535297920')"><pre>        query = sql.InsertQuery(</pre></li>
                
                  <li onclick="toggle('pre139813535297920', 'post139813535297920')"><pre>            self.model,</pre></li>
                
                  <li onclick="toggle('pre139813535297920', 'post139813535297920')"><pre>            on_conflict=on_conflict,</pre></li>
                
                  <li onclick="toggle('pre139813535297920', 'post139813535297920')"><pre>            update_fields=update_fields,</pre></li>
                
                  <li onclick="toggle('pre139813535297920', 'post139813535297920')"><pre>            unique_fields=unique_fields,</pre></li>
                
                  <li onclick="toggle('pre139813535297920', 'post139813535297920')"><pre>        )</pre></li>
                
                  <li onclick="toggle('pre139813535297920', 'post139813535297920')"><pre>        query.insert_values(fields, objs, raw=raw)</pre></li>
                
                </ol>
              
              <ol start="1805" class="context-line">
                <li onclick="toggle('pre139813535297920', 'post139813535297920')"><pre>        return query.get_compiler(using=using).execute_sql(returning_fields)</pre> <span>…</span></li>
              </ol>
              
                <ol start='1806' class="post-context" id="post139813535297920">
                  
                  <li onclick="toggle('pre139813535297920', 'post139813535297920')"><pre></pre></li>
                  
                  <li onclick="toggle('pre139813535297920', 'post139813535297920')"><pre>    _insert.alters_data = True</pre></li>
                  
                  <li onclick="toggle('pre139813535297920', 'post139813535297920')"><pre>    _insert.queryset_only = False</pre></li>
                  
                  <li onclick="toggle('pre139813535297920', 'post139813535297920')"><pre></pre></li>
                  
                  <li onclick="toggle('pre139813535297920', 'post139813535297920')"><pre>    def _batched_insert(</pre></li>
                  
                  <li onclick="toggle('pre139813535297920', 'post139813535297920')"><pre>        self,</pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v139813535297920">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>fields</td>
                    <td class="code"><pre>(&lt;django.db.models.fields.CharField: message_id&gt;,
 &lt;django.db.models.fields.CharField: contact_id&gt;,
 &lt;django.db.models.fields.CharField: contact_number&gt;,
 &lt;django.db.models.fields.DateField: period&gt;,
 &lt;django.db.models.fields.DateTimeField: timestamp&gt;,
 &lt;django.db.models.fields.IntegerField: status&gt;,
 &lt;django.db.models.fields.CharField: ticket_service_id&gt;,
 &lt;django.db.models.fields.CharField: message_type&gt;,
 &lt;django.db.models.fields.BooleanField: is_from_me&gt;,
 &lt;django.db.models.fields.IntegerField: retries&gt;)</pre></td>
                  </tr>
                
                  <tr>
                    <td>objs</td>
                    <td class="code"><pre>[&lt;Message: 5588988562749 - 2023-05-01 - 0&gt;]</pre></td>
                  </tr>
                
                  <tr>
                    <td>on_conflict</td>
                    <td class="code"><pre>None</pre></td>
                  </tr>
                
                  <tr>
                    <td>query</td>
                    <td class="code"><pre>&lt;django.db.models.sql.subqueries.InsertQuery object at 0x7f28e5a0c040&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>raw</td>
                    <td class="code"><pre>False</pre></td>
                  </tr>
                
                  <tr>
                    <td>returning_fields</td>
                    <td class="code"><pre>[]</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;QuerySet [&lt;Message: 5588988562749 - 2023-05-01 - 0&gt;, &lt;Message: 5588988562749 - 2023-05-01 - 0&gt;, &lt;Message: 5588988562749 - 2023-05-01 - 0&gt;, &lt;Message: 5588988562749 - 2023-05-01 - 0&gt;, &lt;Message: 5588988562749 - 2023-05-01 - 0&gt;, &lt;Message: 5588988562749 - 2023-05-01 - 0&gt;, &lt;Message: 5588988562749 - 2023-05-01 - 0&gt;, &lt;Message: 5588988562749 - 2023-05-01 - 0&gt;]&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>unique_fields</td>
                    <td class="code"><pre>None</pre></td>
                  </tr>
                
                  <tr>
                    <td>update_fields</td>
                    <td class="code"><pre>None</pre></td>
                  </tr>
                
                  <tr>
                    <td>using</td>
                    <td class="code"><pre>&#x27;default&#x27;</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
        <li class="frame django">
          
            <code class="fname">/home/jpfilho/.local/lib/python3.10/site-packages/django/db/models/sql/compiler.py</code>, line 1819, in execute_sql
          

          
            <div class="context" id="c139813535298944">
              
                <ol start="1812" class="pre-context" id="pre139813535298944">
                
                  <li onclick="toggle('pre139813535298944', 'post139813535298944')"><pre>            returning_fields</pre></li>
                
                  <li onclick="toggle('pre139813535298944', 'post139813535298944')"><pre>            and len(self.query.objs) != 1</pre></li>
                
                  <li onclick="toggle('pre139813535298944', 'post139813535298944')"><pre>            and not self.connection.features.can_return_rows_from_bulk_insert</pre></li>
                
                  <li onclick="toggle('pre139813535298944', 'post139813535298944')"><pre>        )</pre></li>
                
                  <li onclick="toggle('pre139813535298944', 'post139813535298944')"><pre>        opts = self.query.get_meta()</pre></li>
                
                  <li onclick="toggle('pre139813535298944', 'post139813535298944')"><pre>        self.returning_fields = returning_fields</pre></li>
                
                  <li onclick="toggle('pre139813535298944', 'post139813535298944')"><pre>        with self.connection.cursor() as cursor:</pre></li>
                
                </ol>
              
              <ol start="1819" class="context-line">
                <li onclick="toggle('pre139813535298944', 'post139813535298944')"><pre>            for sql, params in self.as_sql():</pre> <span>…</span></li>
              </ol>
              
                <ol start='1820' class="post-context" id="post139813535298944">
                  
                  <li onclick="toggle('pre139813535298944', 'post139813535298944')"><pre>                cursor.execute(sql, params)</pre></li>
                  
                  <li onclick="toggle('pre139813535298944', 'post139813535298944')"><pre>            if not self.returning_fields:</pre></li>
                  
                  <li onclick="toggle('pre139813535298944', 'post139813535298944')"><pre>                return []</pre></li>
                  
                  <li onclick="toggle('pre139813535298944', 'post139813535298944')"><pre>            if (</pre></li>
                  
                  <li onclick="toggle('pre139813535298944', 'post139813535298944')"><pre>                self.connection.features.can_return_rows_from_bulk_insert</pre></li>
                  
                  <li onclick="toggle('pre139813535298944', 'post139813535298944')"><pre>                and len(self.query.objs) &gt; 1</pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v139813535298944">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>cursor</td>
                    <td class="code"><pre>&lt;django.db.backends.postgresql.base.CursorDebugWrapper object at 0x7f28e292dde0&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>opts</td>
                    <td class="code"><pre>&lt;Options for Message&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>returning_fields</td>
                    <td class="code"><pre>[]</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;SQLInsertCompiler model=Message connection=&lt;DatabaseWrapper vendor=&#x27;postgresql&#x27; alias=&#x27;default&#x27;&gt; using=&#x27;default&#x27;&gt;</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
        <li class="frame django">
          
            <code class="fname">/home/jpfilho/.local/lib/python3.10/site-packages/django/db/models/sql/compiler.py</code>, line 1743, in as_sql
          

          
            <div class="context" id="c139813535292160">
              
                <ol start="1736" class="pre-context" id="pre139813535292160">
                
                  <li onclick="toggle('pre139813535292160', 'post139813535292160')"><pre>            on_conflict=self.query.on_conflict,</pre></li>
                
                  <li onclick="toggle('pre139813535292160', 'post139813535292160')"><pre>        )</pre></li>
                
                  <li onclick="toggle('pre139813535292160', 'post139813535292160')"><pre>        result = [&quot;%s %s&quot; % (insert_statement, qn(opts.db_table))]</pre></li>
                
                  <li onclick="toggle('pre139813535292160', 'post139813535292160')"><pre>        fields = self.query.fields or [opts.pk]</pre></li>
                
                  <li onclick="toggle('pre139813535292160', 'post139813535292160')"><pre>        result.append(&quot;(%s)&quot; % &quot;, &quot;.join(qn(f.column) for f in fields))</pre></li>
                
                  <li onclick="toggle('pre139813535292160', 'post139813535292160')"><pre></pre></li>
                
                  <li onclick="toggle('pre139813535292160', 'post139813535292160')"><pre>        if self.query.fields:</pre></li>
                
                </ol>
              
              <ol start="1743" class="context-line">
                <li onclick="toggle('pre139813535292160', 'post139813535292160')"><pre>            value_rows = [</pre> <span>…</span></li>
              </ol>
              
                <ol start='1744' class="post-context" id="post139813535292160">
                  
                  <li onclick="toggle('pre139813535292160', 'post139813535292160')"><pre>                [</pre></li>
                  
                  <li onclick="toggle('pre139813535292160', 'post139813535292160')"><pre>                    self.prepare_value(field, self.pre_save_val(field, obj))</pre></li>
                  
                  <li onclick="toggle('pre139813535292160', 'post139813535292160')"><pre>                    for field in fields</pre></li>
                  
                  <li onclick="toggle('pre139813535292160', 'post139813535292160')"><pre>                ]</pre></li>
                  
                  <li onclick="toggle('pre139813535292160', 'post139813535292160')"><pre>                for obj in self.query.objs</pre></li>
                  
                  <li onclick="toggle('pre139813535292160', 'post139813535292160')"><pre>            ]</pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v139813535292160">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>fields</td>
                    <td class="code"><pre>(&lt;django.db.models.fields.CharField: message_id&gt;,
 &lt;django.db.models.fields.CharField: contact_id&gt;,
 &lt;django.db.models.fields.CharField: contact_number&gt;,
 &lt;django.db.models.fields.DateField: period&gt;,
 &lt;django.db.models.fields.DateTimeField: timestamp&gt;,
 &lt;django.db.models.fields.IntegerField: status&gt;,
 &lt;django.db.models.fields.CharField: ticket_service_id&gt;,
 &lt;django.db.models.fields.CharField: message_type&gt;,
 &lt;django.db.models.fields.BooleanField: is_from_me&gt;,
 &lt;django.db.models.fields.IntegerField: retries&gt;)</pre></td>
                  </tr>
                
                  <tr>
                    <td>insert_statement</td>
                    <td class="code"><pre>&#x27;INSERT INTO&#x27;</pre></td>
                  </tr>
                
                  <tr>
                    <td>opts</td>
                    <td class="code"><pre>&lt;Options for Message&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>qn</td>
                    <td class="code"><pre>&lt;bound method DatabaseOperations.quote_name of &lt;django.db.backends.postgresql.operations.DatabaseOperations object at 0x7f28e5af5e10&gt;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>result</td>
                    <td class="code"><pre>[&#x27;INSERT INTO &quot;messages_api_message&quot;&#x27;,
 &#x27;(&quot;message_id&quot;, &quot;contact_id&quot;, &quot;contact_number&quot;, &quot;period&quot;, &quot;timestamp&quot;, &#x27;
 &#x27;&quot;status&quot;, &quot;ticket_service_id&quot;, &quot;message_type&quot;, &quot;is_from_me&quot;, &quot;retries&quot;)&#x27;]</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;SQLInsertCompiler model=Message connection=&lt;DatabaseWrapper vendor=&#x27;postgresql&#x27; alias=&#x27;default&#x27;&gt; using=&#x27;default&#x27;&gt;</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
        <li class="frame django">
          
            <code class="fname">/home/jpfilho/.local/lib/python3.10/site-packages/django/db/models/sql/compiler.py</code>, line 1744, in &lt;listcomp&gt;
          

          
            <div class="context" id="c139813535133952">
              
                <ol start="1737" class="pre-context" id="pre139813535133952">
                
                  <li onclick="toggle('pre139813535133952', 'post139813535133952')"><pre>        )</pre></li>
                
                  <li onclick="toggle('pre139813535133952', 'post139813535133952')"><pre>        result = [&quot;%s %s&quot; % (insert_statement, qn(opts.db_table))]</pre></li>
                
                  <li onclick="toggle('pre139813535133952', 'post139813535133952')"><pre>        fields = self.query.fields or [opts.pk]</pre></li>
                
                  <li onclick="toggle('pre139813535133952', 'post139813535133952')"><pre>        result.append(&quot;(%s)&quot; % &quot;, &quot;.join(qn(f.column) for f in fields))</pre></li>
                
                  <li onclick="toggle('pre139813535133952', 'post139813535133952')"><pre></pre></li>
                
                  <li onclick="toggle('pre139813535133952', 'post139813535133952')"><pre>        if self.query.fields:</pre></li>
                
                  <li onclick="toggle('pre139813535133952', 'post139813535133952')"><pre>            value_rows = [</pre></li>
                
                </ol>
              
              <ol start="1744" class="context-line">
                <li onclick="toggle('pre139813535133952', 'post139813535133952')"><pre>                [</pre> <span>…</span></li>
              </ol>
              
                <ol start='1745' class="post-context" id="post139813535133952">
                  
                  <li onclick="toggle('pre139813535133952', 'post139813535133952')"><pre>                    self.prepare_value(field, self.pre_save_val(field, obj))</pre></li>
                  
                  <li onclick="toggle('pre139813535133952', 'post139813535133952')"><pre>                    for field in fields</pre></li>
                  
                  <li onclick="toggle('pre139813535133952', 'post139813535133952')"><pre>                ]</pre></li>
                  
                  <li onclick="toggle('pre139813535133952', 'post139813535133952')"><pre>                for obj in self.query.objs</pre></li>
                  
                  <li onclick="toggle('pre139813535133952', 'post139813535133952')"><pre>            ]</pre></li>
                  
                  <li onclick="toggle('pre139813535133952', 'post139813535133952')"><pre>        else:</pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v139813535133952">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>.0</td>
                    <td class="code"><pre>&lt;list_iterator object at 0x7f28e5af5810&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>fields</td>
                    <td class="code"><pre>(&lt;django.db.models.fields.CharField: message_id&gt;,
 &lt;django.db.models.fields.CharField: contact_id&gt;,
 &lt;django.db.models.fields.CharField: contact_number&gt;,
 &lt;django.db.models.fields.DateField: period&gt;,
 &lt;django.db.models.fields.DateTimeField: timestamp&gt;,
 &lt;django.db.models.fields.IntegerField: status&gt;,
 &lt;django.db.models.fields.CharField: ticket_service_id&gt;,
 &lt;django.db.models.fields.CharField: message_type&gt;,
 &lt;django.db.models.fields.BooleanField: is_from_me&gt;,
 &lt;django.db.models.fields.IntegerField: retries&gt;)</pre></td>
                  </tr>
                
                  <tr>
                    <td>obj</td>
                    <td class="code"><pre>&lt;Message: 5588988562749 - 2023-05-01 - 0&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;SQLInsertCompiler model=Message connection=&lt;DatabaseWrapper vendor=&#x27;postgresql&#x27; alias=&#x27;default&#x27;&gt; using=&#x27;default&#x27;&gt;</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
        <li class="frame django">
          
            <code class="fname">/home/jpfilho/.local/lib/python3.10/site-packages/django/db/models/sql/compiler.py</code>, line 1745, in &lt;listcomp&gt;
          

          
            <div class="context" id="c139813535301440">
              
                <ol start="1738" class="pre-context" id="pre139813535301440">
                
                  <li onclick="toggle('pre139813535301440', 'post139813535301440')"><pre>        result = [&quot;%s %s&quot; % (insert_statement, qn(opts.db_table))]</pre></li>
                
                  <li onclick="toggle('pre139813535301440', 'post139813535301440')"><pre>        fields = self.query.fields or [opts.pk]</pre></li>
                
                  <li onclick="toggle('pre139813535301440', 'post139813535301440')"><pre>        result.append(&quot;(%s)&quot; % &quot;, &quot;.join(qn(f.column) for f in fields))</pre></li>
                
                  <li onclick="toggle('pre139813535301440', 'post139813535301440')"><pre></pre></li>
                
                  <li onclick="toggle('pre139813535301440', 'post139813535301440')"><pre>        if self.query.fields:</pre></li>
                
                  <li onclick="toggle('pre139813535301440', 'post139813535301440')"><pre>            value_rows = [</pre></li>
                
                  <li onclick="toggle('pre139813535301440', 'post139813535301440')"><pre>                [</pre></li>
                
                </ol>
              
              <ol start="1745" class="context-line">
                <li onclick="toggle('pre139813535301440', 'post139813535301440')"><pre>                    self.prepare_value(field, self.pre_save_val(field, obj))</pre> <span>…</span></li>
              </ol>
              
                <ol start='1746' class="post-context" id="post139813535301440">
                  
                  <li onclick="toggle('pre139813535301440', 'post139813535301440')"><pre>                    for field in fields</pre></li>
                  
                  <li onclick="toggle('pre139813535301440', 'post139813535301440')"><pre>                ]</pre></li>
                  
                  <li onclick="toggle('pre139813535301440', 'post139813535301440')"><pre>                for obj in self.query.objs</pre></li>
                  
                  <li onclick="toggle('pre139813535301440', 'post139813535301440')"><pre>            ]</pre></li>
                  
                  <li onclick="toggle('pre139813535301440', 'post139813535301440')"><pre>        else:</pre></li>
                  
                  <li onclick="toggle('pre139813535301440', 'post139813535301440')"><pre>            # An empty object.</pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v139813535301440">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>.0</td>
                    <td class="code"><pre>&lt;tuple_iterator object at 0x7f28e5af5de0&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>field</td>
                    <td class="code"><pre>&lt;django.db.models.fields.BooleanField: is_from_me&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>obj</td>
                    <td class="code"><pre>&lt;Message: 5588988562749 - 2023-05-01 - 0&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;SQLInsertCompiler model=Message connection=&lt;DatabaseWrapper vendor=&#x27;postgresql&#x27; alias=&#x27;default&#x27;&gt; using=&#x27;default&#x27;&gt;</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
        <li class="frame django">
          
            <code class="fname">/home/jpfilho/.local/lib/python3.10/site-packages/django/db/models/sql/compiler.py</code>, line 1684, in prepare_value
          

          
            <div class="context" id="c139813535287168">
              
                <ol start="1677" class="pre-context" id="pre139813535287168">
                
                  <li onclick="toggle('pre139813535287168', 'post139813535287168')"><pre>                    &quot;(%s=%r).&quot; % (field.name, value)</pre></li>
                
                  <li onclick="toggle('pre139813535287168', 'post139813535287168')"><pre>                )</pre></li>
                
                  <li onclick="toggle('pre139813535287168', 'post139813535287168')"><pre>            if value.contains_over_clause:</pre></li>
                
                  <li onclick="toggle('pre139813535287168', 'post139813535287168')"><pre>                raise FieldError(</pre></li>
                
                  <li onclick="toggle('pre139813535287168', 'post139813535287168')"><pre>                    &quot;Window expressions are not allowed in this query (%s=%r).&quot;</pre></li>
                
                  <li onclick="toggle('pre139813535287168', 'post139813535287168')"><pre>                    % (field.name, value)</pre></li>
                
                  <li onclick="toggle('pre139813535287168', 'post139813535287168')"><pre>                )</pre></li>
                
                </ol>
              
              <ol start="1684" class="context-line">
                <li onclick="toggle('pre139813535287168', 'post139813535287168')"><pre>        return field.get_db_prep_save(value, connection=self.connection)</pre> <span>…</span></li>
              </ol>
              
                <ol start='1685' class="post-context" id="post139813535287168">
                  
                  <li onclick="toggle('pre139813535287168', 'post139813535287168')"><pre></pre></li>
                  
                  <li onclick="toggle('pre139813535287168', 'post139813535287168')"><pre>    def pre_save_val(self, field, obj):</pre></li>
                  
                  <li onclick="toggle('pre139813535287168', 'post139813535287168')"><pre>        &quot;&quot;&quot;</pre></li>
                  
                  <li onclick="toggle('pre139813535287168', 'post139813535287168')"><pre>        Get the given field&#x27;s value off the given obj. pre_save() is used for</pre></li>
                  
                  <li onclick="toggle('pre139813535287168', 'post139813535287168')"><pre>        things like auto_now on DateTimeField. Skip it if this is a raw query.</pre></li>
                  
                  <li onclick="toggle('pre139813535287168', 'post139813535287168')"><pre>        &quot;&quot;&quot;</pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v139813535287168">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>field</td>
                    <td class="code"><pre>&lt;django.db.models.fields.BooleanField: is_from_me&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;SQLInsertCompiler model=Message connection=&lt;DatabaseWrapper vendor=&#x27;postgresql&#x27; alias=&#x27;default&#x27;&gt; using=&#x27;default&#x27;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>value</td>
                    <td class="code"><pre>[True]</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
        <li class="frame django">
          
            <code class="fname">/home/jpfilho/.local/lib/python3.10/site-packages/django/db/models/fields/__init__.py</code>, line 954, in get_db_prep_save
          

          
            <div class="context" id="c139813535299968">
              
                <ol start="947" class="pre-context" id="pre139813535299968">
                
                  <li onclick="toggle('pre139813535299968', 'post139813535299968')"><pre>            value = self.get_prep_value(value)</pre></li>
                
                  <li onclick="toggle('pre139813535299968', 'post139813535299968')"><pre>        return value</pre></li>
                
                  <li onclick="toggle('pre139813535299968', 'post139813535299968')"><pre></pre></li>
                
                  <li onclick="toggle('pre139813535299968', 'post139813535299968')"><pre>    def get_db_prep_save(self, value, connection):</pre></li>
                
                  <li onclick="toggle('pre139813535299968', 'post139813535299968')"><pre>        &quot;&quot;&quot;Return field&#x27;s value prepared for saving into a database.&quot;&quot;&quot;</pre></li>
                
                  <li onclick="toggle('pre139813535299968', 'post139813535299968')"><pre>        if hasattr(value, &quot;as_sql&quot;):</pre></li>
                
                  <li onclick="toggle('pre139813535299968', 'post139813535299968')"><pre>            return value</pre></li>
                
                </ol>
              
              <ol start="954" class="context-line">
                <li onclick="toggle('pre139813535299968', 'post139813535299968')"><pre>        return self.get_db_prep_value(value, connection=connection, prepared=False)</pre> <span>…</span></li>
              </ol>
              
                <ol start='955' class="post-context" id="post139813535299968">
                  
                  <li onclick="toggle('pre139813535299968', 'post139813535299968')"><pre></pre></li>
                  
                  <li onclick="toggle('pre139813535299968', 'post139813535299968')"><pre>    def has_default(self):</pre></li>
                  
                  <li onclick="toggle('pre139813535299968', 'post139813535299968')"><pre>        &quot;&quot;&quot;Return a boolean of whether this field has a default value.&quot;&quot;&quot;</pre></li>
                  
                  <li onclick="toggle('pre139813535299968', 'post139813535299968')"><pre>        return self.default is not NOT_PROVIDED</pre></li>
                  
                  <li onclick="toggle('pre139813535299968', 'post139813535299968')"><pre></pre></li>
                  
                  <li onclick="toggle('pre139813535299968', 'post139813535299968')"><pre>    def get_default(self):</pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v139813535299968">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>connection</td>
                    <td class="code"><pre>&lt;DatabaseWrapper vendor=&#x27;postgresql&#x27; alias=&#x27;default&#x27;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;django.db.models.fields.BooleanField: is_from_me&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>value</td>
                    <td class="code"><pre>[True]</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
        <li class="frame django">
          
            <code class="fname">/home/jpfilho/.local/lib/python3.10/site-packages/django/db/models/fields/__init__.py</code>, line 947, in get_db_prep_value
          

          
            <div class="context" id="c139813535298176">
              
                <ol start="940" class="pre-context" id="pre139813535298176">
                
                  <li onclick="toggle('pre139813535298176', 'post139813535298176')"><pre>    def get_db_prep_value(self, value, connection, prepared=False):</pre></li>
                
                  <li onclick="toggle('pre139813535298176', 'post139813535298176')"><pre>        &quot;&quot;&quot;</pre></li>
                
                  <li onclick="toggle('pre139813535298176', 'post139813535298176')"><pre>        Return field&#x27;s value prepared for interacting with the database backend.</pre></li>
                
                  <li onclick="toggle('pre139813535298176', 'post139813535298176')"><pre></pre></li>
                
                  <li onclick="toggle('pre139813535298176', 'post139813535298176')"><pre>        Used by the default implementations of get_db_prep_save().</pre></li>
                
                  <li onclick="toggle('pre139813535298176', 'post139813535298176')"><pre>        &quot;&quot;&quot;</pre></li>
                
                  <li onclick="toggle('pre139813535298176', 'post139813535298176')"><pre>        if not prepared:</pre></li>
                
                </ol>
              
              <ol start="947" class="context-line">
                <li onclick="toggle('pre139813535298176', 'post139813535298176')"><pre>            value = self.get_prep_value(value)</pre> <span>…</span></li>
              </ol>
              
                <ol start='948' class="post-context" id="post139813535298176">
                  
                  <li onclick="toggle('pre139813535298176', 'post139813535298176')"><pre>        return value</pre></li>
                  
                  <li onclick="toggle('pre139813535298176', 'post139813535298176')"><pre></pre></li>
                  
                  <li onclick="toggle('pre139813535298176', 'post139813535298176')"><pre>    def get_db_prep_save(self, value, connection):</pre></li>
                  
                  <li onclick="toggle('pre139813535298176', 'post139813535298176')"><pre>        &quot;&quot;&quot;Return field&#x27;s value prepared for saving into a database.&quot;&quot;&quot;</pre></li>
                  
                  <li onclick="toggle('pre139813535298176', 'post139813535298176')"><pre>        if hasattr(value, &quot;as_sql&quot;):</pre></li>
                  
                  <li onclick="toggle('pre139813535298176', 'post139813535298176')"><pre>            return value</pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v139813535298176">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>connection</td>
                    <td class="code"><pre>&lt;DatabaseWrapper vendor=&#x27;postgresql&#x27; alias=&#x27;default&#x27;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>prepared</td>
                    <td class="code"><pre>False</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;django.db.models.fields.BooleanField: is_from_me&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>value</td>
                    <td class="code"><pre>[True]</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
        <li class="frame django">
          
            <code class="fname">/home/jpfilho/.local/lib/python3.10/site-packages/django/db/models/fields/__init__.py</code>, line 1122, in get_prep_value
          

          
            <div class="context" id="c139813535301568">
              
                <ol start="1115" class="pre-context" id="pre139813535301568">
                
                  <li onclick="toggle('pre139813535301568', 'post139813535301568')"><pre>            params={&quot;value&quot;: value},</pre></li>
                
                  <li onclick="toggle('pre139813535301568', 'post139813535301568')"><pre>        )</pre></li>
                
                  <li onclick="toggle('pre139813535301568', 'post139813535301568')"><pre></pre></li>
                
                  <li onclick="toggle('pre139813535301568', 'post139813535301568')"><pre>    def get_prep_value(self, value):</pre></li>
                
                  <li onclick="toggle('pre139813535301568', 'post139813535301568')"><pre>        value = super().get_prep_value(value)</pre></li>
                
                  <li onclick="toggle('pre139813535301568', 'post139813535301568')"><pre>        if value is None:</pre></li>
                
                  <li onclick="toggle('pre139813535301568', 'post139813535301568')"><pre>            return None</pre></li>
                
                </ol>
              
              <ol start="1122" class="context-line">
                <li onclick="toggle('pre139813535301568', 'post139813535301568')"><pre>        return self.to_python(value)</pre> <span>…</span></li>
              </ol>
              
                <ol start='1123' class="post-context" id="post139813535301568">
                  
                  <li onclick="toggle('pre139813535301568', 'post139813535301568')"><pre></pre></li>
                  
                  <li onclick="toggle('pre139813535301568', 'post139813535301568')"><pre>    def formfield(self, **kwargs):</pre></li>
                  
                  <li onclick="toggle('pre139813535301568', 'post139813535301568')"><pre>        if self.choices is not None:</pre></li>
                  
                  <li onclick="toggle('pre139813535301568', 'post139813535301568')"><pre>            include_blank = not (self.has_default() or &quot;initial&quot; in kwargs)</pre></li>
                  
                  <li onclick="toggle('pre139813535301568', 'post139813535301568')"><pre>            defaults = {&quot;choices&quot;: self.get_choices(include_blank=include_blank)}</pre></li>
                  
                  <li onclick="toggle('pre139813535301568', 'post139813535301568')"><pre>        else:</pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v139813535301568">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>__class__</td>
                    <td class="code"><pre>&lt;class &#x27;django.db.models.fields.BooleanField&#x27;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;django.db.models.fields.BooleanField: is_from_me&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>value</td>
                    <td class="code"><pre>[True]</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
        <li class="frame django">
          
            <code class="fname">/home/jpfilho/.local/lib/python3.10/site-packages/django/db/models/fields/__init__.py</code>, line 1112, in to_python
          

          
            <div class="context" id="c139813535286848">
              
                <ol start="1105" class="pre-context" id="pre139813535286848">
                
                  <li onclick="toggle('pre139813535286848', 'post139813535286848')"><pre>        if value in (True, False):</pre></li>
                
                  <li onclick="toggle('pre139813535286848', 'post139813535286848')"><pre>            # 1/0 are equal to True/False. bool() converts former to latter.</pre></li>
                
                  <li onclick="toggle('pre139813535286848', 'post139813535286848')"><pre>            return bool(value)</pre></li>
                
                  <li onclick="toggle('pre139813535286848', 'post139813535286848')"><pre>        if value in (&quot;t&quot;, &quot;True&quot;, &quot;1&quot;):</pre></li>
                
                  <li onclick="toggle('pre139813535286848', 'post139813535286848')"><pre>            return True</pre></li>
                
                  <li onclick="toggle('pre139813535286848', 'post139813535286848')"><pre>        if value in (&quot;f&quot;, &quot;False&quot;, &quot;0&quot;):</pre></li>
                
                  <li onclick="toggle('pre139813535286848', 'post139813535286848')"><pre>            return False</pre></li>
                
                </ol>
              
              <ol start="1112" class="context-line">
                <li onclick="toggle('pre139813535286848', 'post139813535286848')"><pre>        raise exceptions.ValidationError(</pre> <span>…</span></li>
              </ol>
              
                <ol start='1113' class="post-context" id="post139813535286848">
                  
                  <li onclick="toggle('pre139813535286848', 'post139813535286848')"><pre>            self.error_messages[&quot;invalid_nullable&quot; if self.null else &quot;invalid&quot;],</pre></li>
                  
                  <li onclick="toggle('pre139813535286848', 'post139813535286848')"><pre>            code=&quot;invalid&quot;,</pre></li>
                  
                  <li onclick="toggle('pre139813535286848', 'post139813535286848')"><pre>            params={&quot;value&quot;: value},</pre></li>
                  
                  <li onclick="toggle('pre139813535286848', 'post139813535286848')"><pre>        )</pre></li>
                  
                  <li onclick="toggle('pre139813535286848', 'post139813535286848')"><pre></pre></li>
                  
                  <li onclick="toggle('pre139813535286848', 'post139813535286848')"><pre>    def get_prep_value(self, value):</pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v139813535286848">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;django.db.models.fields.BooleanField: is_from_me&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>value</td>
                    <td class="code"><pre>[True]</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
    </ul>
  </div>

  <form action="https://dpaste.com/" name="pasteform" id="pasteform" method="post">
  <div id="pastebinTraceback" class="pastebin">
    <input type="hidden" name="language" value="PythonConsole">
    <input type="hidden" name="title"
      value="ValidationError at /webhook/messages/create">
    <input type="hidden" name="source" value="Django Dpaste Agent">
    <input type="hidden" name="poster" value="Django">
    <textarea name="content" id="traceback_area" cols="140" rows="25">
Environment:


Request Method: POST
Request URL: http://woz.serveo.net/webhook/messages/create?phone=5588988562749&amp;period=05%2F23

Django Version: 4.2.1
Python Version: 3.10.7
Installed Applications:
[&#x27;django.contrib.admin&#x27;,
 &#x27;django.contrib.auth&#x27;,
 &#x27;django.contrib.contenttypes&#x27;,
 &#x27;django.contrib.sessions&#x27;,
 &#x27;django.contrib.messages&#x27;,
 &#x27;django.contrib.staticfiles&#x27;,
 &#x27;drf_yasg&#x27;,
 &#x27;rest_framework&#x27;,
 &#x27;example&#x27;,
 &#x27;messages_api&#x27;,
 &#x27;celery&#x27;,
 &#x27;django_filters&#x27;]
Installed Middleware:
[&#x27;django.middleware.security.SecurityMiddleware&#x27;,
 &#x27;django.contrib.sessions.middleware.SessionMiddleware&#x27;,
 &#x27;django.middleware.common.CommonMiddleware&#x27;,
 &#x27;django.middleware.csrf.CsrfViewMiddleware&#x27;,
 &#x27;django.contrib.auth.middleware.AuthenticationMiddleware&#x27;,
 &#x27;django.contrib.messages.middleware.MessageMiddleware&#x27;,
 &#x27;django.middleware.clickjacking.XFrameOptionsMiddleware&#x27;]



Traceback (most recent call last):
  File "/home/jpfilho/.local/lib/python3.10/site-packages/django/core/handlers/exception.py", line 55, in inner
    response = get_response(request)
  File "/home/jpfilho/.local/lib/python3.10/site-packages/django/core/handlers/base.py", line 197, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/home/jpfilho/.local/lib/python3.10/site-packages/django/views/decorators/csrf.py", line 56, in wrapper_view
    return view_func(*args, **kwargs)
  File "/home/jpfilho/.local/lib/python3.10/site-packages/rest_framework/viewsets.py", line 125, in view
    return self.dispatch(request, *args, **kwargs)
  File "/home/jpfilho/.local/lib/python3.10/site-packages/rest_framework/views.py", line 509, in dispatch
    response = self.handle_exception(exc)
  File "/home/jpfilho/.local/lib/python3.10/site-packages/rest_framework/views.py", line 469, in handle_exception
    self.raise_uncaught_exception(exc)
  File "/home/jpfilho/.local/lib/python3.10/site-packages/rest_framework/views.py", line 480, in raise_uncaught_exception
    raise exc
  File "/home/jpfilho/.local/lib/python3.10/site-packages/rest_framework/views.py", line 506, in dispatch
    response = handler(request, *args, **kwargs)
  File "/home/jpfilho/Documents/code-ws/python/webhook/messages_api/views.py", line 153, in create
    message = Message.objects.create(
  File "/home/jpfilho/.local/lib/python3.10/site-packages/django/db/models/manager.py", line 87, in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
  File "/home/jpfilho/.local/lib/python3.10/site-packages/django/db/models/query.py", line 658, in create
    obj.save(force_insert=True, using=self.db)
  File "/home/jpfilho/.local/lib/python3.10/site-packages/django/db/models/base.py", line 814, in save
    self.save_base(
  File "/home/jpfilho/.local/lib/python3.10/site-packages/django/db/models/base.py", line 877, in save_base
    updated = self._save_table(
  File "/home/jpfilho/.local/lib/python3.10/site-packages/django/db/models/base.py", line 1020, in _save_table
    results = self._do_insert(
  File "/home/jpfilho/.local/lib/python3.10/site-packages/django/db/models/base.py", line 1061, in _do_insert
    return manager._insert(
  File "/home/jpfilho/.local/lib/python3.10/site-packages/django/db/models/manager.py", line 87, in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
  File "/home/jpfilho/.local/lib/python3.10/site-packages/django/db/models/query.py", line 1805, in _insert
    return query.get_compiler(using=using).execute_sql(returning_fields)
  File "/home/jpfilho/.local/lib/python3.10/site-packages/django/db/models/sql/compiler.py", line 1819, in execute_sql
    for sql, params in self.as_sql():
  File "/home/jpfilho/.local/lib/python3.10/site-packages/django/db/models/sql/compiler.py", line 1743, in as_sql
    value_rows = [
  File "/home/jpfilho/.local/lib/python3.10/site-packages/django/db/models/sql/compiler.py", line 1744, in &lt;listcomp&gt;
    [
  File "/home/jpfilho/.local/lib/python3.10/site-packages/django/db/models/sql/compiler.py", line 1745, in &lt;listcomp&gt;
    self.prepare_value(field, self.pre_save_val(field, obj))
  File "/home/jpfilho/.local/lib/python3.10/site-packages/django/db/models/sql/compiler.py", line 1684, in prepare_value
    return field.get_db_prep_save(value, connection=self.connection)
  File "/home/jpfilho/.local/lib/python3.10/site-packages/django/db/models/fields/__init__.py", line 954, in get_db_prep_save
    return self.get_db_prep_value(value, connection=connection, prepared=False)
  File "/home/jpfilho/.local/lib/python3.10/site-packages/django/db/models/fields/__init__.py", line 947, in get_db_prep_value
    value = self.get_prep_value(value)
  File "/home/jpfilho/.local/lib/python3.10/site-packages/django/db/models/fields/__init__.py", line 1122, in get_prep_value
    return self.to_python(value)
  File "/home/jpfilho/.local/lib/python3.10/site-packages/django/db/models/fields/__init__.py", line 1112, in to_python
    raise exceptions.ValidationError(

Exception Type: ValidationError at /webhook/messages/create
Exception Value: [&#x27;o valor “[True]”  deve ser True ou False.&#x27;]
</textarea>
  <br><br>
  <input type="submit" value="Share this traceback on a public website">
  </div>
</form>

</div>


<div id="requestinfo">
  <h2>Request information</h2>


  
    <h3 id="user-info">USER</h3>
    <p>AnonymousUser</p>
  

  <h3 id="get-info">GET</h3>
  
    <table class="req">
      <thead>
        <tr>
          <th>Variable</th>
          <th>Value</th>
        </tr>
      </thead>
      <tbody>
        
          <tr>
            <td>phone</td>
            <td class="code"><pre>&#x27;5588988562749&#x27;</pre></td>
          </tr>
        
          <tr>
            <td>period</td>
            <td class="code"><pre>&#x27;05/23&#x27;</pre></td>
          </tr>
        
      </tbody>
    </table>
  

  <h3 id="post-info">POST</h3>
  
    <p>No POST data</p>
  

  <h3 id="files-info">FILES</h3>
  
    <p>No FILES data</p>
  

  <h3 id="cookie-info">COOKIES</h3>
  
    <p>No cookie data</p>
  

  <h3 id="meta-info">META</h3>
  <table class="req">
    <thead>
      <tr>
        <th>Variable</th>
        <th>Value</th>
      </tr>
    </thead>
    <tbody>
      
        <tr>
          <td>API_URL</td>
          <td class="code"><pre>&#x27;********************&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>BAMF_DESKTOP_FILE_HINT</td>
          <td class="code"><pre>&#x27;/var/lib/snapd/desktop/applications/code_code.desktop&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>CHROME_DESKTOP</td>
          <td class="code"><pre>&#x27;code-url-handler.desktop&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>CLOUDAMQP_URL</td>
          <td class="code"><pre>&#x27;amqps://kzthoddb:3CziblJY4U4tFRNmARuMMdIDu8z53Ql6@fly.rmq.cloudamqp.com/kzthoddb&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>COLORTERM</td>
          <td class="code"><pre>&#x27;truecolor&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>COMPANIES_API</td>
          <td class="code"><pre>&#x27;********************&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>CONTENT_LENGTH</td>
          <td class="code"><pre>&#x27;261&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>CONTENT_TYPE</td>
          <td class="code"><pre>&#x27;application/json&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>DBUS_SESSION_BUS_ADDRESS</td>
          <td class="code"><pre>&#x27;unix:path=/run/user/1000/bus&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>DEBUGINFOD_URLS</td>
          <td class="code"><pre>&#x27;https://debuginfod.ubuntu.com &#x27;</pre></td>
        </tr>
      
        <tr>
          <td>DESKTOP_SESSION</td>
          <td class="code"><pre>&#x27;ubuntu&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>DISPLAY</td>
          <td class="code"><pre>&#x27;:1&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>DJANGO_SETTINGS_MODULE</td>
          <td class="code"><pre>&#x27;webhook.settings&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>GATEWAY_INTERFACE</td>
          <td class="code"><pre>&#x27;CGI/1.1&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>GDK_BACKEND</td>
          <td class="code"><pre>&#x27;x11&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>GDMSESSION</td>
          <td class="code"><pre>&#x27;ubuntu&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>GIO_LAUNCHED_DESKTOP_FILE</td>
          <td class="code"><pre>&#x27;/var/lib/snapd/desktop/applications/code_code.desktop&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>GIO_LAUNCHED_DESKTOP_FILE_PID</td>
          <td class="code"><pre>&#x27;2895&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>GIO_MODULE_DIR</td>
          <td class="code"><pre>&#x27;/home/jpfilho/snap/code/common/.cache/gio-modules&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>GIT_ASKPASS</td>
          <td class="code"><pre>&#x27;********************&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>GJS_DEBUG_OUTPUT</td>
          <td class="code"><pre>&#x27;stderr&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>GJS_DEBUG_TOPICS</td>
          <td class="code"><pre>&#x27;JS ERROR;JS LOG&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>GNOME_DESKTOP_SESSION_ID</td>
          <td class="code"><pre>&#x27;this-is-deprecated&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>GNOME_SHELL_SESSION_MODE</td>
          <td class="code"><pre>&#x27;ubuntu&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>GPG_AGENT_INFO</td>
          <td class="code"><pre>&#x27;/run/user/1000/gnupg/S.gpg-agent:0:1&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>GROUP_ID</td>
          <td class="code"><pre>&#x27;4bf3c03a-2d33-439c-8b13-efb50531e9c1&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>GSETTINGS_SCHEMA_DIR</td>
          <td class="code"><pre>&#x27;/home/jpfilho/snap/code/129/.local/share/glib-2.0/schemas&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>GTK_EXE_PREFIX</td>
          <td class="code"><pre>&#x27;/snap/code/129/usr&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>GTK_IM_MODULE_FILE</td>
          <td class="code"><pre>&#x27;/home/jpfilho/snap/code/common/.cache/immodules/immodules.cache&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>GTK_MODULES</td>
          <td class="code"><pre>&#x27;gail:atk-bridge&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>GTK_PATH</td>
          <td class="code"><pre>&#x27;/snap/code/129/usr/lib/x86_64-linux-gnu/gtk-3.0&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>HEROKU_API</td>
          <td class="code"><pre>&#x27;********************&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>HEROKU_API_KEY</td>
          <td class="code"><pre>&#x27;********************&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>HEROKU_DYNO_ID</td>
          <td class="code"><pre>&#x27;ba6aefd9-0ff3-4cfb-a04b-42b7bf6cf560&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>HOME</td>
          <td class="code"><pre>&#x27;/home/jpfilho&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>HTTP_ACCEPT</td>
          <td class="code"><pre>&#x27;*/*&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>HTTP_ACCEPT_ENCODING</td>
          <td class="code"><pre>&#x27;gzip, deflate&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>HTTP_HOST</td>
          <td class="code"><pre>&#x27;woz.serveo.net&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>HTTP_USER_AGENT</td>
          <td class="code"><pre>&#x27;python-requests/2.30.0&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>HTTP_X_FORWARDED_FOR</td>
          <td class="code"><pre>&#x27;177.37.130.81&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>ID_SERVICE</td>
          <td class="code"><pre>&#x27;83108c28-14f7-4646-acb8-dab165397fd5&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>INVOCATION_ID</td>
          <td class="code"><pre>&#x27;d9e9633aebb14edaa8abde0b26e491bc&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>JAVA_HOME</td>
          <td class="code"><pre>&#x27;/home/jpfilho/.sdkman/candidates/java/current&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>JOURNAL_STREAM</td>
          <td class="code"><pre>&#x27;8:33740&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>LANG</td>
          <td class="code"><pre>&#x27;pt_BR.UTF-8&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>LANGUAGE</td>
          <td class="code"><pre>&#x27;pt_BR:pt:pt_PT:en&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>LC_ADDRESS</td>
          <td class="code"><pre>&#x27;pt_BR.UTF-8&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>LC_IDENTIFICATION</td>
          <td class="code"><pre>&#x27;pt_BR.UTF-8&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>LC_MEASUREMENT</td>
          <td class="code"><pre>&#x27;pt_BR.UTF-8&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>LC_MONETARY</td>
          <td class="code"><pre>&#x27;pt_BR.UTF-8&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>LC_NAME</td>
          <td class="code"><pre>&#x27;pt_BR.UTF-8&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>LC_NUMERIC</td>
          <td class="code"><pre>&#x27;pt_BR.UTF-8&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>LC_PAPER</td>
          <td class="code"><pre>&#x27;pt_BR.UTF-8&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>LC_TELEPHONE</td>
          <td class="code"><pre>&#x27;pt_BR.UTF-8&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>LC_TIME</td>
          <td class="code"><pre>&#x27;pt_BR.UTF-8&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>LESSCLOSE</td>
          <td class="code"><pre>&#x27;/usr/bin/lesspipe %s %s&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>LESSOPEN</td>
          <td class="code"><pre>&#x27;| /usr/bin/lesspipe %s&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>LOCPATH</td>
          <td class="code"><pre>&#x27;/snap/code/129/usr/lib/locale&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>LOGNAME</td>
          <td class="code"><pre>&#x27;jpfilho&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>LS_COLORS</td>
          <td class="code"><pre>&#x27;rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:mi=00:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arc=01;31:*.arj=01;31:*.taz=01;31:*.lha=01;31:*.lz4=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.tzo=01;31:*.t7z=01;31:*.zip=01;31:*.z=01;31:*.dz=01;31:*.gz=01;31:*.lrz=01;31:*.lz=01;31:*.lzo=01;31:*.xz=01;31:*.zst=01;31:*.tzst=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.alz=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.cab=01;31:*.wim=01;31:*.swm=01;31:*.dwm=01;31:*.esd=01;31:*.jpg=01;35:*.jpeg=01;35:*.mjpg=01;35:*.mjpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.webp=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=00;36:*.au=00;36:*.flac=00;36:*.m4a=00;36:*.mid=00;36:*.midi=00;36:*.mka=00;36:*.mp3=00;36:*.mpc=00;36:*.ogg=00;36:*.ra=00;36:*.wav=00;36:*.oga=00;36:*.opus=00;36:*.spx=00;36:*.xspf=00;36:&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>MANAGERPID</td>
          <td class="code"><pre>&#x27;1783&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>MAVEN_HOME</td>
          <td class="code"><pre>&#x27;/home/jpfilho/.sdkman/candidates/maven/current&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>NVM_BIN</td>
          <td class="code"><pre>&#x27;/home/jpfilho/.nvm/versions/node/v18.16.0/bin&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>NVM_CD_FLAGS</td>
          <td class="code"><pre>&#x27;&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>NVM_DIR</td>
          <td class="code"><pre>&#x27;/home/jpfilho/.nvm&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>NVM_INC</td>
          <td class="code"><pre>&#x27;/home/jpfilho/.nvm/versions/node/v18.16.0/include/node&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>ORIGINAL_XDG_CURRENT_DESKTOP</td>
          <td class="code"><pre>&#x27;ubuntu:GNOME&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>PATH</td>
          <td class="code"><pre>&#x27;/home/jpfilho/.pyenv/libexec:/home/jpfilho/.pyenv/plugins/python-build/bin:/home/jpfilho/.pyenv/plugins/pyenv-virtualenv/bin:/home/jpfilho/.pyenv/plugins/pyenv-update/bin:/home/jpfilho/.pyenv/plugins/pyenv-doctor/bin:/home/jpfilho/.pyenv/shims:/home/jpfilho/.local/bin:/home/jpfilho/.pyenv/bin:/home/jpfilho/.nvm/versions/node/v18.16.0/bin:/home/jpfilho/.sdkman/candidates/maven/current/bin:/home/jpfilho/.sdkman/candidates/java/current/bin:/home/jpfilho/.local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:/snap/bin&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>PATH_INFO</td>
          <td class="code"><pre>&#x27;/webhook/messages/create&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>PWD</td>
          <td class="code"><pre>&#x27;/home/jpfilho/Documents/code-ws/python/webhook&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>PYENV_DIR</td>
          <td class="code"><pre>&#x27;/home/jpfilho/Documents/code-ws/python/webhook&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>PYENV_HOOK_PATH</td>
          <td class="code"><pre>&#x27;/home/jpfilho/.pyenv/pyenv.d:/usr/local/etc/pyenv.d:/etc/pyenv.d:/usr/lib/pyenv/hooks:/home/jpfilho/.pyenv/plugins/pyenv-virtualenv/etc/pyenv.d&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>PYENV_ROOT</td>
          <td class="code"><pre>&#x27;/home/jpfilho/.pyenv&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>PYENV_SHELL</td>
          <td class="code"><pre>&#x27;bash&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>PYENV_VERSION</td>
          <td class="code"><pre>&#x27;system&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>QT_ACCESSIBILITY</td>
          <td class="code"><pre>&#x27;1&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>QT_IM_MODULE</td>
          <td class="code"><pre>&#x27;ibus&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>QUERY_STRING</td>
          <td class="code"><pre>&#x27;phone=5588988562749&amp;period=05%2F23&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>REMOTE_ADDR</td>
          <td class="code"><pre>&#x27;127.0.0.1&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>REMOTE_HOST</td>
          <td class="code"><pre>&#x27;&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>REQUEST_METHOD</td>
          <td class="code"><pre>&#x27;POST&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>RUN_MAIN</td>
          <td class="code"><pre>&#x27;true&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SCRIPT_NAME</td>
          <td class="code"><pre>&#x27;&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SDKMAN_CANDIDATES_API</td>
          <td class="code"><pre>&#x27;********************&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SDKMAN_CANDIDATES_DIR</td>
          <td class="code"><pre>&#x27;/home/jpfilho/.sdkman/candidates&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SDKMAN_DIR</td>
          <td class="code"><pre>&#x27;/home/jpfilho/.sdkman&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SDKMAN_PLATFORM</td>
          <td class="code"><pre>&#x27;linuxx64&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SDKMAN_VERSION</td>
          <td class="code"><pre>&#x27;5.16.0&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SERVER_NAME</td>
          <td class="code"><pre>&#x27;localhost&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SERVER_PORT</td>
          <td class="code"><pre>&#x27;8000&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SERVER_PROTOCOL</td>
          <td class="code"><pre>&#x27;HTTP/1.1&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SERVER_SOFTWARE</td>
          <td class="code"><pre>&#x27;WSGIServer/0.2&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_MANAGER</td>
          <td class="code"><pre>&#x27;local/JPSERVER:@/tmp/.ICE-unix/2038,unix/JPSERVER:/tmp/.ICE-unix/2038&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SHELL</td>
          <td class="code"><pre>&#x27;/bin/bash&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SHLVL</td>
          <td class="code"><pre>&#x27;1&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SSH_AGENT_LAUNCHER</td>
          <td class="code"><pre>&#x27;openssh&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SSH_AUTH_SOCK</td>
          <td class="code"><pre>&#x27;/run/user/1000/keyring/ssh&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SYSTEMD_EXEC_PID</td>
          <td class="code"><pre>&#x27;2065&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>TERM</td>
          <td class="code"><pre>&#x27;xterm-256color&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>TERM_PROGRAM</td>
          <td class="code"><pre>&#x27;vscode&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>TERM_PROGRAM_VERSION</td>
          <td class="code"><pre>&#x27;1.78.2&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>TOKEN_API</td>
          <td class="code"><pre>&#x27;********************&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>TZ</td>
          <td class="code"><pre>&#x27;UTC&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>USER</td>
          <td class="code"><pre>&#x27;jpfilho&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>USERNAME</td>
          <td class="code"><pre>&#x27;jpfilho&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>VSCODE_GIT_ASKPASS_EXTRA_ARGS</td>
          <td class="code"><pre>&#x27;********************&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>VSCODE_GIT_ASKPASS_MAIN</td>
          <td class="code"><pre>&#x27;********************&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>VSCODE_GIT_ASKPASS_NODE</td>
          <td class="code"><pre>&#x27;********************&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>VSCODE_GIT_IPC_HANDLE</td>
          <td class="code"><pre>&#x27;/run/user/1000/vscode-git-1d8a16cec2.sock&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>WEBHOOK_API</td>
          <td class="code"><pre>&#x27;********************&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>WEB_URL</td>
          <td class="code"><pre>&#x27;https://woz.herokuapp.com&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>WINDOWPATH</td>
          <td class="code"><pre>&#x27;2&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>XAUTHORITY</td>
          <td class="code"><pre>&#x27;/run/user/1000/gdm/Xauthority&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>XDG_CONFIG_DIRS</td>
          <td class="code"><pre>&#x27;/etc/xdg/xdg-ubuntu:/etc/xdg&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>XDG_CURRENT_DESKTOP</td>
          <td class="code"><pre>&#x27;Unity&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>XDG_DATA_DIRS</td>
          <td class="code"><pre>&#x27;/home/jpfilho/snap/code/129/.local/share:/home/jpfilho/snap/code/129:/snap/code/129/usr/share:/usr/share/ubuntu:/usr/share/gnome:/usr/local/share/:/usr/share/:/var/lib/snapd/desktop&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>XDG_MENU_PREFIX</td>
          <td class="code"><pre>&#x27;gnome-&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>XDG_RUNTIME_DIR</td>
          <td class="code"><pre>&#x27;/run/user/1000&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>XDG_SESSION_CLASS</td>
          <td class="code"><pre>&#x27;user&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>XDG_SESSION_DESKTOP</td>
          <td class="code"><pre>&#x27;ubuntu&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>XDG_SESSION_TYPE</td>
          <td class="code"><pre>&#x27;x11&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>XMODIFIERS</td>
          <td class="code"><pre>&#x27;@im=ibus&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>wsgi.errors</td>
          <td class="code"><pre>&lt;_io.TextIOWrapper name=&#x27;&lt;stderr&gt;&#x27; mode=&#x27;w&#x27; encoding=&#x27;utf-8&#x27;&gt;</pre></td>
        </tr>
      
        <tr>
          <td>wsgi.file_wrapper</td>
          <td class="code"><pre>&lt;class &#x27;wsgiref.util.FileWrapper&#x27;&gt;</pre></td>
        </tr>
      
        <tr>
          <td>wsgi.input</td>
          <td class="code"><pre>&lt;django.core.handlers.wsgi.LimitedStream object at 0x7f28e5a0c8e0&gt;</pre></td>
        </tr>
      
        <tr>
          <td>wsgi.multiprocess</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>wsgi.multithread</td>
          <td class="code"><pre>True</pre></td>
        </tr>
      
        <tr>
          <td>wsgi.run_once</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>wsgi.url_scheme</td>
          <td class="code"><pre>&#x27;http&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>wsgi.version</td>
          <td class="code"><pre>(1, 0)</pre></td>
        </tr>
      
    </tbody>
  </table>


  <h3 id="settings-info">Settings</h3>
  <h4>Using settings module <code>webhook.settings</code></h4>
  <table class="req">
    <thead>
      <tr>
        <th>Setting</th>
        <th>Value</th>
      </tr>
    </thead>
    <tbody>
      
        <tr>
          <td>ABSOLUTE_URL_OVERRIDES</td>
          <td class="code"><pre>{}</pre></td>
        </tr>
      
        <tr>
          <td>ADMINS</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>ALLOWED_HOSTS</td>
          <td class="code"><pre>[&#x27;*&#x27;]</pre></td>
        </tr>
      
        <tr>
          <td>APPEND_SLASH</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>AUTHENTICATION_BACKENDS</td>
          <td class="code"><pre>[&#x27;django.contrib.auth.backends.ModelBackend&#x27;]</pre></td>
        </tr>
      
        <tr>
          <td>AUTH_PASSWORD_VALIDATORS</td>
          <td class="code"><pre>&#x27;********************&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>AUTH_USER_MODEL</td>
          <td class="code"><pre>&#x27;auth.User&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>BASE_DIR</td>
          <td class="code"><pre>PosixPath(&#x27;/home/jpfilho/Documents/code-ws/python/webhook&#x27;)</pre></td>
        </tr>
      
        <tr>
          <td>BROKER_URL</td>
          <td class="code"><pre>&#x27;amqps://kzthoddb:3CziblJY4U4tFRNmARuMMdIDu8z53Ql6@fly.rmq.cloudamqp.com/kzthoddb&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>CACHES</td>
          <td class="code"><pre>{&#x27;default&#x27;: {&#x27;BACKEND&#x27;: &#x27;django.core.cache.backends.locmem.LocMemCache&#x27;}}</pre></td>
        </tr>
      
        <tr>
          <td>CACHE_MIDDLEWARE_ALIAS</td>
          <td class="code"><pre>&#x27;default&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>CACHE_MIDDLEWARE_KEY_PREFIX</td>
          <td class="code"><pre>&#x27;********************&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>CACHE_MIDDLEWARE_SECONDS</td>
          <td class="code"><pre>600</pre></td>
        </tr>
      
        <tr>
          <td>CELERY_BROKER_URL</td>
          <td class="code"><pre>&#x27;amqps://kzthoddb:3CziblJY4U4tFRNmARuMMdIDu8z53Ql6@fly.rmq.cloudamqp.com/kzthoddb&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>CSRF_COOKIE_AGE</td>
          <td class="code"><pre>31449600</pre></td>
        </tr>
      
        <tr>
          <td>CSRF_COOKIE_DOMAIN</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>CSRF_COOKIE_HTTPONLY</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>CSRF_COOKIE_MASKED</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>CSRF_COOKIE_NAME</td>
          <td class="code"><pre>&#x27;csrftoken&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>CSRF_COOKIE_PATH</td>
          <td class="code"><pre>&#x27;/&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>CSRF_COOKIE_SAMESITE</td>
          <td class="code"><pre>&#x27;Lax&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>CSRF_COOKIE_SECURE</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>CSRF_FAILURE_VIEW</td>
          <td class="code"><pre>&#x27;django.views.csrf.csrf_failure&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>CSRF_HEADER_NAME</td>
          <td class="code"><pre>&#x27;HTTP_X_CSRFTOKEN&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>CSRF_TRUSTED_ORIGINS</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>CSRF_USE_SESSIONS</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>DATABASES</td>
          <td class="code"><pre>{&#x27;default&#x27;: {&#x27;ATOMIC_REQUESTS&#x27;: False,
             &#x27;AUTOCOMMIT&#x27;: True,
             &#x27;CONN_HEALTH_CHECKS&#x27;: False,
             &#x27;CONN_MAX_AGE&#x27;: 0,
             &#x27;ENGINE&#x27;: &#x27;django.db.backends.postgresql&#x27;,
             &#x27;HOST&#x27;: &#x27;ep-young-feather-699075.us-east-1.aws.neon.tech&#x27;,
             &#x27;NAME&#x27;: &#x27;neondb&#x27;,
             &#x27;OPTIONS&#x27;: {},
             &#x27;PASSWORD&#x27;: &#x27;********************&#x27;,
             &#x27;PORT&#x27;: &#x27;5432&#x27;,
             &#x27;TEST&#x27;: {&#x27;CHARSET&#x27;: None,
                      &#x27;COLLATION&#x27;: None,
                      &#x27;MIGRATE&#x27;: True,
                      &#x27;MIRROR&#x27;: None,
                      &#x27;NAME&#x27;: None},
             &#x27;TIME_ZONE&#x27;: None,
             &#x27;USER&#x27;: &#x27;psousaj&#x27;}}</pre></td>
        </tr>
      
        <tr>
          <td>DATABASE_ROUTERS</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>DATA_UPLOAD_MAX_MEMORY_SIZE</td>
          <td class="code"><pre>2621440</pre></td>
        </tr>
      
        <tr>
          <td>DATA_UPLOAD_MAX_NUMBER_FIELDS</td>
          <td class="code"><pre>1000</pre></td>
        </tr>
      
        <tr>
          <td>DATA_UPLOAD_MAX_NUMBER_FILES</td>
          <td class="code"><pre>100</pre></td>
        </tr>
      
        <tr>
          <td>DATETIME_FORMAT</td>
          <td class="code"><pre>&#x27;N j, Y, P&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>DATETIME_INPUT_FORMATS</td>
          <td class="code"><pre>[&#x27;%Y-%m-%d %H:%M:%S&#x27;,
 &#x27;%Y-%m-%d %H:%M:%S.%f&#x27;,
 &#x27;%Y-%m-%d %H:%M&#x27;,
 &#x27;%m/%d/%Y %H:%M:%S&#x27;,
 &#x27;%m/%d/%Y %H:%M:%S.%f&#x27;,
 &#x27;%m/%d/%Y %H:%M&#x27;,
 &#x27;%m/%d/%y %H:%M:%S&#x27;,
 &#x27;%m/%d/%y %H:%M:%S.%f&#x27;,
 &#x27;%m/%d/%y %H:%M&#x27;]</pre></td>
        </tr>
      
        <tr>
          <td>DATE_FORMAT</td>
          <td class="code"><pre>&#x27;N j, Y&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>DATE_INPUT_FORMATS</td>
          <td class="code"><pre>[&#x27;%Y-%m-%d&#x27;,
 &#x27;%m/%d/%Y&#x27;,
 &#x27;%m/%d/%y&#x27;,
 &#x27;%b %d %Y&#x27;,
 &#x27;%b %d, %Y&#x27;,
 &#x27;%d %b %Y&#x27;,
 &#x27;%d %b, %Y&#x27;,
 &#x27;%B %d %Y&#x27;,
 &#x27;%B %d, %Y&#x27;,
 &#x27;%d %B %Y&#x27;,
 &#x27;%d %B, %Y&#x27;]</pre></td>
        </tr>
      
        <tr>
          <td>DEBUG</td>
          <td class="code"><pre>True</pre></td>
        </tr>
      
        <tr>
          <td>DEBUG_PROPAGATE_EXCEPTIONS</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>DECIMAL_SEPARATOR</td>
          <td class="code"><pre>&#x27;.&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>DEFAULT_AUTO_FIELD</td>
          <td class="code"><pre>&#x27;django.db.models.BigAutoField&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>DEFAULT_CHARSET</td>
          <td class="code"><pre>&#x27;utf-8&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>DEFAULT_EXCEPTION_REPORTER</td>
          <td class="code"><pre>&#x27;django.views.debug.ExceptionReporter&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>DEFAULT_EXCEPTION_REPORTER_FILTER</td>
          <td class="code"><pre>&#x27;django.views.debug.SafeExceptionReporterFilter&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>DEFAULT_FILE_STORAGE</td>
          <td class="code"><pre>&#x27;django.core.files.storage.FileSystemStorage&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>DEFAULT_FROM_EMAIL</td>
          <td class="code"><pre>&#x27;webmaster@localhost&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>DEFAULT_INDEX_TABLESPACE</td>
          <td class="code"><pre>&#x27;&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>DEFAULT_TABLESPACE</td>
          <td class="code"><pre>&#x27;&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>DISALLOWED_USER_AGENTS</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>EMAIL_BACKEND</td>
          <td class="code"><pre>&#x27;django.core.mail.backends.smtp.EmailBackend&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>EMAIL_HOST</td>
          <td class="code"><pre>&#x27;localhost&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>EMAIL_HOST_PASSWORD</td>
          <td class="code"><pre>&#x27;********************&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>EMAIL_HOST_USER</td>
          <td class="code"><pre>&#x27;&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>EMAIL_PORT</td>
          <td class="code"><pre>25</pre></td>
        </tr>
      
        <tr>
          <td>EMAIL_SSL_CERTFILE</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>EMAIL_SSL_KEYFILE</td>
          <td class="code"><pre>&#x27;********************&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>EMAIL_SUBJECT_PREFIX</td>
          <td class="code"><pre>&#x27;[Django] &#x27;</pre></td>
        </tr>
      
        <tr>
          <td>EMAIL_TIMEOUT</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>EMAIL_USE_LOCALTIME</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>EMAIL_USE_SSL</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>EMAIL_USE_TLS</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>FILE_UPLOAD_DIRECTORY_PERMISSIONS</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>FILE_UPLOAD_HANDLERS</td>
          <td class="code"><pre>[&#x27;django.core.files.uploadhandler.MemoryFileUploadHandler&#x27;,
 &#x27;django.core.files.uploadhandler.TemporaryFileUploadHandler&#x27;]</pre></td>
        </tr>
      
        <tr>
          <td>FILE_UPLOAD_MAX_MEMORY_SIZE</td>
          <td class="code"><pre>2621440</pre></td>
        </tr>
      
        <tr>
          <td>FILE_UPLOAD_PERMISSIONS</td>
          <td class="code"><pre>420</pre></td>
        </tr>
      
        <tr>
          <td>FILE_UPLOAD_TEMP_DIR</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>FIRST_DAY_OF_WEEK</td>
          <td class="code"><pre>0</pre></td>
        </tr>
      
        <tr>
          <td>FIXTURE_DIRS</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>FORCE_SCRIPT_NAME</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>FORMAT_MODULE_PATH</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>FORM_RENDERER</td>
          <td class="code"><pre>&#x27;django.forms.renderers.DjangoTemplates&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>IGNORABLE_404_URLS</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>INSTALLED_APPS</td>
          <td class="code"><pre>[&#x27;django.contrib.admin&#x27;,
 &#x27;django.contrib.auth&#x27;,
 &#x27;django.contrib.contenttypes&#x27;,
 &#x27;django.contrib.sessions&#x27;,
 &#x27;django.contrib.messages&#x27;,
 &#x27;django.contrib.staticfiles&#x27;,
 &#x27;drf_yasg&#x27;,
 &#x27;rest_framework&#x27;,
 &#x27;example&#x27;,
 &#x27;messages_api&#x27;,
 &#x27;celery&#x27;,
 &#x27;django_filters&#x27;]</pre></td>
        </tr>
      
        <tr>
          <td>INTERNAL_IPS</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>LANGUAGES</td>
          <td class="code"><pre>[(&#x27;af&#x27;, &#x27;Afrikaans&#x27;),
 (&#x27;ar&#x27;, &#x27;Arabic&#x27;),
 (&#x27;ar-dz&#x27;, &#x27;Algerian Arabic&#x27;),
 (&#x27;ast&#x27;, &#x27;Asturian&#x27;),
 (&#x27;az&#x27;, &#x27;Azerbaijani&#x27;),
 (&#x27;bg&#x27;, &#x27;Bulgarian&#x27;),
 (&#x27;be&#x27;, &#x27;Belarusian&#x27;),
 (&#x27;bn&#x27;, &#x27;Bengali&#x27;),
 (&#x27;br&#x27;, &#x27;Breton&#x27;),
 (&#x27;bs&#x27;, &#x27;Bosnian&#x27;),
 (&#x27;ca&#x27;, &#x27;Catalan&#x27;),
 (&#x27;ckb&#x27;, &#x27;Central Kurdish (Sorani)&#x27;),
 (&#x27;cs&#x27;, &#x27;Czech&#x27;),
 (&#x27;cy&#x27;, &#x27;Welsh&#x27;),
 (&#x27;da&#x27;, &#x27;Danish&#x27;),
 (&#x27;de&#x27;, &#x27;German&#x27;),
 (&#x27;dsb&#x27;, &#x27;Lower Sorbian&#x27;),
 (&#x27;el&#x27;, &#x27;Greek&#x27;),
 (&#x27;en&#x27;, &#x27;English&#x27;),
 (&#x27;en-au&#x27;, &#x27;Australian English&#x27;),
 (&#x27;en-gb&#x27;, &#x27;British English&#x27;),
 (&#x27;eo&#x27;, &#x27;Esperanto&#x27;),
 (&#x27;es&#x27;, &#x27;Spanish&#x27;),
 (&#x27;es-ar&#x27;, &#x27;Argentinian Spanish&#x27;),
 (&#x27;es-co&#x27;, &#x27;Colombian Spanish&#x27;),
 (&#x27;es-mx&#x27;, &#x27;Mexican Spanish&#x27;),
 (&#x27;es-ni&#x27;, &#x27;Nicaraguan Spanish&#x27;),
 (&#x27;es-ve&#x27;, &#x27;Venezuelan Spanish&#x27;),
 (&#x27;et&#x27;, &#x27;Estonian&#x27;),
 (&#x27;eu&#x27;, &#x27;Basque&#x27;),
 (&#x27;fa&#x27;, &#x27;Persian&#x27;),
 (&#x27;fi&#x27;, &#x27;Finnish&#x27;),
 (&#x27;fr&#x27;, &#x27;French&#x27;),
 (&#x27;fy&#x27;, &#x27;Frisian&#x27;),
 (&#x27;ga&#x27;, &#x27;Irish&#x27;),
 (&#x27;gd&#x27;, &#x27;Scottish Gaelic&#x27;),
 (&#x27;gl&#x27;, &#x27;Galician&#x27;),
 (&#x27;he&#x27;, &#x27;Hebrew&#x27;),
 (&#x27;hi&#x27;, &#x27;Hindi&#x27;),
 (&#x27;hr&#x27;, &#x27;Croatian&#x27;),
 (&#x27;hsb&#x27;, &#x27;Upper Sorbian&#x27;),
 (&#x27;hu&#x27;, &#x27;Hungarian&#x27;),
 (&#x27;hy&#x27;, &#x27;Armenian&#x27;),
 (&#x27;ia&#x27;, &#x27;Interlingua&#x27;),
 (&#x27;id&#x27;, &#x27;Indonesian&#x27;),
 (&#x27;ig&#x27;, &#x27;Igbo&#x27;),
 (&#x27;io&#x27;, &#x27;Ido&#x27;),
 (&#x27;is&#x27;, &#x27;Icelandic&#x27;),
 (&#x27;it&#x27;, &#x27;Italian&#x27;),
 (&#x27;ja&#x27;, &#x27;Japanese&#x27;),
 (&#x27;ka&#x27;, &#x27;Georgian&#x27;),
 (&#x27;kab&#x27;, &#x27;Kabyle&#x27;),
 (&#x27;kk&#x27;, &#x27;Kazakh&#x27;),
 (&#x27;km&#x27;, &#x27;Khmer&#x27;),
 (&#x27;kn&#x27;, &#x27;Kannada&#x27;),
 (&#x27;ko&#x27;, &#x27;Korean&#x27;),
 (&#x27;ky&#x27;, &#x27;Kyrgyz&#x27;),
 (&#x27;lb&#x27;, &#x27;Luxembourgish&#x27;),
 (&#x27;lt&#x27;, &#x27;Lithuanian&#x27;),
 (&#x27;lv&#x27;, &#x27;Latvian&#x27;),
 (&#x27;mk&#x27;, &#x27;Macedonian&#x27;),
 (&#x27;ml&#x27;, &#x27;Malayalam&#x27;),
 (&#x27;mn&#x27;, &#x27;Mongolian&#x27;),
 (&#x27;mr&#x27;, &#x27;Marathi&#x27;),
 (&#x27;ms&#x27;, &#x27;Malay&#x27;),
 (&#x27;my&#x27;, &#x27;Burmese&#x27;),
 (&#x27;nb&#x27;, &#x27;Norwegian Bokmål&#x27;),
 (&#x27;ne&#x27;, &#x27;Nepali&#x27;),
 (&#x27;nl&#x27;, &#x27;Dutch&#x27;),
 (&#x27;nn&#x27;, &#x27;Norwegian Nynorsk&#x27;),
 (&#x27;os&#x27;, &#x27;Ossetic&#x27;),
 (&#x27;pa&#x27;, &#x27;Punjabi&#x27;),
 (&#x27;pl&#x27;, &#x27;Polish&#x27;),
 (&#x27;pt&#x27;, &#x27;Portuguese&#x27;),
 (&#x27;pt-br&#x27;, &#x27;Brazilian Portuguese&#x27;),
 (&#x27;ro&#x27;, &#x27;Romanian&#x27;),
 (&#x27;ru&#x27;, &#x27;Russian&#x27;),
 (&#x27;sk&#x27;, &#x27;Slovak&#x27;),
 (&#x27;sl&#x27;, &#x27;Slovenian&#x27;),
 (&#x27;sq&#x27;, &#x27;Albanian&#x27;),
 (&#x27;sr&#x27;, &#x27;Serbian&#x27;),
 (&#x27;sr-latn&#x27;, &#x27;Serbian Latin&#x27;),
 (&#x27;sv&#x27;, &#x27;Swedish&#x27;),
 (&#x27;sw&#x27;, &#x27;Swahili&#x27;),
 (&#x27;ta&#x27;, &#x27;Tamil&#x27;),
 (&#x27;te&#x27;, &#x27;Telugu&#x27;),
 (&#x27;tg&#x27;, &#x27;Tajik&#x27;),
 (&#x27;th&#x27;, &#x27;Thai&#x27;),
 (&#x27;tk&#x27;, &#x27;Turkmen&#x27;),
 (&#x27;tr&#x27;, &#x27;Turkish&#x27;),
 (&#x27;tt&#x27;, &#x27;Tatar&#x27;),
 (&#x27;udm&#x27;, &#x27;Udmurt&#x27;),
 (&#x27;uk&#x27;, &#x27;Ukrainian&#x27;),
 (&#x27;ur&#x27;, &#x27;Urdu&#x27;),
 (&#x27;uz&#x27;, &#x27;Uzbek&#x27;),
 (&#x27;vi&#x27;, &#x27;Vietnamese&#x27;),
 (&#x27;zh-hans&#x27;, &#x27;Simplified Chinese&#x27;),
 (&#x27;zh-hant&#x27;, &#x27;Traditional Chinese&#x27;)]</pre></td>
        </tr>
      
        <tr>
          <td>LANGUAGES_BIDI</td>
          <td class="code"><pre>[&#x27;he&#x27;, &#x27;ar&#x27;, &#x27;ar-dz&#x27;, &#x27;ckb&#x27;, &#x27;fa&#x27;, &#x27;ur&#x27;]</pre></td>
        </tr>
      
        <tr>
          <td>LANGUAGE_CODE</td>
          <td class="code"><pre>&#x27;pt-BR&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>LANGUAGE_COOKIE_AGE</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>LANGUAGE_COOKIE_DOMAIN</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>LANGUAGE_COOKIE_HTTPONLY</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>LANGUAGE_COOKIE_NAME</td>
          <td class="code"><pre>&#x27;django_language&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>LANGUAGE_COOKIE_PATH</td>
          <td class="code"><pre>&#x27;/&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>LANGUAGE_COOKIE_SAMESITE</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>LANGUAGE_COOKIE_SECURE</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>LOCALE_PATHS</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>LOGGING</td>
          <td class="code"><pre>{}</pre></td>
        </tr>
      
        <tr>
          <td>LOGGING_CONFIG</td>
          <td class="code"><pre>&#x27;logging.config.dictConfig&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>LOGIN_REDIRECT_URL</td>
          <td class="code"><pre>&#x27;/accounts/profile/&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>LOGIN_URL</td>
          <td class="code"><pre>&#x27;/accounts/login/&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>LOGOUT_REDIRECT_URL</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>MANAGERS</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>MEDIA_ROOT</td>
          <td class="code"><pre>&#x27;&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>MEDIA_URL</td>
          <td class="code"><pre>&#x27;/&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>MESSAGE_STORAGE</td>
          <td class="code"><pre>&#x27;django.contrib.messages.storage.fallback.FallbackStorage&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>MIDDLEWARE</td>
          <td class="code"><pre>[&#x27;django.middleware.security.SecurityMiddleware&#x27;,
 &#x27;django.contrib.sessions.middleware.SessionMiddleware&#x27;,
 &#x27;django.middleware.common.CommonMiddleware&#x27;,
 &#x27;django.middleware.csrf.CsrfViewMiddleware&#x27;,
 &#x27;django.contrib.auth.middleware.AuthenticationMiddleware&#x27;,
 &#x27;django.contrib.messages.middleware.MessageMiddleware&#x27;,
 &#x27;django.middleware.clickjacking.XFrameOptionsMiddleware&#x27;]</pre></td>
        </tr>
      
        <tr>
          <td>MIGRATION_MODULES</td>
          <td class="code"><pre>{}</pre></td>
        </tr>
      
        <tr>
          <td>MONTH_DAY_FORMAT</td>
          <td class="code"><pre>&#x27;F j&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>NUMBER_GROUPING</td>
          <td class="code"><pre>0</pre></td>
        </tr>
      
        <tr>
          <td>PASSWORD_HASHERS</td>
          <td class="code"><pre>&#x27;********************&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>PASSWORD_RESET_TIMEOUT</td>
          <td class="code"><pre>&#x27;********************&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>PREPEND_WWW</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>ROOT_URLCONF</td>
          <td class="code"><pre>&#x27;webhook.urls&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SECRET_KEY</td>
          <td class="code"><pre>&#x27;********************&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SECRET_KEY_FALLBACKS</td>
          <td class="code"><pre>&#x27;********************&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SECURE_CONTENT_TYPE_NOSNIFF</td>
          <td class="code"><pre>True</pre></td>
        </tr>
      
        <tr>
          <td>SECURE_CROSS_ORIGIN_OPENER_POLICY</td>
          <td class="code"><pre>&#x27;same-origin&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SECURE_HSTS_INCLUDE_SUBDOMAINS</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>SECURE_HSTS_PRELOAD</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>SECURE_HSTS_SECONDS</td>
          <td class="code"><pre>0</pre></td>
        </tr>
      
        <tr>
          <td>SECURE_PROXY_SSL_HEADER</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>SECURE_REDIRECT_EXEMPT</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>SECURE_REFERRER_POLICY</td>
          <td class="code"><pre>&#x27;same-origin&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SECURE_SSL_HOST</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>SECURE_SSL_REDIRECT</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>SERVER_EMAIL</td>
          <td class="code"><pre>&#x27;root@localhost&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_CACHE_ALIAS</td>
          <td class="code"><pre>&#x27;default&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_COOKIE_AGE</td>
          <td class="code"><pre>1209600</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_COOKIE_DOMAIN</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_COOKIE_HTTPONLY</td>
          <td class="code"><pre>True</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_COOKIE_NAME</td>
          <td class="code"><pre>&#x27;sessionid&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_COOKIE_PATH</td>
          <td class="code"><pre>&#x27;/&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_COOKIE_SAMESITE</td>
          <td class="code"><pre>&#x27;Lax&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_COOKIE_SECURE</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_ENGINE</td>
          <td class="code"><pre>&#x27;django.contrib.sessions.backends.db&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_EXPIRE_AT_BROWSER_CLOSE</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_FILE_PATH</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_SAVE_EVERY_REQUEST</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_SERIALIZER</td>
          <td class="code"><pre>&#x27;django.contrib.sessions.serializers.JSONSerializer&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SETTINGS_MODULE</td>
          <td class="code"><pre>&#x27;webhook.settings&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SHORT_DATETIME_FORMAT</td>
          <td class="code"><pre>&#x27;m/d/Y P&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SHORT_DATE_FORMAT</td>
          <td class="code"><pre>&#x27;m/d/Y&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SIGNING_BACKEND</td>
          <td class="code"><pre>&#x27;django.core.signing.TimestampSigner&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SILENCED_SYSTEM_CHECKS</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>STATICFILES_DIRS</td>
          <td class="code"><pre>[&#x27;/home/jpfilho/Documents/code-ws/python/webhook/statics&#x27;]</pre></td>
        </tr>
      
        <tr>
          <td>STATICFILES_FINDERS</td>
          <td class="code"><pre>[&#x27;django.contrib.staticfiles.finders.FileSystemFinder&#x27;,
 &#x27;django.contrib.staticfiles.finders.AppDirectoriesFinder&#x27;]</pre></td>
        </tr>
      
        <tr>
          <td>STATICFILES_STORAGE</td>
          <td class="code"><pre>&#x27;django.contrib.staticfiles.storage.StaticFilesStorage&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>STATIC_ROOT</td>
          <td class="code"><pre>&#x27;/home/jpfilho/Documents/code-ws/python/webhook/static&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>STATIC_URL</td>
          <td class="code"><pre>&#x27;/static/&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>STORAGES</td>
          <td class="code"><pre>{&#x27;default&#x27;: {&#x27;BACKEND&#x27;: &#x27;django.core.files.storage.FileSystemStorage&#x27;},
 &#x27;staticfiles&#x27;: {&#x27;BACKEND&#x27;: &#x27;django.contrib.staticfiles.storage.StaticFilesStorage&#x27;}}</pre></td>
        </tr>
      
        <tr>
          <td>TEMPLATES</td>
          <td class="code"><pre>[{&#x27;APP_DIRS&#x27;: True,
  &#x27;BACKEND&#x27;: &#x27;django.template.backends.django.DjangoTemplates&#x27;,
  &#x27;DIRS&#x27;: [],
  &#x27;OPTIONS&#x27;: {&#x27;context_processors&#x27;: [&#x27;django.template.context_processors.debug&#x27;,
                                     &#x27;django.template.context_processors.request&#x27;,
                                     &#x27;django.contrib.auth.context_processors.auth&#x27;,
                                     &#x27;django.contrib.messages.context_processors.messages&#x27;]}}]</pre></td>
        </tr>
      
        <tr>
          <td>TEST_NON_SERIALIZED_APPS</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>TEST_RUNNER</td>
          <td class="code"><pre>&#x27;django.test.runner.DiscoverRunner&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>THOUSAND_SEPARATOR</td>
          <td class="code"><pre>&#x27;,&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>TIME_FORMAT</td>
          <td class="code"><pre>&#x27;P&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>TIME_INPUT_FORMATS</td>
          <td class="code"><pre>[&#x27;%H:%M:%S&#x27;, &#x27;%H:%M:%S.%f&#x27;, &#x27;%H:%M&#x27;]</pre></td>
        </tr>
      
        <tr>
          <td>TIME_ZONE</td>
          <td class="code"><pre>&#x27;UTC&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>USE_DEPRECATED_PYTZ</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>USE_I18N</td>
          <td class="code"><pre>True</pre></td>
        </tr>
      
        <tr>
          <td>USE_L10N</td>
          <td class="code"><pre>True</pre></td>
        </tr>
      
        <tr>
          <td>USE_THOUSAND_SEPARATOR</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>USE_TZ</td>
          <td class="code"><pre>True</pre></td>
        </tr>
      
        <tr>
          <td>USE_X_FORWARDED_HOST</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>USE_X_FORWARDED_PORT</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>WSGI_APPLICATION</td>
          <td class="code"><pre>&#x27;webhook.wsgi.app&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>X_FRAME_OPTIONS</td>
          <td class="code"><pre>&#x27;DENY&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>YEAR_MONTH_FORMAT</td>
          <td class="code"><pre>&#x27;F Y&#x27;</pre></td>
        </tr>
      
    </tbody>
  </table>

</div>

  <div id="explanation">
    <p>
      You’re seeing this error because you have <code>DEBUG = True</code> in your
      Django settings file. Change that to <code>False</code>, and Django will
      display a standard page generated by the handler for this status code.
    </p>
  </div>

</body>
</html>

21/05/2023|23:43:30 - messages_api.event -DEBUG- <Response [400]>-{"error":400,"message":"Message matching query does not exist."}
21/05/2023|23:43:33 - messages_api.event -DEBUG- <Response [400]>-{"error":400,"message":"Message matching query does not exist."}
21/05/2023|23:44:31 - messages_api.event -DEBUG- <Response [400]>-{"error":400,"message":"Message matching query does not exist."}
21/05/2023|23:44:34 - messages_api.event -DEBUG- <Response [400]>-{"error":400,"message":"Message matching query does not exist."}
21/05/2023|23:47:21 - webhook.views -INFO- Received webhook request
{'event': 'message.created', 'data': {'id': 'b2b44231-4600-49d7-857f-abb2d70898f4', 'isFromMe': False, 'sent': False, 'type': 'ticket', 'timestamp': '2023-05-21T23:47:20.916Z', 'data': {'ticketClose': True}, 'visible': True, 'accountId': '966b70ba-27d8-43ae-a295-35e59f0007be', 'contactId': '79db7607-6088-44c1-a010-ed4ef39d4f37', 'fromId': None, 'serviceId': '83108c28-14f7-4646-acb8-dab165397fd5', 'toId': None, 'userId': None, 'ticketId': '3e14aea2-bc69-4e56-b20b-1b6d63ade6d5', 'ticketUserId': None, 'ticketDepartmentId': None, 'quotedMessageId': None, 'origin': 'ticket', 'hsmId': None, 'obfuscated': False, 'files': None, 'quotedMessage': None, 'isFromBot': False}, 'webhookId': '27b4c18d-2ab0-4c70-a592-46bbe7e00bc8', 'timestamp': '2023-05-21T23:47:20.981Z'}
21/05/2023|23:47:21 - webhook.views -INFO- Received webhook request
{'event': 'ticket.updated', 'data': {'id': '3e14aea2-bc69-4e56-b20b-1b6d63ade6d5', 'isOpen': False, 'comments': '', 'protocol': '2023052130904', 'origin': 'manual', 'metrics': {'messagingTime': 2368, 'ticketTime': 2671}, 'startedAt': '2023-05-21T23:02:49.047Z', 'endedAt': '2023-05-21T23:47:20.916Z', 'userId': '3f4cc332-516e-4f48-aff2-df6eaa2e5034', 'departmentId': 'a78046d7-809d-4cdb-a72a-31dfbc47d862', 'accountId': '966b70ba-27d8-43ae-a295-35e59f0007be', 'contactId': '79db7607-6088-44c1-a010-ed4ef39d4f37', 'currentTicketTransferId': None, 'firstMessageId': 'ec859f85-55db-454d-a7a2-a7e1e3a12727', 'lastMessageId': '0cdaf52c-be39-430f-be67-3c993fc570df'}, 'webhookId': '27b4c18d-2ab0-4c70-a592-46bbe7e00bc8', 'timestamp': '2023-05-21T23:47:21.007Z'}
21/05/2023|23:47:22 - webhook.views -DEBUG- Exceção ocorreu na função webhook_receiver, linha 20: 'ticketId'
21/05/2023|23:47:22 - webhook.views -INFO- Exception occurred. 'ticketId'
21/05/2023|23:47:22 - webhook.views -DEBUG- Exceção ocorreu na função webhook_receiver, linha 20: 'ack'
21/05/2023|23:47:22 - webhook.views -INFO- Exception occurred. 'ack'
21/05/2023|23:47:36 - webhook.views -INFO- Received webhook request
{'event': 'message.created', 'data': {'id': '333aa92f-522a-4de2-90ce-4f2b7b250e3e', 'isFromMe': False, 'sent': False, 'type': 'ticket', 'timestamp': '2023-05-21T23:47:36.097Z', 'data': {'ticketOpen': True}, 'visible': True, 'accountId': '966b70ba-27d8-43ae-a295-35e59f0007be', 'contactId': '79db7607-6088-44c1-a010-ed4ef39d4f37', 'fromId': None, 'serviceId': '83108c28-14f7-4646-acb8-dab165397fd5', 'toId': None, 'userId': None, 'ticketId': 'e5a453e9-6cb1-476e-b416-3b334b0bc61a', 'ticketUserId': None, 'ticketDepartmentId': None, 'quotedMessageId': None, 'origin': 'ticket', 'hsmId': None, 'obfuscated': False, 'files': None, 'quotedMessage': None, 'isFromBot': False}, 'webhookId': '27b4c18d-2ab0-4c70-a592-46bbe7e00bc8', 'timestamp': '2023-05-21T23:47:36.138Z'}
21/05/2023|23:47:36 - webhook.views -INFO- Received webhook request
{'event': 'ticket.created', 'data': {'id': 'e5a453e9-6cb1-476e-b416-3b334b0bc61a', 'metrics': {}, 'isOpen': True, 'startedAt': '2023-05-21T23:47:36.097Z', 'departmentId': 'a78046d7-809d-4cdb-a72a-31dfbc47d862', 'userId': '3f4cc332-516e-4f48-aff2-df6eaa2e5034', 'protocol': '2023052130905', 'origin': 'manual', 'contactId': '79db7607-6088-44c1-a010-ed4ef39d4f37', 'accountId': '966b70ba-27d8-43ae-a295-35e59f0007be', 'firstMessageId': None, 'lastMessageId': None, 'comments': None, 'endedAt': None, 'currentTicketTransferId': 'f727295f-d139-4221-8210-e4e82d9ae987'}, 'webhookId': '27b4c18d-2ab0-4c70-a592-46bbe7e00bc8', 'timestamp': '2023-05-21T23:47:36.162Z'}
21/05/2023|23:47:36 - webhook.views -DEBUG- Exceção ocorreu na função webhook_receiver, linha 20: 'ticketId'
21/05/2023|23:47:36 - webhook.views -INFO- Exception occurred. 'ticketId'
21/05/2023|23:47:36 - webhook.views -INFO- Received webhook request
{'event': 'ticket.updated', 'data': {'id': 'e5a453e9-6cb1-476e-b416-3b334b0bc61a', 'metrics': {}, 'isOpen': True, 'startedAt': '2023-05-21T23:47:36.097Z', 'departmentId': 'a78046d7-809d-4cdb-a72a-31dfbc47d862', 'userId': '3f4cc332-516e-4f48-aff2-df6eaa2e5034', 'protocol': '2023052130905', 'origin': 'manual', 'contactId': '79db7607-6088-44c1-a010-ed4ef39d4f37', 'accountId': '966b70ba-27d8-43ae-a295-35e59f0007be', 'firstMessageId': None, 'lastMessageId': None, 'comments': None, 'endedAt': None, 'currentTicketTransferId': 'f727295f-d139-4221-8210-e4e82d9ae987'}, 'webhookId': '27b4c18d-2ab0-4c70-a592-46bbe7e00bc8', 'timestamp': '2023-05-21T23:47:36.170Z'}
21/05/2023|23:47:36 - webhook.views -DEBUG- Exceção ocorreu na função webhook_receiver, linha 20: 'ticketId'
21/05/2023|23:47:36 - webhook.views -INFO- Exception occurred. 'ticketId'
21/05/2023|23:47:37 - webhook.views -DEBUG- Exceção ocorreu na função webhook_receiver, linha 20: 'ack'
21/05/2023|23:47:37 - webhook.views -INFO- Exception occurred. 'ack'
21/05/2023|23:47:44 - webhook.views -INFO- Received webhook request
{'event': 'message.created', 'data': {'id': '2172fdff-2979-4c81-860a-f4a45f2b9a5b', 'isFromMe': True, 'sent': True, 'type': 'chat', 'timestamp': '2023-05-21T23:47:42.000Z', 'data': {'ack': 0, 'isNew': True, 'isFirst': False}, 'visible': True, 'accountId': '966b70ba-27d8-43ae-a295-35e59f0007be', 'contactId': '79db7607-6088-44c1-a010-ed4ef39d4f37', 'fromId': 'e12d3a56-0c52-43ac-b33c-15c399eb06d4', 'serviceId': '83108c28-14f7-4646-acb8-dab165397fd5', 'toId': None, 'userId': '3f4cc332-516e-4f48-aff2-df6eaa2e5034', 'ticketId': 'e5a453e9-6cb1-476e-b416-3b334b0bc61a', 'ticketUserId': None, 'ticketDepartmentId': None, 'quotedMessageId': None, 'origin': 'user', 'hsmId': None, 'text': 'Novo chamado para teste', 'obfuscated': False, 'files': None, 'quotedMessage': None, 'isFromBot': False}, 'webhookId': '27b4c18d-2ab0-4c70-a592-46bbe7e00bc8', 'timestamp': '2023-05-21T23:47:43.464Z'}
21/05/2023|23:47:44 - webhook.views -INFO- Received webhook request
{'event': 'message.updated', 'data': {'id': '2172fdff-2979-4c81-860a-f4a45f2b9a5b', 'isFromMe': True, 'sent': True, 'type': 'chat', 'timestamp': '2023-05-21T23:47:42.000Z', 'data': {'ack': 1, 'isNew': True, 'isFirst': False}, 'visible': True, 'accountId': '966b70ba-27d8-43ae-a295-35e59f0007be', 'contactId': '79db7607-6088-44c1-a010-ed4ef39d4f37', 'fromId': 'e12d3a56-0c52-43ac-b33c-15c399eb06d4', 'serviceId': '83108c28-14f7-4646-acb8-dab165397fd5', 'toId': None, 'userId': '3f4cc332-516e-4f48-aff2-df6eaa2e5034', 'ticketId': 'e5a453e9-6cb1-476e-b416-3b334b0bc61a', 'ticketUserId': '3f4cc332-516e-4f48-aff2-df6eaa2e5034', 'ticketDepartmentId': 'a78046d7-809d-4cdb-a72a-31dfbc47d862', 'quotedMessageId': None, 'origin': 'user', 'hsmId': None, 'text': 'Novo chamado para teste', 'obfuscated': False, 'files': None, 'quotedMessage': None, 'isFromBot': False}, 'webhookId': '27b4c18d-2ab0-4c70-a592-46bbe7e00bc8', 'timestamp': '2023-05-21T23:47:43.575Z'}
21/05/2023|23:47:44 - webhook.views -INFO- Received webhook request
{'event': 'message.updated', 'data': {'id': '2172fdff-2979-4c81-860a-f4a45f2b9a5b', 'isFromMe': True, 'sent': True, 'type': 'chat', 'timestamp': '2023-05-21T23:47:42.000Z', 'data': {'ack': 2, 'isNew': True, 'isFirst': False}, 'visible': True, 'accountId': '966b70ba-27d8-43ae-a295-35e59f0007be', 'contactId': '79db7607-6088-44c1-a010-ed4ef39d4f37', 'fromId': 'e12d3a56-0c52-43ac-b33c-15c399eb06d4', 'serviceId': '83108c28-14f7-4646-acb8-dab165397fd5', 'toId': None, 'userId': '3f4cc332-516e-4f48-aff2-df6eaa2e5034', 'ticketId': 'e5a453e9-6cb1-476e-b416-3b334b0bc61a', 'ticketUserId': '3f4cc332-516e-4f48-aff2-df6eaa2e5034', 'ticketDepartmentId': 'a78046d7-809d-4cdb-a72a-31dfbc47d862', 'quotedMessageId': None, 'origin': 'user', 'hsmId': None, 'text': 'Novo chamado para teste', 'obfuscated': False, 'files': None, 'quotedMessage': None, 'isFromBot': False}, 'webhookId': '27b4c18d-2ab0-4c70-a592-46bbe7e00bc8', 'timestamp': '2023-05-21T23:47:43.917Z'}
21/05/2023|23:47:47 - messages_api.event -DEBUG- <Response [400]>-{"error":400,"message":"Message matching query does not exist."}
21/05/2023|23:47:49 - messages_api.event -DEBUG- <Response [400]>-{"error":400,"message":"Message matching query does not exist."}
21/05/2023|23:47:49 - messages_api.event -DEBUG- Failed to create message_id: 2172fdff-2979-4c81-860a-f4a45f2b9a5b
<Response [500]>-<!DOCTYPE html>
<html lang="en">
<head>
  <meta http-equiv="content-type" content="text/html; charset=utf-8">
  <meta name="robots" content="NONE,NOARCHIVE">
  <title>ValidationError
          at /webhook/messages/create</title>
  <style type="text/css">
    html * { padding:0; margin:0; }
    body * { padding:10px 20px; }
    body * * { padding:0; }
    body { font:small sans-serif; background-color:#fff; color:#000; }
    body>div { border-bottom:1px solid #ddd; }
    h1 { font-weight:normal; }
    h2 { margin-bottom:.8em; }
    h3 { margin:1em 0 .5em 0; }
    h4 { margin:0 0 .5em 0; font-weight: normal; }
    code, pre { font-size: 100%; white-space: pre-wrap; word-break: break-word; }
    summary { cursor: pointer; }
    table { border:1px solid #ccc; border-collapse: collapse; width:100%; background:white; }
    tbody td, tbody th { vertical-align:top; padding:2px 3px; }
    thead th {
      padding:1px 6px 1px 3px; background:#fefefe; text-align:left;
      font-weight:normal; font-size:11px; border:1px solid #ddd;
    }
    tbody th { width:12em; text-align:right; color:#666; padding-right:.5em; }
    table.vars { margin:5px 10px 2px 40px; width: auto; }
    table.vars td, table.req td { font-family:monospace; }
    table td.code { width:100%; }
    table td.code pre { overflow:hidden; }
    table.source th { color:#666; }
    table.source td { font-family:monospace; white-space:pre; border-bottom:1px solid #eee; }
    ul.traceback { list-style-type:none; color: #222; }
    ul.traceback li.cause { word-break: break-word; }
    ul.traceback li.frame { padding-bottom:1em; color:#4f4f4f; }
    ul.traceback li.user { background-color:#e0e0e0; color:#000 }
    div.context { padding:10px 0; overflow:hidden; }
    div.context ol { padding-left:30px; margin:0 10px; list-style-position: inside; }
    div.context ol li { font-family:monospace; white-space:pre; color:#777; cursor:pointer; padding-left: 2px; }
    div.context ol li pre { display:inline; }
    div.context ol.context-line li { color:#464646; background-color:#dfdfdf; padding: 3px 2px; }
    div.context ol.context-line li span { position:absolute; right:32px; }
    .user div.context ol.context-line li { background-color:#bbb; color:#000; }
    .user div.context ol li { color:#666; }
    div.commands, summary.commands { margin-left: 40px; }
    div.commands a, summary.commands { color:#555; text-decoration:none; }
    .user div.commands a { color: black; }
    #summary { background: #ffc; }
    #summary h2 { font-weight: normal; color: #666; }
    #explanation { background:#eee; }
    #template, #template-not-exist { background:#f6f6f6; }
    #template-not-exist ul { margin: 0 0 10px 20px; }
    #template-not-exist .postmortem-section { margin-bottom: 3px; }
    #unicode-hint { background:#eee; }
    #traceback { background:#eee; }
    #requestinfo { background:#f6f6f6; padding-left:120px; }
    #summary table { border:none; background:transparent; }
    #requestinfo h2, #requestinfo h3 { position:relative; margin-left:-100px; }
    #requestinfo h3 { margin-bottom:-1em; }
    .error { background: #ffc; }
    .specific { color:#cc3300; font-weight:bold; }
    h2 span.commands { font-size:.7em; font-weight:normal; }
    span.commands a:link {color:#5E5694;}
    pre.exception_value { font-family: sans-serif; color: #575757; font-size: 1.5em; margin: 10px 0 10px 0; }
    .append-bottom { margin-bottom: 10px; }
    .fname { user-select: all; }
  </style>
  
  <script>
    function hideAll(elems) {
      for (var e = 0; e < elems.length; e++) {
        elems[e].style.display = 'none';
      }
    }
    window.onload = function() {
      hideAll(document.querySelectorAll('ol.pre-context'));
      hideAll(document.querySelectorAll('ol.post-context'));
      hideAll(document.querySelectorAll('div.pastebin'));
    }
    function toggle() {
      for (var i = 0; i < arguments.length; i++) {
        var e = document.getElementById(arguments[i]);
        if (e) {
          e.style.display = e.style.display == 'none' ? 'block': 'none';
        }
      }
      return false;
    }
    function switchPastebinFriendly(link) {
      s1 = "Switch to copy-and-paste view";
      s2 = "Switch back to interactive view";
      link.textContent = link.textContent.trim() == s1 ? s2: s1;
      toggle('browserTraceback', 'pastebinTraceback');
      return false;
    }
  </script>
  
</head>
<body>
<div id="summary">
  <h1>ValidationError
       at /webhook/messages/create</h1>
  <pre class="exception_value">[&#x27;o valor “[True]”  deve ser True ou False.&#x27;]</pre>
  <table class="meta">

    <tr>
      <th>Request Method:</th>
      <td>POST</td>
    </tr>
    <tr>
      <th>Request URL:</th>
      <td>http://woz.serveo.net/webhook/messages/create?phone=5588988562749&amp;period=05%2F23</td>
    </tr>

    <tr>
      <th>Django Version:</th>
      <td>4.2.1</td>
    </tr>

    <tr>
      <th>Exception Type:</th>
      <td>ValidationError</td>
    </tr>


    <tr>
      <th>Exception Value:</th>
      <td><pre>[&#x27;o valor “[True]”  deve ser True ou False.&#x27;]</pre></td>
    </tr>


    <tr>
      <th>Exception Location:</th>
      <td><span class="fname">/home/jpfilho/.local/lib/python3.10/site-packages/django/db/models/fields/__init__.py</span>, line 1112, in to_python</td>
    </tr>


    <tr>
      <th>Raised during:</th>
      <td>messages_api.views.MessageViewSet</td>
    </tr>

    <tr>
      <th>Python Executable:</th>
      <td>/usr/bin/python3</td>
    </tr>
    <tr>
      <th>Python Version:</th>
      <td>3.10.7</td>
    </tr>
    <tr>
      <th>Python Path:</th>
      <td><pre>[&#x27;/home/jpfilho/Documents/code-ws/python/webhook&#x27;,
 &#x27;/home/jpfilho/Documents/code-ws/python/webhook&#x27;,
 &#x27;/usr/lib/python310.zip&#x27;,
 &#x27;/usr/lib/python3.10&#x27;,
 &#x27;/usr/lib/python3.10/lib-dynload&#x27;,
 &#x27;/home/jpfilho/.local/lib/python3.10/site-packages&#x27;,
 &#x27;/usr/local/lib/python3.10/dist-packages&#x27;,
 &#x27;/usr/lib/python3/dist-packages&#x27;]</pre></td>
    </tr>
    <tr>
      <th>Server time:</th>
      <td>Sun, 21 May 2023 23:47:48 +0000</td>
    </tr>
  </table>
</div>




<div id="traceback">
  <h2>Traceback <span class="commands"><a href="#" onclick="return switchPastebinFriendly(this);">
    Switch to copy-and-paste view</a></span>
  </h2>
  <div id="browserTraceback">
    <ul class="traceback">
      
        
        <li class="frame django">
          
            <code class="fname">/home/jpfilho/.local/lib/python3.10/site-packages/django/core/handlers/exception.py</code>, line 55, in inner
          

          
            <div class="context" id="c140304436873408">
              
                <ol start="48" class="pre-context" id="pre140304436873408">
                
                  <li onclick="toggle('pre140304436873408', 'post140304436873408')"><pre></pre></li>
                
                  <li onclick="toggle('pre140304436873408', 'post140304436873408')"><pre>        return inner</pre></li>
                
                  <li onclick="toggle('pre140304436873408', 'post140304436873408')"><pre>    else:</pre></li>
                
                  <li onclick="toggle('pre140304436873408', 'post140304436873408')"><pre></pre></li>
                
                  <li onclick="toggle('pre140304436873408', 'post140304436873408')"><pre>        @wraps(get_response)</pre></li>
                
                  <li onclick="toggle('pre140304436873408', 'post140304436873408')"><pre>        def inner(request):</pre></li>
                
                  <li onclick="toggle('pre140304436873408', 'post140304436873408')"><pre>            try:</pre></li>
                
                </ol>
              
              <ol start="55" class="context-line">
                <li onclick="toggle('pre140304436873408', 'post140304436873408')"><pre>                response = get_response(request)</pre> <span>…</span></li>
              </ol>
              
                <ol start='56' class="post-context" id="post140304436873408">
                  
                  <li onclick="toggle('pre140304436873408', 'post140304436873408')"><pre>            except Exception as exc:</pre></li>
                  
                  <li onclick="toggle('pre140304436873408', 'post140304436873408')"><pre>                response = response_for_exception(request, exc)</pre></li>
                  
                  <li onclick="toggle('pre140304436873408', 'post140304436873408')"><pre>            return response</pre></li>
                  
                  <li onclick="toggle('pre140304436873408', 'post140304436873408')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140304436873408', 'post140304436873408')"><pre>        return inner</pre></li>
                  
                  <li onclick="toggle('pre140304436873408', 'post140304436873408')"><pre></pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v140304436873408">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>exc</td>
                    <td class="code"><pre>ValidationError([&#x27;o valor “[True]”  deve ser True ou False.&#x27;])</pre></td>
                  </tr>
                
                  <tr>
                    <td>get_response</td>
                    <td class="code"><pre>&lt;bound method BaseHandler._get_response of &lt;django.core.handlers.wsgi.WSGIHandler object at 0x7f9b2c564250&gt;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>request</td>
                    <td class="code"><pre>&lt;WSGIRequest: POST &#x27;/webhook/messages/create?phone=5588988562749&amp;period=05%2F23&#x27;&gt;</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
        <li class="frame django">
          
            <code class="fname">/home/jpfilho/.local/lib/python3.10/site-packages/django/core/handlers/base.py</code>, line 197, in _get_response
          

          
            <div class="context" id="c140304436873728">
              
                <ol start="190" class="pre-context" id="pre140304436873728">
                
                  <li onclick="toggle('pre140304436873728', 'post140304436873728')"><pre></pre></li>
                
                  <li onclick="toggle('pre140304436873728', 'post140304436873728')"><pre>        if response is None:</pre></li>
                
                  <li onclick="toggle('pre140304436873728', 'post140304436873728')"><pre>            wrapped_callback = self.make_view_atomic(callback)</pre></li>
                
                  <li onclick="toggle('pre140304436873728', 'post140304436873728')"><pre>            # If it is an asynchronous view, run it in a subthread.</pre></li>
                
                  <li onclick="toggle('pre140304436873728', 'post140304436873728')"><pre>            if iscoroutinefunction(wrapped_callback):</pre></li>
                
                  <li onclick="toggle('pre140304436873728', 'post140304436873728')"><pre>                wrapped_callback = async_to_sync(wrapped_callback)</pre></li>
                
                  <li onclick="toggle('pre140304436873728', 'post140304436873728')"><pre>            try:</pre></li>
                
                </ol>
              
              <ol start="197" class="context-line">
                <li onclick="toggle('pre140304436873728', 'post140304436873728')"><pre>                response = wrapped_callback(request, *callback_args, **callback_kwargs)</pre> <span>…</span></li>
              </ol>
              
                <ol start='198' class="post-context" id="post140304436873728">
                  
                  <li onclick="toggle('pre140304436873728', 'post140304436873728')"><pre>            except Exception as e:</pre></li>
                  
                  <li onclick="toggle('pre140304436873728', 'post140304436873728')"><pre>                response = self.process_exception_by_middleware(e, request)</pre></li>
                  
                  <li onclick="toggle('pre140304436873728', 'post140304436873728')"><pre>                if response is None:</pre></li>
                  
                  <li onclick="toggle('pre140304436873728', 'post140304436873728')"><pre>                    raise</pre></li>
                  
                  <li onclick="toggle('pre140304436873728', 'post140304436873728')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140304436873728', 'post140304436873728')"><pre>        # Complain if the view returned None (a common error).</pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v140304436873728">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>callback</td>
                    <td class="code"><pre>&lt;function MessageViewSet at 0x7f9b2c9d2560&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>callback_args</td>
                    <td class="code"><pre>()</pre></td>
                  </tr>
                
                  <tr>
                    <td>callback_kwargs</td>
                    <td class="code"><pre>{}</pre></td>
                  </tr>
                
                  <tr>
                    <td>middleware_method</td>
                    <td class="code"><pre>&lt;bound method CsrfViewMiddleware.process_view of &lt;CsrfViewMiddleware get_response=convert_exception_to_response.&lt;locals&gt;.inner&gt;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>request</td>
                    <td class="code"><pre>&lt;WSGIRequest: POST &#x27;/webhook/messages/create?phone=5588988562749&amp;period=05%2F23&#x27;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>response</td>
                    <td class="code"><pre>None</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;django.core.handlers.wsgi.WSGIHandler object at 0x7f9b2c564250&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>wrapped_callback</td>
                    <td class="code"><pre>&lt;function MessageViewSet at 0x7f9b2c9d2560&gt;</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
        <li class="frame django">
          
            <code class="fname">/home/jpfilho/.local/lib/python3.10/site-packages/django/views/decorators/csrf.py</code>, line 56, in wrapper_view
          

          
            <div class="context" id="c140304436872000">
              
                <ol start="49" class="pre-context" id="pre140304436872000">
                
                  <li onclick="toggle('pre140304436872000', 'post140304436872000')"><pre>def csrf_exempt(view_func):</pre></li>
                
                  <li onclick="toggle('pre140304436872000', 'post140304436872000')"><pre>    &quot;&quot;&quot;Mark a view function as being exempt from the CSRF view protection.&quot;&quot;&quot;</pre></li>
                
                  <li onclick="toggle('pre140304436872000', 'post140304436872000')"><pre></pre></li>
                
                  <li onclick="toggle('pre140304436872000', 'post140304436872000')"><pre>    # view_func.csrf_exempt = True would also work, but decorators are nicer</pre></li>
                
                  <li onclick="toggle('pre140304436872000', 'post140304436872000')"><pre>    # if they don&#x27;t have side effects, so return a new function.</pre></li>
                
                  <li onclick="toggle('pre140304436872000', 'post140304436872000')"><pre>    @wraps(view_func)</pre></li>
                
                  <li onclick="toggle('pre140304436872000', 'post140304436872000')"><pre>    def wrapper_view(*args, **kwargs):</pre></li>
                
                </ol>
              
              <ol start="56" class="context-line">
                <li onclick="toggle('pre140304436872000', 'post140304436872000')"><pre>        return view_func(*args, **kwargs)</pre> <span>…</span></li>
              </ol>
              
                <ol start='57' class="post-context" id="post140304436872000">
                  
                  <li onclick="toggle('pre140304436872000', 'post140304436872000')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140304436872000', 'post140304436872000')"><pre>    wrapper_view.csrf_exempt = True</pre></li>
                  
                  <li onclick="toggle('pre140304436872000', 'post140304436872000')"><pre>    return wrapper_view</pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v140304436872000">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>args</td>
                    <td class="code"><pre>(&lt;WSGIRequest: POST &#x27;/webhook/messages/create?phone=5588988562749&amp;period=05%2F23&#x27;&gt;,)</pre></td>
                  </tr>
                
                  <tr>
                    <td>kwargs</td>
                    <td class="code"><pre>{}</pre></td>
                  </tr>
                
                  <tr>
                    <td>view_func</td>
                    <td class="code"><pre>&lt;function MessageViewSet at 0x7f9b2c9d24d0&gt;</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
        <li class="frame user">
          
            <code class="fname">/home/jpfilho/.local/lib/python3.10/site-packages/rest_framework/viewsets.py</code>, line 125, in view
          

          
            <div class="context" id="c140304397644224">
              
                <ol start="118" class="pre-context" id="pre140304397644224">
                
                  <li onclick="toggle('pre140304397644224', 'post140304397644224')"><pre>                setattr(self, method, handler)</pre></li>
                
                  <li onclick="toggle('pre140304397644224', 'post140304397644224')"><pre></pre></li>
                
                  <li onclick="toggle('pre140304397644224', 'post140304397644224')"><pre>            self.request = request</pre></li>
                
                  <li onclick="toggle('pre140304397644224', 'post140304397644224')"><pre>            self.args = args</pre></li>
                
                  <li onclick="toggle('pre140304397644224', 'post140304397644224')"><pre>            self.kwargs = kwargs</pre></li>
                
                  <li onclick="toggle('pre140304397644224', 'post140304397644224')"><pre></pre></li>
                
                  <li onclick="toggle('pre140304397644224', 'post140304397644224')"><pre>            # And continue as usual</pre></li>
                
                </ol>
              
              <ol start="125" class="context-line">
                <li onclick="toggle('pre140304397644224', 'post140304397644224')"><pre>            return self.dispatch(request, *args, **kwargs)</pre> <span>…</span></li>
              </ol>
              
                <ol start='126' class="post-context" id="post140304397644224">
                  
                  <li onclick="toggle('pre140304397644224', 'post140304397644224')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140304397644224', 'post140304397644224')"><pre>        # take name and docstring from class</pre></li>
                  
                  <li onclick="toggle('pre140304397644224', 'post140304397644224')"><pre>        update_wrapper(view, cls, updated=())</pre></li>
                  
                  <li onclick="toggle('pre140304397644224', 'post140304397644224')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140304397644224', 'post140304397644224')"><pre>        # and possible attributes set by decorators</pre></li>
                  
                  <li onclick="toggle('pre140304397644224', 'post140304397644224')"><pre>        # like csrf_exempt from dispatch</pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v140304397644224">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>action</td>
                    <td class="code"><pre>&#x27;create&#x27;</pre></td>
                  </tr>
                
                  <tr>
                    <td>actions</td>
                    <td class="code"><pre>{&#x27;post&#x27;: &#x27;create&#x27;}</pre></td>
                  </tr>
                
                  <tr>
                    <td>args</td>
                    <td class="code"><pre>()</pre></td>
                  </tr>
                
                  <tr>
                    <td>cls</td>
                    <td class="code"><pre>&lt;class &#x27;messages_api.views.MessageViewSet&#x27;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>handler</td>
                    <td class="code"><pre>&lt;bound method MessageViewSet.create of &lt;messages_api.views.MessageViewSet object at 0x7f9b2c163460&gt;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>initkwargs</td>
                    <td class="code"><pre>{}</pre></td>
                  </tr>
                
                  <tr>
                    <td>kwargs</td>
                    <td class="code"><pre>{}</pre></td>
                  </tr>
                
                  <tr>
                    <td>method</td>
                    <td class="code"><pre>&#x27;post&#x27;</pre></td>
                  </tr>
                
                  <tr>
                    <td>request</td>
                    <td class="code"><pre>&lt;WSGIRequest: POST &#x27;/webhook/messages/create?phone=5588988562749&amp;period=05%2F23&#x27;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;messages_api.views.MessageViewSet object at 0x7f9b2c163460&gt;</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
        <li class="frame user">
          
            <code class="fname">/home/jpfilho/.local/lib/python3.10/site-packages/rest_framework/views.py</code>, line 509, in dispatch
          

          
            <div class="context" id="c140304436874176">
              
                <ol start="502" class="pre-context" id="pre140304436874176">
                
                  <li onclick="toggle('pre140304436874176', 'post140304436874176')"><pre>                                  self.http_method_not_allowed)</pre></li>
                
                  <li onclick="toggle('pre140304436874176', 'post140304436874176')"><pre>            else:</pre></li>
                
                  <li onclick="toggle('pre140304436874176', 'post140304436874176')"><pre>                handler = self.http_method_not_allowed</pre></li>
                
                  <li onclick="toggle('pre140304436874176', 'post140304436874176')"><pre></pre></li>
                
                  <li onclick="toggle('pre140304436874176', 'post140304436874176')"><pre>            response = handler(request, *args, **kwargs)</pre></li>
                
                  <li onclick="toggle('pre140304436874176', 'post140304436874176')"><pre></pre></li>
                
                  <li onclick="toggle('pre140304436874176', 'post140304436874176')"><pre>        except Exception as exc:</pre></li>
                
                </ol>
              
              <ol start="509" class="context-line">
                <li onclick="toggle('pre140304436874176', 'post140304436874176')"><pre>            response = self.handle_exception(exc)</pre> <span>…</span></li>
              </ol>
              
                <ol start='510' class="post-context" id="post140304436874176">
                  
                  <li onclick="toggle('pre140304436874176', 'post140304436874176')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140304436874176', 'post140304436874176')"><pre>        self.response = self.finalize_response(request, response, *args, **kwargs)</pre></li>
                  
                  <li onclick="toggle('pre140304436874176', 'post140304436874176')"><pre>        return self.response</pre></li>
                  
                  <li onclick="toggle('pre140304436874176', 'post140304436874176')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140304436874176', 'post140304436874176')"><pre>    def options(self, request, *args, **kwargs):</pre></li>
                  
                  <li onclick="toggle('pre140304436874176', 'post140304436874176')"><pre>        &quot;&quot;&quot;</pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v140304436874176">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>args</td>
                    <td class="code"><pre>()</pre></td>
                  </tr>
                
                  <tr>
                    <td>handler</td>
                    <td class="code"><pre>&lt;bound method MessageViewSet.create of &lt;messages_api.views.MessageViewSet object at 0x7f9b2c163460&gt;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>kwargs</td>
                    <td class="code"><pre>{}</pre></td>
                  </tr>
                
                  <tr>
                    <td>request</td>
                    <td class="code"><pre>&lt;rest_framework.request.Request: POST &#x27;/webhook/messages/create?phone=5588988562749&amp;period=05%2F23&#x27;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;messages_api.views.MessageViewSet object at 0x7f9b2c163460&gt;</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
        <li class="frame user">
          
            <code class="fname">/home/jpfilho/.local/lib/python3.10/site-packages/rest_framework/views.py</code>, line 469, in handle_exception
          

          
            <div class="context" id="c140304436873344">
              
                <ol start="462" class="pre-context" id="pre140304436873344">
                
                  <li onclick="toggle('pre140304436873344', 'post140304436873344')"><pre></pre></li>
                
                  <li onclick="toggle('pre140304436873344', 'post140304436873344')"><pre>        exception_handler = self.get_exception_handler()</pre></li>
                
                  <li onclick="toggle('pre140304436873344', 'post140304436873344')"><pre></pre></li>
                
                  <li onclick="toggle('pre140304436873344', 'post140304436873344')"><pre>        context = self.get_exception_handler_context()</pre></li>
                
                  <li onclick="toggle('pre140304436873344', 'post140304436873344')"><pre>        response = exception_handler(exc, context)</pre></li>
                
                  <li onclick="toggle('pre140304436873344', 'post140304436873344')"><pre></pre></li>
                
                  <li onclick="toggle('pre140304436873344', 'post140304436873344')"><pre>        if response is None:</pre></li>
                
                </ol>
              
              <ol start="469" class="context-line">
                <li onclick="toggle('pre140304436873344', 'post140304436873344')"><pre>            self.raise_uncaught_exception(exc)</pre> <span>…</span></li>
              </ol>
              
                <ol start='470' class="post-context" id="post140304436873344">
                  
                  <li onclick="toggle('pre140304436873344', 'post140304436873344')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140304436873344', 'post140304436873344')"><pre>        response.exception = True</pre></li>
                  
                  <li onclick="toggle('pre140304436873344', 'post140304436873344')"><pre>        return response</pre></li>
                  
                  <li onclick="toggle('pre140304436873344', 'post140304436873344')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140304436873344', 'post140304436873344')"><pre>    def raise_uncaught_exception(self, exc):</pre></li>
                  
                  <li onclick="toggle('pre140304436873344', 'post140304436873344')"><pre>        if settings.DEBUG:</pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v140304436873344">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>context</td>
                    <td class="code"><pre>{&#x27;args&#x27;: (),
 &#x27;kwargs&#x27;: {},
 &#x27;request&#x27;: &lt;rest_framework.request.Request: POST &#x27;/webhook/messages/create?phone=5588988562749&amp;period=05%2F23&#x27;&gt;,
 &#x27;view&#x27;: &lt;messages_api.views.MessageViewSet object at 0x7f9b2c163460&gt;}</pre></td>
                  </tr>
                
                  <tr>
                    <td>exc</td>
                    <td class="code"><pre>ValidationError([&#x27;o valor “[True]”  deve ser True ou False.&#x27;])</pre></td>
                  </tr>
                
                  <tr>
                    <td>exception_handler</td>
                    <td class="code"><pre>&lt;function exception_handler at 0x7f9b2c998700&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>response</td>
                    <td class="code"><pre>None</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;messages_api.views.MessageViewSet object at 0x7f9b2c163460&gt;</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
        <li class="frame user">
          
            <code class="fname">/home/jpfilho/.local/lib/python3.10/site-packages/rest_framework/views.py</code>, line 480, in raise_uncaught_exception
          

          
            <div class="context" id="c140304436871552">
              
                <ol start="473" class="pre-context" id="pre140304436871552">
                
                  <li onclick="toggle('pre140304436871552', 'post140304436871552')"><pre></pre></li>
                
                  <li onclick="toggle('pre140304436871552', 'post140304436871552')"><pre>    def raise_uncaught_exception(self, exc):</pre></li>
                
                  <li onclick="toggle('pre140304436871552', 'post140304436871552')"><pre>        if settings.DEBUG:</pre></li>
                
                  <li onclick="toggle('pre140304436871552', 'post140304436871552')"><pre>            request = self.request</pre></li>
                
                  <li onclick="toggle('pre140304436871552', 'post140304436871552')"><pre>            renderer_format = getattr(request.accepted_renderer, &#x27;format&#x27;)</pre></li>
                
                  <li onclick="toggle('pre140304436871552', 'post140304436871552')"><pre>            use_plaintext_traceback = renderer_format not in (&#x27;html&#x27;, &#x27;api&#x27;, &#x27;admin&#x27;)</pre></li>
                
                  <li onclick="toggle('pre140304436871552', 'post140304436871552')"><pre>            request.force_plaintext_errors(use_plaintext_traceback)</pre></li>
                
                </ol>
              
              <ol start="480" class="context-line">
                <li onclick="toggle('pre140304436871552', 'post140304436871552')"><pre>        raise exc</pre> <span>…</span></li>
              </ol>
              
                <ol start='481' class="post-context" id="post140304436871552">
                  
                  <li onclick="toggle('pre140304436871552', 'post140304436871552')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140304436871552', 'post140304436871552')"><pre>    # Note: Views are made CSRF exempt from within `as_view` as to prevent</pre></li>
                  
                  <li onclick="toggle('pre140304436871552', 'post140304436871552')"><pre>    # accidental removal of this exemption in cases where `dispatch` needs to</pre></li>
                  
                  <li onclick="toggle('pre140304436871552', 'post140304436871552')"><pre>    # be overridden.</pre></li>
                  
                  <li onclick="toggle('pre140304436871552', 'post140304436871552')"><pre>    def dispatch(self, request, *args, **kwargs):</pre></li>
                  
                  <li onclick="toggle('pre140304436871552', 'post140304436871552')"><pre>        &quot;&quot;&quot;</pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v140304436871552">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>exc</td>
                    <td class="code"><pre>ValidationError([&#x27;o valor “[True]”  deve ser True ou False.&#x27;])</pre></td>
                  </tr>
                
                  <tr>
                    <td>renderer_format</td>
                    <td class="code"><pre>&#x27;json&#x27;</pre></td>
                  </tr>
                
                  <tr>
                    <td>request</td>
                    <td class="code"><pre>&lt;rest_framework.request.Request: POST &#x27;/webhook/messages/create?phone=5588988562749&amp;period=05%2F23&#x27;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;messages_api.views.MessageViewSet object at 0x7f9b2c163460&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>use_plaintext_traceback</td>
                    <td class="code"><pre>True</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
        <li class="frame user">
          
            <code class="fname">/home/jpfilho/.local/lib/python3.10/site-packages/rest_framework/views.py</code>, line 506, in dispatch
          

          
            <div class="context" id="c140304397462336">
              
                <ol start="499" class="pre-context" id="pre140304397462336">
                
                  <li onclick="toggle('pre140304397462336', 'post140304397462336')"><pre>            # Get the appropriate handler method</pre></li>
                
                  <li onclick="toggle('pre140304397462336', 'post140304397462336')"><pre>            if request.method.lower() in self.http_method_names:</pre></li>
                
                  <li onclick="toggle('pre140304397462336', 'post140304397462336')"><pre>                handler = getattr(self, request.method.lower(),</pre></li>
                
                  <li onclick="toggle('pre140304397462336', 'post140304397462336')"><pre>                                  self.http_method_not_allowed)</pre></li>
                
                  <li onclick="toggle('pre140304397462336', 'post140304397462336')"><pre>            else:</pre></li>
                
                  <li onclick="toggle('pre140304397462336', 'post140304397462336')"><pre>                handler = self.http_method_not_allowed</pre></li>
                
                  <li onclick="toggle('pre140304397462336', 'post140304397462336')"><pre></pre></li>
                
                </ol>
              
              <ol start="506" class="context-line">
                <li onclick="toggle('pre140304397462336', 'post140304397462336')"><pre>            response = handler(request, *args, **kwargs)</pre> <span>…</span></li>
              </ol>
              
                <ol start='507' class="post-context" id="post140304397462336">
                  
                  <li onclick="toggle('pre140304397462336', 'post140304397462336')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140304397462336', 'post140304397462336')"><pre>        except Exception as exc:</pre></li>
                  
                  <li onclick="toggle('pre140304397462336', 'post140304397462336')"><pre>            response = self.handle_exception(exc)</pre></li>
                  
                  <li onclick="toggle('pre140304397462336', 'post140304397462336')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140304397462336', 'post140304397462336')"><pre>        self.response = self.finalize_response(request, response, *args, **kwargs)</pre></li>
                  
                  <li onclick="toggle('pre140304397462336', 'post140304397462336')"><pre>        return self.response</pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v140304397462336">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>args</td>
                    <td class="code"><pre>()</pre></td>
                  </tr>
                
                  <tr>
                    <td>handler</td>
                    <td class="code"><pre>&lt;bound method MessageViewSet.create of &lt;messages_api.views.MessageViewSet object at 0x7f9b2c163460&gt;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>kwargs</td>
                    <td class="code"><pre>{}</pre></td>
                  </tr>
                
                  <tr>
                    <td>request</td>
                    <td class="code"><pre>&lt;rest_framework.request.Request: POST &#x27;/webhook/messages/create?phone=5588988562749&amp;period=05%2F23&#x27;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;messages_api.views.MessageViewSet object at 0x7f9b2c163460&gt;</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
        <li class="frame user">
          
            <code class="fname">/home/jpfilho/Documents/code-ws/python/webhook/messages_api/views.py</code>, line 153, in create
          

          
            <div class="context" id="c140304436873664">
              
                <ol start="146" class="pre-context" id="pre140304436873664">
                
                  <li onclick="toggle('pre140304436873664', 'post140304436873664')"><pre>        except ValueError:</pre></li>
                
                  <li onclick="toggle('pre140304436873664', 'post140304436873664')"><pre>            return Response({&#x27;error&#x27;: &#x27;Invalid period format, should be YYYY-MM-DD or MM-YY.&#x27;}, status=400)</pre></li>
                
                  <li onclick="toggle('pre140304436873664', 'post140304436873664')"><pre></pre></li>
                
                  <li onclick="toggle('pre140304436873664', 'post140304436873664')"><pre>        if len(period) == 5:</pre></li>
                
                  <li onclick="toggle('pre140304436873664', 'post140304436873664')"><pre>            period = dt.now().strftime(</pre></li>
                
                  <li onclick="toggle('pre140304436873664', 'post140304436873664')"><pre>                &#x27;%Y-&#x27;) + period[-2:] + &#x27;-&#x27; + period[:2] + &#x27; 00:00:00&#x27;</pre></li>
                
                  <li onclick="toggle('pre140304436873664', 'post140304436873664')"><pre>        try:</pre></li>
                
                </ol>
              
              <ol start="153" class="context-line">
                <li onclick="toggle('pre140304436873664', 'post140304436873664')"><pre>            message = Message.objects.create(</pre> <span>…</span></li>
              </ol>
              
                <ol start='154' class="post-context" id="post140304436873664">
                  
                  <li onclick="toggle('pre140304436873664', 'post140304436873664')"><pre>                contact_id=contact_id,</pre></li>
                  
                  <li onclick="toggle('pre140304436873664', 'post140304436873664')"><pre>                contact_number=contact_number,</pre></li>
                  
                  <li onclick="toggle('pre140304436873664', 'post140304436873664')"><pre>                period=period,</pre></li>
                  
                  <li onclick="toggle('pre140304436873664', 'post140304436873664')"><pre>                timestamp=timestamp,</pre></li>
                  
                  <li onclick="toggle('pre140304436873664', 'post140304436873664')"><pre>                status=status,</pre></li>
                  
                  <li onclick="toggle('pre140304436873664', 'post140304436873664')"><pre>                message_id=message_id,</pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v140304436873664">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>args</td>
                    <td class="code"><pre>()</pre></td>
                  </tr>
                
                  <tr>
                    <td>contact_id</td>
                    <td class="code"><pre>&#x27;79db7607-6088-44c1-a010-ed4ef39d4f37&#x27;</pre></td>
                  </tr>
                
                  <tr>
                    <td>contact_number</td>
                    <td class="code"><pre>&#x27;5588988562749&#x27;</pre></td>
                  </tr>
                
                  <tr>
                    <td>isFromMe</td>
                    <td class="code"><pre>[True]</pre></td>
                  </tr>
                
                  <tr>
                    <td>kwargs</td>
                    <td class="code"><pre>{}</pre></td>
                  </tr>
                
                  <tr>
                    <td>message_id</td>
                    <td class="code"><pre>&#x27;2172fdff-2979-4c81-860a-f4a45f2b9a5b&#x27;</pre></td>
                  </tr>
                
                  <tr>
                    <td>message_type</td>
                    <td class="code"><pre>&#x27;chat&#x27;</pre></td>
                  </tr>
                
                  <tr>
                    <td>period</td>
                    <td class="code"><pre>&#x27;2023-05-01&#x27;</pre></td>
                  </tr>
                
                  <tr>
                    <td>request</td>
                    <td class="code"><pre>&lt;rest_framework.request.Request: POST &#x27;/webhook/messages/create?phone=5588988562749&amp;period=05%2F23&#x27;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;messages_api.views.MessageViewSet object at 0x7f9b2c163460&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>status</td>
                    <td class="code"><pre>0</pre></td>
                  </tr>
                
                  <tr>
                    <td>ticket_id</td>
                    <td class="code"><pre>&#x27;e5a453e9-6cb1-476e-b416-3b334b0bc61a&#x27;</pre></td>
                  </tr>
                
                  <tr>
                    <td>timestamp</td>
                    <td class="code"><pre>&#x27;2023-05-21T23:47:43.464Z&#x27;</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
        <li class="frame django">
          
            <code class="fname">/home/jpfilho/.local/lib/python3.10/site-packages/django/db/models/manager.py</code>, line 87, in manager_method
          

          
            <div class="context" id="c140304424118784">
              
                <ol start="80" class="pre-context" id="pre140304424118784">
                
                  <li onclick="toggle('pre140304424118784', 'post140304424118784')"><pre>        return []</pre></li>
                
                  <li onclick="toggle('pre140304424118784', 'post140304424118784')"><pre></pre></li>
                
                  <li onclick="toggle('pre140304424118784', 'post140304424118784')"><pre>    @classmethod</pre></li>
                
                  <li onclick="toggle('pre140304424118784', 'post140304424118784')"><pre>    def _get_queryset_methods(cls, queryset_class):</pre></li>
                
                  <li onclick="toggle('pre140304424118784', 'post140304424118784')"><pre>        def create_method(name, method):</pre></li>
                
                  <li onclick="toggle('pre140304424118784', 'post140304424118784')"><pre>            @wraps(method)</pre></li>
                
                  <li onclick="toggle('pre140304424118784', 'post140304424118784')"><pre>            def manager_method(self, *args, **kwargs):</pre></li>
                
                </ol>
              
              <ol start="87" class="context-line">
                <li onclick="toggle('pre140304424118784', 'post140304424118784')"><pre>                return getattr(self.get_queryset(), name)(*args, **kwargs)</pre> <span>…</span></li>
              </ol>
              
                <ol start='88' class="post-context" id="post140304424118784">
                  
                  <li onclick="toggle('pre140304424118784', 'post140304424118784')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140304424118784', 'post140304424118784')"><pre>            return manager_method</pre></li>
                  
                  <li onclick="toggle('pre140304424118784', 'post140304424118784')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140304424118784', 'post140304424118784')"><pre>        new_methods = {}</pre></li>
                  
                  <li onclick="toggle('pre140304424118784', 'post140304424118784')"><pre>        for name, method in inspect.getmembers(</pre></li>
                  
                  <li onclick="toggle('pre140304424118784', 'post140304424118784')"><pre>            queryset_class, predicate=inspect.isfunction</pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v140304424118784">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>args</td>
                    <td class="code"><pre>()</pre></td>
                  </tr>
                
                  <tr>
                    <td>kwargs</td>
                    <td class="code"><pre>{&#x27;contact_id&#x27;: &#x27;79db7607-6088-44c1-a010-ed4ef39d4f37&#x27;,
 &#x27;contact_number&#x27;: &#x27;5588988562749&#x27;,
 &#x27;is_from_me&#x27;: [True],
 &#x27;message_id&#x27;: &#x27;2172fdff-2979-4c81-860a-f4a45f2b9a5b&#x27;,
 &#x27;message_type&#x27;: &#x27;chat&#x27;,
 &#x27;period&#x27;: &#x27;2023-05-01&#x27;,
 &#x27;retries&#x27;: 0,
 &#x27;status&#x27;: 0,
 &#x27;ticket_service_id&#x27;: &#x27;e5a453e9-6cb1-476e-b416-3b334b0bc61a&#x27;,
 &#x27;timestamp&#x27;: &#x27;2023-05-21T23:47:43.464Z&#x27;}</pre></td>
                  </tr>
                
                  <tr>
                    <td>name</td>
                    <td class="code"><pre>&#x27;create&#x27;</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;django.db.models.manager.Manager object at 0x7f9b2d54ffd0&gt;</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
        <li class="frame django">
          
            <code class="fname">/home/jpfilho/.local/lib/python3.10/site-packages/django/db/models/query.py</code>, line 658, in create
          

          
            <div class="context" id="c140304397344576">
              
                <ol start="651" class="pre-context" id="pre140304397344576">
                
                  <li onclick="toggle('pre140304397344576', 'post140304397344576')"><pre>    def create(self, **kwargs):</pre></li>
                
                  <li onclick="toggle('pre140304397344576', 'post140304397344576')"><pre>        &quot;&quot;&quot;</pre></li>
                
                  <li onclick="toggle('pre140304397344576', 'post140304397344576')"><pre>        Create a new object with the given kwargs, saving it to the database</pre></li>
                
                  <li onclick="toggle('pre140304397344576', 'post140304397344576')"><pre>        and returning the created object.</pre></li>
                
                  <li onclick="toggle('pre140304397344576', 'post140304397344576')"><pre>        &quot;&quot;&quot;</pre></li>
                
                  <li onclick="toggle('pre140304397344576', 'post140304397344576')"><pre>        obj = self.model(**kwargs)</pre></li>
                
                  <li onclick="toggle('pre140304397344576', 'post140304397344576')"><pre>        self._for_write = True</pre></li>
                
                </ol>
              
              <ol start="658" class="context-line">
                <li onclick="toggle('pre140304397344576', 'post140304397344576')"><pre>        obj.save(force_insert=True, using=self.db)</pre> <span>…</span></li>
              </ol>
              
                <ol start='659' class="post-context" id="post140304397344576">
                  
                  <li onclick="toggle('pre140304397344576', 'post140304397344576')"><pre>        return obj</pre></li>
                  
                  <li onclick="toggle('pre140304397344576', 'post140304397344576')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140304397344576', 'post140304397344576')"><pre>    async def acreate(self, **kwargs):</pre></li>
                  
                  <li onclick="toggle('pre140304397344576', 'post140304397344576')"><pre>        return await sync_to_async(self.create)(**kwargs)</pre></li>
                  
                  <li onclick="toggle('pre140304397344576', 'post140304397344576')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140304397344576', 'post140304397344576')"><pre>    def _prepare_for_bulk_create(self, objs):</pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v140304397344576">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>kwargs</td>
                    <td class="code"><pre>{&#x27;contact_id&#x27;: &#x27;79db7607-6088-44c1-a010-ed4ef39d4f37&#x27;,
 &#x27;contact_number&#x27;: &#x27;5588988562749&#x27;,
 &#x27;is_from_me&#x27;: [True],
 &#x27;message_id&#x27;: &#x27;2172fdff-2979-4c81-860a-f4a45f2b9a5b&#x27;,
 &#x27;message_type&#x27;: &#x27;chat&#x27;,
 &#x27;period&#x27;: &#x27;2023-05-01&#x27;,
 &#x27;retries&#x27;: 0,
 &#x27;status&#x27;: 0,
 &#x27;ticket_service_id&#x27;: &#x27;e5a453e9-6cb1-476e-b416-3b334b0bc61a&#x27;,
 &#x27;timestamp&#x27;: &#x27;2023-05-21T23:47:43.464Z&#x27;}</pre></td>
                  </tr>
                
                  <tr>
                    <td>obj</td>
                    <td class="code"><pre>&lt;Message: 5588988562749 - 2023-05-01 - 0&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;QuerySet []&gt;</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
        <li class="frame django">
          
            <code class="fname">/home/jpfilho/.local/lib/python3.10/site-packages/django/db/models/base.py</code>, line 814, in save
          

          
            <div class="context" id="c140304424116672">
              
                <ol start="807" class="pre-context" id="pre140304424116672">
                
                  <li onclick="toggle('pre140304424116672', 'post140304424116672')"><pre>            for field in self._meta.concrete_fields:</pre></li>
                
                  <li onclick="toggle('pre140304424116672', 'post140304424116672')"><pre>                if not field.primary_key and not hasattr(field, &quot;through&quot;):</pre></li>
                
                  <li onclick="toggle('pre140304424116672', 'post140304424116672')"><pre>                    field_names.add(field.attname)</pre></li>
                
                  <li onclick="toggle('pre140304424116672', 'post140304424116672')"><pre>            loaded_fields = field_names.difference(deferred_fields)</pre></li>
                
                  <li onclick="toggle('pre140304424116672', 'post140304424116672')"><pre>            if loaded_fields:</pre></li>
                
                  <li onclick="toggle('pre140304424116672', 'post140304424116672')"><pre>                update_fields = frozenset(loaded_fields)</pre></li>
                
                  <li onclick="toggle('pre140304424116672', 'post140304424116672')"><pre></pre></li>
                
                </ol>
              
              <ol start="814" class="context-line">
                <li onclick="toggle('pre140304424116672', 'post140304424116672')"><pre>        self.save_base(</pre> <span>…</span></li>
              </ol>
              
                <ol start='815' class="post-context" id="post140304424116672">
                  
                  <li onclick="toggle('pre140304424116672', 'post140304424116672')"><pre>            using=using,</pre></li>
                  
                  <li onclick="toggle('pre140304424116672', 'post140304424116672')"><pre>            force_insert=force_insert,</pre></li>
                  
                  <li onclick="toggle('pre140304424116672', 'post140304424116672')"><pre>            force_update=force_update,</pre></li>
                  
                  <li onclick="toggle('pre140304424116672', 'post140304424116672')"><pre>            update_fields=update_fields,</pre></li>
                  
                  <li onclick="toggle('pre140304424116672', 'post140304424116672')"><pre>        )</pre></li>
                  
                  <li onclick="toggle('pre140304424116672', 'post140304424116672')"><pre></pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v140304424116672">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>deferred_fields</td>
                    <td class="code"><pre>set()</pre></td>
                  </tr>
                
                  <tr>
                    <td>force_insert</td>
                    <td class="code"><pre>True</pre></td>
                  </tr>
                
                  <tr>
                    <td>force_update</td>
                    <td class="code"><pre>False</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;Message: 5588988562749 - 2023-05-01 - 0&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>update_fields</td>
                    <td class="code"><pre>None</pre></td>
                  </tr>
                
                  <tr>
                    <td>using</td>
                    <td class="code"><pre>&#x27;default&#x27;</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
        <li class="frame django">
          
            <code class="fname">/home/jpfilho/.local/lib/python3.10/site-packages/django/db/models/base.py</code>, line 877, in save_base
          

          
            <div class="context" id="c140304397466112">
              
                <ol start="870" class="pre-context" id="pre140304397466112">
                
                  <li onclick="toggle('pre140304397466112', 'post140304397466112')"><pre>            context_manager = transaction.atomic(using=using, savepoint=False)</pre></li>
                
                  <li onclick="toggle('pre140304397466112', 'post140304397466112')"><pre>        else:</pre></li>
                
                  <li onclick="toggle('pre140304397466112', 'post140304397466112')"><pre>            context_manager = transaction.mark_for_rollback_on_error(using=using)</pre></li>
                
                  <li onclick="toggle('pre140304397466112', 'post140304397466112')"><pre>        with context_manager:</pre></li>
                
                  <li onclick="toggle('pre140304397466112', 'post140304397466112')"><pre>            parent_inserted = False</pre></li>
                
                  <li onclick="toggle('pre140304397466112', 'post140304397466112')"><pre>            if not raw:</pre></li>
                
                  <li onclick="toggle('pre140304397466112', 'post140304397466112')"><pre>                parent_inserted = self._save_parents(cls, using, update_fields)</pre></li>
                
                </ol>
              
              <ol start="877" class="context-line">
                <li onclick="toggle('pre140304397466112', 'post140304397466112')"><pre>            updated = self._save_table(</pre> <span>…</span></li>
              </ol>
              
                <ol start='878' class="post-context" id="post140304397466112">
                  
                  <li onclick="toggle('pre140304397466112', 'post140304397466112')"><pre>                raw,</pre></li>
                  
                  <li onclick="toggle('pre140304397466112', 'post140304397466112')"><pre>                cls,</pre></li>
                  
                  <li onclick="toggle('pre140304397466112', 'post140304397466112')"><pre>                force_insert or parent_inserted,</pre></li>
                  
                  <li onclick="toggle('pre140304397466112', 'post140304397466112')"><pre>                force_update,</pre></li>
                  
                  <li onclick="toggle('pre140304397466112', 'post140304397466112')"><pre>                using,</pre></li>
                  
                  <li onclick="toggle('pre140304397466112', 'post140304397466112')"><pre>                update_fields,</pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v140304397466112">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>cls</td>
                    <td class="code"><pre>&lt;class &#x27;messages_api.models.Message&#x27;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>context_manager</td>
                    <td class="code"><pre>&lt;contextlib._GeneratorContextManager object at 0x7f9b2c1eb3a0&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>force_insert</td>
                    <td class="code"><pre>True</pre></td>
                  </tr>
                
                  <tr>
                    <td>force_update</td>
                    <td class="code"><pre>False</pre></td>
                  </tr>
                
                  <tr>
                    <td>meta</td>
                    <td class="code"><pre>&lt;Options for Message&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>origin</td>
                    <td class="code"><pre>&lt;class &#x27;messages_api.models.Message&#x27;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>parent_inserted</td>
                    <td class="code"><pre>False</pre></td>
                  </tr>
                
                  <tr>
                    <td>raw</td>
                    <td class="code"><pre>False</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;Message: 5588988562749 - 2023-05-01 - 0&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>update_fields</td>
                    <td class="code"><pre>None</pre></td>
                  </tr>
                
                  <tr>
                    <td>using</td>
                    <td class="code"><pre>&#x27;default&#x27;</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
        <li class="frame django">
          
            <code class="fname">/home/jpfilho/.local/lib/python3.10/site-packages/django/db/models/base.py</code>, line 1020, in _save_table
          

          
            <div class="context" id="c140304436410432">
              
                <ol start="1013" class="pre-context" id="pre140304436410432">
                
                  <li onclick="toggle('pre140304436410432', 'post140304436410432')"><pre>                    )[&quot;_order__max&quot;]</pre></li>
                
                  <li onclick="toggle('pre140304436410432', 'post140304436410432')"><pre>                )</pre></li>
                
                  <li onclick="toggle('pre140304436410432', 'post140304436410432')"><pre>            fields = meta.local_concrete_fields</pre></li>
                
                  <li onclick="toggle('pre140304436410432', 'post140304436410432')"><pre>            if not pk_set:</pre></li>
                
                  <li onclick="toggle('pre140304436410432', 'post140304436410432')"><pre>                fields = [f for f in fields if f is not meta.auto_field]</pre></li>
                
                  <li onclick="toggle('pre140304436410432', 'post140304436410432')"><pre></pre></li>
                
                  <li onclick="toggle('pre140304436410432', 'post140304436410432')"><pre>            returning_fields = meta.db_returning_fields</pre></li>
                
                </ol>
              
              <ol start="1020" class="context-line">
                <li onclick="toggle('pre140304436410432', 'post140304436410432')"><pre>            results = self._do_insert(</pre> <span>…</span></li>
              </ol>
              
                <ol start='1021' class="post-context" id="post140304436410432">
                  
                  <li onclick="toggle('pre140304436410432', 'post140304436410432')"><pre>                cls._base_manager, using, fields, returning_fields, raw</pre></li>
                  
                  <li onclick="toggle('pre140304436410432', 'post140304436410432')"><pre>            )</pre></li>
                  
                  <li onclick="toggle('pre140304436410432', 'post140304436410432')"><pre>            if results:</pre></li>
                  
                  <li onclick="toggle('pre140304436410432', 'post140304436410432')"><pre>                for value, field in zip(results[0], returning_fields):</pre></li>
                  
                  <li onclick="toggle('pre140304436410432', 'post140304436410432')"><pre>                    setattr(self, field.attname, value)</pre></li>
                  
                  <li onclick="toggle('pre140304436410432', 'post140304436410432')"><pre>        return updated</pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v140304436410432">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>cls</td>
                    <td class="code"><pre>&lt;class &#x27;messages_api.models.Message&#x27;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>fields</td>
                    <td class="code"><pre>(&lt;django.db.models.fields.CharField: message_id&gt;,
 &lt;django.db.models.fields.CharField: contact_id&gt;,
 &lt;django.db.models.fields.CharField: contact_number&gt;,
 &lt;django.db.models.fields.DateField: period&gt;,
 &lt;django.db.models.fields.DateTimeField: timestamp&gt;,
 &lt;django.db.models.fields.IntegerField: status&gt;,
 &lt;django.db.models.fields.CharField: ticket_service_id&gt;,
 &lt;django.db.models.fields.CharField: message_type&gt;,
 &lt;django.db.models.fields.BooleanField: is_from_me&gt;,
 &lt;django.db.models.fields.IntegerField: retries&gt;)</pre></td>
                  </tr>
                
                  <tr>
                    <td>force_insert</td>
                    <td class="code"><pre>True</pre></td>
                  </tr>
                
                  <tr>
                    <td>force_update</td>
                    <td class="code"><pre>False</pre></td>
                  </tr>
                
                  <tr>
                    <td>meta</td>
                    <td class="code"><pre>&lt;Options for Message&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>non_pks</td>
                    <td class="code"><pre>[&lt;django.db.models.fields.CharField: contact_id&gt;,
 &lt;django.db.models.fields.CharField: contact_number&gt;,
 &lt;django.db.models.fields.DateField: period&gt;,
 &lt;django.db.models.fields.DateTimeField: timestamp&gt;,
 &lt;django.db.models.fields.IntegerField: status&gt;,
 &lt;django.db.models.fields.CharField: ticket_service_id&gt;,
 &lt;django.db.models.fields.CharField: message_type&gt;,
 &lt;django.db.models.fields.BooleanField: is_from_me&gt;,
 &lt;django.db.models.fields.IntegerField: retries&gt;]</pre></td>
                  </tr>
                
                  <tr>
                    <td>pk_set</td>
                    <td class="code"><pre>True</pre></td>
                  </tr>
                
                  <tr>
                    <td>pk_val</td>
                    <td class="code"><pre>&#x27;2172fdff-2979-4c81-860a-f4a45f2b9a5b&#x27;</pre></td>
                  </tr>
                
                  <tr>
                    <td>raw</td>
                    <td class="code"><pre>False</pre></td>
                  </tr>
                
                  <tr>
                    <td>returning_fields</td>
                    <td class="code"><pre>[]</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;Message: 5588988562749 - 2023-05-01 - 0&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>update_fields</td>
                    <td class="code"><pre>None</pre></td>
                  </tr>
                
                  <tr>
                    <td>updated</td>
                    <td class="code"><pre>False</pre></td>
                  </tr>
                
                  <tr>
                    <td>using</td>
                    <td class="code"><pre>&#x27;default&#x27;</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
        <li class="frame django">
          
            <code class="fname">/home/jpfilho/.local/lib/python3.10/site-packages/django/db/models/base.py</code>, line 1061, in _do_insert
          

          
            <div class="context" id="c140304436402112">
              
                <ol start="1054" class="pre-context" id="pre140304436402112">
                
                  <li onclick="toggle('pre140304436402112', 'post140304436402112')"><pre>        return filtered._update(values) &gt; 0</pre></li>
                
                  <li onclick="toggle('pre140304436402112', 'post140304436402112')"><pre></pre></li>
                
                  <li onclick="toggle('pre140304436402112', 'post140304436402112')"><pre>    def _do_insert(self, manager, using, fields, returning_fields, raw):</pre></li>
                
                  <li onclick="toggle('pre140304436402112', 'post140304436402112')"><pre>        &quot;&quot;&quot;</pre></li>
                
                  <li onclick="toggle('pre140304436402112', 'post140304436402112')"><pre>        Do an INSERT. If returning_fields is defined then this method should</pre></li>
                
                  <li onclick="toggle('pre140304436402112', 'post140304436402112')"><pre>        return the newly created data for the model.</pre></li>
                
                  <li onclick="toggle('pre140304436402112', 'post140304436402112')"><pre>        &quot;&quot;&quot;</pre></li>
                
                </ol>
              
              <ol start="1061" class="context-line">
                <li onclick="toggle('pre140304436402112', 'post140304436402112')"><pre>        return manager._insert(</pre> <span>…</span></li>
              </ol>
              
                <ol start='1062' class="post-context" id="post140304436402112">
                  
                  <li onclick="toggle('pre140304436402112', 'post140304436402112')"><pre>            [self],</pre></li>
                  
                  <li onclick="toggle('pre140304436402112', 'post140304436402112')"><pre>            fields=fields,</pre></li>
                  
                  <li onclick="toggle('pre140304436402112', 'post140304436402112')"><pre>            returning_fields=returning_fields,</pre></li>
                  
                  <li onclick="toggle('pre140304436402112', 'post140304436402112')"><pre>            using=using,</pre></li>
                  
                  <li onclick="toggle('pre140304436402112', 'post140304436402112')"><pre>            raw=raw,</pre></li>
                  
                  <li onclick="toggle('pre140304436402112', 'post140304436402112')"><pre>        )</pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v140304436402112">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>fields</td>
                    <td class="code"><pre>(&lt;django.db.models.fields.CharField: message_id&gt;,
 &lt;django.db.models.fields.CharField: contact_id&gt;,
 &lt;django.db.models.fields.CharField: contact_number&gt;,
 &lt;django.db.models.fields.DateField: period&gt;,
 &lt;django.db.models.fields.DateTimeField: timestamp&gt;,
 &lt;django.db.models.fields.IntegerField: status&gt;,
 &lt;django.db.models.fields.CharField: ticket_service_id&gt;,
 &lt;django.db.models.fields.CharField: message_type&gt;,
 &lt;django.db.models.fields.BooleanField: is_from_me&gt;,
 &lt;django.db.models.fields.IntegerField: retries&gt;)</pre></td>
                  </tr>
                
                  <tr>
                    <td>manager</td>
                    <td class="code"><pre>&lt;django.db.models.manager.Manager object at 0x7f9b2c1ead70&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>raw</td>
                    <td class="code"><pre>False</pre></td>
                  </tr>
                
                  <tr>
                    <td>returning_fields</td>
                    <td class="code"><pre>[]</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;Message: 5588988562749 - 2023-05-01 - 0&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>using</td>
                    <td class="code"><pre>&#x27;default&#x27;</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
        <li class="frame django">
          
            <code class="fname">/home/jpfilho/.local/lib/python3.10/site-packages/django/db/models/manager.py</code>, line 87, in manager_method
          

          
            <div class="context" id="c140304424109696">
              
                <ol start="80" class="pre-context" id="pre140304424109696">
                
                  <li onclick="toggle('pre140304424109696', 'post140304424109696')"><pre>        return []</pre></li>
                
                  <li onclick="toggle('pre140304424109696', 'post140304424109696')"><pre></pre></li>
                
                  <li onclick="toggle('pre140304424109696', 'post140304424109696')"><pre>    @classmethod</pre></li>
                
                  <li onclick="toggle('pre140304424109696', 'post140304424109696')"><pre>    def _get_queryset_methods(cls, queryset_class):</pre></li>
                
                  <li onclick="toggle('pre140304424109696', 'post140304424109696')"><pre>        def create_method(name, method):</pre></li>
                
                  <li onclick="toggle('pre140304424109696', 'post140304424109696')"><pre>            @wraps(method)</pre></li>
                
                  <li onclick="toggle('pre140304424109696', 'post140304424109696')"><pre>            def manager_method(self, *args, **kwargs):</pre></li>
                
                </ol>
              
              <ol start="87" class="context-line">
                <li onclick="toggle('pre140304424109696', 'post140304424109696')"><pre>                return getattr(self.get_queryset(), name)(*args, **kwargs)</pre> <span>…</span></li>
              </ol>
              
                <ol start='88' class="post-context" id="post140304424109696">
                  
                  <li onclick="toggle('pre140304424109696', 'post140304424109696')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140304424109696', 'post140304424109696')"><pre>            return manager_method</pre></li>
                  
                  <li onclick="toggle('pre140304424109696', 'post140304424109696')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140304424109696', 'post140304424109696')"><pre>        new_methods = {}</pre></li>
                  
                  <li onclick="toggle('pre140304424109696', 'post140304424109696')"><pre>        for name, method in inspect.getmembers(</pre></li>
                  
                  <li onclick="toggle('pre140304424109696', 'post140304424109696')"><pre>            queryset_class, predicate=inspect.isfunction</pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v140304424109696">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>args</td>
                    <td class="code"><pre>([&lt;Message: 5588988562749 - 2023-05-01 - 0&gt;],)</pre></td>
                  </tr>
                
                  <tr>
                    <td>kwargs</td>
                    <td class="code"><pre>{&#x27;fields&#x27;: (&lt;django.db.models.fields.CharField: message_id&gt;,
            &lt;django.db.models.fields.CharField: contact_id&gt;,
            &lt;django.db.models.fields.CharField: contact_number&gt;,
            &lt;django.db.models.fields.DateField: period&gt;,
            &lt;django.db.models.fields.DateTimeField: timestamp&gt;,
            &lt;django.db.models.fields.IntegerField: status&gt;,
            &lt;django.db.models.fields.CharField: ticket_service_id&gt;,
            &lt;django.db.models.fields.CharField: message_type&gt;,
            &lt;django.db.models.fields.BooleanField: is_from_me&gt;,
            &lt;django.db.models.fields.IntegerField: retries&gt;),
 &#x27;raw&#x27;: False,
 &#x27;returning_fields&#x27;: [],
 &#x27;using&#x27;: &#x27;default&#x27;}</pre></td>
                  </tr>
                
                  <tr>
                    <td>name</td>
                    <td class="code"><pre>&#x27;_insert&#x27;</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;django.db.models.manager.Manager object at 0x7f9b2c1ead70&gt;</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
        <li class="frame django">
          
            <code class="fname">/home/jpfilho/.local/lib/python3.10/site-packages/django/db/models/query.py</code>, line 1805, in _insert
          

          
            <div class="context" id="c140304397226560">
              
                <ol start="1798" class="pre-context" id="pre140304397226560">
                
                  <li onclick="toggle('pre140304397226560', 'post140304397226560')"><pre>        query = sql.InsertQuery(</pre></li>
                
                  <li onclick="toggle('pre140304397226560', 'post140304397226560')"><pre>            self.model,</pre></li>
                
                  <li onclick="toggle('pre140304397226560', 'post140304397226560')"><pre>            on_conflict=on_conflict,</pre></li>
                
                  <li onclick="toggle('pre140304397226560', 'post140304397226560')"><pre>            update_fields=update_fields,</pre></li>
                
                  <li onclick="toggle('pre140304397226560', 'post140304397226560')"><pre>            unique_fields=unique_fields,</pre></li>
                
                  <li onclick="toggle('pre140304397226560', 'post140304397226560')"><pre>        )</pre></li>
                
                  <li onclick="toggle('pre140304397226560', 'post140304397226560')"><pre>        query.insert_values(fields, objs, raw=raw)</pre></li>
                
                </ol>
              
              <ol start="1805" class="context-line">
                <li onclick="toggle('pre140304397226560', 'post140304397226560')"><pre>        return query.get_compiler(using=using).execute_sql(returning_fields)</pre> <span>…</span></li>
              </ol>
              
                <ol start='1806' class="post-context" id="post140304397226560">
                  
                  <li onclick="toggle('pre140304397226560', 'post140304397226560')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140304397226560', 'post140304397226560')"><pre>    _insert.alters_data = True</pre></li>
                  
                  <li onclick="toggle('pre140304397226560', 'post140304397226560')"><pre>    _insert.queryset_only = False</pre></li>
                  
                  <li onclick="toggle('pre140304397226560', 'post140304397226560')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140304397226560', 'post140304397226560')"><pre>    def _batched_insert(</pre></li>
                  
                  <li onclick="toggle('pre140304397226560', 'post140304397226560')"><pre>        self,</pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v140304397226560">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>fields</td>
                    <td class="code"><pre>(&lt;django.db.models.fields.CharField: message_id&gt;,
 &lt;django.db.models.fields.CharField: contact_id&gt;,
 &lt;django.db.models.fields.CharField: contact_number&gt;,
 &lt;django.db.models.fields.DateField: period&gt;,
 &lt;django.db.models.fields.DateTimeField: timestamp&gt;,
 &lt;django.db.models.fields.IntegerField: status&gt;,
 &lt;django.db.models.fields.CharField: ticket_service_id&gt;,
 &lt;django.db.models.fields.CharField: message_type&gt;,
 &lt;django.db.models.fields.BooleanField: is_from_me&gt;,
 &lt;django.db.models.fields.IntegerField: retries&gt;)</pre></td>
                  </tr>
                
                  <tr>
                    <td>objs</td>
                    <td class="code"><pre>[&lt;Message: 5588988562749 - 2023-05-01 - 0&gt;]</pre></td>
                  </tr>
                
                  <tr>
                    <td>on_conflict</td>
                    <td class="code"><pre>None</pre></td>
                  </tr>
                
                  <tr>
                    <td>query</td>
                    <td class="code"><pre>&lt;django.db.models.sql.subqueries.InsertQuery object at 0x7f9b2c1ea5f0&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>raw</td>
                    <td class="code"><pre>False</pre></td>
                  </tr>
                
                  <tr>
                    <td>returning_fields</td>
                    <td class="code"><pre>[]</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;QuerySet []&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>unique_fields</td>
                    <td class="code"><pre>None</pre></td>
                  </tr>
                
                  <tr>
                    <td>update_fields</td>
                    <td class="code"><pre>None</pre></td>
                  </tr>
                
                  <tr>
                    <td>using</td>
                    <td class="code"><pre>&#x27;default&#x27;</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
        <li class="frame django">
          
            <code class="fname">/home/jpfilho/.local/lib/python3.10/site-packages/django/db/models/sql/compiler.py</code>, line 1819, in execute_sql
          

          
            <div class="context" id="c140304424303872">
              
                <ol start="1812" class="pre-context" id="pre140304424303872">
                
                  <li onclick="toggle('pre140304424303872', 'post140304424303872')"><pre>            returning_fields</pre></li>
                
                  <li onclick="toggle('pre140304424303872', 'post140304424303872')"><pre>            and len(self.query.objs) != 1</pre></li>
                
                  <li onclick="toggle('pre140304424303872', 'post140304424303872')"><pre>            and not self.connection.features.can_return_rows_from_bulk_insert</pre></li>
                
                  <li onclick="toggle('pre140304424303872', 'post140304424303872')"><pre>        )</pre></li>
                
                  <li onclick="toggle('pre140304424303872', 'post140304424303872')"><pre>        opts = self.query.get_meta()</pre></li>
                
                  <li onclick="toggle('pre140304424303872', 'post140304424303872')"><pre>        self.returning_fields = returning_fields</pre></li>
                
                  <li onclick="toggle('pre140304424303872', 'post140304424303872')"><pre>        with self.connection.cursor() as cursor:</pre></li>
                
                </ol>
              
              <ol start="1819" class="context-line">
                <li onclick="toggle('pre140304424303872', 'post140304424303872')"><pre>            for sql, params in self.as_sql():</pre> <span>…</span></li>
              </ol>
              
                <ol start='1820' class="post-context" id="post140304424303872">
                  
                  <li onclick="toggle('pre140304424303872', 'post140304424303872')"><pre>                cursor.execute(sql, params)</pre></li>
                  
                  <li onclick="toggle('pre140304424303872', 'post140304424303872')"><pre>            if not self.returning_fields:</pre></li>
                  
                  <li onclick="toggle('pre140304424303872', 'post140304424303872')"><pre>                return []</pre></li>
                  
                  <li onclick="toggle('pre140304424303872', 'post140304424303872')"><pre>            if (</pre></li>
                  
                  <li onclick="toggle('pre140304424303872', 'post140304424303872')"><pre>                self.connection.features.can_return_rows_from_bulk_insert</pre></li>
                  
                  <li onclick="toggle('pre140304424303872', 'post140304424303872')"><pre>                and len(self.query.objs) &gt; 1</pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v140304424303872">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>cursor</td>
                    <td class="code"><pre>&lt;django.db.backends.postgresql.base.CursorDebugWrapper object at 0x7f9b2b5dc850&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>opts</td>
                    <td class="code"><pre>&lt;Options for Message&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>returning_fields</td>
                    <td class="code"><pre>[]</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;SQLInsertCompiler model=Message connection=&lt;DatabaseWrapper vendor=&#x27;postgresql&#x27; alias=&#x27;default&#x27;&gt; using=&#x27;default&#x27;&gt;</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
        <li class="frame django">
          
            <code class="fname">/home/jpfilho/.local/lib/python3.10/site-packages/django/db/models/sql/compiler.py</code>, line 1743, in as_sql
          

          
            <div class="context" id="c140304445225280">
              
                <ol start="1736" class="pre-context" id="pre140304445225280">
                
                  <li onclick="toggle('pre140304445225280', 'post140304445225280')"><pre>            on_conflict=self.query.on_conflict,</pre></li>
                
                  <li onclick="toggle('pre140304445225280', 'post140304445225280')"><pre>        )</pre></li>
                
                  <li onclick="toggle('pre140304445225280', 'post140304445225280')"><pre>        result = [&quot;%s %s&quot; % (insert_statement, qn(opts.db_table))]</pre></li>
                
                  <li onclick="toggle('pre140304445225280', 'post140304445225280')"><pre>        fields = self.query.fields or [opts.pk]</pre></li>
                
                  <li onclick="toggle('pre140304445225280', 'post140304445225280')"><pre>        result.append(&quot;(%s)&quot; % &quot;, &quot;.join(qn(f.column) for f in fields))</pre></li>
                
                  <li onclick="toggle('pre140304445225280', 'post140304445225280')"><pre></pre></li>
                
                  <li onclick="toggle('pre140304445225280', 'post140304445225280')"><pre>        if self.query.fields:</pre></li>
                
                </ol>
              
              <ol start="1743" class="context-line">
                <li onclick="toggle('pre140304445225280', 'post140304445225280')"><pre>            value_rows = [</pre> <span>…</span></li>
              </ol>
              
                <ol start='1744' class="post-context" id="post140304445225280">
                  
                  <li onclick="toggle('pre140304445225280', 'post140304445225280')"><pre>                [</pre></li>
                  
                  <li onclick="toggle('pre140304445225280', 'post140304445225280')"><pre>                    self.prepare_value(field, self.pre_save_val(field, obj))</pre></li>
                  
                  <li onclick="toggle('pre140304445225280', 'post140304445225280')"><pre>                    for field in fields</pre></li>
                  
                  <li onclick="toggle('pre140304445225280', 'post140304445225280')"><pre>                ]</pre></li>
                  
                  <li onclick="toggle('pre140304445225280', 'post140304445225280')"><pre>                for obj in self.query.objs</pre></li>
                  
                  <li onclick="toggle('pre140304445225280', 'post140304445225280')"><pre>            ]</pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v140304445225280">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>fields</td>
                    <td class="code"><pre>(&lt;django.db.models.fields.CharField: message_id&gt;,
 &lt;django.db.models.fields.CharField: contact_id&gt;,
 &lt;django.db.models.fields.CharField: contact_number&gt;,
 &lt;django.db.models.fields.DateField: period&gt;,
 &lt;django.db.models.fields.DateTimeField: timestamp&gt;,
 &lt;django.db.models.fields.IntegerField: status&gt;,
 &lt;django.db.models.fields.CharField: ticket_service_id&gt;,
 &lt;django.db.models.fields.CharField: message_type&gt;,
 &lt;django.db.models.fields.BooleanField: is_from_me&gt;,
 &lt;django.db.models.fields.IntegerField: retries&gt;)</pre></td>
                  </tr>
                
                  <tr>
                    <td>insert_statement</td>
                    <td class="code"><pre>&#x27;INSERT INTO&#x27;</pre></td>
                  </tr>
                
                  <tr>
                    <td>opts</td>
                    <td class="code"><pre>&lt;Options for Message&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>qn</td>
                    <td class="code"><pre>&lt;bound method DatabaseOperations.quote_name of &lt;django.db.backends.postgresql.operations.DatabaseOperations object at 0x7f9b29c74d30&gt;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>result</td>
                    <td class="code"><pre>[&#x27;INSERT INTO &quot;messages_api_message&quot;&#x27;,
 &#x27;(&quot;message_id&quot;, &quot;contact_id&quot;, &quot;contact_number&quot;, &quot;period&quot;, &quot;timestamp&quot;, &#x27;
 &#x27;&quot;status&quot;, &quot;ticket_service_id&quot;, &quot;message_type&quot;, &quot;is_from_me&quot;, &quot;retries&quot;)&#x27;]</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;SQLInsertCompiler model=Message connection=&lt;DatabaseWrapper vendor=&#x27;postgresql&#x27; alias=&#x27;default&#x27;&gt; using=&#x27;default&#x27;&gt;</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
        <li class="frame django">
          
            <code class="fname">/home/jpfilho/.local/lib/python3.10/site-packages/django/db/models/sql/compiler.py</code>, line 1744, in &lt;listcomp&gt;
          

          
            <div class="context" id="c140304436067008">
              
                <ol start="1737" class="pre-context" id="pre140304436067008">
                
                  <li onclick="toggle('pre140304436067008', 'post140304436067008')"><pre>        )</pre></li>
                
                  <li onclick="toggle('pre140304436067008', 'post140304436067008')"><pre>        result = [&quot;%s %s&quot; % (insert_statement, qn(opts.db_table))]</pre></li>
                
                  <li onclick="toggle('pre140304436067008', 'post140304436067008')"><pre>        fields = self.query.fields or [opts.pk]</pre></li>
                
                  <li onclick="toggle('pre140304436067008', 'post140304436067008')"><pre>        result.append(&quot;(%s)&quot; % &quot;, &quot;.join(qn(f.column) for f in fields))</pre></li>
                
                  <li onclick="toggle('pre140304436067008', 'post140304436067008')"><pre></pre></li>
                
                  <li onclick="toggle('pre140304436067008', 'post140304436067008')"><pre>        if self.query.fields:</pre></li>
                
                  <li onclick="toggle('pre140304436067008', 'post140304436067008')"><pre>            value_rows = [</pre></li>
                
                </ol>
              
              <ol start="1744" class="context-line">
                <li onclick="toggle('pre140304436067008', 'post140304436067008')"><pre>                [</pre> <span>…</span></li>
              </ol>
              
                <ol start='1745' class="post-context" id="post140304436067008">
                  
                  <li onclick="toggle('pre140304436067008', 'post140304436067008')"><pre>                    self.prepare_value(field, self.pre_save_val(field, obj))</pre></li>
                  
                  <li onclick="toggle('pre140304436067008', 'post140304436067008')"><pre>                    for field in fields</pre></li>
                  
                  <li onclick="toggle('pre140304436067008', 'post140304436067008')"><pre>                ]</pre></li>
                  
                  <li onclick="toggle('pre140304436067008', 'post140304436067008')"><pre>                for obj in self.query.objs</pre></li>
                  
                  <li onclick="toggle('pre140304436067008', 'post140304436067008')"><pre>            ]</pre></li>
                  
                  <li onclick="toggle('pre140304436067008', 'post140304436067008')"><pre>        else:</pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v140304436067008">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>.0</td>
                    <td class="code"><pre>&lt;list_iterator object at 0x7f9b29cf6560&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>fields</td>
                    <td class="code"><pre>(&lt;django.db.models.fields.CharField: message_id&gt;,
 &lt;django.db.models.fields.CharField: contact_id&gt;,
 &lt;django.db.models.fields.CharField: contact_number&gt;,
 &lt;django.db.models.fields.DateField: period&gt;,
 &lt;django.db.models.fields.DateTimeField: timestamp&gt;,
 &lt;django.db.models.fields.IntegerField: status&gt;,
 &lt;django.db.models.fields.CharField: ticket_service_id&gt;,
 &lt;django.db.models.fields.CharField: message_type&gt;,
 &lt;django.db.models.fields.BooleanField: is_from_me&gt;,
 &lt;django.db.models.fields.IntegerField: retries&gt;)</pre></td>
                  </tr>
                
                  <tr>
                    <td>obj</td>
                    <td class="code"><pre>&lt;Message: 5588988562749 - 2023-05-01 - 0&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;SQLInsertCompiler model=Message connection=&lt;DatabaseWrapper vendor=&#x27;postgresql&#x27; alias=&#x27;default&#x27;&gt; using=&#x27;default&#x27;&gt;</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
        <li class="frame django">
          
            <code class="fname">/home/jpfilho/.local/lib/python3.10/site-packages/django/db/models/sql/compiler.py</code>, line 1745, in &lt;listcomp&gt;
          

          
            <div class="context" id="c140304445225408">
              
                <ol start="1738" class="pre-context" id="pre140304445225408">
                
                  <li onclick="toggle('pre140304445225408', 'post140304445225408')"><pre>        result = [&quot;%s %s&quot; % (insert_statement, qn(opts.db_table))]</pre></li>
                
                  <li onclick="toggle('pre140304445225408', 'post140304445225408')"><pre>        fields = self.query.fields or [opts.pk]</pre></li>
                
                  <li onclick="toggle('pre140304445225408', 'post140304445225408')"><pre>        result.append(&quot;(%s)&quot; % &quot;, &quot;.join(qn(f.column) for f in fields))</pre></li>
                
                  <li onclick="toggle('pre140304445225408', 'post140304445225408')"><pre></pre></li>
                
                  <li onclick="toggle('pre140304445225408', 'post140304445225408')"><pre>        if self.query.fields:</pre></li>
                
                  <li onclick="toggle('pre140304445225408', 'post140304445225408')"><pre>            value_rows = [</pre></li>
                
                  <li onclick="toggle('pre140304445225408', 'post140304445225408')"><pre>                [</pre></li>
                
                </ol>
              
              <ol start="1745" class="context-line">
                <li onclick="toggle('pre140304445225408', 'post140304445225408')"><pre>                    self.prepare_value(field, self.pre_save_val(field, obj))</pre> <span>…</span></li>
              </ol>
              
                <ol start='1746' class="post-context" id="post140304445225408">
                  
                  <li onclick="toggle('pre140304445225408', 'post140304445225408')"><pre>                    for field in fields</pre></li>
                  
                  <li onclick="toggle('pre140304445225408', 'post140304445225408')"><pre>                ]</pre></li>
                  
                  <li onclick="toggle('pre140304445225408', 'post140304445225408')"><pre>                for obj in self.query.objs</pre></li>
                  
                  <li onclick="toggle('pre140304445225408', 'post140304445225408')"><pre>            ]</pre></li>
                  
                  <li onclick="toggle('pre140304445225408', 'post140304445225408')"><pre>        else:</pre></li>
                  
                  <li onclick="toggle('pre140304445225408', 'post140304445225408')"><pre>            # An empty object.</pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v140304445225408">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>.0</td>
                    <td class="code"><pre>&lt;tuple_iterator object at 0x7f9b29cf45e0&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>field</td>
                    <td class="code"><pre>&lt;django.db.models.fields.BooleanField: is_from_me&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>obj</td>
                    <td class="code"><pre>&lt;Message: 5588988562749 - 2023-05-01 - 0&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;SQLInsertCompiler model=Message connection=&lt;DatabaseWrapper vendor=&#x27;postgresql&#x27; alias=&#x27;default&#x27;&gt; using=&#x27;default&#x27;&gt;</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
        <li class="frame django">
          
            <code class="fname">/home/jpfilho/.local/lib/python3.10/site-packages/django/db/models/sql/compiler.py</code>, line 1684, in prepare_value
          

          
            <div class="context" id="c140304436693120">
              
                <ol start="1677" class="pre-context" id="pre140304436693120">
                
                  <li onclick="toggle('pre140304436693120', 'post140304436693120')"><pre>                    &quot;(%s=%r).&quot; % (field.name, value)</pre></li>
                
                  <li onclick="toggle('pre140304436693120', 'post140304436693120')"><pre>                )</pre></li>
                
                  <li onclick="toggle('pre140304436693120', 'post140304436693120')"><pre>            if value.contains_over_clause:</pre></li>
                
                  <li onclick="toggle('pre140304436693120', 'post140304436693120')"><pre>                raise FieldError(</pre></li>
                
                  <li onclick="toggle('pre140304436693120', 'post140304436693120')"><pre>                    &quot;Window expressions are not allowed in this query (%s=%r).&quot;</pre></li>
                
                  <li onclick="toggle('pre140304436693120', 'post140304436693120')"><pre>                    % (field.name, value)</pre></li>
                
                  <li onclick="toggle('pre140304436693120', 'post140304436693120')"><pre>                )</pre></li>
                
                </ol>
              
              <ol start="1684" class="context-line">
                <li onclick="toggle('pre140304436693120', 'post140304436693120')"><pre>        return field.get_db_prep_save(value, connection=self.connection)</pre> <span>…</span></li>
              </ol>
              
                <ol start='1685' class="post-context" id="post140304436693120">
                  
                  <li onclick="toggle('pre140304436693120', 'post140304436693120')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140304436693120', 'post140304436693120')"><pre>    def pre_save_val(self, field, obj):</pre></li>
                  
                  <li onclick="toggle('pre140304436693120', 'post140304436693120')"><pre>        &quot;&quot;&quot;</pre></li>
                  
                  <li onclick="toggle('pre140304436693120', 'post140304436693120')"><pre>        Get the given field&#x27;s value off the given obj. pre_save() is used for</pre></li>
                  
                  <li onclick="toggle('pre140304436693120', 'post140304436693120')"><pre>        things like auto_now on DateTimeField. Skip it if this is a raw query.</pre></li>
                  
                  <li onclick="toggle('pre140304436693120', 'post140304436693120')"><pre>        &quot;&quot;&quot;</pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v140304436693120">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>field</td>
                    <td class="code"><pre>&lt;django.db.models.fields.BooleanField: is_from_me&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;SQLInsertCompiler model=Message connection=&lt;DatabaseWrapper vendor=&#x27;postgresql&#x27; alias=&#x27;default&#x27;&gt; using=&#x27;default&#x27;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>value</td>
                    <td class="code"><pre>[True]</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
        <li class="frame django">
          
            <code class="fname">/home/jpfilho/.local/lib/python3.10/site-packages/django/db/models/fields/__init__.py</code>, line 954, in get_db_prep_save
          

          
            <div class="context" id="c140304436693952">
              
                <ol start="947" class="pre-context" id="pre140304436693952">
                
                  <li onclick="toggle('pre140304436693952', 'post140304436693952')"><pre>            value = self.get_prep_value(value)</pre></li>
                
                  <li onclick="toggle('pre140304436693952', 'post140304436693952')"><pre>        return value</pre></li>
                
                  <li onclick="toggle('pre140304436693952', 'post140304436693952')"><pre></pre></li>
                
                  <li onclick="toggle('pre140304436693952', 'post140304436693952')"><pre>    def get_db_prep_save(self, value, connection):</pre></li>
                
                  <li onclick="toggle('pre140304436693952', 'post140304436693952')"><pre>        &quot;&quot;&quot;Return field&#x27;s value prepared for saving into a database.&quot;&quot;&quot;</pre></li>
                
                  <li onclick="toggle('pre140304436693952', 'post140304436693952')"><pre>        if hasattr(value, &quot;as_sql&quot;):</pre></li>
                
                  <li onclick="toggle('pre140304436693952', 'post140304436693952')"><pre>            return value</pre></li>
                
                </ol>
              
              <ol start="954" class="context-line">
                <li onclick="toggle('pre140304436693952', 'post140304436693952')"><pre>        return self.get_db_prep_value(value, connection=connection, prepared=False)</pre> <span>…</span></li>
              </ol>
              
                <ol start='955' class="post-context" id="post140304436693952">
                  
                  <li onclick="toggle('pre140304436693952', 'post140304436693952')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140304436693952', 'post140304436693952')"><pre>    def has_default(self):</pre></li>
                  
                  <li onclick="toggle('pre140304436693952', 'post140304436693952')"><pre>        &quot;&quot;&quot;Return a boolean of whether this field has a default value.&quot;&quot;&quot;</pre></li>
                  
                  <li onclick="toggle('pre140304436693952', 'post140304436693952')"><pre>        return self.default is not NOT_PROVIDED</pre></li>
                  
                  <li onclick="toggle('pre140304436693952', 'post140304436693952')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140304436693952', 'post140304436693952')"><pre>    def get_default(self):</pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v140304436693952">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>connection</td>
                    <td class="code"><pre>&lt;DatabaseWrapper vendor=&#x27;postgresql&#x27; alias=&#x27;default&#x27;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;django.db.models.fields.BooleanField: is_from_me&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>value</td>
                    <td class="code"><pre>[True]</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
        <li class="frame django">
          
            <code class="fname">/home/jpfilho/.local/lib/python3.10/site-packages/django/db/models/fields/__init__.py</code>, line 947, in get_db_prep_value
          

          
            <div class="context" id="c140304436702336">
              
                <ol start="940" class="pre-context" id="pre140304436702336">
                
                  <li onclick="toggle('pre140304436702336', 'post140304436702336')"><pre>    def get_db_prep_value(self, value, connection, prepared=False):</pre></li>
                
                  <li onclick="toggle('pre140304436702336', 'post140304436702336')"><pre>        &quot;&quot;&quot;</pre></li>
                
                  <li onclick="toggle('pre140304436702336', 'post140304436702336')"><pre>        Return field&#x27;s value prepared for interacting with the database backend.</pre></li>
                
                  <li onclick="toggle('pre140304436702336', 'post140304436702336')"><pre></pre></li>
                
                  <li onclick="toggle('pre140304436702336', 'post140304436702336')"><pre>        Used by the default implementations of get_db_prep_save().</pre></li>
                
                  <li onclick="toggle('pre140304436702336', 'post140304436702336')"><pre>        &quot;&quot;&quot;</pre></li>
                
                  <li onclick="toggle('pre140304436702336', 'post140304436702336')"><pre>        if not prepared:</pre></li>
                
                </ol>
              
              <ol start="947" class="context-line">
                <li onclick="toggle('pre140304436702336', 'post140304436702336')"><pre>            value = self.get_prep_value(value)</pre> <span>…</span></li>
              </ol>
              
                <ol start='948' class="post-context" id="post140304436702336">
                  
                  <li onclick="toggle('pre140304436702336', 'post140304436702336')"><pre>        return value</pre></li>
                  
                  <li onclick="toggle('pre140304436702336', 'post140304436702336')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140304436702336', 'post140304436702336')"><pre>    def get_db_prep_save(self, value, connection):</pre></li>
                  
                  <li onclick="toggle('pre140304436702336', 'post140304436702336')"><pre>        &quot;&quot;&quot;Return field&#x27;s value prepared for saving into a database.&quot;&quot;&quot;</pre></li>
                  
                  <li onclick="toggle('pre140304436702336', 'post140304436702336')"><pre>        if hasattr(value, &quot;as_sql&quot;):</pre></li>
                  
                  <li onclick="toggle('pre140304436702336', 'post140304436702336')"><pre>            return value</pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v140304436702336">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>connection</td>
                    <td class="code"><pre>&lt;DatabaseWrapper vendor=&#x27;postgresql&#x27; alias=&#x27;default&#x27;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>prepared</td>
                    <td class="code"><pre>False</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;django.db.models.fields.BooleanField: is_from_me&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>value</td>
                    <td class="code"><pre>[True]</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
        <li class="frame django">
          
            <code class="fname">/home/jpfilho/.local/lib/python3.10/site-packages/django/db/models/fields/__init__.py</code>, line 1122, in get_prep_value
          

          
            <div class="context" id="c140304436699456">
              
                <ol start="1115" class="pre-context" id="pre140304436699456">
                
                  <li onclick="toggle('pre140304436699456', 'post140304436699456')"><pre>            params={&quot;value&quot;: value},</pre></li>
                
                  <li onclick="toggle('pre140304436699456', 'post140304436699456')"><pre>        )</pre></li>
                
                  <li onclick="toggle('pre140304436699456', 'post140304436699456')"><pre></pre></li>
                
                  <li onclick="toggle('pre140304436699456', 'post140304436699456')"><pre>    def get_prep_value(self, value):</pre></li>
                
                  <li onclick="toggle('pre140304436699456', 'post140304436699456')"><pre>        value = super().get_prep_value(value)</pre></li>
                
                  <li onclick="toggle('pre140304436699456', 'post140304436699456')"><pre>        if value is None:</pre></li>
                
                  <li onclick="toggle('pre140304436699456', 'post140304436699456')"><pre>            return None</pre></li>
                
                </ol>
              
              <ol start="1122" class="context-line">
                <li onclick="toggle('pre140304436699456', 'post140304436699456')"><pre>        return self.to_python(value)</pre> <span>…</span></li>
              </ol>
              
                <ol start='1123' class="post-context" id="post140304436699456">
                  
                  <li onclick="toggle('pre140304436699456', 'post140304436699456')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140304436699456', 'post140304436699456')"><pre>    def formfield(self, **kwargs):</pre></li>
                  
                  <li onclick="toggle('pre140304436699456', 'post140304436699456')"><pre>        if self.choices is not None:</pre></li>
                  
                  <li onclick="toggle('pre140304436699456', 'post140304436699456')"><pre>            include_blank = not (self.has_default() or &quot;initial&quot; in kwargs)</pre></li>
                  
                  <li onclick="toggle('pre140304436699456', 'post140304436699456')"><pre>            defaults = {&quot;choices&quot;: self.get_choices(include_blank=include_blank)}</pre></li>
                  
                  <li onclick="toggle('pre140304436699456', 'post140304436699456')"><pre>        else:</pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v140304436699456">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>__class__</td>
                    <td class="code"><pre>&lt;class &#x27;django.db.models.fields.BooleanField&#x27;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;django.db.models.fields.BooleanField: is_from_me&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>value</td>
                    <td class="code"><pre>[True]</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
        <li class="frame django">
          
            <code class="fname">/home/jpfilho/.local/lib/python3.10/site-packages/django/db/models/fields/__init__.py</code>, line 1112, in to_python
          

          
            <div class="context" id="c140304436486656">
              
                <ol start="1105" class="pre-context" id="pre140304436486656">
                
                  <li onclick="toggle('pre140304436486656', 'post140304436486656')"><pre>        if value in (True, False):</pre></li>
                
                  <li onclick="toggle('pre140304436486656', 'post140304436486656')"><pre>            # 1/0 are equal to True/False. bool() converts former to latter.</pre></li>
                
                  <li onclick="toggle('pre140304436486656', 'post140304436486656')"><pre>            return bool(value)</pre></li>
                
                  <li onclick="toggle('pre140304436486656', 'post140304436486656')"><pre>        if value in (&quot;t&quot;, &quot;True&quot;, &quot;1&quot;):</pre></li>
                
                  <li onclick="toggle('pre140304436486656', 'post140304436486656')"><pre>            return True</pre></li>
                
                  <li onclick="toggle('pre140304436486656', 'post140304436486656')"><pre>        if value in (&quot;f&quot;, &quot;False&quot;, &quot;0&quot;):</pre></li>
                
                  <li onclick="toggle('pre140304436486656', 'post140304436486656')"><pre>            return False</pre></li>
                
                </ol>
              
              <ol start="1112" class="context-line">
                <li onclick="toggle('pre140304436486656', 'post140304436486656')"><pre>        raise exceptions.ValidationError(</pre> <span>…</span></li>
              </ol>
              
                <ol start='1113' class="post-context" id="post140304436486656">
                  
                  <li onclick="toggle('pre140304436486656', 'post140304436486656')"><pre>            self.error_messages[&quot;invalid_nullable&quot; if self.null else &quot;invalid&quot;],</pre></li>
                  
                  <li onclick="toggle('pre140304436486656', 'post140304436486656')"><pre>            code=&quot;invalid&quot;,</pre></li>
                  
                  <li onclick="toggle('pre140304436486656', 'post140304436486656')"><pre>            params={&quot;value&quot;: value},</pre></li>
                  
                  <li onclick="toggle('pre140304436486656', 'post140304436486656')"><pre>        )</pre></li>
                  
                  <li onclick="toggle('pre140304436486656', 'post140304436486656')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140304436486656', 'post140304436486656')"><pre>    def get_prep_value(self, value):</pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v140304436486656">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;django.db.models.fields.BooleanField: is_from_me&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>value</td>
                    <td class="code"><pre>[True]</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
    </ul>
  </div>

  <form action="https://dpaste.com/" name="pasteform" id="pasteform" method="post">
  <div id="pastebinTraceback" class="pastebin">
    <input type="hidden" name="language" value="PythonConsole">
    <input type="hidden" name="title"
      value="ValidationError at /webhook/messages/create">
    <input type="hidden" name="source" value="Django Dpaste Agent">
    <input type="hidden" name="poster" value="Django">
    <textarea name="content" id="traceback_area" cols="140" rows="25">
Environment:


Request Method: POST
Request URL: http://woz.serveo.net/webhook/messages/create?phone=5588988562749&amp;period=05%2F23

Django Version: 4.2.1
Python Version: 3.10.7
Installed Applications:
[&#x27;django.contrib.admin&#x27;,
 &#x27;django.contrib.auth&#x27;,
 &#x27;django.contrib.contenttypes&#x27;,
 &#x27;django.contrib.sessions&#x27;,
 &#x27;django.contrib.messages&#x27;,
 &#x27;django.contrib.staticfiles&#x27;,
 &#x27;drf_yasg&#x27;,
 &#x27;rest_framework&#x27;,
 &#x27;example&#x27;,
 &#x27;messages_api&#x27;,
 &#x27;celery&#x27;,
 &#x27;django_filters&#x27;]
Installed Middleware:
[&#x27;django.middleware.security.SecurityMiddleware&#x27;,
 &#x27;django.contrib.sessions.middleware.SessionMiddleware&#x27;,
 &#x27;django.middleware.common.CommonMiddleware&#x27;,
 &#x27;django.middleware.csrf.CsrfViewMiddleware&#x27;,
 &#x27;django.contrib.auth.middleware.AuthenticationMiddleware&#x27;,
 &#x27;django.contrib.messages.middleware.MessageMiddleware&#x27;,
 &#x27;django.middleware.clickjacking.XFrameOptionsMiddleware&#x27;]



Traceback (most recent call last):
  File "/home/jpfilho/.local/lib/python3.10/site-packages/django/core/handlers/exception.py", line 55, in inner
    response = get_response(request)
  File "/home/jpfilho/.local/lib/python3.10/site-packages/django/core/handlers/base.py", line 197, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/home/jpfilho/.local/lib/python3.10/site-packages/django/views/decorators/csrf.py", line 56, in wrapper_view
    return view_func(*args, **kwargs)
  File "/home/jpfilho/.local/lib/python3.10/site-packages/rest_framework/viewsets.py", line 125, in view
    return self.dispatch(request, *args, **kwargs)
  File "/home/jpfilho/.local/lib/python3.10/site-packages/rest_framework/views.py", line 509, in dispatch
    response = self.handle_exception(exc)
  File "/home/jpfilho/.local/lib/python3.10/site-packages/rest_framework/views.py", line 469, in handle_exception
    self.raise_uncaught_exception(exc)
  File "/home/jpfilho/.local/lib/python3.10/site-packages/rest_framework/views.py", line 480, in raise_uncaught_exception
    raise exc
  File "/home/jpfilho/.local/lib/python3.10/site-packages/rest_framework/views.py", line 506, in dispatch
    response = handler(request, *args, **kwargs)
  File "/home/jpfilho/Documents/code-ws/python/webhook/messages_api/views.py", line 153, in create
    message = Message.objects.create(
  File "/home/jpfilho/.local/lib/python3.10/site-packages/django/db/models/manager.py", line 87, in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
  File "/home/jpfilho/.local/lib/python3.10/site-packages/django/db/models/query.py", line 658, in create
    obj.save(force_insert=True, using=self.db)
  File "/home/jpfilho/.local/lib/python3.10/site-packages/django/db/models/base.py", line 814, in save
    self.save_base(
  File "/home/jpfilho/.local/lib/python3.10/site-packages/django/db/models/base.py", line 877, in save_base
    updated = self._save_table(
  File "/home/jpfilho/.local/lib/python3.10/site-packages/django/db/models/base.py", line 1020, in _save_table
    results = self._do_insert(
  File "/home/jpfilho/.local/lib/python3.10/site-packages/django/db/models/base.py", line 1061, in _do_insert
    return manager._insert(
  File "/home/jpfilho/.local/lib/python3.10/site-packages/django/db/models/manager.py", line 87, in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
  File "/home/jpfilho/.local/lib/python3.10/site-packages/django/db/models/query.py", line 1805, in _insert
    return query.get_compiler(using=using).execute_sql(returning_fields)
  File "/home/jpfilho/.local/lib/python3.10/site-packages/django/db/models/sql/compiler.py", line 1819, in execute_sql
    for sql, params in self.as_sql():
  File "/home/jpfilho/.local/lib/python3.10/site-packages/django/db/models/sql/compiler.py", line 1743, in as_sql
    value_rows = [
  File "/home/jpfilho/.local/lib/python3.10/site-packages/django/db/models/sql/compiler.py", line 1744, in &lt;listcomp&gt;
    [
  File "/home/jpfilho/.local/lib/python3.10/site-packages/django/db/models/sql/compiler.py", line 1745, in &lt;listcomp&gt;
    self.prepare_value(field, self.pre_save_val(field, obj))
  File "/home/jpfilho/.local/lib/python3.10/site-packages/django/db/models/sql/compiler.py", line 1684, in prepare_value
    return field.get_db_prep_save(value, connection=self.connection)
  File "/home/jpfilho/.local/lib/python3.10/site-packages/django/db/models/fields/__init__.py", line 954, in get_db_prep_save
    return self.get_db_prep_value(value, connection=connection, prepared=False)
  File "/home/jpfilho/.local/lib/python3.10/site-packages/django/db/models/fields/__init__.py", line 947, in get_db_prep_value
    value = self.get_prep_value(value)
  File "/home/jpfilho/.local/lib/python3.10/site-packages/django/db/models/fields/__init__.py", line 1122, in get_prep_value
    return self.to_python(value)
  File "/home/jpfilho/.local/lib/python3.10/site-packages/django/db/models/fields/__init__.py", line 1112, in to_python
    raise exceptions.ValidationError(

Exception Type: ValidationError at /webhook/messages/create
Exception Value: [&#x27;o valor “[True]”  deve ser True ou False.&#x27;]
</textarea>
  <br><br>
  <input type="submit" value="Share this traceback on a public website">
  </div>
</form>

</div>


<div id="requestinfo">
  <h2>Request information</h2>


  
    <h3 id="user-info">USER</h3>
    <p>AnonymousUser</p>
  

  <h3 id="get-info">GET</h3>
  
    <table class="req">
      <thead>
        <tr>
          <th>Variable</th>
          <th>Value</th>
        </tr>
      </thead>
      <tbody>
        
          <tr>
            <td>phone</td>
            <td class="code"><pre>&#x27;5588988562749&#x27;</pre></td>
          </tr>
        
          <tr>
            <td>period</td>
            <td class="code"><pre>&#x27;05/23&#x27;</pre></td>
          </tr>
        
      </tbody>
    </table>
  

  <h3 id="post-info">POST</h3>
  
    <p>No POST data</p>
  

  <h3 id="files-info">FILES</h3>
  
    <p>No FILES data</p>
  

  <h3 id="cookie-info">COOKIES</h3>
  
    <p>No cookie data</p>
  

  <h3 id="meta-info">META</h3>
  <table class="req">
    <thead>
      <tr>
        <th>Variable</th>
        <th>Value</th>
      </tr>
    </thead>
    <tbody>
      
        <tr>
          <td>API_URL</td>
          <td class="code"><pre>&#x27;********************&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>BAMF_DESKTOP_FILE_HINT</td>
          <td class="code"><pre>&#x27;/var/lib/snapd/desktop/applications/code_code.desktop&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>CHROME_DESKTOP</td>
          <td class="code"><pre>&#x27;code-url-handler.desktop&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>CLOUDAMQP_URL</td>
          <td class="code"><pre>&#x27;amqps://kzthoddb:3CziblJY4U4tFRNmARuMMdIDu8z53Ql6@fly.rmq.cloudamqp.com/kzthoddb&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>COLORTERM</td>
          <td class="code"><pre>&#x27;truecolor&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>COMPANIES_API</td>
          <td class="code"><pre>&#x27;********************&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>CONTENT_LENGTH</td>
          <td class="code"><pre>&#x27;261&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>CONTENT_TYPE</td>
          <td class="code"><pre>&#x27;application/json&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>DBUS_SESSION_BUS_ADDRESS</td>
          <td class="code"><pre>&#x27;unix:path=/run/user/1000/bus&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>DEBUGINFOD_URLS</td>
          <td class="code"><pre>&#x27;https://debuginfod.ubuntu.com &#x27;</pre></td>
        </tr>
      
        <tr>
          <td>DESKTOP_SESSION</td>
          <td class="code"><pre>&#x27;ubuntu&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>DISPLAY</td>
          <td class="code"><pre>&#x27;:1&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>DJANGO_SETTINGS_MODULE</td>
          <td class="code"><pre>&#x27;webhook.settings&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>GATEWAY_INTERFACE</td>
          <td class="code"><pre>&#x27;CGI/1.1&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>GDK_BACKEND</td>
          <td class="code"><pre>&#x27;x11&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>GDMSESSION</td>
          <td class="code"><pre>&#x27;ubuntu&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>GIO_LAUNCHED_DESKTOP_FILE</td>
          <td class="code"><pre>&#x27;/var/lib/snapd/desktop/applications/code_code.desktop&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>GIO_LAUNCHED_DESKTOP_FILE_PID</td>
          <td class="code"><pre>&#x27;2895&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>GIO_MODULE_DIR</td>
          <td class="code"><pre>&#x27;/home/jpfilho/snap/code/common/.cache/gio-modules&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>GIT_ASKPASS</td>
          <td class="code"><pre>&#x27;********************&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>GJS_DEBUG_OUTPUT</td>
          <td class="code"><pre>&#x27;stderr&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>GJS_DEBUG_TOPICS</td>
          <td class="code"><pre>&#x27;JS ERROR;JS LOG&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>GNOME_DESKTOP_SESSION_ID</td>
          <td class="code"><pre>&#x27;this-is-deprecated&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>GNOME_SHELL_SESSION_MODE</td>
          <td class="code"><pre>&#x27;ubuntu&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>GPG_AGENT_INFO</td>
          <td class="code"><pre>&#x27;/run/user/1000/gnupg/S.gpg-agent:0:1&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>GROUP_ID</td>
          <td class="code"><pre>&#x27;4bf3c03a-2d33-439c-8b13-efb50531e9c1&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>GSETTINGS_SCHEMA_DIR</td>
          <td class="code"><pre>&#x27;/home/jpfilho/snap/code/129/.local/share/glib-2.0/schemas&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>GTK_EXE_PREFIX</td>
          <td class="code"><pre>&#x27;/snap/code/129/usr&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>GTK_IM_MODULE_FILE</td>
          <td class="code"><pre>&#x27;/home/jpfilho/snap/code/common/.cache/immodules/immodules.cache&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>GTK_MODULES</td>
          <td class="code"><pre>&#x27;gail:atk-bridge&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>GTK_PATH</td>
          <td class="code"><pre>&#x27;/snap/code/129/usr/lib/x86_64-linux-gnu/gtk-3.0&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>HEROKU_API</td>
          <td class="code"><pre>&#x27;********************&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>HEROKU_API_KEY</td>
          <td class="code"><pre>&#x27;********************&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>HEROKU_DYNO_ID</td>
          <td class="code"><pre>&#x27;ba6aefd9-0ff3-4cfb-a04b-42b7bf6cf560&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>HOME</td>
          <td class="code"><pre>&#x27;/home/jpfilho&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>HTTP_ACCEPT</td>
          <td class="code"><pre>&#x27;*/*&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>HTTP_ACCEPT_ENCODING</td>
          <td class="code"><pre>&#x27;gzip, deflate&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>HTTP_HOST</td>
          <td class="code"><pre>&#x27;woz.serveo.net&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>HTTP_USER_AGENT</td>
          <td class="code"><pre>&#x27;python-requests/2.30.0&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>HTTP_X_FORWARDED_FOR</td>
          <td class="code"><pre>&#x27;177.37.130.81&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>ID_SERVICE</td>
          <td class="code"><pre>&#x27;83108c28-14f7-4646-acb8-dab165397fd5&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>INVOCATION_ID</td>
          <td class="code"><pre>&#x27;d9e9633aebb14edaa8abde0b26e491bc&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>JAVA_HOME</td>
          <td class="code"><pre>&#x27;/home/jpfilho/.sdkman/candidates/java/current&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>JOURNAL_STREAM</td>
          <td class="code"><pre>&#x27;8:33740&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>LANG</td>
          <td class="code"><pre>&#x27;pt_BR.UTF-8&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>LANGUAGE</td>
          <td class="code"><pre>&#x27;pt_BR:pt:pt_PT:en&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>LC_ADDRESS</td>
          <td class="code"><pre>&#x27;pt_BR.UTF-8&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>LC_IDENTIFICATION</td>
          <td class="code"><pre>&#x27;pt_BR.UTF-8&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>LC_MEASUREMENT</td>
          <td class="code"><pre>&#x27;pt_BR.UTF-8&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>LC_MONETARY</td>
          <td class="code"><pre>&#x27;pt_BR.UTF-8&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>LC_NAME</td>
          <td class="code"><pre>&#x27;pt_BR.UTF-8&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>LC_NUMERIC</td>
          <td class="code"><pre>&#x27;pt_BR.UTF-8&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>LC_PAPER</td>
          <td class="code"><pre>&#x27;pt_BR.UTF-8&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>LC_TELEPHONE</td>
          <td class="code"><pre>&#x27;pt_BR.UTF-8&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>LC_TIME</td>
          <td class="code"><pre>&#x27;pt_BR.UTF-8&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>LESSCLOSE</td>
          <td class="code"><pre>&#x27;/usr/bin/lesspipe %s %s&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>LESSOPEN</td>
          <td class="code"><pre>&#x27;| /usr/bin/lesspipe %s&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>LOCPATH</td>
          <td class="code"><pre>&#x27;/snap/code/129/usr/lib/locale&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>LOGNAME</td>
          <td class="code"><pre>&#x27;jpfilho&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>LS_COLORS</td>
          <td class="code"><pre>&#x27;rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:mi=00:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arc=01;31:*.arj=01;31:*.taz=01;31:*.lha=01;31:*.lz4=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.tzo=01;31:*.t7z=01;31:*.zip=01;31:*.z=01;31:*.dz=01;31:*.gz=01;31:*.lrz=01;31:*.lz=01;31:*.lzo=01;31:*.xz=01;31:*.zst=01;31:*.tzst=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.alz=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.cab=01;31:*.wim=01;31:*.swm=01;31:*.dwm=01;31:*.esd=01;31:*.jpg=01;35:*.jpeg=01;35:*.mjpg=01;35:*.mjpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.webp=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=00;36:*.au=00;36:*.flac=00;36:*.m4a=00;36:*.mid=00;36:*.midi=00;36:*.mka=00;36:*.mp3=00;36:*.mpc=00;36:*.ogg=00;36:*.ra=00;36:*.wav=00;36:*.oga=00;36:*.opus=00;36:*.spx=00;36:*.xspf=00;36:&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>MANAGERPID</td>
          <td class="code"><pre>&#x27;1783&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>MAVEN_HOME</td>
          <td class="code"><pre>&#x27;/home/jpfilho/.sdkman/candidates/maven/current&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>NVM_BIN</td>
          <td class="code"><pre>&#x27;/home/jpfilho/.nvm/versions/node/v18.16.0/bin&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>NVM_CD_FLAGS</td>
          <td class="code"><pre>&#x27;&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>NVM_DIR</td>
          <td class="code"><pre>&#x27;/home/jpfilho/.nvm&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>NVM_INC</td>
          <td class="code"><pre>&#x27;/home/jpfilho/.nvm/versions/node/v18.16.0/include/node&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>ORIGINAL_XDG_CURRENT_DESKTOP</td>
          <td class="code"><pre>&#x27;ubuntu:GNOME&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>PATH</td>
          <td class="code"><pre>&#x27;/home/jpfilho/.pyenv/libexec:/home/jpfilho/.pyenv/plugins/python-build/bin:/home/jpfilho/.pyenv/plugins/pyenv-virtualenv/bin:/home/jpfilho/.pyenv/plugins/pyenv-update/bin:/home/jpfilho/.pyenv/plugins/pyenv-doctor/bin:/home/jpfilho/.pyenv/shims:/home/jpfilho/.local/bin:/home/jpfilho/.pyenv/bin:/home/jpfilho/.nvm/versions/node/v18.16.0/bin:/home/jpfilho/.sdkman/candidates/maven/current/bin:/home/jpfilho/.sdkman/candidates/java/current/bin:/home/jpfilho/.local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:/snap/bin&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>PATH_INFO</td>
          <td class="code"><pre>&#x27;/webhook/messages/create&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>PWD</td>
          <td class="code"><pre>&#x27;/home/jpfilho/Documents/code-ws/python/webhook&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>PYENV_DIR</td>
          <td class="code"><pre>&#x27;/home/jpfilho/Documents/code-ws/python/webhook&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>PYENV_HOOK_PATH</td>
          <td class="code"><pre>&#x27;/home/jpfilho/.pyenv/pyenv.d:/usr/local/etc/pyenv.d:/etc/pyenv.d:/usr/lib/pyenv/hooks:/home/jpfilho/.pyenv/plugins/pyenv-virtualenv/etc/pyenv.d&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>PYENV_ROOT</td>
          <td class="code"><pre>&#x27;/home/jpfilho/.pyenv&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>PYENV_SHELL</td>
          <td class="code"><pre>&#x27;bash&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>PYENV_VERSION</td>
          <td class="code"><pre>&#x27;system&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>QT_ACCESSIBILITY</td>
          <td class="code"><pre>&#x27;1&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>QT_IM_MODULE</td>
          <td class="code"><pre>&#x27;ibus&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>QUERY_STRING</td>
          <td class="code"><pre>&#x27;phone=5588988562749&amp;period=05%2F23&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>REMOTE_ADDR</td>
          <td class="code"><pre>&#x27;127.0.0.1&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>REMOTE_HOST</td>
          <td class="code"><pre>&#x27;&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>REQUEST_METHOD</td>
          <td class="code"><pre>&#x27;POST&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>RUN_MAIN</td>
          <td class="code"><pre>&#x27;true&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SCRIPT_NAME</td>
          <td class="code"><pre>&#x27;&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SDKMAN_CANDIDATES_API</td>
          <td class="code"><pre>&#x27;********************&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SDKMAN_CANDIDATES_DIR</td>
          <td class="code"><pre>&#x27;/home/jpfilho/.sdkman/candidates&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SDKMAN_DIR</td>
          <td class="code"><pre>&#x27;/home/jpfilho/.sdkman&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SDKMAN_PLATFORM</td>
          <td class="code"><pre>&#x27;linuxx64&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SDKMAN_VERSION</td>
          <td class="code"><pre>&#x27;5.16.0&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SERVER_NAME</td>
          <td class="code"><pre>&#x27;localhost&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SERVER_PORT</td>
          <td class="code"><pre>&#x27;8000&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SERVER_PROTOCOL</td>
          <td class="code"><pre>&#x27;HTTP/1.1&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SERVER_SOFTWARE</td>
          <td class="code"><pre>&#x27;WSGIServer/0.2&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_MANAGER</td>
          <td class="code"><pre>&#x27;local/JPSERVER:@/tmp/.ICE-unix/2038,unix/JPSERVER:/tmp/.ICE-unix/2038&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SHELL</td>
          <td class="code"><pre>&#x27;/bin/bash&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SHLVL</td>
          <td class="code"><pre>&#x27;1&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SSH_AGENT_LAUNCHER</td>
          <td class="code"><pre>&#x27;openssh&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SSH_AUTH_SOCK</td>
          <td class="code"><pre>&#x27;/run/user/1000/keyring/ssh&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SYSTEMD_EXEC_PID</td>
          <td class="code"><pre>&#x27;2065&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>TERM</td>
          <td class="code"><pre>&#x27;xterm-256color&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>TERM_PROGRAM</td>
          <td class="code"><pre>&#x27;vscode&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>TERM_PROGRAM_VERSION</td>
          <td class="code"><pre>&#x27;1.78.2&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>TOKEN_API</td>
          <td class="code"><pre>&#x27;********************&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>TZ</td>
          <td class="code"><pre>&#x27;UTC&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>USER</td>
          <td class="code"><pre>&#x27;jpfilho&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>USERNAME</td>
          <td class="code"><pre>&#x27;jpfilho&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>VSCODE_GIT_ASKPASS_EXTRA_ARGS</td>
          <td class="code"><pre>&#x27;********************&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>VSCODE_GIT_ASKPASS_MAIN</td>
          <td class="code"><pre>&#x27;********************&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>VSCODE_GIT_ASKPASS_NODE</td>
          <td class="code"><pre>&#x27;********************&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>VSCODE_GIT_IPC_HANDLE</td>
          <td class="code"><pre>&#x27;/run/user/1000/vscode-git-1d8a16cec2.sock&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>WEBHOOK_API</td>
          <td class="code"><pre>&#x27;********************&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>WEB_URL</td>
          <td class="code"><pre>&#x27;https://woz.herokuapp.com&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>WINDOWPATH</td>
          <td class="code"><pre>&#x27;2&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>XAUTHORITY</td>
          <td class="code"><pre>&#x27;/run/user/1000/gdm/Xauthority&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>XDG_CONFIG_DIRS</td>
          <td class="code"><pre>&#x27;/etc/xdg/xdg-ubuntu:/etc/xdg&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>XDG_CURRENT_DESKTOP</td>
          <td class="code"><pre>&#x27;Unity&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>XDG_DATA_DIRS</td>
          <td class="code"><pre>&#x27;/home/jpfilho/snap/code/129/.local/share:/home/jpfilho/snap/code/129:/snap/code/129/usr/share:/usr/share/ubuntu:/usr/share/gnome:/usr/local/share/:/usr/share/:/var/lib/snapd/desktop&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>XDG_MENU_PREFIX</td>
          <td class="code"><pre>&#x27;gnome-&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>XDG_RUNTIME_DIR</td>
          <td class="code"><pre>&#x27;/run/user/1000&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>XDG_SESSION_CLASS</td>
          <td class="code"><pre>&#x27;user&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>XDG_SESSION_DESKTOP</td>
          <td class="code"><pre>&#x27;ubuntu&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>XDG_SESSION_TYPE</td>
          <td class="code"><pre>&#x27;x11&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>XMODIFIERS</td>
          <td class="code"><pre>&#x27;@im=ibus&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>wsgi.errors</td>
          <td class="code"><pre>&lt;_io.TextIOWrapper name=&#x27;&lt;stderr&gt;&#x27; mode=&#x27;w&#x27; encoding=&#x27;utf-8&#x27;&gt;</pre></td>
        </tr>
      
        <tr>
          <td>wsgi.file_wrapper</td>
          <td class="code"><pre>&lt;class &#x27;wsgiref.util.FileWrapper&#x27;&gt;</pre></td>
        </tr>
      
        <tr>
          <td>wsgi.input</td>
          <td class="code"><pre>&lt;django.core.handlers.wsgi.LimitedStream object at 0x7f9b29cf7e80&gt;</pre></td>
        </tr>
      
        <tr>
          <td>wsgi.multiprocess</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>wsgi.multithread</td>
          <td class="code"><pre>True</pre></td>
        </tr>
      
        <tr>
          <td>wsgi.run_once</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>wsgi.url_scheme</td>
          <td class="code"><pre>&#x27;http&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>wsgi.version</td>
          <td class="code"><pre>(1, 0)</pre></td>
        </tr>
      
    </tbody>
  </table>


  <h3 id="settings-info">Settings</h3>
  <h4>Using settings module <code>webhook.settings</code></h4>
  <table class="req">
    <thead>
      <tr>
        <th>Setting</th>
        <th>Value</th>
      </tr>
    </thead>
    <tbody>
      
        <tr>
          <td>ABSOLUTE_URL_OVERRIDES</td>
          <td class="code"><pre>{}</pre></td>
        </tr>
      
        <tr>
          <td>ADMINS</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>ALLOWED_HOSTS</td>
          <td class="code"><pre>[&#x27;*&#x27;]</pre></td>
        </tr>
      
        <tr>
          <td>APPEND_SLASH</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>AUTHENTICATION_BACKENDS</td>
          <td class="code"><pre>[&#x27;django.contrib.auth.backends.ModelBackend&#x27;]</pre></td>
        </tr>
      
        <tr>
          <td>AUTH_PASSWORD_VALIDATORS</td>
          <td class="code"><pre>&#x27;********************&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>AUTH_USER_MODEL</td>
          <td class="code"><pre>&#x27;auth.User&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>BASE_DIR</td>
          <td class="code"><pre>PosixPath(&#x27;/home/jpfilho/Documents/code-ws/python/webhook&#x27;)</pre></td>
        </tr>
      
        <tr>
          <td>BROKER_URL</td>
          <td class="code"><pre>&#x27;amqps://kzthoddb:3CziblJY4U4tFRNmARuMMdIDu8z53Ql6@fly.rmq.cloudamqp.com/kzthoddb&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>CACHES</td>
          <td class="code"><pre>{&#x27;default&#x27;: {&#x27;BACKEND&#x27;: &#x27;django.core.cache.backends.locmem.LocMemCache&#x27;}}</pre></td>
        </tr>
      
        <tr>
          <td>CACHE_MIDDLEWARE_ALIAS</td>
          <td class="code"><pre>&#x27;default&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>CACHE_MIDDLEWARE_KEY_PREFIX</td>
          <td class="code"><pre>&#x27;********************&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>CACHE_MIDDLEWARE_SECONDS</td>
          <td class="code"><pre>600</pre></td>
        </tr>
      
        <tr>
          <td>CELERY_BROKER_URL</td>
          <td class="code"><pre>&#x27;amqps://kzthoddb:3CziblJY4U4tFRNmARuMMdIDu8z53Ql6@fly.rmq.cloudamqp.com/kzthoddb&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>CSRF_COOKIE_AGE</td>
          <td class="code"><pre>31449600</pre></td>
        </tr>
      
        <tr>
          <td>CSRF_COOKIE_DOMAIN</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>CSRF_COOKIE_HTTPONLY</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>CSRF_COOKIE_MASKED</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>CSRF_COOKIE_NAME</td>
          <td class="code"><pre>&#x27;csrftoken&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>CSRF_COOKIE_PATH</td>
          <td class="code"><pre>&#x27;/&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>CSRF_COOKIE_SAMESITE</td>
          <td class="code"><pre>&#x27;Lax&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>CSRF_COOKIE_SECURE</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>CSRF_FAILURE_VIEW</td>
          <td class="code"><pre>&#x27;django.views.csrf.csrf_failure&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>CSRF_HEADER_NAME</td>
          <td class="code"><pre>&#x27;HTTP_X_CSRFTOKEN&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>CSRF_TRUSTED_ORIGINS</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>CSRF_USE_SESSIONS</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>DATABASES</td>
          <td class="code"><pre>{&#x27;default&#x27;: {&#x27;ATOMIC_REQUESTS&#x27;: False,
             &#x27;AUTOCOMMIT&#x27;: True,
             &#x27;CONN_HEALTH_CHECKS&#x27;: False,
             &#x27;CONN_MAX_AGE&#x27;: 0,
             &#x27;ENGINE&#x27;: &#x27;django.db.backends.postgresql&#x27;,
             &#x27;HOST&#x27;: &#x27;ep-young-feather-699075.us-east-1.aws.neon.tech&#x27;,
             &#x27;NAME&#x27;: &#x27;neondb&#x27;,
             &#x27;OPTIONS&#x27;: {},
             &#x27;PASSWORD&#x27;: &#x27;********************&#x27;,
             &#x27;PORT&#x27;: &#x27;5432&#x27;,
             &#x27;TEST&#x27;: {&#x27;CHARSET&#x27;: None,
                      &#x27;COLLATION&#x27;: None,
                      &#x27;MIGRATE&#x27;: True,
                      &#x27;MIRROR&#x27;: None,
                      &#x27;NAME&#x27;: None},
             &#x27;TIME_ZONE&#x27;: None,
             &#x27;USER&#x27;: &#x27;psousaj&#x27;}}</pre></td>
        </tr>
      
        <tr>
          <td>DATABASE_ROUTERS</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>DATA_UPLOAD_MAX_MEMORY_SIZE</td>
          <td class="code"><pre>2621440</pre></td>
        </tr>
      
        <tr>
          <td>DATA_UPLOAD_MAX_NUMBER_FIELDS</td>
          <td class="code"><pre>1000</pre></td>
        </tr>
      
        <tr>
          <td>DATA_UPLOAD_MAX_NUMBER_FILES</td>
          <td class="code"><pre>100</pre></td>
        </tr>
      
        <tr>
          <td>DATETIME_FORMAT</td>
          <td class="code"><pre>&#x27;N j, Y, P&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>DATETIME_INPUT_FORMATS</td>
          <td class="code"><pre>[&#x27;%Y-%m-%d %H:%M:%S&#x27;,
 &#x27;%Y-%m-%d %H:%M:%S.%f&#x27;,
 &#x27;%Y-%m-%d %H:%M&#x27;,
 &#x27;%m/%d/%Y %H:%M:%S&#x27;,
 &#x27;%m/%d/%Y %H:%M:%S.%f&#x27;,
 &#x27;%m/%d/%Y %H:%M&#x27;,
 &#x27;%m/%d/%y %H:%M:%S&#x27;,
 &#x27;%m/%d/%y %H:%M:%S.%f&#x27;,
 &#x27;%m/%d/%y %H:%M&#x27;]</pre></td>
        </tr>
      
        <tr>
          <td>DATE_FORMAT</td>
          <td class="code"><pre>&#x27;N j, Y&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>DATE_INPUT_FORMATS</td>
          <td class="code"><pre>[&#x27;%Y-%m-%d&#x27;,
 &#x27;%m/%d/%Y&#x27;,
 &#x27;%m/%d/%y&#x27;,
 &#x27;%b %d %Y&#x27;,
 &#x27;%b %d, %Y&#x27;,
 &#x27;%d %b %Y&#x27;,
 &#x27;%d %b, %Y&#x27;,
 &#x27;%B %d %Y&#x27;,
 &#x27;%B %d, %Y&#x27;,
 &#x27;%d %B %Y&#x27;,
 &#x27;%d %B, %Y&#x27;]</pre></td>
        </tr>
      
        <tr>
          <td>DEBUG</td>
          <td class="code"><pre>True</pre></td>
        </tr>
      
        <tr>
          <td>DEBUG_PROPAGATE_EXCEPTIONS</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>DECIMAL_SEPARATOR</td>
          <td class="code"><pre>&#x27;.&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>DEFAULT_AUTO_FIELD</td>
          <td class="code"><pre>&#x27;django.db.models.BigAutoField&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>DEFAULT_CHARSET</td>
          <td class="code"><pre>&#x27;utf-8&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>DEFAULT_EXCEPTION_REPORTER</td>
          <td class="code"><pre>&#x27;django.views.debug.ExceptionReporter&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>DEFAULT_EXCEPTION_REPORTER_FILTER</td>
          <td class="code"><pre>&#x27;django.views.debug.SafeExceptionReporterFilter&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>DEFAULT_FILE_STORAGE</td>
          <td class="code"><pre>&#x27;django.core.files.storage.FileSystemStorage&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>DEFAULT_FROM_EMAIL</td>
          <td class="code"><pre>&#x27;webmaster@localhost&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>DEFAULT_INDEX_TABLESPACE</td>
          <td class="code"><pre>&#x27;&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>DEFAULT_TABLESPACE</td>
          <td class="code"><pre>&#x27;&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>DISALLOWED_USER_AGENTS</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>EMAIL_BACKEND</td>
          <td class="code"><pre>&#x27;django.core.mail.backends.smtp.EmailBackend&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>EMAIL_HOST</td>
          <td class="code"><pre>&#x27;localhost&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>EMAIL_HOST_PASSWORD</td>
          <td class="code"><pre>&#x27;********************&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>EMAIL_HOST_USER</td>
          <td class="code"><pre>&#x27;&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>EMAIL_PORT</td>
          <td class="code"><pre>25</pre></td>
        </tr>
      
        <tr>
          <td>EMAIL_SSL_CERTFILE</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>EMAIL_SSL_KEYFILE</td>
          <td class="code"><pre>&#x27;********************&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>EMAIL_SUBJECT_PREFIX</td>
          <td class="code"><pre>&#x27;[Django] &#x27;</pre></td>
        </tr>
      
        <tr>
          <td>EMAIL_TIMEOUT</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>EMAIL_USE_LOCALTIME</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>EMAIL_USE_SSL</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>EMAIL_USE_TLS</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>FILE_UPLOAD_DIRECTORY_PERMISSIONS</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>FILE_UPLOAD_HANDLERS</td>
          <td class="code"><pre>[&#x27;django.core.files.uploadhandler.MemoryFileUploadHandler&#x27;,
 &#x27;django.core.files.uploadhandler.TemporaryFileUploadHandler&#x27;]</pre></td>
        </tr>
      
        <tr>
          <td>FILE_UPLOAD_MAX_MEMORY_SIZE</td>
          <td class="code"><pre>2621440</pre></td>
        </tr>
      
        <tr>
          <td>FILE_UPLOAD_PERMISSIONS</td>
          <td class="code"><pre>420</pre></td>
        </tr>
      
        <tr>
          <td>FILE_UPLOAD_TEMP_DIR</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>FIRST_DAY_OF_WEEK</td>
          <td class="code"><pre>0</pre></td>
        </tr>
      
        <tr>
          <td>FIXTURE_DIRS</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>FORCE_SCRIPT_NAME</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>FORMAT_MODULE_PATH</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>FORM_RENDERER</td>
          <td class="code"><pre>&#x27;django.forms.renderers.DjangoTemplates&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>IGNORABLE_404_URLS</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>INSTALLED_APPS</td>
          <td class="code"><pre>[&#x27;django.contrib.admin&#x27;,
 &#x27;django.contrib.auth&#x27;,
 &#x27;django.contrib.contenttypes&#x27;,
 &#x27;django.contrib.sessions&#x27;,
 &#x27;django.contrib.messages&#x27;,
 &#x27;django.contrib.staticfiles&#x27;,
 &#x27;drf_yasg&#x27;,
 &#x27;rest_framework&#x27;,
 &#x27;example&#x27;,
 &#x27;messages_api&#x27;,
 &#x27;celery&#x27;,
 &#x27;django_filters&#x27;]</pre></td>
        </tr>
      
        <tr>
          <td>INTERNAL_IPS</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>LANGUAGES</td>
          <td class="code"><pre>[(&#x27;af&#x27;, &#x27;Afrikaans&#x27;),
 (&#x27;ar&#x27;, &#x27;Arabic&#x27;),
 (&#x27;ar-dz&#x27;, &#x27;Algerian Arabic&#x27;),
 (&#x27;ast&#x27;, &#x27;Asturian&#x27;),
 (&#x27;az&#x27;, &#x27;Azerbaijani&#x27;),
 (&#x27;bg&#x27;, &#x27;Bulgarian&#x27;),
 (&#x27;be&#x27;, &#x27;Belarusian&#x27;),
 (&#x27;bn&#x27;, &#x27;Bengali&#x27;),
 (&#x27;br&#x27;, &#x27;Breton&#x27;),
 (&#x27;bs&#x27;, &#x27;Bosnian&#x27;),
 (&#x27;ca&#x27;, &#x27;Catalan&#x27;),
 (&#x27;ckb&#x27;, &#x27;Central Kurdish (Sorani)&#x27;),
 (&#x27;cs&#x27;, &#x27;Czech&#x27;),
 (&#x27;cy&#x27;, &#x27;Welsh&#x27;),
 (&#x27;da&#x27;, &#x27;Danish&#x27;),
 (&#x27;de&#x27;, &#x27;German&#x27;),
 (&#x27;dsb&#x27;, &#x27;Lower Sorbian&#x27;),
 (&#x27;el&#x27;, &#x27;Greek&#x27;),
 (&#x27;en&#x27;, &#x27;English&#x27;),
 (&#x27;en-au&#x27;, &#x27;Australian English&#x27;),
 (&#x27;en-gb&#x27;, &#x27;British English&#x27;),
 (&#x27;eo&#x27;, &#x27;Esperanto&#x27;),
 (&#x27;es&#x27;, &#x27;Spanish&#x27;),
 (&#x27;es-ar&#x27;, &#x27;Argentinian Spanish&#x27;),
 (&#x27;es-co&#x27;, &#x27;Colombian Spanish&#x27;),
 (&#x27;es-mx&#x27;, &#x27;Mexican Spanish&#x27;),
 (&#x27;es-ni&#x27;, &#x27;Nicaraguan Spanish&#x27;),
 (&#x27;es-ve&#x27;, &#x27;Venezuelan Spanish&#x27;),
 (&#x27;et&#x27;, &#x27;Estonian&#x27;),
 (&#x27;eu&#x27;, &#x27;Basque&#x27;),
 (&#x27;fa&#x27;, &#x27;Persian&#x27;),
 (&#x27;fi&#x27;, &#x27;Finnish&#x27;),
 (&#x27;fr&#x27;, &#x27;French&#x27;),
 (&#x27;fy&#x27;, &#x27;Frisian&#x27;),
 (&#x27;ga&#x27;, &#x27;Irish&#x27;),
 (&#x27;gd&#x27;, &#x27;Scottish Gaelic&#x27;),
 (&#x27;gl&#x27;, &#x27;Galician&#x27;),
 (&#x27;he&#x27;, &#x27;Hebrew&#x27;),
 (&#x27;hi&#x27;, &#x27;Hindi&#x27;),
 (&#x27;hr&#x27;, &#x27;Croatian&#x27;),
 (&#x27;hsb&#x27;, &#x27;Upper Sorbian&#x27;),
 (&#x27;hu&#x27;, &#x27;Hungarian&#x27;),
 (&#x27;hy&#x27;, &#x27;Armenian&#x27;),
 (&#x27;ia&#x27;, &#x27;Interlingua&#x27;),
 (&#x27;id&#x27;, &#x27;Indonesian&#x27;),
 (&#x27;ig&#x27;, &#x27;Igbo&#x27;),
 (&#x27;io&#x27;, &#x27;Ido&#x27;),
 (&#x27;is&#x27;, &#x27;Icelandic&#x27;),
 (&#x27;it&#x27;, &#x27;Italian&#x27;),
 (&#x27;ja&#x27;, &#x27;Japanese&#x27;),
 (&#x27;ka&#x27;, &#x27;Georgian&#x27;),
 (&#x27;kab&#x27;, &#x27;Kabyle&#x27;),
 (&#x27;kk&#x27;, &#x27;Kazakh&#x27;),
 (&#x27;km&#x27;, &#x27;Khmer&#x27;),
 (&#x27;kn&#x27;, &#x27;Kannada&#x27;),
 (&#x27;ko&#x27;, &#x27;Korean&#x27;),
 (&#x27;ky&#x27;, &#x27;Kyrgyz&#x27;),
 (&#x27;lb&#x27;, &#x27;Luxembourgish&#x27;),
 (&#x27;lt&#x27;, &#x27;Lithuanian&#x27;),
 (&#x27;lv&#x27;, &#x27;Latvian&#x27;),
 (&#x27;mk&#x27;, &#x27;Macedonian&#x27;),
 (&#x27;ml&#x27;, &#x27;Malayalam&#x27;),
 (&#x27;mn&#x27;, &#x27;Mongolian&#x27;),
 (&#x27;mr&#x27;, &#x27;Marathi&#x27;),
 (&#x27;ms&#x27;, &#x27;Malay&#x27;),
 (&#x27;my&#x27;, &#x27;Burmese&#x27;),
 (&#x27;nb&#x27;, &#x27;Norwegian Bokmål&#x27;),
 (&#x27;ne&#x27;, &#x27;Nepali&#x27;),
 (&#x27;nl&#x27;, &#x27;Dutch&#x27;),
 (&#x27;nn&#x27;, &#x27;Norwegian Nynorsk&#x27;),
 (&#x27;os&#x27;, &#x27;Ossetic&#x27;),
 (&#x27;pa&#x27;, &#x27;Punjabi&#x27;),
 (&#x27;pl&#x27;, &#x27;Polish&#x27;),
 (&#x27;pt&#x27;, &#x27;Portuguese&#x27;),
 (&#x27;pt-br&#x27;, &#x27;Brazilian Portuguese&#x27;),
 (&#x27;ro&#x27;, &#x27;Romanian&#x27;),
 (&#x27;ru&#x27;, &#x27;Russian&#x27;),
 (&#x27;sk&#x27;, &#x27;Slovak&#x27;),
 (&#x27;sl&#x27;, &#x27;Slovenian&#x27;),
 (&#x27;sq&#x27;, &#x27;Albanian&#x27;),
 (&#x27;sr&#x27;, &#x27;Serbian&#x27;),
 (&#x27;sr-latn&#x27;, &#x27;Serbian Latin&#x27;),
 (&#x27;sv&#x27;, &#x27;Swedish&#x27;),
 (&#x27;sw&#x27;, &#x27;Swahili&#x27;),
 (&#x27;ta&#x27;, &#x27;Tamil&#x27;),
 (&#x27;te&#x27;, &#x27;Telugu&#x27;),
 (&#x27;tg&#x27;, &#x27;Tajik&#x27;),
 (&#x27;th&#x27;, &#x27;Thai&#x27;),
 (&#x27;tk&#x27;, &#x27;Turkmen&#x27;),
 (&#x27;tr&#x27;, &#x27;Turkish&#x27;),
 (&#x27;tt&#x27;, &#x27;Tatar&#x27;),
 (&#x27;udm&#x27;, &#x27;Udmurt&#x27;),
 (&#x27;uk&#x27;, &#x27;Ukrainian&#x27;),
 (&#x27;ur&#x27;, &#x27;Urdu&#x27;),
 (&#x27;uz&#x27;, &#x27;Uzbek&#x27;),
 (&#x27;vi&#x27;, &#x27;Vietnamese&#x27;),
 (&#x27;zh-hans&#x27;, &#x27;Simplified Chinese&#x27;),
 (&#x27;zh-hant&#x27;, &#x27;Traditional Chinese&#x27;)]</pre></td>
        </tr>
      
        <tr>
          <td>LANGUAGES_BIDI</td>
          <td class="code"><pre>[&#x27;he&#x27;, &#x27;ar&#x27;, &#x27;ar-dz&#x27;, &#x27;ckb&#x27;, &#x27;fa&#x27;, &#x27;ur&#x27;]</pre></td>
        </tr>
      
        <tr>
          <td>LANGUAGE_CODE</td>
          <td class="code"><pre>&#x27;pt-BR&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>LANGUAGE_COOKIE_AGE</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>LANGUAGE_COOKIE_DOMAIN</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>LANGUAGE_COOKIE_HTTPONLY</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>LANGUAGE_COOKIE_NAME</td>
          <td class="code"><pre>&#x27;django_language&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>LANGUAGE_COOKIE_PATH</td>
          <td class="code"><pre>&#x27;/&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>LANGUAGE_COOKIE_SAMESITE</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>LANGUAGE_COOKIE_SECURE</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>LOCALE_PATHS</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>LOGGING</td>
          <td class="code"><pre>{}</pre></td>
        </tr>
      
        <tr>
          <td>LOGGING_CONFIG</td>
          <td class="code"><pre>&#x27;logging.config.dictConfig&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>LOGIN_REDIRECT_URL</td>
          <td class="code"><pre>&#x27;/accounts/profile/&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>LOGIN_URL</td>
          <td class="code"><pre>&#x27;/accounts/login/&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>LOGOUT_REDIRECT_URL</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>MANAGERS</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>MEDIA_ROOT</td>
          <td class="code"><pre>&#x27;&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>MEDIA_URL</td>
          <td class="code"><pre>&#x27;/&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>MESSAGE_STORAGE</td>
          <td class="code"><pre>&#x27;django.contrib.messages.storage.fallback.FallbackStorage&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>MIDDLEWARE</td>
          <td class="code"><pre>[&#x27;django.middleware.security.SecurityMiddleware&#x27;,
 &#x27;django.contrib.sessions.middleware.SessionMiddleware&#x27;,
 &#x27;django.middleware.common.CommonMiddleware&#x27;,
 &#x27;django.middleware.csrf.CsrfViewMiddleware&#x27;,
 &#x27;django.contrib.auth.middleware.AuthenticationMiddleware&#x27;,
 &#x27;django.contrib.messages.middleware.MessageMiddleware&#x27;,
 &#x27;django.middleware.clickjacking.XFrameOptionsMiddleware&#x27;]</pre></td>
        </tr>
      
        <tr>
          <td>MIGRATION_MODULES</td>
          <td class="code"><pre>{}</pre></td>
        </tr>
      
        <tr>
          <td>MONTH_DAY_FORMAT</td>
          <td class="code"><pre>&#x27;F j&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>NUMBER_GROUPING</td>
          <td class="code"><pre>0</pre></td>
        </tr>
      
        <tr>
          <td>PASSWORD_HASHERS</td>
          <td class="code"><pre>&#x27;********************&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>PASSWORD_RESET_TIMEOUT</td>
          <td class="code"><pre>&#x27;********************&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>PREPEND_WWW</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>ROOT_URLCONF</td>
          <td class="code"><pre>&#x27;webhook.urls&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SECRET_KEY</td>
          <td class="code"><pre>&#x27;********************&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SECRET_KEY_FALLBACKS</td>
          <td class="code"><pre>&#x27;********************&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SECURE_CONTENT_TYPE_NOSNIFF</td>
          <td class="code"><pre>True</pre></td>
        </tr>
      
        <tr>
          <td>SECURE_CROSS_ORIGIN_OPENER_POLICY</td>
          <td class="code"><pre>&#x27;same-origin&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SECURE_HSTS_INCLUDE_SUBDOMAINS</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>SECURE_HSTS_PRELOAD</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>SECURE_HSTS_SECONDS</td>
          <td class="code"><pre>0</pre></td>
        </tr>
      
        <tr>
          <td>SECURE_PROXY_SSL_HEADER</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>SECURE_REDIRECT_EXEMPT</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>SECURE_REFERRER_POLICY</td>
          <td class="code"><pre>&#x27;same-origin&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SECURE_SSL_HOST</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>SECURE_SSL_REDIRECT</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>SERVER_EMAIL</td>
          <td class="code"><pre>&#x27;root@localhost&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_CACHE_ALIAS</td>
          <td class="code"><pre>&#x27;default&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_COOKIE_AGE</td>
          <td class="code"><pre>1209600</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_COOKIE_DOMAIN</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_COOKIE_HTTPONLY</td>
          <td class="code"><pre>True</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_COOKIE_NAME</td>
          <td class="code"><pre>&#x27;sessionid&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_COOKIE_PATH</td>
          <td class="code"><pre>&#x27;/&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_COOKIE_SAMESITE</td>
          <td class="code"><pre>&#x27;Lax&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_COOKIE_SECURE</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_ENGINE</td>
          <td class="code"><pre>&#x27;django.contrib.sessions.backends.db&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_EXPIRE_AT_BROWSER_CLOSE</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_FILE_PATH</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_SAVE_EVERY_REQUEST</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_SERIALIZER</td>
          <td class="code"><pre>&#x27;django.contrib.sessions.serializers.JSONSerializer&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SETTINGS_MODULE</td>
          <td class="code"><pre>&#x27;webhook.settings&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SHORT_DATETIME_FORMAT</td>
          <td class="code"><pre>&#x27;m/d/Y P&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SHORT_DATE_FORMAT</td>
          <td class="code"><pre>&#x27;m/d/Y&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SIGNING_BACKEND</td>
          <td class="code"><pre>&#x27;django.core.signing.TimestampSigner&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SILENCED_SYSTEM_CHECKS</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>STATICFILES_DIRS</td>
          <td class="code"><pre>[&#x27;/home/jpfilho/Documents/code-ws/python/webhook/statics&#x27;]</pre></td>
        </tr>
      
        <tr>
          <td>STATICFILES_FINDERS</td>
          <td class="code"><pre>[&#x27;django.contrib.staticfiles.finders.FileSystemFinder&#x27;,
 &#x27;django.contrib.staticfiles.finders.AppDirectoriesFinder&#x27;]</pre></td>
        </tr>
      
        <tr>
          <td>STATICFILES_STORAGE</td>
          <td class="code"><pre>&#x27;django.contrib.staticfiles.storage.StaticFilesStorage&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>STATIC_ROOT</td>
          <td class="code"><pre>&#x27;/home/jpfilho/Documents/code-ws/python/webhook/static&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>STATIC_URL</td>
          <td class="code"><pre>&#x27;/static/&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>STORAGES</td>
          <td class="code"><pre>{&#x27;default&#x27;: {&#x27;BACKEND&#x27;: &#x27;django.core.files.storage.FileSystemStorage&#x27;},
 &#x27;staticfiles&#x27;: {&#x27;BACKEND&#x27;: &#x27;django.contrib.staticfiles.storage.StaticFilesStorage&#x27;}}</pre></td>
        </tr>
      
        <tr>
          <td>TEMPLATES</td>
          <td class="code"><pre>[{&#x27;APP_DIRS&#x27;: True,
  &#x27;BACKEND&#x27;: &#x27;django.template.backends.django.DjangoTemplates&#x27;,
  &#x27;DIRS&#x27;: [],
  &#x27;OPTIONS&#x27;: {&#x27;context_processors&#x27;: [&#x27;django.template.context_processors.debug&#x27;,
                                     &#x27;django.template.context_processors.request&#x27;,
                                     &#x27;django.contrib.auth.context_processors.auth&#x27;,
                                     &#x27;django.contrib.messages.context_processors.messages&#x27;]}}]</pre></td>
        </tr>
      
        <tr>
          <td>TEST_NON_SERIALIZED_APPS</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>TEST_RUNNER</td>
          <td class="code"><pre>&#x27;django.test.runner.DiscoverRunner&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>THOUSAND_SEPARATOR</td>
          <td class="code"><pre>&#x27;,&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>TIME_FORMAT</td>
          <td class="code"><pre>&#x27;P&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>TIME_INPUT_FORMATS</td>
          <td class="code"><pre>[&#x27;%H:%M:%S&#x27;, &#x27;%H:%M:%S.%f&#x27;, &#x27;%H:%M&#x27;]</pre></td>
        </tr>
      
        <tr>
          <td>TIME_ZONE</td>
          <td class="code"><pre>&#x27;UTC&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>USE_DEPRECATED_PYTZ</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>USE_I18N</td>
          <td class="code"><pre>True</pre></td>
        </tr>
      
        <tr>
          <td>USE_L10N</td>
          <td class="code"><pre>True</pre></td>
        </tr>
      
        <tr>
          <td>USE_THOUSAND_SEPARATOR</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>USE_TZ</td>
          <td class="code"><pre>True</pre></td>
        </tr>
      
        <tr>
          <td>USE_X_FORWARDED_HOST</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>USE_X_FORWARDED_PORT</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>WSGI_APPLICATION</td>
          <td class="code"><pre>&#x27;webhook.wsgi.app&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>X_FRAME_OPTIONS</td>
          <td class="code"><pre>&#x27;DENY&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>YEAR_MONTH_FORMAT</td>
          <td class="code"><pre>&#x27;F Y&#x27;</pre></td>
        </tr>
      
    </tbody>
  </table>

</div>

  <div id="explanation">
    <p>
      You’re seeing this error because you have <code>DEBUG = True</code> in your
      Django settings file. Change that to <code>False</code>, and Django will
      display a standard page generated by the handler for this status code.
    </p>
  </div>

</body>
</html>

21/05/2023|23:51:02 - messages_api.event -DEBUG- <Response [400]>-{"error":400,"message":"Message matching query does not exist."}
21/05/2023|23:51:02 - messages_api.event -DEBUG- <Response [400]>-{"error":400,"message":"Message matching query does not exist."}
21/05/2023|23:51:19 - webhook.views -INFO- Received webhook request
{'event': 'message.created', 'data': {'id': '5b590f2d-d3f3-4423-8878-3bf67273e806', 'isFromMe': True, 'sent': True, 'type': 'chat', 'timestamp': '2023-05-21T23:51:17.000Z', 'data': {'ack': 0, 'isNew': True, 'isFirst': False}, 'visible': True, 'accountId': '966b70ba-27d8-43ae-a295-35e59f0007be', 'contactId': '79db7607-6088-44c1-a010-ed4ef39d4f37', 'fromId': 'e12d3a56-0c52-43ac-b33c-15c399eb06d4', 'serviceId': '83108c28-14f7-4646-acb8-dab165397fd5', 'toId': None, 'userId': '3f4cc332-516e-4f48-aff2-df6eaa2e5034', 'ticketId': 'e5a453e9-6cb1-476e-b416-3b334b0bc61a', 'ticketUserId': None, 'ticketDepartmentId': None, 'quotedMessageId': None, 'origin': 'user', 'hsmId': None, 'text': 'Ai ai', 'obfuscated': False, 'files': None, 'quotedMessage': None, 'isFromBot': False}, 'webhookId': '27b4c18d-2ab0-4c70-a592-46bbe7e00bc8', 'timestamp': '2023-05-21T23:51:17.988Z'}
21/05/2023|23:51:19 - webhook.views -INFO- Received webhook request
{'event': 'message.updated', 'data': {'id': '5b590f2d-d3f3-4423-8878-3bf67273e806', 'isFromMe': True, 'sent': True, 'type': 'chat', 'timestamp': '2023-05-21T23:51:17.000Z', 'data': {'ack': 1, 'isNew': True, 'isFirst': False}, 'visible': True, 'accountId': '966b70ba-27d8-43ae-a295-35e59f0007be', 'contactId': '79db7607-6088-44c1-a010-ed4ef39d4f37', 'fromId': 'e12d3a56-0c52-43ac-b33c-15c399eb06d4', 'serviceId': '83108c28-14f7-4646-acb8-dab165397fd5', 'toId': None, 'userId': '3f4cc332-516e-4f48-aff2-df6eaa2e5034', 'ticketId': 'e5a453e9-6cb1-476e-b416-3b334b0bc61a', 'ticketUserId': '3f4cc332-516e-4f48-aff2-df6eaa2e5034', 'ticketDepartmentId': 'a78046d7-809d-4cdb-a72a-31dfbc47d862', 'quotedMessageId': None, 'origin': 'user', 'hsmId': None, 'text': 'Ai ai', 'obfuscated': False, 'files': None, 'quotedMessage': None, 'isFromBot': False}, 'webhookId': '27b4c18d-2ab0-4c70-a592-46bbe7e00bc8', 'timestamp': '2023-05-21T23:51:18.075Z'}
21/05/2023|23:51:19 - webhook.views -INFO- Received webhook request
{'event': 'message.updated', 'data': {'id': '5b590f2d-d3f3-4423-8878-3bf67273e806', 'isFromMe': True, 'sent': True, 'type': 'chat', 'timestamp': '2023-05-21T23:51:17.000Z', 'data': {'ack': 2, 'isNew': True, 'isFirst': False}, 'visible': True, 'accountId': '966b70ba-27d8-43ae-a295-35e59f0007be', 'contactId': '79db7607-6088-44c1-a010-ed4ef39d4f37', 'fromId': 'e12d3a56-0c52-43ac-b33c-15c399eb06d4', 'serviceId': '83108c28-14f7-4646-acb8-dab165397fd5', 'toId': None, 'userId': '3f4cc332-516e-4f48-aff2-df6eaa2e5034', 'ticketId': 'e5a453e9-6cb1-476e-b416-3b334b0bc61a', 'ticketUserId': '3f4cc332-516e-4f48-aff2-df6eaa2e5034', 'ticketDepartmentId': 'a78046d7-809d-4cdb-a72a-31dfbc47d862', 'quotedMessageId': None, 'origin': 'user', 'hsmId': None, 'text': 'Ai ai', 'obfuscated': False, 'files': None, 'quotedMessage': None, 'isFromBot': False}, 'webhookId': '27b4c18d-2ab0-4c70-a592-46bbe7e00bc8', 'timestamp': '2023-05-21T23:51:18.531Z'}
21/05/2023|23:51:22 - messages_api.event -DEBUG- <Response [400]>-{"error":400,"message":"Message matching query does not exist."}
21/05/2023|23:51:23 - messages_api.event -DEBUG- <Response [400]>-{"error":400,"message":"Message matching query does not exist."}
21/05/2023|23:51:24 - messages_api.event -DEBUG- Failed to create message_id: 5b590f2d-d3f3-4423-8878-3bf67273e806
<Response [500]>-<!DOCTYPE html>
<html lang="en">
<head>
  <meta http-equiv="content-type" content="text/html; charset=utf-8">
  <meta name="robots" content="NONE,NOARCHIVE">
  <title>ValidationError
          at /webhook/messages/create</title>
  <style type="text/css">
    html * { padding:0; margin:0; }
    body * { padding:10px 20px; }
    body * * { padding:0; }
    body { font:small sans-serif; background-color:#fff; color:#000; }
    body>div { border-bottom:1px solid #ddd; }
    h1 { font-weight:normal; }
    h2 { margin-bottom:.8em; }
    h3 { margin:1em 0 .5em 0; }
    h4 { margin:0 0 .5em 0; font-weight: normal; }
    code, pre { font-size: 100%; white-space: pre-wrap; word-break: break-word; }
    summary { cursor: pointer; }
    table { border:1px solid #ccc; border-collapse: collapse; width:100%; background:white; }
    tbody td, tbody th { vertical-align:top; padding:2px 3px; }
    thead th {
      padding:1px 6px 1px 3px; background:#fefefe; text-align:left;
      font-weight:normal; font-size:11px; border:1px solid #ddd;
    }
    tbody th { width:12em; text-align:right; color:#666; padding-right:.5em; }
    table.vars { margin:5px 10px 2px 40px; width: auto; }
    table.vars td, table.req td { font-family:monospace; }
    table td.code { width:100%; }
    table td.code pre { overflow:hidden; }
    table.source th { color:#666; }
    table.source td { font-family:monospace; white-space:pre; border-bottom:1px solid #eee; }
    ul.traceback { list-style-type:none; color: #222; }
    ul.traceback li.cause { word-break: break-word; }
    ul.traceback li.frame { padding-bottom:1em; color:#4f4f4f; }
    ul.traceback li.user { background-color:#e0e0e0; color:#000 }
    div.context { padding:10px 0; overflow:hidden; }
    div.context ol { padding-left:30px; margin:0 10px; list-style-position: inside; }
    div.context ol li { font-family:monospace; white-space:pre; color:#777; cursor:pointer; padding-left: 2px; }
    div.context ol li pre { display:inline; }
    div.context ol.context-line li { color:#464646; background-color:#dfdfdf; padding: 3px 2px; }
    div.context ol.context-line li span { position:absolute; right:32px; }
    .user div.context ol.context-line li { background-color:#bbb; color:#000; }
    .user div.context ol li { color:#666; }
    div.commands, summary.commands { margin-left: 40px; }
    div.commands a, summary.commands { color:#555; text-decoration:none; }
    .user div.commands a { color: black; }
    #summary { background: #ffc; }
    #summary h2 { font-weight: normal; color: #666; }
    #explanation { background:#eee; }
    #template, #template-not-exist { background:#f6f6f6; }
    #template-not-exist ul { margin: 0 0 10px 20px; }
    #template-not-exist .postmortem-section { margin-bottom: 3px; }
    #unicode-hint { background:#eee; }
    #traceback { background:#eee; }
    #requestinfo { background:#f6f6f6; padding-left:120px; }
    #summary table { border:none; background:transparent; }
    #requestinfo h2, #requestinfo h3 { position:relative; margin-left:-100px; }
    #requestinfo h3 { margin-bottom:-1em; }
    .error { background: #ffc; }
    .specific { color:#cc3300; font-weight:bold; }
    h2 span.commands { font-size:.7em; font-weight:normal; }
    span.commands a:link {color:#5E5694;}
    pre.exception_value { font-family: sans-serif; color: #575757; font-size: 1.5em; margin: 10px 0 10px 0; }
    .append-bottom { margin-bottom: 10px; }
    .fname { user-select: all; }
  </style>
  
  <script>
    function hideAll(elems) {
      for (var e = 0; e < elems.length; e++) {
        elems[e].style.display = 'none';
      }
    }
    window.onload = function() {
      hideAll(document.querySelectorAll('ol.pre-context'));
      hideAll(document.querySelectorAll('ol.post-context'));
      hideAll(document.querySelectorAll('div.pastebin'));
    }
    function toggle() {
      for (var i = 0; i < arguments.length; i++) {
        var e = document.getElementById(arguments[i]);
        if (e) {
          e.style.display = e.style.display == 'none' ? 'block': 'none';
        }
      }
      return false;
    }
    function switchPastebinFriendly(link) {
      s1 = "Switch to copy-and-paste view";
      s2 = "Switch back to interactive view";
      link.textContent = link.textContent.trim() == s1 ? s2: s1;
      toggle('browserTraceback', 'pastebinTraceback');
      return false;
    }
  </script>
  
</head>
<body>
<div id="summary">
  <h1>ValidationError
       at /webhook/messages/create</h1>
  <pre class="exception_value">[&#x27;o valor “[True]”  deve ser True ou False.&#x27;]</pre>
  <table class="meta">

    <tr>
      <th>Request Method:</th>
      <td>POST</td>
    </tr>
    <tr>
      <th>Request URL:</th>
      <td>http://woz.serveo.net/webhook/messages/create?phone=5588988562749&amp;period=05%2F23</td>
    </tr>

    <tr>
      <th>Django Version:</th>
      <td>4.2.1</td>
    </tr>

    <tr>
      <th>Exception Type:</th>
      <td>ValidationError</td>
    </tr>


    <tr>
      <th>Exception Value:</th>
      <td><pre>[&#x27;o valor “[True]”  deve ser True ou False.&#x27;]</pre></td>
    </tr>


    <tr>
      <th>Exception Location:</th>
      <td><span class="fname">/home/jpfilho/.local/lib/python3.10/site-packages/django/db/models/fields/__init__.py</span>, line 1112, in to_python</td>
    </tr>


    <tr>
      <th>Raised during:</th>
      <td>messages_api.views.MessageViewSet</td>
    </tr>

    <tr>
      <th>Python Executable:</th>
      <td>/usr/bin/python3</td>
    </tr>
    <tr>
      <th>Python Version:</th>
      <td>3.10.7</td>
    </tr>
    <tr>
      <th>Python Path:</th>
      <td><pre>[&#x27;/home/jpfilho/Documents/code-ws/python/webhook&#x27;,
 &#x27;/home/jpfilho/Documents/code-ws/python/webhook&#x27;,
 &#x27;/usr/lib/python310.zip&#x27;,
 &#x27;/usr/lib/python3.10&#x27;,
 &#x27;/usr/lib/python3.10/lib-dynload&#x27;,
 &#x27;/home/jpfilho/.local/lib/python3.10/site-packages&#x27;,
 &#x27;/usr/local/lib/python3.10/dist-packages&#x27;,
 &#x27;/usr/lib/python3/dist-packages&#x27;]</pre></td>
    </tr>
    <tr>
      <th>Server time:</th>
      <td>Sun, 21 May 2023 23:51:23 +0000</td>
    </tr>
  </table>
</div>




<div id="traceback">
  <h2>Traceback <span class="commands"><a href="#" onclick="return switchPastebinFriendly(this);">
    Switch to copy-and-paste view</a></span>
  </h2>
  <div id="browserTraceback">
    <ul class="traceback">
      
        
        <li class="frame django">
          
            <code class="fname">/home/jpfilho/.local/lib/python3.10/site-packages/django/core/handlers/exception.py</code>, line 55, in inner
          

          
            <div class="context" id="c139664712786240">
              
                <ol start="48" class="pre-context" id="pre139664712786240">
                
                  <li onclick="toggle('pre139664712786240', 'post139664712786240')"><pre></pre></li>
                
                  <li onclick="toggle('pre139664712786240', 'post139664712786240')"><pre>        return inner</pre></li>
                
                  <li onclick="toggle('pre139664712786240', 'post139664712786240')"><pre>    else:</pre></li>
                
                  <li onclick="toggle('pre139664712786240', 'post139664712786240')"><pre></pre></li>
                
                  <li onclick="toggle('pre139664712786240', 'post139664712786240')"><pre>        @wraps(get_response)</pre></li>
                
                  <li onclick="toggle('pre139664712786240', 'post139664712786240')"><pre>        def inner(request):</pre></li>
                
                  <li onclick="toggle('pre139664712786240', 'post139664712786240')"><pre>            try:</pre></li>
                
                </ol>
              
              <ol start="55" class="context-line">
                <li onclick="toggle('pre139664712786240', 'post139664712786240')"><pre>                response = get_response(request)</pre> <span>…</span></li>
              </ol>
              
                <ol start='56' class="post-context" id="post139664712786240">
                  
                  <li onclick="toggle('pre139664712786240', 'post139664712786240')"><pre>            except Exception as exc:</pre></li>
                  
                  <li onclick="toggle('pre139664712786240', 'post139664712786240')"><pre>                response = response_for_exception(request, exc)</pre></li>
                  
                  <li onclick="toggle('pre139664712786240', 'post139664712786240')"><pre>            return response</pre></li>
                  
                  <li onclick="toggle('pre139664712786240', 'post139664712786240')"><pre></pre></li>
                  
                  <li onclick="toggle('pre139664712786240', 'post139664712786240')"><pre>        return inner</pre></li>
                  
                  <li onclick="toggle('pre139664712786240', 'post139664712786240')"><pre></pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v139664712786240">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>exc</td>
                    <td class="code"><pre>ValidationError([&#x27;o valor “[True]”  deve ser True ou False.&#x27;])</pre></td>
                  </tr>
                
                  <tr>
                    <td>get_response</td>
                    <td class="code"><pre>&lt;bound method BaseHandler._get_response of &lt;django.core.handlers.wsgi.WSGIHandler object at 0x7f063a527ee0&gt;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>request</td>
                    <td class="code"><pre>&lt;WSGIRequest: POST &#x27;/webhook/messages/create?phone=5588988562749&amp;period=05%2F23&#x27;&gt;</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
        <li class="frame django">
          
            <code class="fname">/home/jpfilho/.local/lib/python3.10/site-packages/django/core/handlers/base.py</code>, line 197, in _get_response
          

          
            <div class="context" id="c139664725843456">
              
                <ol start="190" class="pre-context" id="pre139664725843456">
                
                  <li onclick="toggle('pre139664725843456', 'post139664725843456')"><pre></pre></li>
                
                  <li onclick="toggle('pre139664725843456', 'post139664725843456')"><pre>        if response is None:</pre></li>
                
                  <li onclick="toggle('pre139664725843456', 'post139664725843456')"><pre>            wrapped_callback = self.make_view_atomic(callback)</pre></li>
                
                  <li onclick="toggle('pre139664725843456', 'post139664725843456')"><pre>            # If it is an asynchronous view, run it in a subthread.</pre></li>
                
                  <li onclick="toggle('pre139664725843456', 'post139664725843456')"><pre>            if iscoroutinefunction(wrapped_callback):</pre></li>
                
                  <li onclick="toggle('pre139664725843456', 'post139664725843456')"><pre>                wrapped_callback = async_to_sync(wrapped_callback)</pre></li>
                
                  <li onclick="toggle('pre139664725843456', 'post139664725843456')"><pre>            try:</pre></li>
                
                </ol>
              
              <ol start="197" class="context-line">
                <li onclick="toggle('pre139664725843456', 'post139664725843456')"><pre>                response = wrapped_callback(request, *callback_args, **callback_kwargs)</pre> <span>…</span></li>
              </ol>
              
                <ol start='198' class="post-context" id="post139664725843456">
                  
                  <li onclick="toggle('pre139664725843456', 'post139664725843456')"><pre>            except Exception as e:</pre></li>
                  
                  <li onclick="toggle('pre139664725843456', 'post139664725843456')"><pre>                response = self.process_exception_by_middleware(e, request)</pre></li>
                  
                  <li onclick="toggle('pre139664725843456', 'post139664725843456')"><pre>                if response is None:</pre></li>
                  
                  <li onclick="toggle('pre139664725843456', 'post139664725843456')"><pre>                    raise</pre></li>
                  
                  <li onclick="toggle('pre139664725843456', 'post139664725843456')"><pre></pre></li>
                  
                  <li onclick="toggle('pre139664725843456', 'post139664725843456')"><pre>        # Complain if the view returned None (a common error).</pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v139664725843456">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>callback</td>
                    <td class="code"><pre>&lt;function MessageViewSet at 0x7f063adce560&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>callback_args</td>
                    <td class="code"><pre>()</pre></td>
                  </tr>
                
                  <tr>
                    <td>callback_kwargs</td>
                    <td class="code"><pre>{}</pre></td>
                  </tr>
                
                  <tr>
                    <td>middleware_method</td>
                    <td class="code"><pre>&lt;bound method CsrfViewMiddleware.process_view of &lt;CsrfViewMiddleware get_response=convert_exception_to_response.&lt;locals&gt;.inner&gt;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>request</td>
                    <td class="code"><pre>&lt;WSGIRequest: POST &#x27;/webhook/messages/create?phone=5588988562749&amp;period=05%2F23&#x27;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>response</td>
                    <td class="code"><pre>None</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;django.core.handlers.wsgi.WSGIHandler object at 0x7f063a527ee0&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>wrapped_callback</td>
                    <td class="code"><pre>&lt;function MessageViewSet at 0x7f063adce560&gt;</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
        <li class="frame django">
          
            <code class="fname">/home/jpfilho/.local/lib/python3.10/site-packages/django/views/decorators/csrf.py</code>, line 56, in wrapper_view
          

          
            <div class="context" id="c139664725850304">
              
                <ol start="49" class="pre-context" id="pre139664725850304">
                
                  <li onclick="toggle('pre139664725850304', 'post139664725850304')"><pre>def csrf_exempt(view_func):</pre></li>
                
                  <li onclick="toggle('pre139664725850304', 'post139664725850304')"><pre>    &quot;&quot;&quot;Mark a view function as being exempt from the CSRF view protection.&quot;&quot;&quot;</pre></li>
                
                  <li onclick="toggle('pre139664725850304', 'post139664725850304')"><pre></pre></li>
                
                  <li onclick="toggle('pre139664725850304', 'post139664725850304')"><pre>    # view_func.csrf_exempt = True would also work, but decorators are nicer</pre></li>
                
                  <li onclick="toggle('pre139664725850304', 'post139664725850304')"><pre>    # if they don&#x27;t have side effects, so return a new function.</pre></li>
                
                  <li onclick="toggle('pre139664725850304', 'post139664725850304')"><pre>    @wraps(view_func)</pre></li>
                
                  <li onclick="toggle('pre139664725850304', 'post139664725850304')"><pre>    def wrapper_view(*args, **kwargs):</pre></li>
                
                </ol>
              
              <ol start="56" class="context-line">
                <li onclick="toggle('pre139664725850304', 'post139664725850304')"><pre>        return view_func(*args, **kwargs)</pre> <span>…</span></li>
              </ol>
              
                <ol start='57' class="post-context" id="post139664725850304">
                  
                  <li onclick="toggle('pre139664725850304', 'post139664725850304')"><pre></pre></li>
                  
                  <li onclick="toggle('pre139664725850304', 'post139664725850304')"><pre>    wrapper_view.csrf_exempt = True</pre></li>
                  
                  <li onclick="toggle('pre139664725850304', 'post139664725850304')"><pre>    return wrapper_view</pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v139664725850304">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>args</td>
                    <td class="code"><pre>(&lt;WSGIRequest: POST &#x27;/webhook/messages/create?phone=5588988562749&amp;period=05%2F23&#x27;&gt;,)</pre></td>
                  </tr>
                
                  <tr>
                    <td>kwargs</td>
                    <td class="code"><pre>{}</pre></td>
                  </tr>
                
                  <tr>
                    <td>view_func</td>
                    <td class="code"><pre>&lt;function MessageViewSet at 0x7f063adce4d0&gt;</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
        <li class="frame user">
          
            <code class="fname">/home/jpfilho/.local/lib/python3.10/site-packages/rest_framework/viewsets.py</code>, line 125, in view
          

          
            <div class="context" id="c139664725839360">
              
                <ol start="118" class="pre-context" id="pre139664725839360">
                
                  <li onclick="toggle('pre139664725839360', 'post139664725839360')"><pre>                setattr(self, method, handler)</pre></li>
                
                  <li onclick="toggle('pre139664725839360', 'post139664725839360')"><pre></pre></li>
                
                  <li onclick="toggle('pre139664725839360', 'post139664725839360')"><pre>            self.request = request</pre></li>
                
                  <li onclick="toggle('pre139664725839360', 'post139664725839360')"><pre>            self.args = args</pre></li>
                
                  <li onclick="toggle('pre139664725839360', 'post139664725839360')"><pre>            self.kwargs = kwargs</pre></li>
                
                  <li onclick="toggle('pre139664725839360', 'post139664725839360')"><pre></pre></li>
                
                  <li onclick="toggle('pre139664725839360', 'post139664725839360')"><pre>            # And continue as usual</pre></li>
                
                </ol>
              
              <ol start="125" class="context-line">
                <li onclick="toggle('pre139664725839360', 'post139664725839360')"><pre>            return self.dispatch(request, *args, **kwargs)</pre> <span>…</span></li>
              </ol>
              
                <ol start='126' class="post-context" id="post139664725839360">
                  
                  <li onclick="toggle('pre139664725839360', 'post139664725839360')"><pre></pre></li>
                  
                  <li onclick="toggle('pre139664725839360', 'post139664725839360')"><pre>        # take name and docstring from class</pre></li>
                  
                  <li onclick="toggle('pre139664725839360', 'post139664725839360')"><pre>        update_wrapper(view, cls, updated=())</pre></li>
                  
                  <li onclick="toggle('pre139664725839360', 'post139664725839360')"><pre></pre></li>
                  
                  <li onclick="toggle('pre139664725839360', 'post139664725839360')"><pre>        # and possible attributes set by decorators</pre></li>
                  
                  <li onclick="toggle('pre139664725839360', 'post139664725839360')"><pre>        # like csrf_exempt from dispatch</pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v139664725839360">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>action</td>
                    <td class="code"><pre>&#x27;create&#x27;</pre></td>
                  </tr>
                
                  <tr>
                    <td>actions</td>
                    <td class="code"><pre>{&#x27;post&#x27;: &#x27;create&#x27;}</pre></td>
                  </tr>
                
                  <tr>
                    <td>args</td>
                    <td class="code"><pre>()</pre></td>
                  </tr>
                
                  <tr>
                    <td>cls</td>
                    <td class="code"><pre>&lt;class &#x27;messages_api.views.MessageViewSet&#x27;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>handler</td>
                    <td class="code"><pre>&lt;bound method MessageViewSet.create of &lt;messages_api.views.MessageViewSet object at 0x7f063a55a320&gt;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>initkwargs</td>
                    <td class="code"><pre>{}</pre></td>
                  </tr>
                
                  <tr>
                    <td>kwargs</td>
                    <td class="code"><pre>{}</pre></td>
                  </tr>
                
                  <tr>
                    <td>method</td>
                    <td class="code"><pre>&#x27;post&#x27;</pre></td>
                  </tr>
                
                  <tr>
                    <td>request</td>
                    <td class="code"><pre>&lt;WSGIRequest: POST &#x27;/webhook/messages/create?phone=5588988562749&amp;period=05%2F23&#x27;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;messages_api.views.MessageViewSet object at 0x7f063a55a320&gt;</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
        <li class="frame user">
          
            <code class="fname">/home/jpfilho/.local/lib/python3.10/site-packages/rest_framework/views.py</code>, line 509, in dispatch
          

          
            <div class="context" id="c139664712787520">
              
                <ol start="502" class="pre-context" id="pre139664712787520">
                
                  <li onclick="toggle('pre139664712787520', 'post139664712787520')"><pre>                                  self.http_method_not_allowed)</pre></li>
                
                  <li onclick="toggle('pre139664712787520', 'post139664712787520')"><pre>            else:</pre></li>
                
                  <li onclick="toggle('pre139664712787520', 'post139664712787520')"><pre>                handler = self.http_method_not_allowed</pre></li>
                
                  <li onclick="toggle('pre139664712787520', 'post139664712787520')"><pre></pre></li>
                
                  <li onclick="toggle('pre139664712787520', 'post139664712787520')"><pre>            response = handler(request, *args, **kwargs)</pre></li>
                
                  <li onclick="toggle('pre139664712787520', 'post139664712787520')"><pre></pre></li>
                
                  <li onclick="toggle('pre139664712787520', 'post139664712787520')"><pre>        except Exception as exc:</pre></li>
                
                </ol>
              
              <ol start="509" class="context-line">
                <li onclick="toggle('pre139664712787520', 'post139664712787520')"><pre>            response = self.handle_exception(exc)</pre> <span>…</span></li>
              </ol>
              
                <ol start='510' class="post-context" id="post139664712787520">
                  
                  <li onclick="toggle('pre139664712787520', 'post139664712787520')"><pre></pre></li>
                  
                  <li onclick="toggle('pre139664712787520', 'post139664712787520')"><pre>        self.response = self.finalize_response(request, response, *args, **kwargs)</pre></li>
                  
                  <li onclick="toggle('pre139664712787520', 'post139664712787520')"><pre>        return self.response</pre></li>
                  
                  <li onclick="toggle('pre139664712787520', 'post139664712787520')"><pre></pre></li>
                  
                  <li onclick="toggle('pre139664712787520', 'post139664712787520')"><pre>    def options(self, request, *args, **kwargs):</pre></li>
                  
                  <li onclick="toggle('pre139664712787520', 'post139664712787520')"><pre>        &quot;&quot;&quot;</pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v139664712787520">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>args</td>
                    <td class="code"><pre>()</pre></td>
                  </tr>
                
                  <tr>
                    <td>handler</td>
                    <td class="code"><pre>&lt;bound method MessageViewSet.create of &lt;messages_api.views.MessageViewSet object at 0x7f063a55a320&gt;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>kwargs</td>
                    <td class="code"><pre>{}</pre></td>
                  </tr>
                
                  <tr>
                    <td>request</td>
                    <td class="code"><pre>&lt;rest_framework.request.Request: POST &#x27;/webhook/messages/create?phone=5588988562749&amp;period=05%2F23&#x27;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;messages_api.views.MessageViewSet object at 0x7f063a55a320&gt;</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
        <li class="frame user">
          
            <code class="fname">/home/jpfilho/.local/lib/python3.10/site-packages/rest_framework/views.py</code>, line 469, in handle_exception
          

          
            <div class="context" id="c139664712787456">
              
                <ol start="462" class="pre-context" id="pre139664712787456">
                
                  <li onclick="toggle('pre139664712787456', 'post139664712787456')"><pre></pre></li>
                
                  <li onclick="toggle('pre139664712787456', 'post139664712787456')"><pre>        exception_handler = self.get_exception_handler()</pre></li>
                
                  <li onclick="toggle('pre139664712787456', 'post139664712787456')"><pre></pre></li>
                
                  <li onclick="toggle('pre139664712787456', 'post139664712787456')"><pre>        context = self.get_exception_handler_context()</pre></li>
                
                  <li onclick="toggle('pre139664712787456', 'post139664712787456')"><pre>        response = exception_handler(exc, context)</pre></li>
                
                  <li onclick="toggle('pre139664712787456', 'post139664712787456')"><pre></pre></li>
                
                  <li onclick="toggle('pre139664712787456', 'post139664712787456')"><pre>        if response is None:</pre></li>
                
                </ol>
              
              <ol start="469" class="context-line">
                <li onclick="toggle('pre139664712787456', 'post139664712787456')"><pre>            self.raise_uncaught_exception(exc)</pre> <span>…</span></li>
              </ol>
              
                <ol start='470' class="post-context" id="post139664712787456">
                  
                  <li onclick="toggle('pre139664712787456', 'post139664712787456')"><pre></pre></li>
                  
                  <li onclick="toggle('pre139664712787456', 'post139664712787456')"><pre>        response.exception = True</pre></li>
                  
                  <li onclick="toggle('pre139664712787456', 'post139664712787456')"><pre>        return response</pre></li>
                  
                  <li onclick="toggle('pre139664712787456', 'post139664712787456')"><pre></pre></li>
                  
                  <li onclick="toggle('pre139664712787456', 'post139664712787456')"><pre>    def raise_uncaught_exception(self, exc):</pre></li>
                  
                  <li onclick="toggle('pre139664712787456', 'post139664712787456')"><pre>        if settings.DEBUG:</pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v139664712787456">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>context</td>
                    <td class="code"><pre>{&#x27;args&#x27;: (),
 &#x27;kwargs&#x27;: {},
 &#x27;request&#x27;: &lt;rest_framework.request.Request: POST &#x27;/webhook/messages/create?phone=5588988562749&amp;period=05%2F23&#x27;&gt;,
 &#x27;view&#x27;: &lt;messages_api.views.MessageViewSet object at 0x7f063a55a320&gt;}</pre></td>
                  </tr>
                
                  <tr>
                    <td>exc</td>
                    <td class="code"><pre>ValidationError([&#x27;o valor “[True]”  deve ser True ou False.&#x27;])</pre></td>
                  </tr>
                
                  <tr>
                    <td>exception_handler</td>
                    <td class="code"><pre>&lt;function exception_handler at 0x7f063ad90700&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>response</td>
                    <td class="code"><pre>None</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;messages_api.views.MessageViewSet object at 0x7f063a55a320&gt;</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
        <li class="frame user">
          
            <code class="fname">/home/jpfilho/.local/lib/python3.10/site-packages/rest_framework/views.py</code>, line 480, in raise_uncaught_exception
          

          
            <div class="context" id="c139664712787392">
              
                <ol start="473" class="pre-context" id="pre139664712787392">
                
                  <li onclick="toggle('pre139664712787392', 'post139664712787392')"><pre></pre></li>
                
                  <li onclick="toggle('pre139664712787392', 'post139664712787392')"><pre>    def raise_uncaught_exception(self, exc):</pre></li>
                
                  <li onclick="toggle('pre139664712787392', 'post139664712787392')"><pre>        if settings.DEBUG:</pre></li>
                
                  <li onclick="toggle('pre139664712787392', 'post139664712787392')"><pre>            request = self.request</pre></li>
                
                  <li onclick="toggle('pre139664712787392', 'post139664712787392')"><pre>            renderer_format = getattr(request.accepted_renderer, &#x27;format&#x27;)</pre></li>
                
                  <li onclick="toggle('pre139664712787392', 'post139664712787392')"><pre>            use_plaintext_traceback = renderer_format not in (&#x27;html&#x27;, &#x27;api&#x27;, &#x27;admin&#x27;)</pre></li>
                
                  <li onclick="toggle('pre139664712787392', 'post139664712787392')"><pre>            request.force_plaintext_errors(use_plaintext_traceback)</pre></li>
                
                </ol>
              
              <ol start="480" class="context-line">
                <li onclick="toggle('pre139664712787392', 'post139664712787392')"><pre>        raise exc</pre> <span>…</span></li>
              </ol>
              
                <ol start='481' class="post-context" id="post139664712787392">
                  
                  <li onclick="toggle('pre139664712787392', 'post139664712787392')"><pre></pre></li>
                  
                  <li onclick="toggle('pre139664712787392', 'post139664712787392')"><pre>    # Note: Views are made CSRF exempt from within `as_view` as to prevent</pre></li>
                  
                  <li onclick="toggle('pre139664712787392', 'post139664712787392')"><pre>    # accidental removal of this exemption in cases where `dispatch` needs to</pre></li>
                  
                  <li onclick="toggle('pre139664712787392', 'post139664712787392')"><pre>    # be overridden.</pre></li>
                  
                  <li onclick="toggle('pre139664712787392', 'post139664712787392')"><pre>    def dispatch(self, request, *args, **kwargs):</pre></li>
                  
                  <li onclick="toggle('pre139664712787392', 'post139664712787392')"><pre>        &quot;&quot;&quot;</pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v139664712787392">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>exc</td>
                    <td class="code"><pre>ValidationError([&#x27;o valor “[True]”  deve ser True ou False.&#x27;])</pre></td>
                  </tr>
                
                  <tr>
                    <td>renderer_format</td>
                    <td class="code"><pre>&#x27;json&#x27;</pre></td>
                  </tr>
                
                  <tr>
                    <td>request</td>
                    <td class="code"><pre>&lt;rest_framework.request.Request: POST &#x27;/webhook/messages/create?phone=5588988562749&amp;period=05%2F23&#x27;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;messages_api.views.MessageViewSet object at 0x7f063a55a320&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>use_plaintext_traceback</td>
                    <td class="code"><pre>True</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
        <li class="frame user">
          
            <code class="fname">/home/jpfilho/.local/lib/python3.10/site-packages/rest_framework/views.py</code>, line 506, in dispatch
          

          
            <div class="context" id="c139664712494464">
              
                <ol start="499" class="pre-context" id="pre139664712494464">
                
                  <li onclick="toggle('pre139664712494464', 'post139664712494464')"><pre>            # Get the appropriate handler method</pre></li>
                
                  <li onclick="toggle('pre139664712494464', 'post139664712494464')"><pre>            if request.method.lower() in self.http_method_names:</pre></li>
                
                  <li onclick="toggle('pre139664712494464', 'post139664712494464')"><pre>                handler = getattr(self, request.method.lower(),</pre></li>
                
                  <li onclick="toggle('pre139664712494464', 'post139664712494464')"><pre>                                  self.http_method_not_allowed)</pre></li>
                
                  <li onclick="toggle('pre139664712494464', 'post139664712494464')"><pre>            else:</pre></li>
                
                  <li onclick="toggle('pre139664712494464', 'post139664712494464')"><pre>                handler = self.http_method_not_allowed</pre></li>
                
                  <li onclick="toggle('pre139664712494464', 'post139664712494464')"><pre></pre></li>
                
                </ol>
              
              <ol start="506" class="context-line">
                <li onclick="toggle('pre139664712494464', 'post139664712494464')"><pre>            response = handler(request, *args, **kwargs)</pre> <span>…</span></li>
              </ol>
              
                <ol start='507' class="post-context" id="post139664712494464">
                  
                  <li onclick="toggle('pre139664712494464', 'post139664712494464')"><pre></pre></li>
                  
                  <li onclick="toggle('pre139664712494464', 'post139664712494464')"><pre>        except Exception as exc:</pre></li>
                  
                  <li onclick="toggle('pre139664712494464', 'post139664712494464')"><pre>            response = self.handle_exception(exc)</pre></li>
                  
                  <li onclick="toggle('pre139664712494464', 'post139664712494464')"><pre></pre></li>
                  
                  <li onclick="toggle('pre139664712494464', 'post139664712494464')"><pre>        self.response = self.finalize_response(request, response, *args, **kwargs)</pre></li>
                  
                  <li onclick="toggle('pre139664712494464', 'post139664712494464')"><pre>        return self.response</pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v139664712494464">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>args</td>
                    <td class="code"><pre>()</pre></td>
                  </tr>
                
                  <tr>
                    <td>handler</td>
                    <td class="code"><pre>&lt;bound method MessageViewSet.create of &lt;messages_api.views.MessageViewSet object at 0x7f063a55a320&gt;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>kwargs</td>
                    <td class="code"><pre>{}</pre></td>
                  </tr>
                
                  <tr>
                    <td>request</td>
                    <td class="code"><pre>&lt;rest_framework.request.Request: POST &#x27;/webhook/messages/create?phone=5588988562749&amp;period=05%2F23&#x27;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;messages_api.views.MessageViewSet object at 0x7f063a55a320&gt;</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
        <li class="frame user">
          
            <code class="fname">/home/jpfilho/Documents/code-ws/python/webhook/messages_api/views.py</code>, line 153, in create
          

          
            <div class="context" id="c139664771277184">
              
                <ol start="146" class="pre-context" id="pre139664771277184">
                
                  <li onclick="toggle('pre139664771277184', 'post139664771277184')"><pre>        except ValueError:</pre></li>
                
                  <li onclick="toggle('pre139664771277184', 'post139664771277184')"><pre>            return Response({&#x27;error&#x27;: &#x27;Invalid period format, should be YYYY-MM-DD or MM-YY.&#x27;}, status=400)</pre></li>
                
                  <li onclick="toggle('pre139664771277184', 'post139664771277184')"><pre></pre></li>
                
                  <li onclick="toggle('pre139664771277184', 'post139664771277184')"><pre>        if len(period) == 5:</pre></li>
                
                  <li onclick="toggle('pre139664771277184', 'post139664771277184')"><pre>            period = dt.now().strftime(</pre></li>
                
                  <li onclick="toggle('pre139664771277184', 'post139664771277184')"><pre>                &#x27;%Y-&#x27;) + period[-2:] + &#x27;-&#x27; + period[:2] + &#x27; 00:00:00&#x27;</pre></li>
                
                  <li onclick="toggle('pre139664771277184', 'post139664771277184')"><pre>        try:</pre></li>
                
                </ol>
              
              <ol start="153" class="context-line">
                <li onclick="toggle('pre139664771277184', 'post139664771277184')"><pre>            message = Message.objects.create(</pre> <span>…</span></li>
              </ol>
              
                <ol start='154' class="post-context" id="post139664771277184">
                  
                  <li onclick="toggle('pre139664771277184', 'post139664771277184')"><pre>                contact_id=contact_id,</pre></li>
                  
                  <li onclick="toggle('pre139664771277184', 'post139664771277184')"><pre>                contact_number=contact_number,</pre></li>
                  
                  <li onclick="toggle('pre139664771277184', 'post139664771277184')"><pre>                period=period,</pre></li>
                  
                  <li onclick="toggle('pre139664771277184', 'post139664771277184')"><pre>                timestamp=timestamp,</pre></li>
                  
                  <li onclick="toggle('pre139664771277184', 'post139664771277184')"><pre>                status=status,</pre></li>
                  
                  <li onclick="toggle('pre139664771277184', 'post139664771277184')"><pre>                message_id=message_id,</pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v139664771277184">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>args</td>
                    <td class="code"><pre>()</pre></td>
                  </tr>
                
                  <tr>
                    <td>contact_id</td>
                    <td class="code"><pre>&#x27;79db7607-6088-44c1-a010-ed4ef39d4f37&#x27;</pre></td>
                  </tr>
                
                  <tr>
                    <td>contact_number</td>
                    <td class="code"><pre>&#x27;5588988562749&#x27;</pre></td>
                  </tr>
                
                  <tr>
                    <td>isFromMe</td>
                    <td class="code"><pre>[True]</pre></td>
                  </tr>
                
                  <tr>
                    <td>kwargs</td>
                    <td class="code"><pre>{}</pre></td>
                  </tr>
                
                  <tr>
                    <td>message_id</td>
                    <td class="code"><pre>&#x27;5b590f2d-d3f3-4423-8878-3bf67273e806&#x27;</pre></td>
                  </tr>
                
                  <tr>
                    <td>message_type</td>
                    <td class="code"><pre>&#x27;chat&#x27;</pre></td>
                  </tr>
                
                  <tr>
                    <td>period</td>
                    <td class="code"><pre>&#x27;2023-05-01&#x27;</pre></td>
                  </tr>
                
                  <tr>
                    <td>request</td>
                    <td class="code"><pre>&lt;rest_framework.request.Request: POST &#x27;/webhook/messages/create?phone=5588988562749&amp;period=05%2F23&#x27;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;messages_api.views.MessageViewSet object at 0x7f063a55a320&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>status</td>
                    <td class="code"><pre>0</pre></td>
                  </tr>
                
                  <tr>
                    <td>ticket_id</td>
                    <td class="code"><pre>&#x27;e5a453e9-6cb1-476e-b416-3b334b0bc61a&#x27;</pre></td>
                  </tr>
                
                  <tr>
                    <td>timestamp</td>
                    <td class="code"><pre>&#x27;2023-05-21T23:51:17.988Z&#x27;</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
        <li class="frame django">
          
            <code class="fname">/home/jpfilho/.local/lib/python3.10/site-packages/django/db/models/manager.py</code>, line 87, in manager_method
          

          
            <div class="context" id="c139664712886720">
              
                <ol start="80" class="pre-context" id="pre139664712886720">
                
                  <li onclick="toggle('pre139664712886720', 'post139664712886720')"><pre>        return []</pre></li>
                
                  <li onclick="toggle('pre139664712886720', 'post139664712886720')"><pre></pre></li>
                
                  <li onclick="toggle('pre139664712886720', 'post139664712886720')"><pre>    @classmethod</pre></li>
                
                  <li onclick="toggle('pre139664712886720', 'post139664712886720')"><pre>    def _get_queryset_methods(cls, queryset_class):</pre></li>
                
                  <li onclick="toggle('pre139664712886720', 'post139664712886720')"><pre>        def create_method(name, method):</pre></li>
                
                  <li onclick="toggle('pre139664712886720', 'post139664712886720')"><pre>            @wraps(method)</pre></li>
                
                  <li onclick="toggle('pre139664712886720', 'post139664712886720')"><pre>            def manager_method(self, *args, **kwargs):</pre></li>
                
                </ol>
              
              <ol start="87" class="context-line">
                <li onclick="toggle('pre139664712886720', 'post139664712886720')"><pre>                return getattr(self.get_queryset(), name)(*args, **kwargs)</pre> <span>…</span></li>
              </ol>
              
                <ol start='88' class="post-context" id="post139664712886720">
                  
                  <li onclick="toggle('pre139664712886720', 'post139664712886720')"><pre></pre></li>
                  
                  <li onclick="toggle('pre139664712886720', 'post139664712886720')"><pre>            return manager_method</pre></li>
                  
                  <li onclick="toggle('pre139664712886720', 'post139664712886720')"><pre></pre></li>
                  
                  <li onclick="toggle('pre139664712886720', 'post139664712886720')"><pre>        new_methods = {}</pre></li>
                  
                  <li onclick="toggle('pre139664712886720', 'post139664712886720')"><pre>        for name, method in inspect.getmembers(</pre></li>
                  
                  <li onclick="toggle('pre139664712886720', 'post139664712886720')"><pre>            queryset_class, predicate=inspect.isfunction</pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v139664712886720">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>args</td>
                    <td class="code"><pre>()</pre></td>
                  </tr>
                
                  <tr>
                    <td>kwargs</td>
                    <td class="code"><pre>{&#x27;contact_id&#x27;: &#x27;79db7607-6088-44c1-a010-ed4ef39d4f37&#x27;,
 &#x27;contact_number&#x27;: &#x27;5588988562749&#x27;,
 &#x27;is_from_me&#x27;: [True],
 &#x27;message_id&#x27;: &#x27;5b590f2d-d3f3-4423-8878-3bf67273e806&#x27;,
 &#x27;message_type&#x27;: &#x27;chat&#x27;,
 &#x27;period&#x27;: &#x27;2023-05-01&#x27;,
 &#x27;retries&#x27;: 0,
 &#x27;status&#x27;: 0,
 &#x27;ticket_service_id&#x27;: &#x27;e5a453e9-6cb1-476e-b416-3b334b0bc61a&#x27;,
 &#x27;timestamp&#x27;: &#x27;2023-05-21T23:51:17.988Z&#x27;}</pre></td>
                  </tr>
                
                  <tr>
                    <td>name</td>
                    <td class="code"><pre>&#x27;create&#x27;</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;django.db.models.manager.Manager object at 0x7f063b521b40&gt;</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
        <li class="frame django">
          
            <code class="fname">/home/jpfilho/.local/lib/python3.10/site-packages/django/db/models/query.py</code>, line 658, in create
          

          
            <div class="context" id="c139664712881984">
              
                <ol start="651" class="pre-context" id="pre139664712881984">
                
                  <li onclick="toggle('pre139664712881984', 'post139664712881984')"><pre>    def create(self, **kwargs):</pre></li>
                
                  <li onclick="toggle('pre139664712881984', 'post139664712881984')"><pre>        &quot;&quot;&quot;</pre></li>
                
                  <li onclick="toggle('pre139664712881984', 'post139664712881984')"><pre>        Create a new object with the given kwargs, saving it to the database</pre></li>
                
                  <li onclick="toggle('pre139664712881984', 'post139664712881984')"><pre>        and returning the created object.</pre></li>
                
                  <li onclick="toggle('pre139664712881984', 'post139664712881984')"><pre>        &quot;&quot;&quot;</pre></li>
                
                  <li onclick="toggle('pre139664712881984', 'post139664712881984')"><pre>        obj = self.model(**kwargs)</pre></li>
                
                  <li onclick="toggle('pre139664712881984', 'post139664712881984')"><pre>        self._for_write = True</pre></li>
                
                </ol>
              
              <ol start="658" class="context-line">
                <li onclick="toggle('pre139664712881984', 'post139664712881984')"><pre>        obj.save(force_insert=True, using=self.db)</pre> <span>…</span></li>
              </ol>
              
                <ol start='659' class="post-context" id="post139664712881984">
                  
                  <li onclick="toggle('pre139664712881984', 'post139664712881984')"><pre>        return obj</pre></li>
                  
                  <li onclick="toggle('pre139664712881984', 'post139664712881984')"><pre></pre></li>
                  
                  <li onclick="toggle('pre139664712881984', 'post139664712881984')"><pre>    async def acreate(self, **kwargs):</pre></li>
                  
                  <li onclick="toggle('pre139664712881984', 'post139664712881984')"><pre>        return await sync_to_async(self.create)(**kwargs)</pre></li>
                  
                  <li onclick="toggle('pre139664712881984', 'post139664712881984')"><pre></pre></li>
                  
                  <li onclick="toggle('pre139664712881984', 'post139664712881984')"><pre>    def _prepare_for_bulk_create(self, objs):</pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v139664712881984">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>kwargs</td>
                    <td class="code"><pre>{&#x27;contact_id&#x27;: &#x27;79db7607-6088-44c1-a010-ed4ef39d4f37&#x27;,
 &#x27;contact_number&#x27;: &#x27;5588988562749&#x27;,
 &#x27;is_from_me&#x27;: [True],
 &#x27;message_id&#x27;: &#x27;5b590f2d-d3f3-4423-8878-3bf67273e806&#x27;,
 &#x27;message_type&#x27;: &#x27;chat&#x27;,
 &#x27;period&#x27;: &#x27;2023-05-01&#x27;,
 &#x27;retries&#x27;: 0,
 &#x27;status&#x27;: 0,
 &#x27;ticket_service_id&#x27;: &#x27;e5a453e9-6cb1-476e-b416-3b334b0bc61a&#x27;,
 &#x27;timestamp&#x27;: &#x27;2023-05-21T23:51:17.988Z&#x27;}</pre></td>
                  </tr>
                
                  <tr>
                    <td>obj</td>
                    <td class="code"><pre>&lt;Message: 5588988562749 - 2023-05-01 - 0&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;QuerySet []&gt;</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
        <li class="frame django">
          
            <code class="fname">/home/jpfilho/.local/lib/python3.10/site-packages/django/db/models/base.py</code>, line 814, in save
          

          
            <div class="context" id="c139664725846336">
              
                <ol start="807" class="pre-context" id="pre139664725846336">
                
                  <li onclick="toggle('pre139664725846336', 'post139664725846336')"><pre>            for field in self._meta.concrete_fields:</pre></li>
                
                  <li onclick="toggle('pre139664725846336', 'post139664725846336')"><pre>                if not field.primary_key and not hasattr(field, &quot;through&quot;):</pre></li>
                
                  <li onclick="toggle('pre139664725846336', 'post139664725846336')"><pre>                    field_names.add(field.attname)</pre></li>
                
                  <li onclick="toggle('pre139664725846336', 'post139664725846336')"><pre>            loaded_fields = field_names.difference(deferred_fields)</pre></li>
                
                  <li onclick="toggle('pre139664725846336', 'post139664725846336')"><pre>            if loaded_fields:</pre></li>
                
                  <li onclick="toggle('pre139664725846336', 'post139664725846336')"><pre>                update_fields = frozenset(loaded_fields)</pre></li>
                
                  <li onclick="toggle('pre139664725846336', 'post139664725846336')"><pre></pre></li>
                
                </ol>
              
              <ol start="814" class="context-line">
                <li onclick="toggle('pre139664725846336', 'post139664725846336')"><pre>        self.save_base(</pre> <span>…</span></li>
              </ol>
              
                <ol start='815' class="post-context" id="post139664725846336">
                  
                  <li onclick="toggle('pre139664725846336', 'post139664725846336')"><pre>            using=using,</pre></li>
                  
                  <li onclick="toggle('pre139664725846336', 'post139664725846336')"><pre>            force_insert=force_insert,</pre></li>
                  
                  <li onclick="toggle('pre139664725846336', 'post139664725846336')"><pre>            force_update=force_update,</pre></li>
                  
                  <li onclick="toggle('pre139664725846336', 'post139664725846336')"><pre>            update_fields=update_fields,</pre></li>
                  
                  <li onclick="toggle('pre139664725846336', 'post139664725846336')"><pre>        )</pre></li>
                  
                  <li onclick="toggle('pre139664725846336', 'post139664725846336')"><pre></pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v139664725846336">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>deferred_fields</td>
                    <td class="code"><pre>set()</pre></td>
                  </tr>
                
                  <tr>
                    <td>force_insert</td>
                    <td class="code"><pre>True</pre></td>
                  </tr>
                
                  <tr>
                    <td>force_update</td>
                    <td class="code"><pre>False</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;Message: 5588988562749 - 2023-05-01 - 0&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>update_fields</td>
                    <td class="code"><pre>None</pre></td>
                  </tr>
                
                  <tr>
                    <td>using</td>
                    <td class="code"><pre>&#x27;default&#x27;</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
        <li class="frame django">
          
            <code class="fname">/home/jpfilho/.local/lib/python3.10/site-packages/django/db/models/base.py</code>, line 877, in save_base
          

          
            <div class="context" id="c139664712789824">
              
                <ol start="870" class="pre-context" id="pre139664712789824">
                
                  <li onclick="toggle('pre139664712789824', 'post139664712789824')"><pre>            context_manager = transaction.atomic(using=using, savepoint=False)</pre></li>
                
                  <li onclick="toggle('pre139664712789824', 'post139664712789824')"><pre>        else:</pre></li>
                
                  <li onclick="toggle('pre139664712789824', 'post139664712789824')"><pre>            context_manager = transaction.mark_for_rollback_on_error(using=using)</pre></li>
                
                  <li onclick="toggle('pre139664712789824', 'post139664712789824')"><pre>        with context_manager:</pre></li>
                
                  <li onclick="toggle('pre139664712789824', 'post139664712789824')"><pre>            parent_inserted = False</pre></li>
                
                  <li onclick="toggle('pre139664712789824', 'post139664712789824')"><pre>            if not raw:</pre></li>
                
                  <li onclick="toggle('pre139664712789824', 'post139664712789824')"><pre>                parent_inserted = self._save_parents(cls, using, update_fields)</pre></li>
                
                </ol>
              
              <ol start="877" class="context-line">
                <li onclick="toggle('pre139664712789824', 'post139664712789824')"><pre>            updated = self._save_table(</pre> <span>…</span></li>
              </ol>
              
                <ol start='878' class="post-context" id="post139664712789824">
                  
                  <li onclick="toggle('pre139664712789824', 'post139664712789824')"><pre>                raw,</pre></li>
                  
                  <li onclick="toggle('pre139664712789824', 'post139664712789824')"><pre>                cls,</pre></li>
                  
                  <li onclick="toggle('pre139664712789824', 'post139664712789824')"><pre>                force_insert or parent_inserted,</pre></li>
                  
                  <li onclick="toggle('pre139664712789824', 'post139664712789824')"><pre>                force_update,</pre></li>
                  
                  <li onclick="toggle('pre139664712789824', 'post139664712789824')"><pre>                using,</pre></li>
                  
                  <li onclick="toggle('pre139664712789824', 'post139664712789824')"><pre>                update_fields,</pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v139664712789824">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>cls</td>
                    <td class="code"><pre>&lt;class &#x27;messages_api.models.Message&#x27;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>context_manager</td>
                    <td class="code"><pre>&lt;contextlib._GeneratorContextManager object at 0x7f063999c2e0&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>force_insert</td>
                    <td class="code"><pre>True</pre></td>
                  </tr>
                
                  <tr>
                    <td>force_update</td>
                    <td class="code"><pre>False</pre></td>
                  </tr>
                
                  <tr>
                    <td>meta</td>
                    <td class="code"><pre>&lt;Options for Message&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>origin</td>
                    <td class="code"><pre>&lt;class &#x27;messages_api.models.Message&#x27;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>parent_inserted</td>
                    <td class="code"><pre>False</pre></td>
                  </tr>
                
                  <tr>
                    <td>raw</td>
                    <td class="code"><pre>False</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;Message: 5588988562749 - 2023-05-01 - 0&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>update_fields</td>
                    <td class="code"><pre>None</pre></td>
                  </tr>
                
                  <tr>
                    <td>using</td>
                    <td class="code"><pre>&#x27;default&#x27;</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
        <li class="frame django">
          
            <code class="fname">/home/jpfilho/.local/lib/python3.10/site-packages/django/db/models/base.py</code>, line 1020, in _save_table
          

          
            <div class="context" id="c139664725898240">
              
                <ol start="1013" class="pre-context" id="pre139664725898240">
                
                  <li onclick="toggle('pre139664725898240', 'post139664725898240')"><pre>                    )[&quot;_order__max&quot;]</pre></li>
                
                  <li onclick="toggle('pre139664725898240', 'post139664725898240')"><pre>                )</pre></li>
                
                  <li onclick="toggle('pre139664725898240', 'post139664725898240')"><pre>            fields = meta.local_concrete_fields</pre></li>
                
                  <li onclick="toggle('pre139664725898240', 'post139664725898240')"><pre>            if not pk_set:</pre></li>
                
                  <li onclick="toggle('pre139664725898240', 'post139664725898240')"><pre>                fields = [f for f in fields if f is not meta.auto_field]</pre></li>
                
                  <li onclick="toggle('pre139664725898240', 'post139664725898240')"><pre></pre></li>
                
                  <li onclick="toggle('pre139664725898240', 'post139664725898240')"><pre>            returning_fields = meta.db_returning_fields</pre></li>
                
                </ol>
              
              <ol start="1020" class="context-line">
                <li onclick="toggle('pre139664725898240', 'post139664725898240')"><pre>            results = self._do_insert(</pre> <span>…</span></li>
              </ol>
              
                <ol start='1021' class="post-context" id="post139664725898240">
                  
                  <li onclick="toggle('pre139664725898240', 'post139664725898240')"><pre>                cls._base_manager, using, fields, returning_fields, raw</pre></li>
                  
                  <li onclick="toggle('pre139664725898240', 'post139664725898240')"><pre>            )</pre></li>
                  
                  <li onclick="toggle('pre139664725898240', 'post139664725898240')"><pre>            if results:</pre></li>
                  
                  <li onclick="toggle('pre139664725898240', 'post139664725898240')"><pre>                for value, field in zip(results[0], returning_fields):</pre></li>
                  
                  <li onclick="toggle('pre139664725898240', 'post139664725898240')"><pre>                    setattr(self, field.attname, value)</pre></li>
                  
                  <li onclick="toggle('pre139664725898240', 'post139664725898240')"><pre>        return updated</pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v139664725898240">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>cls</td>
                    <td class="code"><pre>&lt;class &#x27;messages_api.models.Message&#x27;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>fields</td>
                    <td class="code"><pre>(&lt;django.db.models.fields.CharField: message_id&gt;,
 &lt;django.db.models.fields.CharField: contact_id&gt;,
 &lt;django.db.models.fields.CharField: contact_number&gt;,
 &lt;django.db.models.fields.DateField: period&gt;,
 &lt;django.db.models.fields.DateTimeField: timestamp&gt;,
 &lt;django.db.models.fields.IntegerField: status&gt;,
 &lt;django.db.models.fields.CharField: ticket_service_id&gt;,
 &lt;django.db.models.fields.CharField: message_type&gt;,
 &lt;django.db.models.fields.BooleanField: is_from_me&gt;,
 &lt;django.db.models.fields.IntegerField: retries&gt;)</pre></td>
                  </tr>
                
                  <tr>
                    <td>force_insert</td>
                    <td class="code"><pre>True</pre></td>
                  </tr>
                
                  <tr>
                    <td>force_update</td>
                    <td class="code"><pre>False</pre></td>
                  </tr>
                
                  <tr>
                    <td>meta</td>
                    <td class="code"><pre>&lt;Options for Message&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>non_pks</td>
                    <td class="code"><pre>[&lt;django.db.models.fields.CharField: contact_id&gt;,
 &lt;django.db.models.fields.CharField: contact_number&gt;,
 &lt;django.db.models.fields.DateField: period&gt;,
 &lt;django.db.models.fields.DateTimeField: timestamp&gt;,
 &lt;django.db.models.fields.IntegerField: status&gt;,
 &lt;django.db.models.fields.CharField: ticket_service_id&gt;,
 &lt;django.db.models.fields.CharField: message_type&gt;,
 &lt;django.db.models.fields.BooleanField: is_from_me&gt;,
 &lt;django.db.models.fields.IntegerField: retries&gt;]</pre></td>
                  </tr>
                
                  <tr>
                    <td>pk_set</td>
                    <td class="code"><pre>True</pre></td>
                  </tr>
                
                  <tr>
                    <td>pk_val</td>
                    <td class="code"><pre>&#x27;5b590f2d-d3f3-4423-8878-3bf67273e806&#x27;</pre></td>
                  </tr>
                
                  <tr>
                    <td>raw</td>
                    <td class="code"><pre>False</pre></td>
                  </tr>
                
                  <tr>
                    <td>returning_fields</td>
                    <td class="code"><pre>[]</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;Message: 5588988562749 - 2023-05-01 - 0&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>update_fields</td>
                    <td class="code"><pre>None</pre></td>
                  </tr>
                
                  <tr>
                    <td>updated</td>
                    <td class="code"><pre>False</pre></td>
                  </tr>
                
                  <tr>
                    <td>using</td>
                    <td class="code"><pre>&#x27;default&#x27;</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
        <li class="frame django">
          
            <code class="fname">/home/jpfilho/.local/lib/python3.10/site-packages/django/db/models/base.py</code>, line 1061, in _do_insert
          

          
            <div class="context" id="c139664712492928">
              
                <ol start="1054" class="pre-context" id="pre139664712492928">
                
                  <li onclick="toggle('pre139664712492928', 'post139664712492928')"><pre>        return filtered._update(values) &gt; 0</pre></li>
                
                  <li onclick="toggle('pre139664712492928', 'post139664712492928')"><pre></pre></li>
                
                  <li onclick="toggle('pre139664712492928', 'post139664712492928')"><pre>    def _do_insert(self, manager, using, fields, returning_fields, raw):</pre></li>
                
                  <li onclick="toggle('pre139664712492928', 'post139664712492928')"><pre>        &quot;&quot;&quot;</pre></li>
                
                  <li onclick="toggle('pre139664712492928', 'post139664712492928')"><pre>        Do an INSERT. If returning_fields is defined then this method should</pre></li>
                
                  <li onclick="toggle('pre139664712492928', 'post139664712492928')"><pre>        return the newly created data for the model.</pre></li>
                
                  <li onclick="toggle('pre139664712492928', 'post139664712492928')"><pre>        &quot;&quot;&quot;</pre></li>
                
                </ol>
              
              <ol start="1061" class="context-line">
                <li onclick="toggle('pre139664712492928', 'post139664712492928')"><pre>        return manager._insert(</pre> <span>…</span></li>
              </ol>
              
                <ol start='1062' class="post-context" id="post139664712492928">
                  
                  <li onclick="toggle('pre139664712492928', 'post139664712492928')"><pre>            [self],</pre></li>
                  
                  <li onclick="toggle('pre139664712492928', 'post139664712492928')"><pre>            fields=fields,</pre></li>
                  
                  <li onclick="toggle('pre139664712492928', 'post139664712492928')"><pre>            returning_fields=returning_fields,</pre></li>
                  
                  <li onclick="toggle('pre139664712492928', 'post139664712492928')"><pre>            using=using,</pre></li>
                  
                  <li onclick="toggle('pre139664712492928', 'post139664712492928')"><pre>            raw=raw,</pre></li>
                  
                  <li onclick="toggle('pre139664712492928', 'post139664712492928')"><pre>        )</pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v139664712492928">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>fields</td>
                    <td class="code"><pre>(&lt;django.db.models.fields.CharField: message_id&gt;,
 &lt;django.db.models.fields.CharField: contact_id&gt;,
 &lt;django.db.models.fields.CharField: contact_number&gt;,
 &lt;django.db.models.fields.DateField: period&gt;,
 &lt;django.db.models.fields.DateTimeField: timestamp&gt;,
 &lt;django.db.models.fields.IntegerField: status&gt;,
 &lt;django.db.models.fields.CharField: ticket_service_id&gt;,
 &lt;django.db.models.fields.CharField: message_type&gt;,
 &lt;django.db.models.fields.BooleanField: is_from_me&gt;,
 &lt;django.db.models.fields.IntegerField: retries&gt;)</pre></td>
                  </tr>
                
                  <tr>
                    <td>manager</td>
                    <td class="code"><pre>&lt;django.db.models.manager.Manager object at 0x7f063999d9f0&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>raw</td>
                    <td class="code"><pre>False</pre></td>
                  </tr>
                
                  <tr>
                    <td>returning_fields</td>
                    <td class="code"><pre>[]</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;Message: 5588988562749 - 2023-05-01 - 0&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>using</td>
                    <td class="code"><pre>&#x27;default&#x27;</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
        <li class="frame django">
          
            <code class="fname">/home/jpfilho/.local/lib/python3.10/site-packages/django/db/models/manager.py</code>, line 87, in manager_method
          

          
            <div class="context" id="c139664712493440">
              
                <ol start="80" class="pre-context" id="pre139664712493440">
                
                  <li onclick="toggle('pre139664712493440', 'post139664712493440')"><pre>        return []</pre></li>
                
                  <li onclick="toggle('pre139664712493440', 'post139664712493440')"><pre></pre></li>
                
                  <li onclick="toggle('pre139664712493440', 'post139664712493440')"><pre>    @classmethod</pre></li>
                
                  <li onclick="toggle('pre139664712493440', 'post139664712493440')"><pre>    def _get_queryset_methods(cls, queryset_class):</pre></li>
                
                  <li onclick="toggle('pre139664712493440', 'post139664712493440')"><pre>        def create_method(name, method):</pre></li>
                
                  <li onclick="toggle('pre139664712493440', 'post139664712493440')"><pre>            @wraps(method)</pre></li>
                
                  <li onclick="toggle('pre139664712493440', 'post139664712493440')"><pre>            def manager_method(self, *args, **kwargs):</pre></li>
                
                </ol>
              
              <ol start="87" class="context-line">
                <li onclick="toggle('pre139664712493440', 'post139664712493440')"><pre>                return getattr(self.get_queryset(), name)(*args, **kwargs)</pre> <span>…</span></li>
              </ol>
              
                <ol start='88' class="post-context" id="post139664712493440">
                  
                  <li onclick="toggle('pre139664712493440', 'post139664712493440')"><pre></pre></li>
                  
                  <li onclick="toggle('pre139664712493440', 'post139664712493440')"><pre>            return manager_method</pre></li>
                  
                  <li onclick="toggle('pre139664712493440', 'post139664712493440')"><pre></pre></li>
                  
                  <li onclick="toggle('pre139664712493440', 'post139664712493440')"><pre>        new_methods = {}</pre></li>
                  
                  <li onclick="toggle('pre139664712493440', 'post139664712493440')"><pre>        for name, method in inspect.getmembers(</pre></li>
                  
                  <li onclick="toggle('pre139664712493440', 'post139664712493440')"><pre>            queryset_class, predicate=inspect.isfunction</pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v139664712493440">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>args</td>
                    <td class="code"><pre>([&lt;Message: 5588988562749 - 2023-05-01 - 0&gt;],)</pre></td>
                  </tr>
                
                  <tr>
                    <td>kwargs</td>
                    <td class="code"><pre>{&#x27;fields&#x27;: (&lt;django.db.models.fields.CharField: message_id&gt;,
            &lt;django.db.models.fields.CharField: contact_id&gt;,
            &lt;django.db.models.fields.CharField: contact_number&gt;,
            &lt;django.db.models.fields.DateField: period&gt;,
            &lt;django.db.models.fields.DateTimeField: timestamp&gt;,
            &lt;django.db.models.fields.IntegerField: status&gt;,
            &lt;django.db.models.fields.CharField: ticket_service_id&gt;,
            &lt;django.db.models.fields.CharField: message_type&gt;,
            &lt;django.db.models.fields.BooleanField: is_from_me&gt;,
            &lt;django.db.models.fields.IntegerField: retries&gt;),
 &#x27;raw&#x27;: False,
 &#x27;returning_fields&#x27;: [],
 &#x27;using&#x27;: &#x27;default&#x27;}</pre></td>
                  </tr>
                
                  <tr>
                    <td>name</td>
                    <td class="code"><pre>&#x27;_insert&#x27;</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;django.db.models.manager.Manager object at 0x7f063999d9f0&gt;</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
        <li class="frame django">
          
            <code class="fname">/home/jpfilho/.local/lib/python3.10/site-packages/django/db/models/query.py</code>, line 1805, in _insert
          

          
            <div class="context" id="c139664725379328">
              
                <ol start="1798" class="pre-context" id="pre139664725379328">
                
                  <li onclick="toggle('pre139664725379328', 'post139664725379328')"><pre>        query = sql.InsertQuery(</pre></li>
                
                  <li onclick="toggle('pre139664725379328', 'post139664725379328')"><pre>            self.model,</pre></li>
                
                  <li onclick="toggle('pre139664725379328', 'post139664725379328')"><pre>            on_conflict=on_conflict,</pre></li>
                
                  <li onclick="toggle('pre139664725379328', 'post139664725379328')"><pre>            update_fields=update_fields,</pre></li>
                
                  <li onclick="toggle('pre139664725379328', 'post139664725379328')"><pre>            unique_fields=unique_fields,</pre></li>
                
                  <li onclick="toggle('pre139664725379328', 'post139664725379328')"><pre>        )</pre></li>
                
                  <li onclick="toggle('pre139664725379328', 'post139664725379328')"><pre>        query.insert_values(fields, objs, raw=raw)</pre></li>
                
                </ol>
              
              <ol start="1805" class="context-line">
                <li onclick="toggle('pre139664725379328', 'post139664725379328')"><pre>        return query.get_compiler(using=using).execute_sql(returning_fields)</pre> <span>…</span></li>
              </ol>
              
                <ol start='1806' class="post-context" id="post139664725379328">
                  
                  <li onclick="toggle('pre139664725379328', 'post139664725379328')"><pre></pre></li>
                  
                  <li onclick="toggle('pre139664725379328', 'post139664725379328')"><pre>    _insert.alters_data = True</pre></li>
                  
                  <li onclick="toggle('pre139664725379328', 'post139664725379328')"><pre>    _insert.queryset_only = False</pre></li>
                  
                  <li onclick="toggle('pre139664725379328', 'post139664725379328')"><pre></pre></li>
                  
                  <li onclick="toggle('pre139664725379328', 'post139664725379328')"><pre>    def _batched_insert(</pre></li>
                  
                  <li onclick="toggle('pre139664725379328', 'post139664725379328')"><pre>        self,</pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v139664725379328">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>fields</td>
                    <td class="code"><pre>(&lt;django.db.models.fields.CharField: message_id&gt;,
 &lt;django.db.models.fields.CharField: contact_id&gt;,
 &lt;django.db.models.fields.CharField: contact_number&gt;,
 &lt;django.db.models.fields.DateField: period&gt;,
 &lt;django.db.models.fields.DateTimeField: timestamp&gt;,
 &lt;django.db.models.fields.IntegerField: status&gt;,
 &lt;django.db.models.fields.CharField: ticket_service_id&gt;,
 &lt;django.db.models.fields.CharField: message_type&gt;,
 &lt;django.db.models.fields.BooleanField: is_from_me&gt;,
 &lt;django.db.models.fields.IntegerField: retries&gt;)</pre></td>
                  </tr>
                
                  <tr>
                    <td>objs</td>
                    <td class="code"><pre>[&lt;Message: 5588988562749 - 2023-05-01 - 0&gt;]</pre></td>
                  </tr>
                
                  <tr>
                    <td>on_conflict</td>
                    <td class="code"><pre>None</pre></td>
                  </tr>
                
                  <tr>
                    <td>query</td>
                    <td class="code"><pre>&lt;django.db.models.sql.subqueries.InsertQuery object at 0x7f063999d7b0&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>raw</td>
                    <td class="code"><pre>False</pre></td>
                  </tr>
                
                  <tr>
                    <td>returning_fields</td>
                    <td class="code"><pre>[]</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;QuerySet []&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>unique_fields</td>
                    <td class="code"><pre>None</pre></td>
                  </tr>
                
                  <tr>
                    <td>update_fields</td>
                    <td class="code"><pre>None</pre></td>
                  </tr>
                
                  <tr>
                    <td>using</td>
                    <td class="code"><pre>&#x27;default&#x27;</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
        <li class="frame django">
          
            <code class="fname">/home/jpfilho/.local/lib/python3.10/site-packages/django/db/models/sql/compiler.py</code>, line 1819, in execute_sql
          

          
            <div class="context" id="c139664725887808">
              
                <ol start="1812" class="pre-context" id="pre139664725887808">
                
                  <li onclick="toggle('pre139664725887808', 'post139664725887808')"><pre>            returning_fields</pre></li>
                
                  <li onclick="toggle('pre139664725887808', 'post139664725887808')"><pre>            and len(self.query.objs) != 1</pre></li>
                
                  <li onclick="toggle('pre139664725887808', 'post139664725887808')"><pre>            and not self.connection.features.can_return_rows_from_bulk_insert</pre></li>
                
                  <li onclick="toggle('pre139664725887808', 'post139664725887808')"><pre>        )</pre></li>
                
                  <li onclick="toggle('pre139664725887808', 'post139664725887808')"><pre>        opts = self.query.get_meta()</pre></li>
                
                  <li onclick="toggle('pre139664725887808', 'post139664725887808')"><pre>        self.returning_fields = returning_fields</pre></li>
                
                  <li onclick="toggle('pre139664725887808', 'post139664725887808')"><pre>        with self.connection.cursor() as cursor:</pre></li>
                
                </ol>
              
              <ol start="1819" class="context-line">
                <li onclick="toggle('pre139664725887808', 'post139664725887808')"><pre>            for sql, params in self.as_sql():</pre> <span>…</span></li>
              </ol>
              
                <ol start='1820' class="post-context" id="post139664725887808">
                  
                  <li onclick="toggle('pre139664725887808', 'post139664725887808')"><pre>                cursor.execute(sql, params)</pre></li>
                  
                  <li onclick="toggle('pre139664725887808', 'post139664725887808')"><pre>            if not self.returning_fields:</pre></li>
                  
                  <li onclick="toggle('pre139664725887808', 'post139664725887808')"><pre>                return []</pre></li>
                  
                  <li onclick="toggle('pre139664725887808', 'post139664725887808')"><pre>            if (</pre></li>
                  
                  <li onclick="toggle('pre139664725887808', 'post139664725887808')"><pre>                self.connection.features.can_return_rows_from_bulk_insert</pre></li>
                  
                  <li onclick="toggle('pre139664725887808', 'post139664725887808')"><pre>                and len(self.query.objs) &gt; 1</pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v139664725887808">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>cursor</td>
                    <td class="code"><pre>&lt;django.db.backends.postgresql.base.CursorDebugWrapper object at 0x7f063c636f20&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>opts</td>
                    <td class="code"><pre>&lt;Options for Message&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>returning_fields</td>
                    <td class="code"><pre>[]</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;SQLInsertCompiler model=Message connection=&lt;DatabaseWrapper vendor=&#x27;postgresql&#x27; alias=&#x27;default&#x27;&gt; using=&#x27;default&#x27;&gt;</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
        <li class="frame django">
          
            <code class="fname">/home/jpfilho/.local/lib/python3.10/site-packages/django/db/models/sql/compiler.py</code>, line 1743, in as_sql
          

          
            <div class="context" id="c139664725898816">
              
                <ol start="1736" class="pre-context" id="pre139664725898816">
                
                  <li onclick="toggle('pre139664725898816', 'post139664725898816')"><pre>            on_conflict=self.query.on_conflict,</pre></li>
                
                  <li onclick="toggle('pre139664725898816', 'post139664725898816')"><pre>        )</pre></li>
                
                  <li onclick="toggle('pre139664725898816', 'post139664725898816')"><pre>        result = [&quot;%s %s&quot; % (insert_statement, qn(opts.db_table))]</pre></li>
                
                  <li onclick="toggle('pre139664725898816', 'post139664725898816')"><pre>        fields = self.query.fields or [opts.pk]</pre></li>
                
                  <li onclick="toggle('pre139664725898816', 'post139664725898816')"><pre>        result.append(&quot;(%s)&quot; % &quot;, &quot;.join(qn(f.column) for f in fields))</pre></li>
                
                  <li onclick="toggle('pre139664725898816', 'post139664725898816')"><pre></pre></li>
                
                  <li onclick="toggle('pre139664725898816', 'post139664725898816')"><pre>        if self.query.fields:</pre></li>
                
                </ol>
              
              <ol start="1743" class="context-line">
                <li onclick="toggle('pre139664725898816', 'post139664725898816')"><pre>            value_rows = [</pre> <span>…</span></li>
              </ol>
              
                <ol start='1744' class="post-context" id="post139664725898816">
                  
                  <li onclick="toggle('pre139664725898816', 'post139664725898816')"><pre>                [</pre></li>
                  
                  <li onclick="toggle('pre139664725898816', 'post139664725898816')"><pre>                    self.prepare_value(field, self.pre_save_val(field, obj))</pre></li>
                  
                  <li onclick="toggle('pre139664725898816', 'post139664725898816')"><pre>                    for field in fields</pre></li>
                  
                  <li onclick="toggle('pre139664725898816', 'post139664725898816')"><pre>                ]</pre></li>
                  
                  <li onclick="toggle('pre139664725898816', 'post139664725898816')"><pre>                for obj in self.query.objs</pre></li>
                  
                  <li onclick="toggle('pre139664725898816', 'post139664725898816')"><pre>            ]</pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v139664725898816">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>fields</td>
                    <td class="code"><pre>(&lt;django.db.models.fields.CharField: message_id&gt;,
 &lt;django.db.models.fields.CharField: contact_id&gt;,
 &lt;django.db.models.fields.CharField: contact_number&gt;,
 &lt;django.db.models.fields.DateField: period&gt;,
 &lt;django.db.models.fields.DateTimeField: timestamp&gt;,
 &lt;django.db.models.fields.IntegerField: status&gt;,
 &lt;django.db.models.fields.CharField: ticket_service_id&gt;,
 &lt;django.db.models.fields.CharField: message_type&gt;,
 &lt;django.db.models.fields.BooleanField: is_from_me&gt;,
 &lt;django.db.models.fields.IntegerField: retries&gt;)</pre></td>
                  </tr>
                
                  <tr>
                    <td>insert_statement</td>
                    <td class="code"><pre>&#x27;INSERT INTO&#x27;</pre></td>
                  </tr>
                
                  <tr>
                    <td>opts</td>
                    <td class="code"><pre>&lt;Options for Message&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>qn</td>
                    <td class="code"><pre>&lt;bound method DatabaseOperations.quote_name of &lt;django.db.backends.postgresql.operations.DatabaseOperations object at 0x7f063999d090&gt;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>result</td>
                    <td class="code"><pre>[&#x27;INSERT INTO &quot;messages_api_message&quot;&#x27;,
 &#x27;(&quot;message_id&quot;, &quot;contact_id&quot;, &quot;contact_number&quot;, &quot;period&quot;, &quot;timestamp&quot;, &#x27;
 &#x27;&quot;status&quot;, &quot;ticket_service_id&quot;, &quot;message_type&quot;, &quot;is_from_me&quot;, &quot;retries&quot;)&#x27;]</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;SQLInsertCompiler model=Message connection=&lt;DatabaseWrapper vendor=&#x27;postgresql&#x27; alias=&#x27;default&#x27;&gt; using=&#x27;default&#x27;&gt;</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
        <li class="frame django">
          
            <code class="fname">/home/jpfilho/.local/lib/python3.10/site-packages/django/db/models/sql/compiler.py</code>, line 1744, in &lt;listcomp&gt;
          

          
            <div class="context" id="c139664725836864">
              
                <ol start="1737" class="pre-context" id="pre139664725836864">
                
                  <li onclick="toggle('pre139664725836864', 'post139664725836864')"><pre>        )</pre></li>
                
                  <li onclick="toggle('pre139664725836864', 'post139664725836864')"><pre>        result = [&quot;%s %s&quot; % (insert_statement, qn(opts.db_table))]</pre></li>
                
                  <li onclick="toggle('pre139664725836864', 'post139664725836864')"><pre>        fields = self.query.fields or [opts.pk]</pre></li>
                
                  <li onclick="toggle('pre139664725836864', 'post139664725836864')"><pre>        result.append(&quot;(%s)&quot; % &quot;, &quot;.join(qn(f.column) for f in fields))</pre></li>
                
                  <li onclick="toggle('pre139664725836864', 'post139664725836864')"><pre></pre></li>
                
                  <li onclick="toggle('pre139664725836864', 'post139664725836864')"><pre>        if self.query.fields:</pre></li>
                
                  <li onclick="toggle('pre139664725836864', 'post139664725836864')"><pre>            value_rows = [</pre></li>
                
                </ol>
              
              <ol start="1744" class="context-line">
                <li onclick="toggle('pre139664725836864', 'post139664725836864')"><pre>                [</pre> <span>…</span></li>
              </ol>
              
                <ol start='1745' class="post-context" id="post139664725836864">
                  
                  <li onclick="toggle('pre139664725836864', 'post139664725836864')"><pre>                    self.prepare_value(field, self.pre_save_val(field, obj))</pre></li>
                  
                  <li onclick="toggle('pre139664725836864', 'post139664725836864')"><pre>                    for field in fields</pre></li>
                  
                  <li onclick="toggle('pre139664725836864', 'post139664725836864')"><pre>                ]</pre></li>
                  
                  <li onclick="toggle('pre139664725836864', 'post139664725836864')"><pre>                for obj in self.query.objs</pre></li>
                  
                  <li onclick="toggle('pre139664725836864', 'post139664725836864')"><pre>            ]</pre></li>
                  
                  <li onclick="toggle('pre139664725836864', 'post139664725836864')"><pre>        else:</pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v139664725836864">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>.0</td>
                    <td class="code"><pre>&lt;list_iterator object at 0x7f063c852800&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>fields</td>
                    <td class="code"><pre>(&lt;django.db.models.fields.CharField: message_id&gt;,
 &lt;django.db.models.fields.CharField: contact_id&gt;,
 &lt;django.db.models.fields.CharField: contact_number&gt;,
 &lt;django.db.models.fields.DateField: period&gt;,
 &lt;django.db.models.fields.DateTimeField: timestamp&gt;,
 &lt;django.db.models.fields.IntegerField: status&gt;,
 &lt;django.db.models.fields.CharField: ticket_service_id&gt;,
 &lt;django.db.models.fields.CharField: message_type&gt;,
 &lt;django.db.models.fields.BooleanField: is_from_me&gt;,
 &lt;django.db.models.fields.IntegerField: retries&gt;)</pre></td>
                  </tr>
                
                  <tr>
                    <td>obj</td>
                    <td class="code"><pre>&lt;Message: 5588988562749 - 2023-05-01 - 0&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;SQLInsertCompiler model=Message connection=&lt;DatabaseWrapper vendor=&#x27;postgresql&#x27; alias=&#x27;default&#x27;&gt; using=&#x27;default&#x27;&gt;</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
        <li class="frame django">
          
            <code class="fname">/home/jpfilho/.local/lib/python3.10/site-packages/django/db/models/sql/compiler.py</code>, line 1745, in &lt;listcomp&gt;
          

          
            <div class="context" id="c139664725898688">
              
                <ol start="1738" class="pre-context" id="pre139664725898688">
                
                  <li onclick="toggle('pre139664725898688', 'post139664725898688')"><pre>        result = [&quot;%s %s&quot; % (insert_statement, qn(opts.db_table))]</pre></li>
                
                  <li onclick="toggle('pre139664725898688', 'post139664725898688')"><pre>        fields = self.query.fields or [opts.pk]</pre></li>
                
                  <li onclick="toggle('pre139664725898688', 'post139664725898688')"><pre>        result.append(&quot;(%s)&quot; % &quot;, &quot;.join(qn(f.column) for f in fields))</pre></li>
                
                  <li onclick="toggle('pre139664725898688', 'post139664725898688')"><pre></pre></li>
                
                  <li onclick="toggle('pre139664725898688', 'post139664725898688')"><pre>        if self.query.fields:</pre></li>
                
                  <li onclick="toggle('pre139664725898688', 'post139664725898688')"><pre>            value_rows = [</pre></li>
                
                  <li onclick="toggle('pre139664725898688', 'post139664725898688')"><pre>                [</pre></li>
                
                </ol>
              
              <ol start="1745" class="context-line">
                <li onclick="toggle('pre139664725898688', 'post139664725898688')"><pre>                    self.prepare_value(field, self.pre_save_val(field, obj))</pre> <span>…</span></li>
              </ol>
              
                <ol start='1746' class="post-context" id="post139664725898688">
                  
                  <li onclick="toggle('pre139664725898688', 'post139664725898688')"><pre>                    for field in fields</pre></li>
                  
                  <li onclick="toggle('pre139664725898688', 'post139664725898688')"><pre>                ]</pre></li>
                  
                  <li onclick="toggle('pre139664725898688', 'post139664725898688')"><pre>                for obj in self.query.objs</pre></li>
                  
                  <li onclick="toggle('pre139664725898688', 'post139664725898688')"><pre>            ]</pre></li>
                  
                  <li onclick="toggle('pre139664725898688', 'post139664725898688')"><pre>        else:</pre></li>
                  
                  <li onclick="toggle('pre139664725898688', 'post139664725898688')"><pre>            # An empty object.</pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v139664725898688">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>.0</td>
                    <td class="code"><pre>&lt;tuple_iterator object at 0x7f063d28f7f0&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>field</td>
                    <td class="code"><pre>&lt;django.db.models.fields.BooleanField: is_from_me&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>obj</td>
                    <td class="code"><pre>&lt;Message: 5588988562749 - 2023-05-01 - 0&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;SQLInsertCompiler model=Message connection=&lt;DatabaseWrapper vendor=&#x27;postgresql&#x27; alias=&#x27;default&#x27;&gt; using=&#x27;default&#x27;&gt;</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
        <li class="frame django">
          
            <code class="fname">/home/jpfilho/.local/lib/python3.10/site-packages/django/db/models/sql/compiler.py</code>, line 1684, in prepare_value
          

          
            <div class="context" id="c139664725841664">
              
                <ol start="1677" class="pre-context" id="pre139664725841664">
                
                  <li onclick="toggle('pre139664725841664', 'post139664725841664')"><pre>                    &quot;(%s=%r).&quot; % (field.name, value)</pre></li>
                
                  <li onclick="toggle('pre139664725841664', 'post139664725841664')"><pre>                )</pre></li>
                
                  <li onclick="toggle('pre139664725841664', 'post139664725841664')"><pre>            if value.contains_over_clause:</pre></li>
                
                  <li onclick="toggle('pre139664725841664', 'post139664725841664')"><pre>                raise FieldError(</pre></li>
                
                  <li onclick="toggle('pre139664725841664', 'post139664725841664')"><pre>                    &quot;Window expressions are not allowed in this query (%s=%r).&quot;</pre></li>
                
                  <li onclick="toggle('pre139664725841664', 'post139664725841664')"><pre>                    % (field.name, value)</pre></li>
                
                  <li onclick="toggle('pre139664725841664', 'post139664725841664')"><pre>                )</pre></li>
                
                </ol>
              
              <ol start="1684" class="context-line">
                <li onclick="toggle('pre139664725841664', 'post139664725841664')"><pre>        return field.get_db_prep_save(value, connection=self.connection)</pre> <span>…</span></li>
              </ol>
              
                <ol start='1685' class="post-context" id="post139664725841664">
                  
                  <li onclick="toggle('pre139664725841664', 'post139664725841664')"><pre></pre></li>
                  
                  <li onclick="toggle('pre139664725841664', 'post139664725841664')"><pre>    def pre_save_val(self, field, obj):</pre></li>
                  
                  <li onclick="toggle('pre139664725841664', 'post139664725841664')"><pre>        &quot;&quot;&quot;</pre></li>
                  
                  <li onclick="toggle('pre139664725841664', 'post139664725841664')"><pre>        Get the given field&#x27;s value off the given obj. pre_save() is used for</pre></li>
                  
                  <li onclick="toggle('pre139664725841664', 'post139664725841664')"><pre>        things like auto_now on DateTimeField. Skip it if this is a raw query.</pre></li>
                  
                  <li onclick="toggle('pre139664725841664', 'post139664725841664')"><pre>        &quot;&quot;&quot;</pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v139664725841664">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>field</td>
                    <td class="code"><pre>&lt;django.db.models.fields.BooleanField: is_from_me&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;SQLInsertCompiler model=Message connection=&lt;DatabaseWrapper vendor=&#x27;postgresql&#x27; alias=&#x27;default&#x27;&gt; using=&#x27;default&#x27;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>value</td>
                    <td class="code"><pre>[True]</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
        <li class="frame django">
          
            <code class="fname">/home/jpfilho/.local/lib/python3.10/site-packages/django/db/models/fields/__init__.py</code>, line 954, in get_db_prep_save
          

          
            <div class="context" id="c139664712489536">
              
                <ol start="947" class="pre-context" id="pre139664712489536">
                
                  <li onclick="toggle('pre139664712489536', 'post139664712489536')"><pre>            value = self.get_prep_value(value)</pre></li>
                
                  <li onclick="toggle('pre139664712489536', 'post139664712489536')"><pre>        return value</pre></li>
                
                  <li onclick="toggle('pre139664712489536', 'post139664712489536')"><pre></pre></li>
                
                  <li onclick="toggle('pre139664712489536', 'post139664712489536')"><pre>    def get_db_prep_save(self, value, connection):</pre></li>
                
                  <li onclick="toggle('pre139664712489536', 'post139664712489536')"><pre>        &quot;&quot;&quot;Return field&#x27;s value prepared for saving into a database.&quot;&quot;&quot;</pre></li>
                
                  <li onclick="toggle('pre139664712489536', 'post139664712489536')"><pre>        if hasattr(value, &quot;as_sql&quot;):</pre></li>
                
                  <li onclick="toggle('pre139664712489536', 'post139664712489536')"><pre>            return value</pre></li>
                
                </ol>
              
              <ol start="954" class="context-line">
                <li onclick="toggle('pre139664712489536', 'post139664712489536')"><pre>        return self.get_db_prep_value(value, connection=connection, prepared=False)</pre> <span>…</span></li>
              </ol>
              
                <ol start='955' class="post-context" id="post139664712489536">
                  
                  <li onclick="toggle('pre139664712489536', 'post139664712489536')"><pre></pre></li>
                  
                  <li onclick="toggle('pre139664712489536', 'post139664712489536')"><pre>    def has_default(self):</pre></li>
                  
                  <li onclick="toggle('pre139664712489536', 'post139664712489536')"><pre>        &quot;&quot;&quot;Return a boolean of whether this field has a default value.&quot;&quot;&quot;</pre></li>
                  
                  <li onclick="toggle('pre139664712489536', 'post139664712489536')"><pre>        return self.default is not NOT_PROVIDED</pre></li>
                  
                  <li onclick="toggle('pre139664712489536', 'post139664712489536')"><pre></pre></li>
                  
                  <li onclick="toggle('pre139664712489536', 'post139664712489536')"><pre>    def get_default(self):</pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v139664712489536">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>connection</td>
                    <td class="code"><pre>&lt;DatabaseWrapper vendor=&#x27;postgresql&#x27; alias=&#x27;default&#x27;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;django.db.models.fields.BooleanField: is_from_me&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>value</td>
                    <td class="code"><pre>[True]</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
        <li class="frame django">
          
            <code class="fname">/home/jpfilho/.local/lib/python3.10/site-packages/django/db/models/fields/__init__.py</code>, line 947, in get_db_prep_value
          

          
            <div class="context" id="c139664729559936">
              
                <ol start="940" class="pre-context" id="pre139664729559936">
                
                  <li onclick="toggle('pre139664729559936', 'post139664729559936')"><pre>    def get_db_prep_value(self, value, connection, prepared=False):</pre></li>
                
                  <li onclick="toggle('pre139664729559936', 'post139664729559936')"><pre>        &quot;&quot;&quot;</pre></li>
                
                  <li onclick="toggle('pre139664729559936', 'post139664729559936')"><pre>        Return field&#x27;s value prepared for interacting with the database backend.</pre></li>
                
                  <li onclick="toggle('pre139664729559936', 'post139664729559936')"><pre></pre></li>
                
                  <li onclick="toggle('pre139664729559936', 'post139664729559936')"><pre>        Used by the default implementations of get_db_prep_save().</pre></li>
                
                  <li onclick="toggle('pre139664729559936', 'post139664729559936')"><pre>        &quot;&quot;&quot;</pre></li>
                
                  <li onclick="toggle('pre139664729559936', 'post139664729559936')"><pre>        if not prepared:</pre></li>
                
                </ol>
              
              <ol start="947" class="context-line">
                <li onclick="toggle('pre139664729559936', 'post139664729559936')"><pre>            value = self.get_prep_value(value)</pre> <span>…</span></li>
              </ol>
              
                <ol start='948' class="post-context" id="post139664729559936">
                  
                  <li onclick="toggle('pre139664729559936', 'post139664729559936')"><pre>        return value</pre></li>
                  
                  <li onclick="toggle('pre139664729559936', 'post139664729559936')"><pre></pre></li>
                  
                  <li onclick="toggle('pre139664729559936', 'post139664729559936')"><pre>    def get_db_prep_save(self, value, connection):</pre></li>
                  
                  <li onclick="toggle('pre139664729559936', 'post139664729559936')"><pre>        &quot;&quot;&quot;Return field&#x27;s value prepared for saving into a database.&quot;&quot;&quot;</pre></li>
                  
                  <li onclick="toggle('pre139664729559936', 'post139664729559936')"><pre>        if hasattr(value, &quot;as_sql&quot;):</pre></li>
                  
                  <li onclick="toggle('pre139664729559936', 'post139664729559936')"><pre>            return value</pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v139664729559936">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>connection</td>
                    <td class="code"><pre>&lt;DatabaseWrapper vendor=&#x27;postgresql&#x27; alias=&#x27;default&#x27;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>prepared</td>
                    <td class="code"><pre>False</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;django.db.models.fields.BooleanField: is_from_me&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>value</td>
                    <td class="code"><pre>[True]</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
        <li class="frame django">
          
            <code class="fname">/home/jpfilho/.local/lib/python3.10/site-packages/django/db/models/fields/__init__.py</code>, line 1122, in get_prep_value
          

          
            <div class="context" id="c139664729559744">
              
                <ol start="1115" class="pre-context" id="pre139664729559744">
                
                  <li onclick="toggle('pre139664729559744', 'post139664729559744')"><pre>            params={&quot;value&quot;: value},</pre></li>
                
                  <li onclick="toggle('pre139664729559744', 'post139664729559744')"><pre>        )</pre></li>
                
                  <li onclick="toggle('pre139664729559744', 'post139664729559744')"><pre></pre></li>
                
                  <li onclick="toggle('pre139664729559744', 'post139664729559744')"><pre>    def get_prep_value(self, value):</pre></li>
                
                  <li onclick="toggle('pre139664729559744', 'post139664729559744')"><pre>        value = super().get_prep_value(value)</pre></li>
                
                  <li onclick="toggle('pre139664729559744', 'post139664729559744')"><pre>        if value is None:</pre></li>
                
                  <li onclick="toggle('pre139664729559744', 'post139664729559744')"><pre>            return None</pre></li>
                
                </ol>
              
              <ol start="1122" class="context-line">
                <li onclick="toggle('pre139664729559744', 'post139664729559744')"><pre>        return self.to_python(value)</pre> <span>…</span></li>
              </ol>
              
                <ol start='1123' class="post-context" id="post139664729559744">
                  
                  <li onclick="toggle('pre139664729559744', 'post139664729559744')"><pre></pre></li>
                  
                  <li onclick="toggle('pre139664729559744', 'post139664729559744')"><pre>    def formfield(self, **kwargs):</pre></li>
                  
                  <li onclick="toggle('pre139664729559744', 'post139664729559744')"><pre>        if self.choices is not None:</pre></li>
                  
                  <li onclick="toggle('pre139664729559744', 'post139664729559744')"><pre>            include_blank = not (self.has_default() or &quot;initial&quot; in kwargs)</pre></li>
                  
                  <li onclick="toggle('pre139664729559744', 'post139664729559744')"><pre>            defaults = {&quot;choices&quot;: self.get_choices(include_blank=include_blank)}</pre></li>
                  
                  <li onclick="toggle('pre139664729559744', 'post139664729559744')"><pre>        else:</pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v139664729559744">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>__class__</td>
                    <td class="code"><pre>&lt;class &#x27;django.db.models.fields.BooleanField&#x27;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;django.db.models.fields.BooleanField: is_from_me&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>value</td>
                    <td class="code"><pre>[True]</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
        <li class="frame django">
          
            <code class="fname">/home/jpfilho/.local/lib/python3.10/site-packages/django/db/models/fields/__init__.py</code>, line 1112, in to_python
          

          
            <div class="context" id="c139664712883520">
              
                <ol start="1105" class="pre-context" id="pre139664712883520">
                
                  <li onclick="toggle('pre139664712883520', 'post139664712883520')"><pre>        if value in (True, False):</pre></li>
                
                  <li onclick="toggle('pre139664712883520', 'post139664712883520')"><pre>            # 1/0 are equal to True/False. bool() converts former to latter.</pre></li>
                
                  <li onclick="toggle('pre139664712883520', 'post139664712883520')"><pre>            return bool(value)</pre></li>
                
                  <li onclick="toggle('pre139664712883520', 'post139664712883520')"><pre>        if value in (&quot;t&quot;, &quot;True&quot;, &quot;1&quot;):</pre></li>
                
                  <li onclick="toggle('pre139664712883520', 'post139664712883520')"><pre>            return True</pre></li>
                
                  <li onclick="toggle('pre139664712883520', 'post139664712883520')"><pre>        if value in (&quot;f&quot;, &quot;False&quot;, &quot;0&quot;):</pre></li>
                
                  <li onclick="toggle('pre139664712883520', 'post139664712883520')"><pre>            return False</pre></li>
                
                </ol>
              
              <ol start="1112" class="context-line">
                <li onclick="toggle('pre139664712883520', 'post139664712883520')"><pre>        raise exceptions.ValidationError(</pre> <span>…</span></li>
              </ol>
              
                <ol start='1113' class="post-context" id="post139664712883520">
                  
                  <li onclick="toggle('pre139664712883520', 'post139664712883520')"><pre>            self.error_messages[&quot;invalid_nullable&quot; if self.null else &quot;invalid&quot;],</pre></li>
                  
                  <li onclick="toggle('pre139664712883520', 'post139664712883520')"><pre>            code=&quot;invalid&quot;,</pre></li>
                  
                  <li onclick="toggle('pre139664712883520', 'post139664712883520')"><pre>            params={&quot;value&quot;: value},</pre></li>
                  
                  <li onclick="toggle('pre139664712883520', 'post139664712883520')"><pre>        )</pre></li>
                  
                  <li onclick="toggle('pre139664712883520', 'post139664712883520')"><pre></pre></li>
                  
                  <li onclick="toggle('pre139664712883520', 'post139664712883520')"><pre>    def get_prep_value(self, value):</pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v139664712883520">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;django.db.models.fields.BooleanField: is_from_me&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>value</td>
                    <td class="code"><pre>[True]</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
    </ul>
  </div>

  <form action="https://dpaste.com/" name="pasteform" id="pasteform" method="post">
  <div id="pastebinTraceback" class="pastebin">
    <input type="hidden" name="language" value="PythonConsole">
    <input type="hidden" name="title"
      value="ValidationError at /webhook/messages/create">
    <input type="hidden" name="source" value="Django Dpaste Agent">
    <input type="hidden" name="poster" value="Django">
    <textarea name="content" id="traceback_area" cols="140" rows="25">
Environment:


Request Method: POST
Request URL: http://woz.serveo.net/webhook/messages/create?phone=5588988562749&amp;period=05%2F23

Django Version: 4.2.1
Python Version: 3.10.7
Installed Applications:
[&#x27;django.contrib.admin&#x27;,
 &#x27;django.contrib.auth&#x27;,
 &#x27;django.contrib.contenttypes&#x27;,
 &#x27;django.contrib.sessions&#x27;,
 &#x27;django.contrib.messages&#x27;,
 &#x27;django.contrib.staticfiles&#x27;,
 &#x27;drf_yasg&#x27;,
 &#x27;rest_framework&#x27;,
 &#x27;example&#x27;,
 &#x27;messages_api&#x27;,
 &#x27;celery&#x27;,
 &#x27;django_filters&#x27;]
Installed Middleware:
[&#x27;django.middleware.security.SecurityMiddleware&#x27;,
 &#x27;django.contrib.sessions.middleware.SessionMiddleware&#x27;,
 &#x27;django.middleware.common.CommonMiddleware&#x27;,
 &#x27;django.middleware.csrf.CsrfViewMiddleware&#x27;,
 &#x27;django.contrib.auth.middleware.AuthenticationMiddleware&#x27;,
 &#x27;django.contrib.messages.middleware.MessageMiddleware&#x27;,
 &#x27;django.middleware.clickjacking.XFrameOptionsMiddleware&#x27;]



Traceback (most recent call last):
  File "/home/jpfilho/.local/lib/python3.10/site-packages/django/core/handlers/exception.py", line 55, in inner
    response = get_response(request)
  File "/home/jpfilho/.local/lib/python3.10/site-packages/django/core/handlers/base.py", line 197, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/home/jpfilho/.local/lib/python3.10/site-packages/django/views/decorators/csrf.py", line 56, in wrapper_view
    return view_func(*args, **kwargs)
  File "/home/jpfilho/.local/lib/python3.10/site-packages/rest_framework/viewsets.py", line 125, in view
    return self.dispatch(request, *args, **kwargs)
  File "/home/jpfilho/.local/lib/python3.10/site-packages/rest_framework/views.py", line 509, in dispatch
    response = self.handle_exception(exc)
  File "/home/jpfilho/.local/lib/python3.10/site-packages/rest_framework/views.py", line 469, in handle_exception
    self.raise_uncaught_exception(exc)
  File "/home/jpfilho/.local/lib/python3.10/site-packages/rest_framework/views.py", line 480, in raise_uncaught_exception
    raise exc
  File "/home/jpfilho/.local/lib/python3.10/site-packages/rest_framework/views.py", line 506, in dispatch
    response = handler(request, *args, **kwargs)
  File "/home/jpfilho/Documents/code-ws/python/webhook/messages_api/views.py", line 153, in create
    message = Message.objects.create(
  File "/home/jpfilho/.local/lib/python3.10/site-packages/django/db/models/manager.py", line 87, in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
  File "/home/jpfilho/.local/lib/python3.10/site-packages/django/db/models/query.py", line 658, in create
    obj.save(force_insert=True, using=self.db)
  File "/home/jpfilho/.local/lib/python3.10/site-packages/django/db/models/base.py", line 814, in save
    self.save_base(
  File "/home/jpfilho/.local/lib/python3.10/site-packages/django/db/models/base.py", line 877, in save_base
    updated = self._save_table(
  File "/home/jpfilho/.local/lib/python3.10/site-packages/django/db/models/base.py", line 1020, in _save_table
    results = self._do_insert(
  File "/home/jpfilho/.local/lib/python3.10/site-packages/django/db/models/base.py", line 1061, in _do_insert
    return manager._insert(
  File "/home/jpfilho/.local/lib/python3.10/site-packages/django/db/models/manager.py", line 87, in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
  File "/home/jpfilho/.local/lib/python3.10/site-packages/django/db/models/query.py", line 1805, in _insert
    return query.get_compiler(using=using).execute_sql(returning_fields)
  File "/home/jpfilho/.local/lib/python3.10/site-packages/django/db/models/sql/compiler.py", line 1819, in execute_sql
    for sql, params in self.as_sql():
  File "/home/jpfilho/.local/lib/python3.10/site-packages/django/db/models/sql/compiler.py", line 1743, in as_sql
    value_rows = [
  File "/home/jpfilho/.local/lib/python3.10/site-packages/django/db/models/sql/compiler.py", line 1744, in &lt;listcomp&gt;
    [
  File "/home/jpfilho/.local/lib/python3.10/site-packages/django/db/models/sql/compiler.py", line 1745, in &lt;listcomp&gt;
    self.prepare_value(field, self.pre_save_val(field, obj))
  File "/home/jpfilho/.local/lib/python3.10/site-packages/django/db/models/sql/compiler.py", line 1684, in prepare_value
    return field.get_db_prep_save(value, connection=self.connection)
  File "/home/jpfilho/.local/lib/python3.10/site-packages/django/db/models/fields/__init__.py", line 954, in get_db_prep_save
    return self.get_db_prep_value(value, connection=connection, prepared=False)
  File "/home/jpfilho/.local/lib/python3.10/site-packages/django/db/models/fields/__init__.py", line 947, in get_db_prep_value
    value = self.get_prep_value(value)
  File "/home/jpfilho/.local/lib/python3.10/site-packages/django/db/models/fields/__init__.py", line 1122, in get_prep_value
    return self.to_python(value)
  File "/home/jpfilho/.local/lib/python3.10/site-packages/django/db/models/fields/__init__.py", line 1112, in to_python
    raise exceptions.ValidationError(

Exception Type: ValidationError at /webhook/messages/create
Exception Value: [&#x27;o valor “[True]”  deve ser True ou False.&#x27;]
</textarea>
  <br><br>
  <input type="submit" value="Share this traceback on a public website">
  </div>
</form>

</div>


<div id="requestinfo">
  <h2>Request information</h2>


  
    <h3 id="user-info">USER</h3>
    <p>AnonymousUser</p>
  

  <h3 id="get-info">GET</h3>
  
    <table class="req">
      <thead>
        <tr>
          <th>Variable</th>
          <th>Value</th>
        </tr>
      </thead>
      <tbody>
        
          <tr>
            <td>phone</td>
            <td class="code"><pre>&#x27;5588988562749&#x27;</pre></td>
          </tr>
        
          <tr>
            <td>period</td>
            <td class="code"><pre>&#x27;05/23&#x27;</pre></td>
          </tr>
        
      </tbody>
    </table>
  

  <h3 id="post-info">POST</h3>
  
    <p>No POST data</p>
  

  <h3 id="files-info">FILES</h3>
  
    <p>No FILES data</p>
  

  <h3 id="cookie-info">COOKIES</h3>
  
    <p>No cookie data</p>
  

  <h3 id="meta-info">META</h3>
  <table class="req">
    <thead>
      <tr>
        <th>Variable</th>
        <th>Value</th>
      </tr>
    </thead>
    <tbody>
      
        <tr>
          <td>API_URL</td>
          <td class="code"><pre>&#x27;********************&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>BAMF_DESKTOP_FILE_HINT</td>
          <td class="code"><pre>&#x27;/var/lib/snapd/desktop/applications/code_code.desktop&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>CHROME_DESKTOP</td>
          <td class="code"><pre>&#x27;code-url-handler.desktop&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>CLOUDAMQP_URL</td>
          <td class="code"><pre>&#x27;amqps://kzthoddb:3CziblJY4U4tFRNmARuMMdIDu8z53Ql6@fly.rmq.cloudamqp.com/kzthoddb&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>COLORTERM</td>
          <td class="code"><pre>&#x27;truecolor&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>COMPANIES_API</td>
          <td class="code"><pre>&#x27;********************&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>CONTENT_LENGTH</td>
          <td class="code"><pre>&#x27;261&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>CONTENT_TYPE</td>
          <td class="code"><pre>&#x27;application/json&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>DBUS_SESSION_BUS_ADDRESS</td>
          <td class="code"><pre>&#x27;unix:path=/run/user/1000/bus&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>DEBUGINFOD_URLS</td>
          <td class="code"><pre>&#x27;https://debuginfod.ubuntu.com &#x27;</pre></td>
        </tr>
      
        <tr>
          <td>DESKTOP_SESSION</td>
          <td class="code"><pre>&#x27;ubuntu&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>DISPLAY</td>
          <td class="code"><pre>&#x27;:1&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>DJANGO_SETTINGS_MODULE</td>
          <td class="code"><pre>&#x27;webhook.settings&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>GATEWAY_INTERFACE</td>
          <td class="code"><pre>&#x27;CGI/1.1&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>GDK_BACKEND</td>
          <td class="code"><pre>&#x27;x11&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>GDMSESSION</td>
          <td class="code"><pre>&#x27;ubuntu&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>GIO_LAUNCHED_DESKTOP_FILE</td>
          <td class="code"><pre>&#x27;/var/lib/snapd/desktop/applications/code_code.desktop&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>GIO_LAUNCHED_DESKTOP_FILE_PID</td>
          <td class="code"><pre>&#x27;2895&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>GIO_MODULE_DIR</td>
          <td class="code"><pre>&#x27;/home/jpfilho/snap/code/common/.cache/gio-modules&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>GIT_ASKPASS</td>
          <td class="code"><pre>&#x27;********************&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>GJS_DEBUG_OUTPUT</td>
          <td class="code"><pre>&#x27;stderr&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>GJS_DEBUG_TOPICS</td>
          <td class="code"><pre>&#x27;JS ERROR;JS LOG&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>GNOME_DESKTOP_SESSION_ID</td>
          <td class="code"><pre>&#x27;this-is-deprecated&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>GNOME_SHELL_SESSION_MODE</td>
          <td class="code"><pre>&#x27;ubuntu&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>GPG_AGENT_INFO</td>
          <td class="code"><pre>&#x27;/run/user/1000/gnupg/S.gpg-agent:0:1&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>GROUP_ID</td>
          <td class="code"><pre>&#x27;4bf3c03a-2d33-439c-8b13-efb50531e9c1&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>GSETTINGS_SCHEMA_DIR</td>
          <td class="code"><pre>&#x27;/home/jpfilho/snap/code/129/.local/share/glib-2.0/schemas&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>GTK_EXE_PREFIX</td>
          <td class="code"><pre>&#x27;/snap/code/129/usr&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>GTK_IM_MODULE_FILE</td>
          <td class="code"><pre>&#x27;/home/jpfilho/snap/code/common/.cache/immodules/immodules.cache&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>GTK_MODULES</td>
          <td class="code"><pre>&#x27;gail:atk-bridge&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>GTK_PATH</td>
          <td class="code"><pre>&#x27;/snap/code/129/usr/lib/x86_64-linux-gnu/gtk-3.0&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>HEROKU_API</td>
          <td class="code"><pre>&#x27;********************&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>HEROKU_API_KEY</td>
          <td class="code"><pre>&#x27;********************&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>HEROKU_DYNO_ID</td>
          <td class="code"><pre>&#x27;ba6aefd9-0ff3-4cfb-a04b-42b7bf6cf560&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>HOME</td>
          <td class="code"><pre>&#x27;/home/jpfilho&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>HTTP_ACCEPT</td>
          <td class="code"><pre>&#x27;*/*&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>HTTP_ACCEPT_ENCODING</td>
          <td class="code"><pre>&#x27;gzip, deflate&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>HTTP_HOST</td>
          <td class="code"><pre>&#x27;woz.serveo.net&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>HTTP_USER_AGENT</td>
          <td class="code"><pre>&#x27;python-requests/2.30.0&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>HTTP_X_FORWARDED_FOR</td>
          <td class="code"><pre>&#x27;177.37.130.81&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>ID_SERVICE</td>
          <td class="code"><pre>&#x27;83108c28-14f7-4646-acb8-dab165397fd5&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>INVOCATION_ID</td>
          <td class="code"><pre>&#x27;d9e9633aebb14edaa8abde0b26e491bc&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>JAVA_HOME</td>
          <td class="code"><pre>&#x27;/home/jpfilho/.sdkman/candidates/java/current&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>JOURNAL_STREAM</td>
          <td class="code"><pre>&#x27;8:33740&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>LANG</td>
          <td class="code"><pre>&#x27;pt_BR.UTF-8&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>LANGUAGE</td>
          <td class="code"><pre>&#x27;pt_BR:pt:pt_PT:en&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>LC_ADDRESS</td>
          <td class="code"><pre>&#x27;pt_BR.UTF-8&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>LC_IDENTIFICATION</td>
          <td class="code"><pre>&#x27;pt_BR.UTF-8&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>LC_MEASUREMENT</td>
          <td class="code"><pre>&#x27;pt_BR.UTF-8&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>LC_MONETARY</td>
          <td class="code"><pre>&#x27;pt_BR.UTF-8&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>LC_NAME</td>
          <td class="code"><pre>&#x27;pt_BR.UTF-8&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>LC_NUMERIC</td>
          <td class="code"><pre>&#x27;pt_BR.UTF-8&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>LC_PAPER</td>
          <td class="code"><pre>&#x27;pt_BR.UTF-8&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>LC_TELEPHONE</td>
          <td class="code"><pre>&#x27;pt_BR.UTF-8&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>LC_TIME</td>
          <td class="code"><pre>&#x27;pt_BR.UTF-8&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>LESSCLOSE</td>
          <td class="code"><pre>&#x27;/usr/bin/lesspipe %s %s&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>LESSOPEN</td>
          <td class="code"><pre>&#x27;| /usr/bin/lesspipe %s&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>LOCPATH</td>
          <td class="code"><pre>&#x27;/snap/code/129/usr/lib/locale&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>LOGNAME</td>
          <td class="code"><pre>&#x27;jpfilho&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>LS_COLORS</td>
          <td class="code"><pre>&#x27;rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:mi=00:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arc=01;31:*.arj=01;31:*.taz=01;31:*.lha=01;31:*.lz4=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.tzo=01;31:*.t7z=01;31:*.zip=01;31:*.z=01;31:*.dz=01;31:*.gz=01;31:*.lrz=01;31:*.lz=01;31:*.lzo=01;31:*.xz=01;31:*.zst=01;31:*.tzst=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.alz=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.cab=01;31:*.wim=01;31:*.swm=01;31:*.dwm=01;31:*.esd=01;31:*.jpg=01;35:*.jpeg=01;35:*.mjpg=01;35:*.mjpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.webp=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=00;36:*.au=00;36:*.flac=00;36:*.m4a=00;36:*.mid=00;36:*.midi=00;36:*.mka=00;36:*.mp3=00;36:*.mpc=00;36:*.ogg=00;36:*.ra=00;36:*.wav=00;36:*.oga=00;36:*.opus=00;36:*.spx=00;36:*.xspf=00;36:&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>MANAGERPID</td>
          <td class="code"><pre>&#x27;1783&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>MAVEN_HOME</td>
          <td class="code"><pre>&#x27;/home/jpfilho/.sdkman/candidates/maven/current&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>NVM_BIN</td>
          <td class="code"><pre>&#x27;/home/jpfilho/.nvm/versions/node/v18.16.0/bin&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>NVM_CD_FLAGS</td>
          <td class="code"><pre>&#x27;&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>NVM_DIR</td>
          <td class="code"><pre>&#x27;/home/jpfilho/.nvm&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>NVM_INC</td>
          <td class="code"><pre>&#x27;/home/jpfilho/.nvm/versions/node/v18.16.0/include/node&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>ORIGINAL_XDG_CURRENT_DESKTOP</td>
          <td class="code"><pre>&#x27;ubuntu:GNOME&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>PATH</td>
          <td class="code"><pre>&#x27;/home/jpfilho/.pyenv/libexec:/home/jpfilho/.pyenv/plugins/python-build/bin:/home/jpfilho/.pyenv/plugins/pyenv-virtualenv/bin:/home/jpfilho/.pyenv/plugins/pyenv-update/bin:/home/jpfilho/.pyenv/plugins/pyenv-doctor/bin:/home/jpfilho/.pyenv/shims:/home/jpfilho/.local/bin:/home/jpfilho/.pyenv/bin:/home/jpfilho/.nvm/versions/node/v18.16.0/bin:/home/jpfilho/.sdkman/candidates/maven/current/bin:/home/jpfilho/.sdkman/candidates/java/current/bin:/home/jpfilho/.local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:/snap/bin&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>PATH_INFO</td>
          <td class="code"><pre>&#x27;/webhook/messages/create&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>PWD</td>
          <td class="code"><pre>&#x27;/home/jpfilho/Documents/code-ws/python/webhook&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>PYENV_DIR</td>
          <td class="code"><pre>&#x27;/home/jpfilho/Documents/code-ws/python/webhook&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>PYENV_HOOK_PATH</td>
          <td class="code"><pre>&#x27;/home/jpfilho/.pyenv/pyenv.d:/usr/local/etc/pyenv.d:/etc/pyenv.d:/usr/lib/pyenv/hooks:/home/jpfilho/.pyenv/plugins/pyenv-virtualenv/etc/pyenv.d&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>PYENV_ROOT</td>
          <td class="code"><pre>&#x27;/home/jpfilho/.pyenv&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>PYENV_SHELL</td>
          <td class="code"><pre>&#x27;bash&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>PYENV_VERSION</td>
          <td class="code"><pre>&#x27;system&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>QT_ACCESSIBILITY</td>
          <td class="code"><pre>&#x27;1&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>QT_IM_MODULE</td>
          <td class="code"><pre>&#x27;ibus&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>QUERY_STRING</td>
          <td class="code"><pre>&#x27;phone=5588988562749&amp;period=05%2F23&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>REMOTE_ADDR</td>
          <td class="code"><pre>&#x27;127.0.0.1&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>REMOTE_HOST</td>
          <td class="code"><pre>&#x27;&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>REQUEST_METHOD</td>
          <td class="code"><pre>&#x27;POST&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>RUN_MAIN</td>
          <td class="code"><pre>&#x27;true&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SCRIPT_NAME</td>
          <td class="code"><pre>&#x27;&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SDKMAN_CANDIDATES_API</td>
          <td class="code"><pre>&#x27;********************&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SDKMAN_CANDIDATES_DIR</td>
          <td class="code"><pre>&#x27;/home/jpfilho/.sdkman/candidates&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SDKMAN_DIR</td>
          <td class="code"><pre>&#x27;/home/jpfilho/.sdkman&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SDKMAN_PLATFORM</td>
          <td class="code"><pre>&#x27;linuxx64&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SDKMAN_VERSION</td>
          <td class="code"><pre>&#x27;5.16.0&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SERVER_NAME</td>
          <td class="code"><pre>&#x27;localhost&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SERVER_PORT</td>
          <td class="code"><pre>&#x27;8000&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SERVER_PROTOCOL</td>
          <td class="code"><pre>&#x27;HTTP/1.1&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SERVER_SOFTWARE</td>
          <td class="code"><pre>&#x27;WSGIServer/0.2&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_MANAGER</td>
          <td class="code"><pre>&#x27;local/JPSERVER:@/tmp/.ICE-unix/2038,unix/JPSERVER:/tmp/.ICE-unix/2038&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SHELL</td>
          <td class="code"><pre>&#x27;/bin/bash&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SHLVL</td>
          <td class="code"><pre>&#x27;1&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SSH_AGENT_LAUNCHER</td>
          <td class="code"><pre>&#x27;openssh&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SSH_AUTH_SOCK</td>
          <td class="code"><pre>&#x27;/run/user/1000/keyring/ssh&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SYSTEMD_EXEC_PID</td>
          <td class="code"><pre>&#x27;2065&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>TERM</td>
          <td class="code"><pre>&#x27;xterm-256color&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>TERM_PROGRAM</td>
          <td class="code"><pre>&#x27;vscode&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>TERM_PROGRAM_VERSION</td>
          <td class="code"><pre>&#x27;1.78.2&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>TOKEN_API</td>
          <td class="code"><pre>&#x27;********************&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>TZ</td>
          <td class="code"><pre>&#x27;UTC&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>USER</td>
          <td class="code"><pre>&#x27;jpfilho&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>USERNAME</td>
          <td class="code"><pre>&#x27;jpfilho&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>VSCODE_GIT_ASKPASS_EXTRA_ARGS</td>
          <td class="code"><pre>&#x27;********************&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>VSCODE_GIT_ASKPASS_MAIN</td>
          <td class="code"><pre>&#x27;********************&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>VSCODE_GIT_ASKPASS_NODE</td>
          <td class="code"><pre>&#x27;********************&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>VSCODE_GIT_IPC_HANDLE</td>
          <td class="code"><pre>&#x27;/run/user/1000/vscode-git-1d8a16cec2.sock&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>WEBHOOK_API</td>
          <td class="code"><pre>&#x27;********************&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>WEB_URL</td>
          <td class="code"><pre>&#x27;https://woz.herokuapp.com&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>WINDOWPATH</td>
          <td class="code"><pre>&#x27;2&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>XAUTHORITY</td>
          <td class="code"><pre>&#x27;/run/user/1000/gdm/Xauthority&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>XDG_CONFIG_DIRS</td>
          <td class="code"><pre>&#x27;/etc/xdg/xdg-ubuntu:/etc/xdg&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>XDG_CURRENT_DESKTOP</td>
          <td class="code"><pre>&#x27;Unity&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>XDG_DATA_DIRS</td>
          <td class="code"><pre>&#x27;/home/jpfilho/snap/code/129/.local/share:/home/jpfilho/snap/code/129:/snap/code/129/usr/share:/usr/share/ubuntu:/usr/share/gnome:/usr/local/share/:/usr/share/:/var/lib/snapd/desktop&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>XDG_MENU_PREFIX</td>
          <td class="code"><pre>&#x27;gnome-&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>XDG_RUNTIME_DIR</td>
          <td class="code"><pre>&#x27;/run/user/1000&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>XDG_SESSION_CLASS</td>
          <td class="code"><pre>&#x27;user&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>XDG_SESSION_DESKTOP</td>
          <td class="code"><pre>&#x27;ubuntu&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>XDG_SESSION_TYPE</td>
          <td class="code"><pre>&#x27;x11&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>XMODIFIERS</td>
          <td class="code"><pre>&#x27;@im=ibus&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>wsgi.errors</td>
          <td class="code"><pre>&lt;_io.TextIOWrapper name=&#x27;&lt;stderr&gt;&#x27; mode=&#x27;w&#x27; encoding=&#x27;utf-8&#x27;&gt;</pre></td>
        </tr>
      
        <tr>
          <td>wsgi.file_wrapper</td>
          <td class="code"><pre>&lt;class &#x27;wsgiref.util.FileWrapper&#x27;&gt;</pre></td>
        </tr>
      
        <tr>
          <td>wsgi.input</td>
          <td class="code"><pre>&lt;django.core.handlers.wsgi.LimitedStream object at 0x7f063a525ed0&gt;</pre></td>
        </tr>
      
        <tr>
          <td>wsgi.multiprocess</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>wsgi.multithread</td>
          <td class="code"><pre>True</pre></td>
        </tr>
      
        <tr>
          <td>wsgi.run_once</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>wsgi.url_scheme</td>
          <td class="code"><pre>&#x27;http&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>wsgi.version</td>
          <td class="code"><pre>(1, 0)</pre></td>
        </tr>
      
    </tbody>
  </table>


  <h3 id="settings-info">Settings</h3>
  <h4>Using settings module <code>webhook.settings</code></h4>
  <table class="req">
    <thead>
      <tr>
        <th>Setting</th>
        <th>Value</th>
      </tr>
    </thead>
    <tbody>
      
        <tr>
          <td>ABSOLUTE_URL_OVERRIDES</td>
          <td class="code"><pre>{}</pre></td>
        </tr>
      
        <tr>
          <td>ADMINS</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>ALLOWED_HOSTS</td>
          <td class="code"><pre>[&#x27;*&#x27;]</pre></td>
        </tr>
      
        <tr>
          <td>APPEND_SLASH</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>AUTHENTICATION_BACKENDS</td>
          <td class="code"><pre>[&#x27;django.contrib.auth.backends.ModelBackend&#x27;]</pre></td>
        </tr>
      
        <tr>
          <td>AUTH_PASSWORD_VALIDATORS</td>
          <td class="code"><pre>&#x27;********************&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>AUTH_USER_MODEL</td>
          <td class="code"><pre>&#x27;auth.User&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>BASE_DIR</td>
          <td class="code"><pre>PosixPath(&#x27;/home/jpfilho/Documents/code-ws/python/webhook&#x27;)</pre></td>
        </tr>
      
        <tr>
          <td>BROKER_URL</td>
          <td class="code"><pre>&#x27;amqps://kzthoddb:3CziblJY4U4tFRNmARuMMdIDu8z53Ql6@fly.rmq.cloudamqp.com/kzthoddb&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>CACHES</td>
          <td class="code"><pre>{&#x27;default&#x27;: {&#x27;BACKEND&#x27;: &#x27;django.core.cache.backends.locmem.LocMemCache&#x27;}}</pre></td>
        </tr>
      
        <tr>
          <td>CACHE_MIDDLEWARE_ALIAS</td>
          <td class="code"><pre>&#x27;default&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>CACHE_MIDDLEWARE_KEY_PREFIX</td>
          <td class="code"><pre>&#x27;********************&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>CACHE_MIDDLEWARE_SECONDS</td>
          <td class="code"><pre>600</pre></td>
        </tr>
      
        <tr>
          <td>CELERY_BROKER_URL</td>
          <td class="code"><pre>&#x27;amqps://kzthoddb:3CziblJY4U4tFRNmARuMMdIDu8z53Ql6@fly.rmq.cloudamqp.com/kzthoddb&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>CSRF_COOKIE_AGE</td>
          <td class="code"><pre>31449600</pre></td>
        </tr>
      
        <tr>
          <td>CSRF_COOKIE_DOMAIN</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>CSRF_COOKIE_HTTPONLY</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>CSRF_COOKIE_MASKED</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>CSRF_COOKIE_NAME</td>
          <td class="code"><pre>&#x27;csrftoken&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>CSRF_COOKIE_PATH</td>
          <td class="code"><pre>&#x27;/&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>CSRF_COOKIE_SAMESITE</td>
          <td class="code"><pre>&#x27;Lax&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>CSRF_COOKIE_SECURE</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>CSRF_FAILURE_VIEW</td>
          <td class="code"><pre>&#x27;django.views.csrf.csrf_failure&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>CSRF_HEADER_NAME</td>
          <td class="code"><pre>&#x27;HTTP_X_CSRFTOKEN&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>CSRF_TRUSTED_ORIGINS</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>CSRF_USE_SESSIONS</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>DATABASES</td>
          <td class="code"><pre>{&#x27;default&#x27;: {&#x27;ATOMIC_REQUESTS&#x27;: False,
             &#x27;AUTOCOMMIT&#x27;: True,
             &#x27;CONN_HEALTH_CHECKS&#x27;: False,
             &#x27;CONN_MAX_AGE&#x27;: 0,
             &#x27;ENGINE&#x27;: &#x27;django.db.backends.postgresql&#x27;,
             &#x27;HOST&#x27;: &#x27;ep-young-feather-699075.us-east-1.aws.neon.tech&#x27;,
             &#x27;NAME&#x27;: &#x27;neondb&#x27;,
             &#x27;OPTIONS&#x27;: {},
             &#x27;PASSWORD&#x27;: &#x27;********************&#x27;,
             &#x27;PORT&#x27;: &#x27;5432&#x27;,
             &#x27;TEST&#x27;: {&#x27;CHARSET&#x27;: None,
                      &#x27;COLLATION&#x27;: None,
                      &#x27;MIGRATE&#x27;: True,
                      &#x27;MIRROR&#x27;: None,
                      &#x27;NAME&#x27;: None},
             &#x27;TIME_ZONE&#x27;: None,
             &#x27;USER&#x27;: &#x27;psousaj&#x27;}}</pre></td>
        </tr>
      
        <tr>
          <td>DATABASE_ROUTERS</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>DATA_UPLOAD_MAX_MEMORY_SIZE</td>
          <td class="code"><pre>2621440</pre></td>
        </tr>
      
        <tr>
          <td>DATA_UPLOAD_MAX_NUMBER_FIELDS</td>
          <td class="code"><pre>1000</pre></td>
        </tr>
      
        <tr>
          <td>DATA_UPLOAD_MAX_NUMBER_FILES</td>
          <td class="code"><pre>100</pre></td>
        </tr>
      
        <tr>
          <td>DATETIME_FORMAT</td>
          <td class="code"><pre>&#x27;N j, Y, P&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>DATETIME_INPUT_FORMATS</td>
          <td class="code"><pre>[&#x27;%Y-%m-%d %H:%M:%S&#x27;,
 &#x27;%Y-%m-%d %H:%M:%S.%f&#x27;,
 &#x27;%Y-%m-%d %H:%M&#x27;,
 &#x27;%m/%d/%Y %H:%M:%S&#x27;,
 &#x27;%m/%d/%Y %H:%M:%S.%f&#x27;,
 &#x27;%m/%d/%Y %H:%M&#x27;,
 &#x27;%m/%d/%y %H:%M:%S&#x27;,
 &#x27;%m/%d/%y %H:%M:%S.%f&#x27;,
 &#x27;%m/%d/%y %H:%M&#x27;]</pre></td>
        </tr>
      
        <tr>
          <td>DATE_FORMAT</td>
          <td class="code"><pre>&#x27;N j, Y&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>DATE_INPUT_FORMATS</td>
          <td class="code"><pre>[&#x27;%Y-%m-%d&#x27;,
 &#x27;%m/%d/%Y&#x27;,
 &#x27;%m/%d/%y&#x27;,
 &#x27;%b %d %Y&#x27;,
 &#x27;%b %d, %Y&#x27;,
 &#x27;%d %b %Y&#x27;,
 &#x27;%d %b, %Y&#x27;,
 &#x27;%B %d %Y&#x27;,
 &#x27;%B %d, %Y&#x27;,
 &#x27;%d %B %Y&#x27;,
 &#x27;%d %B, %Y&#x27;]</pre></td>
        </tr>
      
        <tr>
          <td>DEBUG</td>
          <td class="code"><pre>True</pre></td>
        </tr>
      
        <tr>
          <td>DEBUG_PROPAGATE_EXCEPTIONS</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>DECIMAL_SEPARATOR</td>
          <td class="code"><pre>&#x27;.&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>DEFAULT_AUTO_FIELD</td>
          <td class="code"><pre>&#x27;django.db.models.BigAutoField&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>DEFAULT_CHARSET</td>
          <td class="code"><pre>&#x27;utf-8&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>DEFAULT_EXCEPTION_REPORTER</td>
          <td class="code"><pre>&#x27;django.views.debug.ExceptionReporter&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>DEFAULT_EXCEPTION_REPORTER_FILTER</td>
          <td class="code"><pre>&#x27;django.views.debug.SafeExceptionReporterFilter&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>DEFAULT_FILE_STORAGE</td>
          <td class="code"><pre>&#x27;django.core.files.storage.FileSystemStorage&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>DEFAULT_FROM_EMAIL</td>
          <td class="code"><pre>&#x27;webmaster@localhost&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>DEFAULT_INDEX_TABLESPACE</td>
          <td class="code"><pre>&#x27;&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>DEFAULT_TABLESPACE</td>
          <td class="code"><pre>&#x27;&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>DISALLOWED_USER_AGENTS</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>EMAIL_BACKEND</td>
          <td class="code"><pre>&#x27;django.core.mail.backends.smtp.EmailBackend&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>EMAIL_HOST</td>
          <td class="code"><pre>&#x27;localhost&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>EMAIL_HOST_PASSWORD</td>
          <td class="code"><pre>&#x27;********************&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>EMAIL_HOST_USER</td>
          <td class="code"><pre>&#x27;&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>EMAIL_PORT</td>
          <td class="code"><pre>25</pre></td>
        </tr>
      
        <tr>
          <td>EMAIL_SSL_CERTFILE</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>EMAIL_SSL_KEYFILE</td>
          <td class="code"><pre>&#x27;********************&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>EMAIL_SUBJECT_PREFIX</td>
          <td class="code"><pre>&#x27;[Django] &#x27;</pre></td>
        </tr>
      
        <tr>
          <td>EMAIL_TIMEOUT</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>EMAIL_USE_LOCALTIME</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>EMAIL_USE_SSL</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>EMAIL_USE_TLS</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>FILE_UPLOAD_DIRECTORY_PERMISSIONS</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>FILE_UPLOAD_HANDLERS</td>
          <td class="code"><pre>[&#x27;django.core.files.uploadhandler.MemoryFileUploadHandler&#x27;,
 &#x27;django.core.files.uploadhandler.TemporaryFileUploadHandler&#x27;]</pre></td>
        </tr>
      
        <tr>
          <td>FILE_UPLOAD_MAX_MEMORY_SIZE</td>
          <td class="code"><pre>2621440</pre></td>
        </tr>
      
        <tr>
          <td>FILE_UPLOAD_PERMISSIONS</td>
          <td class="code"><pre>420</pre></td>
        </tr>
      
        <tr>
          <td>FILE_UPLOAD_TEMP_DIR</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>FIRST_DAY_OF_WEEK</td>
          <td class="code"><pre>0</pre></td>
        </tr>
      
        <tr>
          <td>FIXTURE_DIRS</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>FORCE_SCRIPT_NAME</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>FORMAT_MODULE_PATH</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>FORM_RENDERER</td>
          <td class="code"><pre>&#x27;django.forms.renderers.DjangoTemplates&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>IGNORABLE_404_URLS</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>INSTALLED_APPS</td>
          <td class="code"><pre>[&#x27;django.contrib.admin&#x27;,
 &#x27;django.contrib.auth&#x27;,
 &#x27;django.contrib.contenttypes&#x27;,
 &#x27;django.contrib.sessions&#x27;,
 &#x27;django.contrib.messages&#x27;,
 &#x27;django.contrib.staticfiles&#x27;,
 &#x27;drf_yasg&#x27;,
 &#x27;rest_framework&#x27;,
 &#x27;example&#x27;,
 &#x27;messages_api&#x27;,
 &#x27;celery&#x27;,
 &#x27;django_filters&#x27;]</pre></td>
        </tr>
      
        <tr>
          <td>INTERNAL_IPS</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>LANGUAGES</td>
          <td class="code"><pre>[(&#x27;af&#x27;, &#x27;Afrikaans&#x27;),
 (&#x27;ar&#x27;, &#x27;Arabic&#x27;),
 (&#x27;ar-dz&#x27;, &#x27;Algerian Arabic&#x27;),
 (&#x27;ast&#x27;, &#x27;Asturian&#x27;),
 (&#x27;az&#x27;, &#x27;Azerbaijani&#x27;),
 (&#x27;bg&#x27;, &#x27;Bulgarian&#x27;),
 (&#x27;be&#x27;, &#x27;Belarusian&#x27;),
 (&#x27;bn&#x27;, &#x27;Bengali&#x27;),
 (&#x27;br&#x27;, &#x27;Breton&#x27;),
 (&#x27;bs&#x27;, &#x27;Bosnian&#x27;),
 (&#x27;ca&#x27;, &#x27;Catalan&#x27;),
 (&#x27;ckb&#x27;, &#x27;Central Kurdish (Sorani)&#x27;),
 (&#x27;cs&#x27;, &#x27;Czech&#x27;),
 (&#x27;cy&#x27;, &#x27;Welsh&#x27;),
 (&#x27;da&#x27;, &#x27;Danish&#x27;),
 (&#x27;de&#x27;, &#x27;German&#x27;),
 (&#x27;dsb&#x27;, &#x27;Lower Sorbian&#x27;),
 (&#x27;el&#x27;, &#x27;Greek&#x27;),
 (&#x27;en&#x27;, &#x27;English&#x27;),
 (&#x27;en-au&#x27;, &#x27;Australian English&#x27;),
 (&#x27;en-gb&#x27;, &#x27;British English&#x27;),
 (&#x27;eo&#x27;, &#x27;Esperanto&#x27;),
 (&#x27;es&#x27;, &#x27;Spanish&#x27;),
 (&#x27;es-ar&#x27;, &#x27;Argentinian Spanish&#x27;),
 (&#x27;es-co&#x27;, &#x27;Colombian Spanish&#x27;),
 (&#x27;es-mx&#x27;, &#x27;Mexican Spanish&#x27;),
 (&#x27;es-ni&#x27;, &#x27;Nicaraguan Spanish&#x27;),
 (&#x27;es-ve&#x27;, &#x27;Venezuelan Spanish&#x27;),
 (&#x27;et&#x27;, &#x27;Estonian&#x27;),
 (&#x27;eu&#x27;, &#x27;Basque&#x27;),
 (&#x27;fa&#x27;, &#x27;Persian&#x27;),
 (&#x27;fi&#x27;, &#x27;Finnish&#x27;),
 (&#x27;fr&#x27;, &#x27;French&#x27;),
 (&#x27;fy&#x27;, &#x27;Frisian&#x27;),
 (&#x27;ga&#x27;, &#x27;Irish&#x27;),
 (&#x27;gd&#x27;, &#x27;Scottish Gaelic&#x27;),
 (&#x27;gl&#x27;, &#x27;Galician&#x27;),
 (&#x27;he&#x27;, &#x27;Hebrew&#x27;),
 (&#x27;hi&#x27;, &#x27;Hindi&#x27;),
 (&#x27;hr&#x27;, &#x27;Croatian&#x27;),
 (&#x27;hsb&#x27;, &#x27;Upper Sorbian&#x27;),
 (&#x27;hu&#x27;, &#x27;Hungarian&#x27;),
 (&#x27;hy&#x27;, &#x27;Armenian&#x27;),
 (&#x27;ia&#x27;, &#x27;Interlingua&#x27;),
 (&#x27;id&#x27;, &#x27;Indonesian&#x27;),
 (&#x27;ig&#x27;, &#x27;Igbo&#x27;),
 (&#x27;io&#x27;, &#x27;Ido&#x27;),
 (&#x27;is&#x27;, &#x27;Icelandic&#x27;),
 (&#x27;it&#x27;, &#x27;Italian&#x27;),
 (&#x27;ja&#x27;, &#x27;Japanese&#x27;),
 (&#x27;ka&#x27;, &#x27;Georgian&#x27;),
 (&#x27;kab&#x27;, &#x27;Kabyle&#x27;),
 (&#x27;kk&#x27;, &#x27;Kazakh&#x27;),
 (&#x27;km&#x27;, &#x27;Khmer&#x27;),
 (&#x27;kn&#x27;, &#x27;Kannada&#x27;),
 (&#x27;ko&#x27;, &#x27;Korean&#x27;),
 (&#x27;ky&#x27;, &#x27;Kyrgyz&#x27;),
 (&#x27;lb&#x27;, &#x27;Luxembourgish&#x27;),
 (&#x27;lt&#x27;, &#x27;Lithuanian&#x27;),
 (&#x27;lv&#x27;, &#x27;Latvian&#x27;),
 (&#x27;mk&#x27;, &#x27;Macedonian&#x27;),
 (&#x27;ml&#x27;, &#x27;Malayalam&#x27;),
 (&#x27;mn&#x27;, &#x27;Mongolian&#x27;),
 (&#x27;mr&#x27;, &#x27;Marathi&#x27;),
 (&#x27;ms&#x27;, &#x27;Malay&#x27;),
 (&#x27;my&#x27;, &#x27;Burmese&#x27;),
 (&#x27;nb&#x27;, &#x27;Norwegian Bokmål&#x27;),
 (&#x27;ne&#x27;, &#x27;Nepali&#x27;),
 (&#x27;nl&#x27;, &#x27;Dutch&#x27;),
 (&#x27;nn&#x27;, &#x27;Norwegian Nynorsk&#x27;),
 (&#x27;os&#x27;, &#x27;Ossetic&#x27;),
 (&#x27;pa&#x27;, &#x27;Punjabi&#x27;),
 (&#x27;pl&#x27;, &#x27;Polish&#x27;),
 (&#x27;pt&#x27;, &#x27;Portuguese&#x27;),
 (&#x27;pt-br&#x27;, &#x27;Brazilian Portuguese&#x27;),
 (&#x27;ro&#x27;, &#x27;Romanian&#x27;),
 (&#x27;ru&#x27;, &#x27;Russian&#x27;),
 (&#x27;sk&#x27;, &#x27;Slovak&#x27;),
 (&#x27;sl&#x27;, &#x27;Slovenian&#x27;),
 (&#x27;sq&#x27;, &#x27;Albanian&#x27;),
 (&#x27;sr&#x27;, &#x27;Serbian&#x27;),
 (&#x27;sr-latn&#x27;, &#x27;Serbian Latin&#x27;),
 (&#x27;sv&#x27;, &#x27;Swedish&#x27;),
 (&#x27;sw&#x27;, &#x27;Swahili&#x27;),
 (&#x27;ta&#x27;, &#x27;Tamil&#x27;),
 (&#x27;te&#x27;, &#x27;Telugu&#x27;),
 (&#x27;tg&#x27;, &#x27;Tajik&#x27;),
 (&#x27;th&#x27;, &#x27;Thai&#x27;),
 (&#x27;tk&#x27;, &#x27;Turkmen&#x27;),
 (&#x27;tr&#x27;, &#x27;Turkish&#x27;),
 (&#x27;tt&#x27;, &#x27;Tatar&#x27;),
 (&#x27;udm&#x27;, &#x27;Udmurt&#x27;),
 (&#x27;uk&#x27;, &#x27;Ukrainian&#x27;),
 (&#x27;ur&#x27;, &#x27;Urdu&#x27;),
 (&#x27;uz&#x27;, &#x27;Uzbek&#x27;),
 (&#x27;vi&#x27;, &#x27;Vietnamese&#x27;),
 (&#x27;zh-hans&#x27;, &#x27;Simplified Chinese&#x27;),
 (&#x27;zh-hant&#x27;, &#x27;Traditional Chinese&#x27;)]</pre></td>
        </tr>
      
        <tr>
          <td>LANGUAGES_BIDI</td>
          <td class="code"><pre>[&#x27;he&#x27;, &#x27;ar&#x27;, &#x27;ar-dz&#x27;, &#x27;ckb&#x27;, &#x27;fa&#x27;, &#x27;ur&#x27;]</pre></td>
        </tr>
      
        <tr>
          <td>LANGUAGE_CODE</td>
          <td class="code"><pre>&#x27;pt-BR&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>LANGUAGE_COOKIE_AGE</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>LANGUAGE_COOKIE_DOMAIN</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>LANGUAGE_COOKIE_HTTPONLY</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>LANGUAGE_COOKIE_NAME</td>
          <td class="code"><pre>&#x27;django_language&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>LANGUAGE_COOKIE_PATH</td>
          <td class="code"><pre>&#x27;/&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>LANGUAGE_COOKIE_SAMESITE</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>LANGUAGE_COOKIE_SECURE</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>LOCALE_PATHS</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>LOGGING</td>
          <td class="code"><pre>{}</pre></td>
        </tr>
      
        <tr>
          <td>LOGGING_CONFIG</td>
          <td class="code"><pre>&#x27;logging.config.dictConfig&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>LOGIN_REDIRECT_URL</td>
          <td class="code"><pre>&#x27;/accounts/profile/&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>LOGIN_URL</td>
          <td class="code"><pre>&#x27;/accounts/login/&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>LOGOUT_REDIRECT_URL</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>MANAGERS</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>MEDIA_ROOT</td>
          <td class="code"><pre>&#x27;&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>MEDIA_URL</td>
          <td class="code"><pre>&#x27;/&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>MESSAGE_STORAGE</td>
          <td class="code"><pre>&#x27;django.contrib.messages.storage.fallback.FallbackStorage&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>MIDDLEWARE</td>
          <td class="code"><pre>[&#x27;django.middleware.security.SecurityMiddleware&#x27;,
 &#x27;django.contrib.sessions.middleware.SessionMiddleware&#x27;,
 &#x27;django.middleware.common.CommonMiddleware&#x27;,
 &#x27;django.middleware.csrf.CsrfViewMiddleware&#x27;,
 &#x27;django.contrib.auth.middleware.AuthenticationMiddleware&#x27;,
 &#x27;django.contrib.messages.middleware.MessageMiddleware&#x27;,
 &#x27;django.middleware.clickjacking.XFrameOptionsMiddleware&#x27;]</pre></td>
        </tr>
      
        <tr>
          <td>MIGRATION_MODULES</td>
          <td class="code"><pre>{}</pre></td>
        </tr>
      
        <tr>
          <td>MONTH_DAY_FORMAT</td>
          <td class="code"><pre>&#x27;F j&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>NUMBER_GROUPING</td>
          <td class="code"><pre>0</pre></td>
        </tr>
      
        <tr>
          <td>PASSWORD_HASHERS</td>
          <td class="code"><pre>&#x27;********************&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>PASSWORD_RESET_TIMEOUT</td>
          <td class="code"><pre>&#x27;********************&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>PREPEND_WWW</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>ROOT_URLCONF</td>
          <td class="code"><pre>&#x27;webhook.urls&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SECRET_KEY</td>
          <td class="code"><pre>&#x27;********************&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SECRET_KEY_FALLBACKS</td>
          <td class="code"><pre>&#x27;********************&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SECURE_CONTENT_TYPE_NOSNIFF</td>
          <td class="code"><pre>True</pre></td>
        </tr>
      
        <tr>
          <td>SECURE_CROSS_ORIGIN_OPENER_POLICY</td>
          <td class="code"><pre>&#x27;same-origin&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SECURE_HSTS_INCLUDE_SUBDOMAINS</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>SECURE_HSTS_PRELOAD</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>SECURE_HSTS_SECONDS</td>
          <td class="code"><pre>0</pre></td>
        </tr>
      
        <tr>
          <td>SECURE_PROXY_SSL_HEADER</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>SECURE_REDIRECT_EXEMPT</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>SECURE_REFERRER_POLICY</td>
          <td class="code"><pre>&#x27;same-origin&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SECURE_SSL_HOST</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>SECURE_SSL_REDIRECT</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>SERVER_EMAIL</td>
          <td class="code"><pre>&#x27;root@localhost&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_CACHE_ALIAS</td>
          <td class="code"><pre>&#x27;default&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_COOKIE_AGE</td>
          <td class="code"><pre>1209600</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_COOKIE_DOMAIN</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_COOKIE_HTTPONLY</td>
          <td class="code"><pre>True</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_COOKIE_NAME</td>
          <td class="code"><pre>&#x27;sessionid&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_COOKIE_PATH</td>
          <td class="code"><pre>&#x27;/&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_COOKIE_SAMESITE</td>
          <td class="code"><pre>&#x27;Lax&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_COOKIE_SECURE</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_ENGINE</td>
          <td class="code"><pre>&#x27;django.contrib.sessions.backends.db&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_EXPIRE_AT_BROWSER_CLOSE</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_FILE_PATH</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_SAVE_EVERY_REQUEST</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_SERIALIZER</td>
          <td class="code"><pre>&#x27;django.contrib.sessions.serializers.JSONSerializer&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SETTINGS_MODULE</td>
          <td class="code"><pre>&#x27;webhook.settings&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SHORT_DATETIME_FORMAT</td>
          <td class="code"><pre>&#x27;m/d/Y P&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SHORT_DATE_FORMAT</td>
          <td class="code"><pre>&#x27;m/d/Y&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SIGNING_BACKEND</td>
          <td class="code"><pre>&#x27;django.core.signing.TimestampSigner&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SILENCED_SYSTEM_CHECKS</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>STATICFILES_DIRS</td>
          <td class="code"><pre>[&#x27;/home/jpfilho/Documents/code-ws/python/webhook/statics&#x27;]</pre></td>
        </tr>
      
        <tr>
          <td>STATICFILES_FINDERS</td>
          <td class="code"><pre>[&#x27;django.contrib.staticfiles.finders.FileSystemFinder&#x27;,
 &#x27;django.contrib.staticfiles.finders.AppDirectoriesFinder&#x27;]</pre></td>
        </tr>
      
        <tr>
          <td>STATICFILES_STORAGE</td>
          <td class="code"><pre>&#x27;django.contrib.staticfiles.storage.StaticFilesStorage&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>STATIC_ROOT</td>
          <td class="code"><pre>&#x27;/home/jpfilho/Documents/code-ws/python/webhook/static&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>STATIC_URL</td>
          <td class="code"><pre>&#x27;/static/&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>STORAGES</td>
          <td class="code"><pre>{&#x27;default&#x27;: {&#x27;BACKEND&#x27;: &#x27;django.core.files.storage.FileSystemStorage&#x27;},
 &#x27;staticfiles&#x27;: {&#x27;BACKEND&#x27;: &#x27;django.contrib.staticfiles.storage.StaticFilesStorage&#x27;}}</pre></td>
        </tr>
      
        <tr>
          <td>TEMPLATES</td>
          <td class="code"><pre>[{&#x27;APP_DIRS&#x27;: True,
  &#x27;BACKEND&#x27;: &#x27;django.template.backends.django.DjangoTemplates&#x27;,
  &#x27;DIRS&#x27;: [],
  &#x27;OPTIONS&#x27;: {&#x27;context_processors&#x27;: [&#x27;django.template.context_processors.debug&#x27;,
                                     &#x27;django.template.context_processors.request&#x27;,
                                     &#x27;django.contrib.auth.context_processors.auth&#x27;,
                                     &#x27;django.contrib.messages.context_processors.messages&#x27;]}}]</pre></td>
        </tr>
      
        <tr>
          <td>TEST_NON_SERIALIZED_APPS</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>TEST_RUNNER</td>
          <td class="code"><pre>&#x27;django.test.runner.DiscoverRunner&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>THOUSAND_SEPARATOR</td>
          <td class="code"><pre>&#x27;,&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>TIME_FORMAT</td>
          <td class="code"><pre>&#x27;P&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>TIME_INPUT_FORMATS</td>
          <td class="code"><pre>[&#x27;%H:%M:%S&#x27;, &#x27;%H:%M:%S.%f&#x27;, &#x27;%H:%M&#x27;]</pre></td>
        </tr>
      
        <tr>
          <td>TIME_ZONE</td>
          <td class="code"><pre>&#x27;UTC&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>USE_DEPRECATED_PYTZ</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>USE_I18N</td>
          <td class="code"><pre>True</pre></td>
        </tr>
      
        <tr>
          <td>USE_L10N</td>
          <td class="code"><pre>True</pre></td>
        </tr>
      
        <tr>
          <td>USE_THOUSAND_SEPARATOR</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>USE_TZ</td>
          <td class="code"><pre>True</pre></td>
        </tr>
      
        <tr>
          <td>USE_X_FORWARDED_HOST</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>USE_X_FORWARDED_PORT</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>WSGI_APPLICATION</td>
          <td class="code"><pre>&#x27;webhook.wsgi.app&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>X_FRAME_OPTIONS</td>
          <td class="code"><pre>&#x27;DENY&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>YEAR_MONTH_FORMAT</td>
          <td class="code"><pre>&#x27;F Y&#x27;</pre></td>
        </tr>
      
    </tbody>
  </table>

</div>

  <div id="explanation">
    <p>
      You’re seeing this error because you have <code>DEBUG = True</code> in your
      Django settings file. Change that to <code>False</code>, and Django will
      display a standard page generated by the handler for this status code.
    </p>
  </div>

</body>
</html>

21/05/2023|23:52:03 - messages_api.event -DEBUG- <Response [400]>-{"error":400,"message":"Message matching query does not exist."}
21/05/2023|23:52:03 - messages_api.event -DEBUG- <Response [400]>-{"error":400,"message":"Message matching query does not exist."}
21/05/2023|23:52:24 - messages_api.event -DEBUG- <Response [400]>-{"error":400,"message":"Message matching query does not exist."}
21/05/2023|23:52:24 - messages_api.event -DEBUG- <Response [400]>-{"error":400,"message":"Message matching query does not exist."}
21/05/2023|23:53:04 - messages_api.event -DEBUG- <Response [400]>-{"error":400,"message":"Message matching query does not exist."}
21/05/2023|23:53:04 - messages_api.event -DEBUG- <Response [400]>-{"error":400,"message":"Message matching query does not exist."}
21/05/2023|23:53:37 - messages_api.event -DEBUG- <Response [400]>-{"error":400,"message":"Message matching query does not exist."}
21/05/2023|23:53:37 - messages_api.event -DEBUG- <Response [400]>-{"error":400,"message":"Message matching query does not exist."}
21/05/2023|23:53:51 - webhook.views -INFO- Received webhook request
{'event': 'message.created', 'data': {'id': 'c53cbcbe-e9ba-4ff7-9755-dae13819cd7c', 'isFromMe': True, 'sent': True, 'type': 'chat', 'timestamp': '2023-05-21T23:53:49.000Z', 'data': {'ack': 0, 'isNew': True, 'isFirst': False}, 'visible': True, 'accountId': '966b70ba-27d8-43ae-a295-35e59f0007be', 'contactId': '79db7607-6088-44c1-a010-ed4ef39d4f37', 'fromId': 'e12d3a56-0c52-43ac-b33c-15c399eb06d4', 'serviceId': '83108c28-14f7-4646-acb8-dab165397fd5', 'toId': None, 'userId': '3f4cc332-516e-4f48-aff2-df6eaa2e5034', 'ticketId': 'e5a453e9-6cb1-476e-b416-3b334b0bc61a', 'ticketUserId': None, 'ticketDepartmentId': None, 'quotedMessageId': None, 'origin': 'user', 'hsmId': None, 'text': 'Ai ai ai ai ai', 'obfuscated': False, 'files': None, 'quotedMessage': None, 'isFromBot': False}, 'webhookId': '27b4c18d-2ab0-4c70-a592-46bbe7e00bc8', 'timestamp': '2023-05-21T23:53:50.711Z'}
21/05/2023|23:53:51 - webhook.views -INFO- Received webhook request
{'event': 'message.updated', 'data': {'id': 'c53cbcbe-e9ba-4ff7-9755-dae13819cd7c', 'isFromMe': True, 'sent': True, 'type': 'chat', 'timestamp': '2023-05-21T23:53:49.000Z', 'data': {'ack': 1, 'isNew': True, 'isFirst': False}, 'visible': True, 'accountId': '966b70ba-27d8-43ae-a295-35e59f0007be', 'contactId': '79db7607-6088-44c1-a010-ed4ef39d4f37', 'fromId': 'e12d3a56-0c52-43ac-b33c-15c399eb06d4', 'serviceId': '83108c28-14f7-4646-acb8-dab165397fd5', 'toId': None, 'userId': '3f4cc332-516e-4f48-aff2-df6eaa2e5034', 'ticketId': 'e5a453e9-6cb1-476e-b416-3b334b0bc61a', 'ticketUserId': '3f4cc332-516e-4f48-aff2-df6eaa2e5034', 'ticketDepartmentId': 'a78046d7-809d-4cdb-a72a-31dfbc47d862', 'quotedMessageId': None, 'origin': 'user', 'hsmId': None, 'text': 'Ai ai ai ai ai', 'obfuscated': False, 'files': None, 'quotedMessage': None, 'isFromBot': False}, 'webhookId': '27b4c18d-2ab0-4c70-a592-46bbe7e00bc8', 'timestamp': '2023-05-21T23:53:50.794Z'}
21/05/2023|23:53:51 - webhook.views -INFO- Received webhook request
{'event': 'message.updated', 'data': {'id': 'c53cbcbe-e9ba-4ff7-9755-dae13819cd7c', 'isFromMe': True, 'sent': True, 'type': 'chat', 'timestamp': '2023-05-21T23:53:49.000Z', 'data': {'ack': 2, 'isNew': True, 'isFirst': False}, 'visible': True, 'accountId': '966b70ba-27d8-43ae-a295-35e59f0007be', 'contactId': '79db7607-6088-44c1-a010-ed4ef39d4f37', 'fromId': 'e12d3a56-0c52-43ac-b33c-15c399eb06d4', 'serviceId': '83108c28-14f7-4646-acb8-dab165397fd5', 'toId': None, 'userId': '3f4cc332-516e-4f48-aff2-df6eaa2e5034', 'ticketId': 'e5a453e9-6cb1-476e-b416-3b334b0bc61a', 'ticketUserId': '3f4cc332-516e-4f48-aff2-df6eaa2e5034', 'ticketDepartmentId': 'a78046d7-809d-4cdb-a72a-31dfbc47d862', 'quotedMessageId': None, 'origin': 'user', 'hsmId': None, 'text': 'Ai ai ai ai ai', 'obfuscated': False, 'files': None, 'quotedMessage': None, 'isFromBot': False}, 'webhookId': '27b4c18d-2ab0-4c70-a592-46bbe7e00bc8', 'timestamp': '2023-05-21T23:53:51.207Z'}
21/05/2023|23:53:53 - webhook.views -INFO- Received webhook request
{'event': 'message.updated', 'data': {'id': '2172fdff-2979-4c81-860a-f4a45f2b9a5b', 'isFromMe': True, 'sent': True, 'type': 'chat', 'timestamp': '2023-05-21T23:47:42.000Z', 'data': {'ack': 3, 'isNew': True, 'isFirst': False}, 'visible': True, 'accountId': '966b70ba-27d8-43ae-a295-35e59f0007be', 'contactId': '79db7607-6088-44c1-a010-ed4ef39d4f37', 'fromId': 'e12d3a56-0c52-43ac-b33c-15c399eb06d4', 'serviceId': '83108c28-14f7-4646-acb8-dab165397fd5', 'toId': None, 'userId': '3f4cc332-516e-4f48-aff2-df6eaa2e5034', 'ticketId': 'e5a453e9-6cb1-476e-b416-3b334b0bc61a', 'ticketUserId': '3f4cc332-516e-4f48-aff2-df6eaa2e5034', 'ticketDepartmentId': 'a78046d7-809d-4cdb-a72a-31dfbc47d862', 'quotedMessageId': None, 'origin': 'user', 'hsmId': None, 'text': 'Novo chamado para teste', 'obfuscated': False, 'files': None, 'quotedMessage': None, 'isFromBot': False}, 'webhookId': '27b4c18d-2ab0-4c70-a592-46bbe7e00bc8', 'timestamp': '2023-05-21T23:53:53.122Z'}
21/05/2023|23:53:53 - webhook.views -INFO- Received webhook request
{'event': 'message.updated', 'data': {'id': '5b590f2d-d3f3-4423-8878-3bf67273e806', 'isFromMe': True, 'sent': True, 'type': 'chat', 'timestamp': '2023-05-21T23:51:17.000Z', 'data': {'ack': 3, 'isNew': True, 'isFirst': False}, 'visible': True, 'accountId': '966b70ba-27d8-43ae-a295-35e59f0007be', 'contactId': '79db7607-6088-44c1-a010-ed4ef39d4f37', 'fromId': 'e12d3a56-0c52-43ac-b33c-15c399eb06d4', 'serviceId': '83108c28-14f7-4646-acb8-dab165397fd5', 'toId': None, 'userId': '3f4cc332-516e-4f48-aff2-df6eaa2e5034', 'ticketId': 'e5a453e9-6cb1-476e-b416-3b334b0bc61a', 'ticketUserId': '3f4cc332-516e-4f48-aff2-df6eaa2e5034', 'ticketDepartmentId': 'a78046d7-809d-4cdb-a72a-31dfbc47d862', 'quotedMessageId': None, 'origin': 'user', 'hsmId': None, 'text': 'Ai ai', 'obfuscated': False, 'files': None, 'quotedMessage': None, 'isFromBot': False}, 'webhookId': '27b4c18d-2ab0-4c70-a592-46bbe7e00bc8', 'timestamp': '2023-05-21T23:53:53.127Z'}
21/05/2023|23:53:53 - webhook.views -INFO- Received webhook request
{'event': 'message.updated', 'data': {'id': '0cdaf52c-be39-430f-be67-3c993fc570df', 'isFromMe': True, 'sent': True, 'type': 'chat', 'timestamp': '2023-05-21T23:42:26.000Z', 'data': {'ack': 3, 'isNew': True, 'isFirst': False}, 'visible': True, 'accountId': '966b70ba-27d8-43ae-a295-35e59f0007be', 'contactId': '79db7607-6088-44c1-a010-ed4ef39d4f37', 'fromId': 'e12d3a56-0c52-43ac-b33c-15c399eb06d4', 'serviceId': '83108c28-14f7-4646-acb8-dab165397fd5', 'toId': None, 'userId': '3f4cc332-516e-4f48-aff2-df6eaa2e5034', 'ticketId': '3e14aea2-bc69-4e56-b20b-1b6d63ade6d5', 'ticketUserId': '3f4cc332-516e-4f48-aff2-df6eaa2e5034', 'ticketDepartmentId': 'a78046d7-809d-4cdb-a72a-31dfbc47d862', 'quotedMessageId': None, 'origin': 'user', 'hsmId': None, 'text': 'Funciona cara', 'obfuscated': False, 'files': None, 'quotedMessage': None, 'isFromBot': False}, 'webhookId': '27b4c18d-2ab0-4c70-a592-46bbe7e00bc8', 'timestamp': '2023-05-21T23:53:53.139Z'}
21/05/2023|23:53:53 - webhook.views -INFO- Received webhook request
{'event': 'message.updated', 'data': {'id': 'c53cbcbe-e9ba-4ff7-9755-dae13819cd7c', 'isFromMe': True, 'sent': True, 'type': 'chat', 'timestamp': '2023-05-21T23:53:49.000Z', 'data': {'ack': 3, 'isNew': True, 'isFirst': False}, 'visible': True, 'accountId': '966b70ba-27d8-43ae-a295-35e59f0007be', 'contactId': '79db7607-6088-44c1-a010-ed4ef39d4f37', 'fromId': 'e12d3a56-0c52-43ac-b33c-15c399eb06d4', 'serviceId': '83108c28-14f7-4646-acb8-dab165397fd5', 'toId': None, 'userId': '3f4cc332-516e-4f48-aff2-df6eaa2e5034', 'ticketId': 'e5a453e9-6cb1-476e-b416-3b334b0bc61a', 'ticketUserId': '3f4cc332-516e-4f48-aff2-df6eaa2e5034', 'ticketDepartmentId': 'a78046d7-809d-4cdb-a72a-31dfbc47d862', 'quotedMessageId': None, 'origin': 'user', 'hsmId': None, 'text': 'Ai ai ai ai ai', 'obfuscated': False, 'files': None, 'quotedMessage': None, 'isFromBot': False}, 'webhookId': '27b4c18d-2ab0-4c70-a592-46bbe7e00bc8', 'timestamp': '2023-05-21T23:53:53.153Z'}
21/05/2023|23:53:54 - webhook.views -INFO- Received webhook request
{'event': 'message.updated', 'data': {'id': '2d4d5d7d-18b3-4e00-87ef-3d66826e86ed', 'isFromMe': True, 'sent': True, 'type': 'chat', 'timestamp': '2023-05-21T23:40:43.000Z', 'data': {'ack': 3, 'isNew': True, 'isFirst': False}, 'visible': True, 'accountId': '966b70ba-27d8-43ae-a295-35e59f0007be', 'contactId': '79db7607-6088-44c1-a010-ed4ef39d4f37', 'fromId': 'e12d3a56-0c52-43ac-b33c-15c399eb06d4', 'serviceId': '83108c28-14f7-4646-acb8-dab165397fd5', 'toId': None, 'userId': '3f4cc332-516e-4f48-aff2-df6eaa2e5034', 'ticketId': '3e14aea2-bc69-4e56-b20b-1b6d63ade6d5', 'ticketUserId': '3f4cc332-516e-4f48-aff2-df6eaa2e5034', 'ticketDepartmentId': 'a78046d7-809d-4cdb-a72a-31dfbc47d862', 'quotedMessageId': None, 'origin': 'user', 'hsmId': None, 'text': 'que coisa', 'obfuscated': False, 'files': None, 'quotedMessage': None, 'isFromBot': False}, 'webhookId': '27b4c18d-2ab0-4c70-a592-46bbe7e00bc8', 'timestamp': '2023-05-21T23:53:53.150Z'}
21/05/2023|23:53:54 - webhook.views -INFO- Received webhook request
{'event': 'message.updated', 'data': {'id': '4a6a2656-1dd7-4146-aff3-13e6123487be', 'isFromMe': True, 'sent': True, 'type': 'chat', 'timestamp': '2023-05-21T23:39:34.000Z', 'data': {'ack': 3, 'isNew': True, 'isFirst': False}, 'visible': True, 'accountId': '966b70ba-27d8-43ae-a295-35e59f0007be', 'contactId': '79db7607-6088-44c1-a010-ed4ef39d4f37', 'fromId': 'e12d3a56-0c52-43ac-b33c-15c399eb06d4', 'serviceId': '83108c28-14f7-4646-acb8-dab165397fd5', 'toId': None, 'userId': '3f4cc332-516e-4f48-aff2-df6eaa2e5034', 'ticketId': '3e14aea2-bc69-4e56-b20b-1b6d63ade6d5', 'ticketUserId': '3f4cc332-516e-4f48-aff2-df6eaa2e5034', 'ticketDepartmentId': 'a78046d7-809d-4cdb-a72a-31dfbc47d862', 'quotedMessageId': None, 'origin': 'user', 'hsmId': None, 'text': 'Bacana', 'obfuscated': False, 'files': None, 'quotedMessage': None, 'isFromBot': False}, 'webhookId': '27b4c18d-2ab0-4c70-a592-46bbe7e00bc8', 'timestamp': '2023-05-21T23:53:53.151Z'}
21/05/2023|23:53:54 - webhook.views -INFO- Received webhook request
{'event': 'message.updated', 'data': {'id': '5a2c0ddd-3dba-4733-854e-3332ffefb3f7', 'isFromMe': True, 'sent': True, 'type': 'chat', 'timestamp': '2023-05-21T23:41:37.000Z', 'data': {'ack': 3, 'isNew': True, 'isFirst': False}, 'visible': True, 'accountId': '966b70ba-27d8-43ae-a295-35e59f0007be', 'contactId': '79db7607-6088-44c1-a010-ed4ef39d4f37', 'fromId': 'e12d3a56-0c52-43ac-b33c-15c399eb06d4', 'serviceId': '83108c28-14f7-4646-acb8-dab165397fd5', 'toId': None, 'userId': '3f4cc332-516e-4f48-aff2-df6eaa2e5034', 'ticketId': '3e14aea2-bc69-4e56-b20b-1b6d63ade6d5', 'ticketUserId': '3f4cc332-516e-4f48-aff2-df6eaa2e5034', 'ticketDepartmentId': 'a78046d7-809d-4cdb-a72a-31dfbc47d862', 'quotedMessageId': None, 'origin': 'user', 'hsmId': None, 'text': 'Que coisa', 'obfuscated': False, 'files': None, 'quotedMessage': None, 'isFromBot': False}, 'webhookId': '27b4c18d-2ab0-4c70-a592-46bbe7e00bc8', 'timestamp': '2023-05-21T23:53:53.138Z'}
21/05/2023|23:53:54 - messages_api.event -DEBUG- <Response [400]>-{"error":400,"message":"Message matching query does not exist."}
21/05/2023|23:53:55 - messages_api.event -DEBUG- <Response [400]>-{"error":400,"message":"Message matching query does not exist."}
21/05/2023|23:53:56 - messages_api.event -DEBUG- <Response [400]>-{"error":400,"message":"Message matching query does not exist."}
21/05/2023|23:53:57 - webhook.views -DEBUG- Exceção ocorreu na função webhook_receiver, linha 20: Connection.open: (530) NOT_ALLOWED - access to vhost 'kzthoddb' refused for user 'kzthoddb': connection limit (20) is reached
21/05/2023|23:53:57 - webhook.views -DEBUG- Exceção ocorreu na função webhook_receiver, linha 20: Connection.open: (530) NOT_ALLOWED - access to vhost 'kzthoddb' refused for user 'kzthoddb': connection limit (20) is reached
21/05/2023|23:53:57 - webhook.views -INFO- Exception occurred. Connection.open: (530) NOT_ALLOWED - access to vhost 'kzthoddb' refused for user 'kzthoddb': connection limit (20) is reached
21/05/2023|23:53:57 - webhook.views -INFO- Exception occurred. Connection.open: (530) NOT_ALLOWED - access to vhost 'kzthoddb' refused for user 'kzthoddb': connection limit (20) is reached
21/05/2023|23:53:57 - messages_api.event -DEBUG- <Response [400]>-{"error":400,"message":"Message matching query does not exist."}
21/05/2023|23:53:58 - messages_api.event -DEBUG- Failed to create message_id: c53cbcbe-e9ba-4ff7-9755-dae13819cd7c
<Response [500]>-<!DOCTYPE html>
<html lang="en">
<head>
  <meta http-equiv="content-type" content="text/html; charset=utf-8">
  <meta name="robots" content="NONE,NOARCHIVE">
  <title>ValidationError
          at /webhook/messages/create</title>
  <style type="text/css">
    html * { padding:0; margin:0; }
    body * { padding:10px 20px; }
    body * * { padding:0; }
    body { font:small sans-serif; background-color:#fff; color:#000; }
    body>div { border-bottom:1px solid #ddd; }
    h1 { font-weight:normal; }
    h2 { margin-bottom:.8em; }
    h3 { margin:1em 0 .5em 0; }
    h4 { margin:0 0 .5em 0; font-weight: normal; }
    code, pre { font-size: 100%; white-space: pre-wrap; word-break: break-word; }
    summary { cursor: pointer; }
    table { border:1px solid #ccc; border-collapse: collapse; width:100%; background:white; }
    tbody td, tbody th { vertical-align:top; padding:2px 3px; }
    thead th {
      padding:1px 6px 1px 3px; background:#fefefe; text-align:left;
      font-weight:normal; font-size:11px; border:1px solid #ddd;
    }
    tbody th { width:12em; text-align:right; color:#666; padding-right:.5em; }
    table.vars { margin:5px 10px 2px 40px; width: auto; }
    table.vars td, table.req td { font-family:monospace; }
    table td.code { width:100%; }
    table td.code pre { overflow:hidden; }
    table.source th { color:#666; }
    table.source td { font-family:monospace; white-space:pre; border-bottom:1px solid #eee; }
    ul.traceback { list-style-type:none; color: #222; }
    ul.traceback li.cause { word-break: break-word; }
    ul.traceback li.frame { padding-bottom:1em; color:#4f4f4f; }
    ul.traceback li.user { background-color:#e0e0e0; color:#000 }
    div.context { padding:10px 0; overflow:hidden; }
    div.context ol { padding-left:30px; margin:0 10px; list-style-position: inside; }
    div.context ol li { font-family:monospace; white-space:pre; color:#777; cursor:pointer; padding-left: 2px; }
    div.context ol li pre { display:inline; }
    div.context ol.context-line li { color:#464646; background-color:#dfdfdf; padding: 3px 2px; }
    div.context ol.context-line li span { position:absolute; right:32px; }
    .user div.context ol.context-line li { background-color:#bbb; color:#000; }
    .user div.context ol li { color:#666; }
    div.commands, summary.commands { margin-left: 40px; }
    div.commands a, summary.commands { color:#555; text-decoration:none; }
    .user div.commands a { color: black; }
    #summary { background: #ffc; }
    #summary h2 { font-weight: normal; color: #666; }
    #explanation { background:#eee; }
    #template, #template-not-exist { background:#f6f6f6; }
    #template-not-exist ul { margin: 0 0 10px 20px; }
    #template-not-exist .postmortem-section { margin-bottom: 3px; }
    #unicode-hint { background:#eee; }
    #traceback { background:#eee; }
    #requestinfo { background:#f6f6f6; padding-left:120px; }
    #summary table { border:none; background:transparent; }
    #requestinfo h2, #requestinfo h3 { position:relative; margin-left:-100px; }
    #requestinfo h3 { margin-bottom:-1em; }
    .error { background: #ffc; }
    .specific { color:#cc3300; font-weight:bold; }
    h2 span.commands { font-size:.7em; font-weight:normal; }
    span.commands a:link {color:#5E5694;}
    pre.exception_value { font-family: sans-serif; color: #575757; font-size: 1.5em; margin: 10px 0 10px 0; }
    .append-bottom { margin-bottom: 10px; }
    .fname { user-select: all; }
  </style>
  
  <script>
    function hideAll(elems) {
      for (var e = 0; e < elems.length; e++) {
        elems[e].style.display = 'none';
      }
    }
    window.onload = function() {
      hideAll(document.querySelectorAll('ol.pre-context'));
      hideAll(document.querySelectorAll('ol.post-context'));
      hideAll(document.querySelectorAll('div.pastebin'));
    }
    function toggle() {
      for (var i = 0; i < arguments.length; i++) {
        var e = document.getElementById(arguments[i]);
        if (e) {
          e.style.display = e.style.display == 'none' ? 'block': 'none';
        }
      }
      return false;
    }
    function switchPastebinFriendly(link) {
      s1 = "Switch to copy-and-paste view";
      s2 = "Switch back to interactive view";
      link.textContent = link.textContent.trim() == s1 ? s2: s1;
      toggle('browserTraceback', 'pastebinTraceback');
      return false;
    }
  </script>
  
</head>
<body>
<div id="summary">
  <h1>ValidationError
       at /webhook/messages/create</h1>
  <pre class="exception_value">[&#x27;o valor “[True]”  deve ser True ou False.&#x27;]</pre>
  <table class="meta">

    <tr>
      <th>Request Method:</th>
      <td>POST</td>
    </tr>
    <tr>
      <th>Request URL:</th>
      <td>http://woz.serveo.net/webhook/messages/create?phone=5588988562749&amp;period=05%2F23</td>
    </tr>

    <tr>
      <th>Django Version:</th>
      <td>4.2.1</td>
    </tr>

    <tr>
      <th>Exception Type:</th>
      <td>ValidationError</td>
    </tr>


    <tr>
      <th>Exception Value:</th>
      <td><pre>[&#x27;o valor “[True]”  deve ser True ou False.&#x27;]</pre></td>
    </tr>


    <tr>
      <th>Exception Location:</th>
      <td><span class="fname">/home/jpfilho/.local/lib/python3.10/site-packages/django/db/models/fields/__init__.py</span>, line 1112, in to_python</td>
    </tr>


    <tr>
      <th>Raised during:</th>
      <td>messages_api.views.MessageViewSet</td>
    </tr>

    <tr>
      <th>Python Executable:</th>
      <td>/usr/bin/python3</td>
    </tr>
    <tr>
      <th>Python Version:</th>
      <td>3.10.7</td>
    </tr>
    <tr>
      <th>Python Path:</th>
      <td><pre>[&#x27;/home/jpfilho/Documents/code-ws/python/webhook&#x27;,
 &#x27;/home/jpfilho/Documents/code-ws/python/webhook&#x27;,
 &#x27;/usr/lib/python310.zip&#x27;,
 &#x27;/usr/lib/python3.10&#x27;,
 &#x27;/usr/lib/python3.10/lib-dynload&#x27;,
 &#x27;/home/jpfilho/.local/lib/python3.10/site-packages&#x27;,
 &#x27;/usr/local/lib/python3.10/dist-packages&#x27;,
 &#x27;/usr/lib/python3/dist-packages&#x27;]</pre></td>
    </tr>
    <tr>
      <th>Server time:</th>
      <td>Sun, 21 May 2023 23:53:56 +0000</td>
    </tr>
  </table>
</div>




<div id="traceback">
  <h2>Traceback <span class="commands"><a href="#" onclick="return switchPastebinFriendly(this);">
    Switch to copy-and-paste view</a></span>
  </h2>
  <div id="browserTraceback">
    <ul class="traceback">
      
        
        <li class="frame django">
          
            <code class="fname">/home/jpfilho/.local/lib/python3.10/site-packages/django/core/handlers/exception.py</code>, line 55, in inner
          

          
            <div class="context" id="c140162384539136">
              
                <ol start="48" class="pre-context" id="pre140162384539136">
                
                  <li onclick="toggle('pre140162384539136', 'post140162384539136')"><pre></pre></li>
                
                  <li onclick="toggle('pre140162384539136', 'post140162384539136')"><pre>        return inner</pre></li>
                
                  <li onclick="toggle('pre140162384539136', 'post140162384539136')"><pre>    else:</pre></li>
                
                  <li onclick="toggle('pre140162384539136', 'post140162384539136')"><pre></pre></li>
                
                  <li onclick="toggle('pre140162384539136', 'post140162384539136')"><pre>        @wraps(get_response)</pre></li>
                
                  <li onclick="toggle('pre140162384539136', 'post140162384539136')"><pre>        def inner(request):</pre></li>
                
                  <li onclick="toggle('pre140162384539136', 'post140162384539136')"><pre>            try:</pre></li>
                
                </ol>
              
              <ol start="55" class="context-line">
                <li onclick="toggle('pre140162384539136', 'post140162384539136')"><pre>                response = get_response(request)</pre> <span>…</span></li>
              </ol>
              
                <ol start='56' class="post-context" id="post140162384539136">
                  
                  <li onclick="toggle('pre140162384539136', 'post140162384539136')"><pre>            except Exception as exc:</pre></li>
                  
                  <li onclick="toggle('pre140162384539136', 'post140162384539136')"><pre>                response = response_for_exception(request, exc)</pre></li>
                  
                  <li onclick="toggle('pre140162384539136', 'post140162384539136')"><pre>            return response</pre></li>
                  
                  <li onclick="toggle('pre140162384539136', 'post140162384539136')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140162384539136', 'post140162384539136')"><pre>        return inner</pre></li>
                  
                  <li onclick="toggle('pre140162384539136', 'post140162384539136')"><pre></pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v140162384539136">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>exc</td>
                    <td class="code"><pre>ValidationError([&#x27;o valor “[True]”  deve ser True ou False.&#x27;])</pre></td>
                  </tr>
                
                  <tr>
                    <td>get_response</td>
                    <td class="code"><pre>&lt;bound method BaseHandler._get_response of &lt;django.core.handlers.wsgi.WSGIHandler object at 0x7f7a16f33df0&gt;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>request</td>
                    <td class="code"><pre>&lt;WSGIRequest: POST &#x27;/webhook/messages/create?phone=5588988562749&amp;period=05%2F23&#x27;&gt;</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
        <li class="frame django">
          
            <code class="fname">/home/jpfilho/.local/lib/python3.10/site-packages/django/core/handlers/base.py</code>, line 197, in _get_response
          

          
            <div class="context" id="c140162348140416">
              
                <ol start="190" class="pre-context" id="pre140162348140416">
                
                  <li onclick="toggle('pre140162348140416', 'post140162348140416')"><pre></pre></li>
                
                  <li onclick="toggle('pre140162348140416', 'post140162348140416')"><pre>        if response is None:</pre></li>
                
                  <li onclick="toggle('pre140162348140416', 'post140162348140416')"><pre>            wrapped_callback = self.make_view_atomic(callback)</pre></li>
                
                  <li onclick="toggle('pre140162348140416', 'post140162348140416')"><pre>            # If it is an asynchronous view, run it in a subthread.</pre></li>
                
                  <li onclick="toggle('pre140162348140416', 'post140162348140416')"><pre>            if iscoroutinefunction(wrapped_callback):</pre></li>
                
                  <li onclick="toggle('pre140162348140416', 'post140162348140416')"><pre>                wrapped_callback = async_to_sync(wrapped_callback)</pre></li>
                
                  <li onclick="toggle('pre140162348140416', 'post140162348140416')"><pre>            try:</pre></li>
                
                </ol>
              
              <ol start="197" class="context-line">
                <li onclick="toggle('pre140162348140416', 'post140162348140416')"><pre>                response = wrapped_callback(request, *callback_args, **callback_kwargs)</pre> <span>…</span></li>
              </ol>
              
                <ol start='198' class="post-context" id="post140162348140416">
                  
                  <li onclick="toggle('pre140162348140416', 'post140162348140416')"><pre>            except Exception as e:</pre></li>
                  
                  <li onclick="toggle('pre140162348140416', 'post140162348140416')"><pre>                response = self.process_exception_by_middleware(e, request)</pre></li>
                  
                  <li onclick="toggle('pre140162348140416', 'post140162348140416')"><pre>                if response is None:</pre></li>
                  
                  <li onclick="toggle('pre140162348140416', 'post140162348140416')"><pre>                    raise</pre></li>
                  
                  <li onclick="toggle('pre140162348140416', 'post140162348140416')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140162348140416', 'post140162348140416')"><pre>        # Complain if the view returned None (a common error).</pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v140162348140416">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>callback</td>
                    <td class="code"><pre>&lt;function MessageViewSet at 0x7f7a177da560&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>callback_args</td>
                    <td class="code"><pre>()</pre></td>
                  </tr>
                
                  <tr>
                    <td>callback_kwargs</td>
                    <td class="code"><pre>{}</pre></td>
                  </tr>
                
                  <tr>
                    <td>middleware_method</td>
                    <td class="code"><pre>&lt;bound method CsrfViewMiddleware.process_view of &lt;CsrfViewMiddleware get_response=convert_exception_to_response.&lt;locals&gt;.inner&gt;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>request</td>
                    <td class="code"><pre>&lt;WSGIRequest: POST &#x27;/webhook/messages/create?phone=5588988562749&amp;period=05%2F23&#x27;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>response</td>
                    <td class="code"><pre>None</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;django.core.handlers.wsgi.WSGIHandler object at 0x7f7a16f33df0&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>wrapped_callback</td>
                    <td class="code"><pre>&lt;function MessageViewSet at 0x7f7a177da560&gt;</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
        <li class="frame django">
          
            <code class="fname">/home/jpfilho/.local/lib/python3.10/site-packages/django/views/decorators/csrf.py</code>, line 56, in wrapper_view
          

          
            <div class="context" id="c140162335557056">
              
                <ol start="49" class="pre-context" id="pre140162335557056">
                
                  <li onclick="toggle('pre140162335557056', 'post140162335557056')"><pre>def csrf_exempt(view_func):</pre></li>
                
                  <li onclick="toggle('pre140162335557056', 'post140162335557056')"><pre>    &quot;&quot;&quot;Mark a view function as being exempt from the CSRF view protection.&quot;&quot;&quot;</pre></li>
                
                  <li onclick="toggle('pre140162335557056', 'post140162335557056')"><pre></pre></li>
                
                  <li onclick="toggle('pre140162335557056', 'post140162335557056')"><pre>    # view_func.csrf_exempt = True would also work, but decorators are nicer</pre></li>
                
                  <li onclick="toggle('pre140162335557056', 'post140162335557056')"><pre>    # if they don&#x27;t have side effects, so return a new function.</pre></li>
                
                  <li onclick="toggle('pre140162335557056', 'post140162335557056')"><pre>    @wraps(view_func)</pre></li>
                
                  <li onclick="toggle('pre140162335557056', 'post140162335557056')"><pre>    def wrapper_view(*args, **kwargs):</pre></li>
                
                </ol>
              
              <ol start="56" class="context-line">
                <li onclick="toggle('pre140162335557056', 'post140162335557056')"><pre>        return view_func(*args, **kwargs)</pre> <span>…</span></li>
              </ol>
              
                <ol start='57' class="post-context" id="post140162335557056">
                  
                  <li onclick="toggle('pre140162335557056', 'post140162335557056')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140162335557056', 'post140162335557056')"><pre>    wrapper_view.csrf_exempt = True</pre></li>
                  
                  <li onclick="toggle('pre140162335557056', 'post140162335557056')"><pre>    return wrapper_view</pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v140162335557056">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>args</td>
                    <td class="code"><pre>(&lt;WSGIRequest: POST &#x27;/webhook/messages/create?phone=5588988562749&amp;period=05%2F23&#x27;&gt;,)</pre></td>
                  </tr>
                
                  <tr>
                    <td>kwargs</td>
                    <td class="code"><pre>{}</pre></td>
                  </tr>
                
                  <tr>
                    <td>view_func</td>
                    <td class="code"><pre>&lt;function MessageViewSet at 0x7f7a177da4d0&gt;</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
        <li class="frame user">
          
            <code class="fname">/home/jpfilho/.local/lib/python3.10/site-packages/rest_framework/viewsets.py</code>, line 125, in view
          

          
            <div class="context" id="c140162335729280">
              
                <ol start="118" class="pre-context" id="pre140162335729280">
                
                  <li onclick="toggle('pre140162335729280', 'post140162335729280')"><pre>                setattr(self, method, handler)</pre></li>
                
                  <li onclick="toggle('pre140162335729280', 'post140162335729280')"><pre></pre></li>
                
                  <li onclick="toggle('pre140162335729280', 'post140162335729280')"><pre>            self.request = request</pre></li>
                
                  <li onclick="toggle('pre140162335729280', 'post140162335729280')"><pre>            self.args = args</pre></li>
                
                  <li onclick="toggle('pre140162335729280', 'post140162335729280')"><pre>            self.kwargs = kwargs</pre></li>
                
                  <li onclick="toggle('pre140162335729280', 'post140162335729280')"><pre></pre></li>
                
                  <li onclick="toggle('pre140162335729280', 'post140162335729280')"><pre>            # And continue as usual</pre></li>
                
                </ol>
              
              <ol start="125" class="context-line">
                <li onclick="toggle('pre140162335729280', 'post140162335729280')"><pre>            return self.dispatch(request, *args, **kwargs)</pre> <span>…</span></li>
              </ol>
              
                <ol start='126' class="post-context" id="post140162335729280">
                  
                  <li onclick="toggle('pre140162335729280', 'post140162335729280')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140162335729280', 'post140162335729280')"><pre>        # take name and docstring from class</pre></li>
                  
                  <li onclick="toggle('pre140162335729280', 'post140162335729280')"><pre>        update_wrapper(view, cls, updated=())</pre></li>
                  
                  <li onclick="toggle('pre140162335729280', 'post140162335729280')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140162335729280', 'post140162335729280')"><pre>        # and possible attributes set by decorators</pre></li>
                  
                  <li onclick="toggle('pre140162335729280', 'post140162335729280')"><pre>        # like csrf_exempt from dispatch</pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v140162335729280">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>action</td>
                    <td class="code"><pre>&#x27;create&#x27;</pre></td>
                  </tr>
                
                  <tr>
                    <td>actions</td>
                    <td class="code"><pre>{&#x27;post&#x27;: &#x27;create&#x27;}</pre></td>
                  </tr>
                
                  <tr>
                    <td>args</td>
                    <td class="code"><pre>()</pre></td>
                  </tr>
                
                  <tr>
                    <td>cls</td>
                    <td class="code"><pre>&lt;class &#x27;messages_api.views.MessageViewSet&#x27;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>handler</td>
                    <td class="code"><pre>&lt;bound method MessageViewSet.create of &lt;messages_api.views.MessageViewSet object at 0x7f7a16322d10&gt;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>initkwargs</td>
                    <td class="code"><pre>{}</pre></td>
                  </tr>
                
                  <tr>
                    <td>kwargs</td>
                    <td class="code"><pre>{}</pre></td>
                  </tr>
                
                  <tr>
                    <td>method</td>
                    <td class="code"><pre>&#x27;post&#x27;</pre></td>
                  </tr>
                
                  <tr>
                    <td>request</td>
                    <td class="code"><pre>&lt;WSGIRequest: POST &#x27;/webhook/messages/create?phone=5588988562749&amp;period=05%2F23&#x27;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;messages_api.views.MessageViewSet object at 0x7f7a16322d10&gt;</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
        <li class="frame user">
          
            <code class="fname">/home/jpfilho/.local/lib/python3.10/site-packages/rest_framework/views.py</code>, line 509, in dispatch
          

          
            <div class="context" id="c140162348454848">
              
                <ol start="502" class="pre-context" id="pre140162348454848">
                
                  <li onclick="toggle('pre140162348454848', 'post140162348454848')"><pre>                                  self.http_method_not_allowed)</pre></li>
                
                  <li onclick="toggle('pre140162348454848', 'post140162348454848')"><pre>            else:</pre></li>
                
                  <li onclick="toggle('pre140162348454848', 'post140162348454848')"><pre>                handler = self.http_method_not_allowed</pre></li>
                
                  <li onclick="toggle('pre140162348454848', 'post140162348454848')"><pre></pre></li>
                
                  <li onclick="toggle('pre140162348454848', 'post140162348454848')"><pre>            response = handler(request, *args, **kwargs)</pre></li>
                
                  <li onclick="toggle('pre140162348454848', 'post140162348454848')"><pre></pre></li>
                
                  <li onclick="toggle('pre140162348454848', 'post140162348454848')"><pre>        except Exception as exc:</pre></li>
                
                </ol>
              
              <ol start="509" class="context-line">
                <li onclick="toggle('pre140162348454848', 'post140162348454848')"><pre>            response = self.handle_exception(exc)</pre> <span>…</span></li>
              </ol>
              
                <ol start='510' class="post-context" id="post140162348454848">
                  
                  <li onclick="toggle('pre140162348454848', 'post140162348454848')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140162348454848', 'post140162348454848')"><pre>        self.response = self.finalize_response(request, response, *args, **kwargs)</pre></li>
                  
                  <li onclick="toggle('pre140162348454848', 'post140162348454848')"><pre>        return self.response</pre></li>
                  
                  <li onclick="toggle('pre140162348454848', 'post140162348454848')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140162348454848', 'post140162348454848')"><pre>    def options(self, request, *args, **kwargs):</pre></li>
                  
                  <li onclick="toggle('pre140162348454848', 'post140162348454848')"><pre>        &quot;&quot;&quot;</pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v140162348454848">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>args</td>
                    <td class="code"><pre>()</pre></td>
                  </tr>
                
                  <tr>
                    <td>handler</td>
                    <td class="code"><pre>&lt;bound method MessageViewSet.create of &lt;messages_api.views.MessageViewSet object at 0x7f7a16322d10&gt;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>kwargs</td>
                    <td class="code"><pre>{}</pre></td>
                  </tr>
                
                  <tr>
                    <td>request</td>
                    <td class="code"><pre>&lt;rest_framework.request.Request: POST &#x27;/webhook/messages/create?phone=5588988562749&amp;period=05%2F23&#x27;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;messages_api.views.MessageViewSet object at 0x7f7a16322d10&gt;</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
        <li class="frame user">
          
            <code class="fname">/home/jpfilho/.local/lib/python3.10/site-packages/rest_framework/views.py</code>, line 469, in handle_exception
          

          
            <div class="context" id="c140162348456640">
              
                <ol start="462" class="pre-context" id="pre140162348456640">
                
                  <li onclick="toggle('pre140162348456640', 'post140162348456640')"><pre></pre></li>
                
                  <li onclick="toggle('pre140162348456640', 'post140162348456640')"><pre>        exception_handler = self.get_exception_handler()</pre></li>
                
                  <li onclick="toggle('pre140162348456640', 'post140162348456640')"><pre></pre></li>
                
                  <li onclick="toggle('pre140162348456640', 'post140162348456640')"><pre>        context = self.get_exception_handler_context()</pre></li>
                
                  <li onclick="toggle('pre140162348456640', 'post140162348456640')"><pre>        response = exception_handler(exc, context)</pre></li>
                
                  <li onclick="toggle('pre140162348456640', 'post140162348456640')"><pre></pre></li>
                
                  <li onclick="toggle('pre140162348456640', 'post140162348456640')"><pre>        if response is None:</pre></li>
                
                </ol>
              
              <ol start="469" class="context-line">
                <li onclick="toggle('pre140162348456640', 'post140162348456640')"><pre>            self.raise_uncaught_exception(exc)</pre> <span>…</span></li>
              </ol>
              
                <ol start='470' class="post-context" id="post140162348456640">
                  
                  <li onclick="toggle('pre140162348456640', 'post140162348456640')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140162348456640', 'post140162348456640')"><pre>        response.exception = True</pre></li>
                  
                  <li onclick="toggle('pre140162348456640', 'post140162348456640')"><pre>        return response</pre></li>
                  
                  <li onclick="toggle('pre140162348456640', 'post140162348456640')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140162348456640', 'post140162348456640')"><pre>    def raise_uncaught_exception(self, exc):</pre></li>
                  
                  <li onclick="toggle('pre140162348456640', 'post140162348456640')"><pre>        if settings.DEBUG:</pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v140162348456640">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>context</td>
                    <td class="code"><pre>{&#x27;args&#x27;: (),
 &#x27;kwargs&#x27;: {},
 &#x27;request&#x27;: &lt;rest_framework.request.Request: POST &#x27;/webhook/messages/create?phone=5588988562749&amp;period=05%2F23&#x27;&gt;,
 &#x27;view&#x27;: &lt;messages_api.views.MessageViewSet object at 0x7f7a16322d10&gt;}</pre></td>
                  </tr>
                
                  <tr>
                    <td>exc</td>
                    <td class="code"><pre>ValidationError([&#x27;o valor “[True]”  deve ser True ou False.&#x27;])</pre></td>
                  </tr>
                
                  <tr>
                    <td>exception_handler</td>
                    <td class="code"><pre>&lt;function exception_handler at 0x7f7a1779c700&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>response</td>
                    <td class="code"><pre>None</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;messages_api.views.MessageViewSet object at 0x7f7a16322d10&gt;</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
        <li class="frame user">
          
            <code class="fname">/home/jpfilho/.local/lib/python3.10/site-packages/rest_framework/views.py</code>, line 480, in raise_uncaught_exception
          

          
            <div class="context" id="c140162347743360">
              
                <ol start="473" class="pre-context" id="pre140162347743360">
                
                  <li onclick="toggle('pre140162347743360', 'post140162347743360')"><pre></pre></li>
                
                  <li onclick="toggle('pre140162347743360', 'post140162347743360')"><pre>    def raise_uncaught_exception(self, exc):</pre></li>
                
                  <li onclick="toggle('pre140162347743360', 'post140162347743360')"><pre>        if settings.DEBUG:</pre></li>
                
                  <li onclick="toggle('pre140162347743360', 'post140162347743360')"><pre>            request = self.request</pre></li>
                
                  <li onclick="toggle('pre140162347743360', 'post140162347743360')"><pre>            renderer_format = getattr(request.accepted_renderer, &#x27;format&#x27;)</pre></li>
                
                  <li onclick="toggle('pre140162347743360', 'post140162347743360')"><pre>            use_plaintext_traceback = renderer_format not in (&#x27;html&#x27;, &#x27;api&#x27;, &#x27;admin&#x27;)</pre></li>
                
                  <li onclick="toggle('pre140162347743360', 'post140162347743360')"><pre>            request.force_plaintext_errors(use_plaintext_traceback)</pre></li>
                
                </ol>
              
              <ol start="480" class="context-line">
                <li onclick="toggle('pre140162347743360', 'post140162347743360')"><pre>        raise exc</pre> <span>…</span></li>
              </ol>
              
                <ol start='481' class="post-context" id="post140162347743360">
                  
                  <li onclick="toggle('pre140162347743360', 'post140162347743360')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140162347743360', 'post140162347743360')"><pre>    # Note: Views are made CSRF exempt from within `as_view` as to prevent</pre></li>
                  
                  <li onclick="toggle('pre140162347743360', 'post140162347743360')"><pre>    # accidental removal of this exemption in cases where `dispatch` needs to</pre></li>
                  
                  <li onclick="toggle('pre140162347743360', 'post140162347743360')"><pre>    # be overridden.</pre></li>
                  
                  <li onclick="toggle('pre140162347743360', 'post140162347743360')"><pre>    def dispatch(self, request, *args, **kwargs):</pre></li>
                  
                  <li onclick="toggle('pre140162347743360', 'post140162347743360')"><pre>        &quot;&quot;&quot;</pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v140162347743360">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>exc</td>
                    <td class="code"><pre>ValidationError([&#x27;o valor “[True]”  deve ser True ou False.&#x27;])</pre></td>
                  </tr>
                
                  <tr>
                    <td>renderer_format</td>
                    <td class="code"><pre>&#x27;json&#x27;</pre></td>
                  </tr>
                
                  <tr>
                    <td>request</td>
                    <td class="code"><pre>&lt;rest_framework.request.Request: POST &#x27;/webhook/messages/create?phone=5588988562749&amp;period=05%2F23&#x27;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;messages_api.views.MessageViewSet object at 0x7f7a16322d10&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>use_plaintext_traceback</td>
                    <td class="code"><pre>True</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
        <li class="frame user">
          
            <code class="fname">/home/jpfilho/.local/lib/python3.10/site-packages/rest_framework/views.py</code>, line 506, in dispatch
          

          
            <div class="context" id="c140162347743232">
              
                <ol start="499" class="pre-context" id="pre140162347743232">
                
                  <li onclick="toggle('pre140162347743232', 'post140162347743232')"><pre>            # Get the appropriate handler method</pre></li>
                
                  <li onclick="toggle('pre140162347743232', 'post140162347743232')"><pre>            if request.method.lower() in self.http_method_names:</pre></li>
                
                  <li onclick="toggle('pre140162347743232', 'post140162347743232')"><pre>                handler = getattr(self, request.method.lower(),</pre></li>
                
                  <li onclick="toggle('pre140162347743232', 'post140162347743232')"><pre>                                  self.http_method_not_allowed)</pre></li>
                
                  <li onclick="toggle('pre140162347743232', 'post140162347743232')"><pre>            else:</pre></li>
                
                  <li onclick="toggle('pre140162347743232', 'post140162347743232')"><pre>                handler = self.http_method_not_allowed</pre></li>
                
                  <li onclick="toggle('pre140162347743232', 'post140162347743232')"><pre></pre></li>
                
                </ol>
              
              <ol start="506" class="context-line">
                <li onclick="toggle('pre140162347743232', 'post140162347743232')"><pre>            response = handler(request, *args, **kwargs)</pre> <span>…</span></li>
              </ol>
              
                <ol start='507' class="post-context" id="post140162347743232">
                  
                  <li onclick="toggle('pre140162347743232', 'post140162347743232')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140162347743232', 'post140162347743232')"><pre>        except Exception as exc:</pre></li>
                  
                  <li onclick="toggle('pre140162347743232', 'post140162347743232')"><pre>            response = self.handle_exception(exc)</pre></li>
                  
                  <li onclick="toggle('pre140162347743232', 'post140162347743232')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140162347743232', 'post140162347743232')"><pre>        self.response = self.finalize_response(request, response, *args, **kwargs)</pre></li>
                  
                  <li onclick="toggle('pre140162347743232', 'post140162347743232')"><pre>        return self.response</pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v140162347743232">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>args</td>
                    <td class="code"><pre>()</pre></td>
                  </tr>
                
                  <tr>
                    <td>handler</td>
                    <td class="code"><pre>&lt;bound method MessageViewSet.create of &lt;messages_api.views.MessageViewSet object at 0x7f7a16322d10&gt;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>kwargs</td>
                    <td class="code"><pre>{}</pre></td>
                  </tr>
                
                  <tr>
                    <td>request</td>
                    <td class="code"><pre>&lt;rest_framework.request.Request: POST &#x27;/webhook/messages/create?phone=5588988562749&amp;period=05%2F23&#x27;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;messages_api.views.MessageViewSet object at 0x7f7a16322d10&gt;</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
        <li class="frame user">
          
            <code class="fname">/home/jpfilho/Documents/code-ws/python/webhook/messages_api/views.py</code>, line 153, in create
          

          
            <div class="context" id="c140162335560768">
              
                <ol start="146" class="pre-context" id="pre140162335560768">
                
                  <li onclick="toggle('pre140162335560768', 'post140162335560768')"><pre>        except ValueError:</pre></li>
                
                  <li onclick="toggle('pre140162335560768', 'post140162335560768')"><pre>            return Response({&#x27;error&#x27;: &#x27;Invalid period format, should be YYYY-MM-DD or MM-YY.&#x27;}, status=400)</pre></li>
                
                  <li onclick="toggle('pre140162335560768', 'post140162335560768')"><pre></pre></li>
                
                  <li onclick="toggle('pre140162335560768', 'post140162335560768')"><pre>        if len(period) == 5:</pre></li>
                
                  <li onclick="toggle('pre140162335560768', 'post140162335560768')"><pre>            period = dt.now().strftime(</pre></li>
                
                  <li onclick="toggle('pre140162335560768', 'post140162335560768')"><pre>                &#x27;%Y-&#x27;) + period[-2:] + &#x27;-&#x27; + period[:2] + &#x27; 00:00:00&#x27;</pre></li>
                
                  <li onclick="toggle('pre140162335560768', 'post140162335560768')"><pre>        try:</pre></li>
                
                </ol>
              
              <ol start="153" class="context-line">
                <li onclick="toggle('pre140162335560768', 'post140162335560768')"><pre>            message = Message.objects.create(</pre> <span>…</span></li>
              </ol>
              
                <ol start='154' class="post-context" id="post140162335560768">
                  
                  <li onclick="toggle('pre140162335560768', 'post140162335560768')"><pre>                contact_id=contact_id,</pre></li>
                  
                  <li onclick="toggle('pre140162335560768', 'post140162335560768')"><pre>                contact_number=contact_number,</pre></li>
                  
                  <li onclick="toggle('pre140162335560768', 'post140162335560768')"><pre>                period=period,</pre></li>
                  
                  <li onclick="toggle('pre140162335560768', 'post140162335560768')"><pre>                timestamp=timestamp,</pre></li>
                  
                  <li onclick="toggle('pre140162335560768', 'post140162335560768')"><pre>                status=status,</pre></li>
                  
                  <li onclick="toggle('pre140162335560768', 'post140162335560768')"><pre>                message_id=message_id,</pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v140162335560768">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>args</td>
                    <td class="code"><pre>()</pre></td>
                  </tr>
                
                  <tr>
                    <td>contact_id</td>
                    <td class="code"><pre>&#x27;79db7607-6088-44c1-a010-ed4ef39d4f37&#x27;</pre></td>
                  </tr>
                
                  <tr>
                    <td>contact_number</td>
                    <td class="code"><pre>&#x27;5588988562749&#x27;</pre></td>
                  </tr>
                
                  <tr>
                    <td>isFromMe</td>
                    <td class="code"><pre>[True]</pre></td>
                  </tr>
                
                  <tr>
                    <td>kwargs</td>
                    <td class="code"><pre>{}</pre></td>
                  </tr>
                
                  <tr>
                    <td>message_id</td>
                    <td class="code"><pre>&#x27;c53cbcbe-e9ba-4ff7-9755-dae13819cd7c&#x27;</pre></td>
                  </tr>
                
                  <tr>
                    <td>message_type</td>
                    <td class="code"><pre>&#x27;chat&#x27;</pre></td>
                  </tr>
                
                  <tr>
                    <td>period</td>
                    <td class="code"><pre>&#x27;2023-05-01&#x27;</pre></td>
                  </tr>
                
                  <tr>
                    <td>request</td>
                    <td class="code"><pre>&lt;rest_framework.request.Request: POST &#x27;/webhook/messages/create?phone=5588988562749&amp;period=05%2F23&#x27;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;messages_api.views.MessageViewSet object at 0x7f7a16322d10&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>status</td>
                    <td class="code"><pre>0</pre></td>
                  </tr>
                
                  <tr>
                    <td>ticket_id</td>
                    <td class="code"><pre>&#x27;e5a453e9-6cb1-476e-b416-3b334b0bc61a&#x27;</pre></td>
                  </tr>
                
                  <tr>
                    <td>timestamp</td>
                    <td class="code"><pre>&#x27;2023-05-21T23:53:50.711Z&#x27;</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
        <li class="frame django">
          
            <code class="fname">/home/jpfilho/.local/lib/python3.10/site-packages/django/db/models/manager.py</code>, line 87, in manager_method
          

          
            <div class="context" id="c140162399118592">
              
                <ol start="80" class="pre-context" id="pre140162399118592">
                
                  <li onclick="toggle('pre140162399118592', 'post140162399118592')"><pre>        return []</pre></li>
                
                  <li onclick="toggle('pre140162399118592', 'post140162399118592')"><pre></pre></li>
                
                  <li onclick="toggle('pre140162399118592', 'post140162399118592')"><pre>    @classmethod</pre></li>
                
                  <li onclick="toggle('pre140162399118592', 'post140162399118592')"><pre>    def _get_queryset_methods(cls, queryset_class):</pre></li>
                
                  <li onclick="toggle('pre140162399118592', 'post140162399118592')"><pre>        def create_method(name, method):</pre></li>
                
                  <li onclick="toggle('pre140162399118592', 'post140162399118592')"><pre>            @wraps(method)</pre></li>
                
                  <li onclick="toggle('pre140162399118592', 'post140162399118592')"><pre>            def manager_method(self, *args, **kwargs):</pre></li>
                
                </ol>
              
              <ol start="87" class="context-line">
                <li onclick="toggle('pre140162399118592', 'post140162399118592')"><pre>                return getattr(self.get_queryset(), name)(*args, **kwargs)</pre> <span>…</span></li>
              </ol>
              
                <ol start='88' class="post-context" id="post140162399118592">
                  
                  <li onclick="toggle('pre140162399118592', 'post140162399118592')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140162399118592', 'post140162399118592')"><pre>            return manager_method</pre></li>
                  
                  <li onclick="toggle('pre140162399118592', 'post140162399118592')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140162399118592', 'post140162399118592')"><pre>        new_methods = {}</pre></li>
                  
                  <li onclick="toggle('pre140162399118592', 'post140162399118592')"><pre>        for name, method in inspect.getmembers(</pre></li>
                  
                  <li onclick="toggle('pre140162399118592', 'post140162399118592')"><pre>            queryset_class, predicate=inspect.isfunction</pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v140162399118592">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>args</td>
                    <td class="code"><pre>()</pre></td>
                  </tr>
                
                  <tr>
                    <td>kwargs</td>
                    <td class="code"><pre>{&#x27;contact_id&#x27;: &#x27;79db7607-6088-44c1-a010-ed4ef39d4f37&#x27;,
 &#x27;contact_number&#x27;: &#x27;5588988562749&#x27;,
 &#x27;is_from_me&#x27;: [True],
 &#x27;message_id&#x27;: &#x27;c53cbcbe-e9ba-4ff7-9755-dae13819cd7c&#x27;,
 &#x27;message_type&#x27;: &#x27;chat&#x27;,
 &#x27;period&#x27;: &#x27;2023-05-01&#x27;,
 &#x27;retries&#x27;: 0,
 &#x27;status&#x27;: 0,
 &#x27;ticket_service_id&#x27;: &#x27;e5a453e9-6cb1-476e-b416-3b334b0bc61a&#x27;,
 &#x27;timestamp&#x27;: &#x27;2023-05-21T23:53:50.711Z&#x27;}</pre></td>
                  </tr>
                
                  <tr>
                    <td>name</td>
                    <td class="code"><pre>&#x27;create&#x27;</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;django.db.models.manager.Manager object at 0x7f7a183f4280&gt;</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
        <li class="frame django">
          
            <code class="fname">/home/jpfilho/.local/lib/python3.10/site-packages/django/db/models/query.py</code>, line 658, in create
          

          
            <div class="context" id="c140162335492864">
              
                <ol start="651" class="pre-context" id="pre140162335492864">
                
                  <li onclick="toggle('pre140162335492864', 'post140162335492864')"><pre>    def create(self, **kwargs):</pre></li>
                
                  <li onclick="toggle('pre140162335492864', 'post140162335492864')"><pre>        &quot;&quot;&quot;</pre></li>
                
                  <li onclick="toggle('pre140162335492864', 'post140162335492864')"><pre>        Create a new object with the given kwargs, saving it to the database</pre></li>
                
                  <li onclick="toggle('pre140162335492864', 'post140162335492864')"><pre>        and returning the created object.</pre></li>
                
                  <li onclick="toggle('pre140162335492864', 'post140162335492864')"><pre>        &quot;&quot;&quot;</pre></li>
                
                  <li onclick="toggle('pre140162335492864', 'post140162335492864')"><pre>        obj = self.model(**kwargs)</pre></li>
                
                  <li onclick="toggle('pre140162335492864', 'post140162335492864')"><pre>        self._for_write = True</pre></li>
                
                </ol>
              
              <ol start="658" class="context-line">
                <li onclick="toggle('pre140162335492864', 'post140162335492864')"><pre>        obj.save(force_insert=True, using=self.db)</pre> <span>…</span></li>
              </ol>
              
                <ol start='659' class="post-context" id="post140162335492864">
                  
                  <li onclick="toggle('pre140162335492864', 'post140162335492864')"><pre>        return obj</pre></li>
                  
                  <li onclick="toggle('pre140162335492864', 'post140162335492864')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140162335492864', 'post140162335492864')"><pre>    async def acreate(self, **kwargs):</pre></li>
                  
                  <li onclick="toggle('pre140162335492864', 'post140162335492864')"><pre>        return await sync_to_async(self.create)(**kwargs)</pre></li>
                  
                  <li onclick="toggle('pre140162335492864', 'post140162335492864')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140162335492864', 'post140162335492864')"><pre>    def _prepare_for_bulk_create(self, objs):</pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v140162335492864">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>kwargs</td>
                    <td class="code"><pre>{&#x27;contact_id&#x27;: &#x27;79db7607-6088-44c1-a010-ed4ef39d4f37&#x27;,
 &#x27;contact_number&#x27;: &#x27;5588988562749&#x27;,
 &#x27;is_from_me&#x27;: [True],
 &#x27;message_id&#x27;: &#x27;c53cbcbe-e9ba-4ff7-9755-dae13819cd7c&#x27;,
 &#x27;message_type&#x27;: &#x27;chat&#x27;,
 &#x27;period&#x27;: &#x27;2023-05-01&#x27;,
 &#x27;retries&#x27;: 0,
 &#x27;status&#x27;: 0,
 &#x27;ticket_service_id&#x27;: &#x27;e5a453e9-6cb1-476e-b416-3b334b0bc61a&#x27;,
 &#x27;timestamp&#x27;: &#x27;2023-05-21T23:53:50.711Z&#x27;}</pre></td>
                  </tr>
                
                  <tr>
                    <td>obj</td>
                    <td class="code"><pre>&lt;Message: 5588988562749 - 2023-05-01 - 0&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;QuerySet []&gt;</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
        <li class="frame django">
          
            <code class="fname">/home/jpfilho/.local/lib/python3.10/site-packages/django/db/models/base.py</code>, line 814, in save
          

          
            <div class="context" id="c140161911379648">
              
                <ol start="807" class="pre-context" id="pre140161911379648">
                
                  <li onclick="toggle('pre140161911379648', 'post140161911379648')"><pre>            for field in self._meta.concrete_fields:</pre></li>
                
                  <li onclick="toggle('pre140161911379648', 'post140161911379648')"><pre>                if not field.primary_key and not hasattr(field, &quot;through&quot;):</pre></li>
                
                  <li onclick="toggle('pre140161911379648', 'post140161911379648')"><pre>                    field_names.add(field.attname)</pre></li>
                
                  <li onclick="toggle('pre140161911379648', 'post140161911379648')"><pre>            loaded_fields = field_names.difference(deferred_fields)</pre></li>
                
                  <li onclick="toggle('pre140161911379648', 'post140161911379648')"><pre>            if loaded_fields:</pre></li>
                
                  <li onclick="toggle('pre140161911379648', 'post140161911379648')"><pre>                update_fields = frozenset(loaded_fields)</pre></li>
                
                  <li onclick="toggle('pre140161911379648', 'post140161911379648')"><pre></pre></li>
                
                </ol>
              
              <ol start="814" class="context-line">
                <li onclick="toggle('pre140161911379648', 'post140161911379648')"><pre>        self.save_base(</pre> <span>…</span></li>
              </ol>
              
                <ol start='815' class="post-context" id="post140161911379648">
                  
                  <li onclick="toggle('pre140161911379648', 'post140161911379648')"><pre>            using=using,</pre></li>
                  
                  <li onclick="toggle('pre140161911379648', 'post140161911379648')"><pre>            force_insert=force_insert,</pre></li>
                  
                  <li onclick="toggle('pre140161911379648', 'post140161911379648')"><pre>            force_update=force_update,</pre></li>
                  
                  <li onclick="toggle('pre140161911379648', 'post140161911379648')"><pre>            update_fields=update_fields,</pre></li>
                  
                  <li onclick="toggle('pre140161911379648', 'post140161911379648')"><pre>        )</pre></li>
                  
                  <li onclick="toggle('pre140161911379648', 'post140161911379648')"><pre></pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v140161911379648">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>deferred_fields</td>
                    <td class="code"><pre>set()</pre></td>
                  </tr>
                
                  <tr>
                    <td>force_insert</td>
                    <td class="code"><pre>True</pre></td>
                  </tr>
                
                  <tr>
                    <td>force_update</td>
                    <td class="code"><pre>False</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;Message: 5588988562749 - 2023-05-01 - 0&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>update_fields</td>
                    <td class="code"><pre>None</pre></td>
                  </tr>
                
                  <tr>
                    <td>using</td>
                    <td class="code"><pre>&#x27;default&#x27;</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
        <li class="frame django">
          
            <code class="fname">/home/jpfilho/.local/lib/python3.10/site-packages/django/db/models/base.py</code>, line 877, in save_base
          

          
            <div class="context" id="c140162335558016">
              
                <ol start="870" class="pre-context" id="pre140162335558016">
                
                  <li onclick="toggle('pre140162335558016', 'post140162335558016')"><pre>            context_manager = transaction.atomic(using=using, savepoint=False)</pre></li>
                
                  <li onclick="toggle('pre140162335558016', 'post140162335558016')"><pre>        else:</pre></li>
                
                  <li onclick="toggle('pre140162335558016', 'post140162335558016')"><pre>            context_manager = transaction.mark_for_rollback_on_error(using=using)</pre></li>
                
                  <li onclick="toggle('pre140162335558016', 'post140162335558016')"><pre>        with context_manager:</pre></li>
                
                  <li onclick="toggle('pre140162335558016', 'post140162335558016')"><pre>            parent_inserted = False</pre></li>
                
                  <li onclick="toggle('pre140162335558016', 'post140162335558016')"><pre>            if not raw:</pre></li>
                
                  <li onclick="toggle('pre140162335558016', 'post140162335558016')"><pre>                parent_inserted = self._save_parents(cls, using, update_fields)</pre></li>
                
                </ol>
              
              <ol start="877" class="context-line">
                <li onclick="toggle('pre140162335558016', 'post140162335558016')"><pre>            updated = self._save_table(</pre> <span>…</span></li>
              </ol>
              
                <ol start='878' class="post-context" id="post140162335558016">
                  
                  <li onclick="toggle('pre140162335558016', 'post140162335558016')"><pre>                raw,</pre></li>
                  
                  <li onclick="toggle('pre140162335558016', 'post140162335558016')"><pre>                cls,</pre></li>
                  
                  <li onclick="toggle('pre140162335558016', 'post140162335558016')"><pre>                force_insert or parent_inserted,</pre></li>
                  
                  <li onclick="toggle('pre140162335558016', 'post140162335558016')"><pre>                force_update,</pre></li>
                  
                  <li onclick="toggle('pre140162335558016', 'post140162335558016')"><pre>                using,</pre></li>
                  
                  <li onclick="toggle('pre140162335558016', 'post140162335558016')"><pre>                update_fields,</pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v140162335558016">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>cls</td>
                    <td class="code"><pre>&lt;class &#x27;messages_api.models.Message&#x27;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>context_manager</td>
                    <td class="code"><pre>&lt;contextlib._GeneratorContextManager object at 0x7f7a16354130&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>force_insert</td>
                    <td class="code"><pre>True</pre></td>
                  </tr>
                
                  <tr>
                    <td>force_update</td>
                    <td class="code"><pre>False</pre></td>
                  </tr>
                
                  <tr>
                    <td>meta</td>
                    <td class="code"><pre>&lt;Options for Message&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>origin</td>
                    <td class="code"><pre>&lt;class &#x27;messages_api.models.Message&#x27;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>parent_inserted</td>
                    <td class="code"><pre>False</pre></td>
                  </tr>
                
                  <tr>
                    <td>raw</td>
                    <td class="code"><pre>False</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;Message: 5588988562749 - 2023-05-01 - 0&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>update_fields</td>
                    <td class="code"><pre>None</pre></td>
                  </tr>
                
                  <tr>
                    <td>using</td>
                    <td class="code"><pre>&#x27;default&#x27;</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
        <li class="frame django">
          
            <code class="fname">/home/jpfilho/.local/lib/python3.10/site-packages/django/db/models/base.py</code>, line 1020, in _save_table
          

          
            <div class="context" id="c140162335564928">
              
                <ol start="1013" class="pre-context" id="pre140162335564928">
                
                  <li onclick="toggle('pre140162335564928', 'post140162335564928')"><pre>                    )[&quot;_order__max&quot;]</pre></li>
                
                  <li onclick="toggle('pre140162335564928', 'post140162335564928')"><pre>                )</pre></li>
                
                  <li onclick="toggle('pre140162335564928', 'post140162335564928')"><pre>            fields = meta.local_concrete_fields</pre></li>
                
                  <li onclick="toggle('pre140162335564928', 'post140162335564928')"><pre>            if not pk_set:</pre></li>
                
                  <li onclick="toggle('pre140162335564928', 'post140162335564928')"><pre>                fields = [f for f in fields if f is not meta.auto_field]</pre></li>
                
                  <li onclick="toggle('pre140162335564928', 'post140162335564928')"><pre></pre></li>
                
                  <li onclick="toggle('pre140162335564928', 'post140162335564928')"><pre>            returning_fields = meta.db_returning_fields</pre></li>
                
                </ol>
              
              <ol start="1020" class="context-line">
                <li onclick="toggle('pre140162335564928', 'post140162335564928')"><pre>            results = self._do_insert(</pre> <span>…</span></li>
              </ol>
              
                <ol start='1021' class="post-context" id="post140162335564928">
                  
                  <li onclick="toggle('pre140162335564928', 'post140162335564928')"><pre>                cls._base_manager, using, fields, returning_fields, raw</pre></li>
                  
                  <li onclick="toggle('pre140162335564928', 'post140162335564928')"><pre>            )</pre></li>
                  
                  <li onclick="toggle('pre140162335564928', 'post140162335564928')"><pre>            if results:</pre></li>
                  
                  <li onclick="toggle('pre140162335564928', 'post140162335564928')"><pre>                for value, field in zip(results[0], returning_fields):</pre></li>
                  
                  <li onclick="toggle('pre140162335564928', 'post140162335564928')"><pre>                    setattr(self, field.attname, value)</pre></li>
                  
                  <li onclick="toggle('pre140162335564928', 'post140162335564928')"><pre>        return updated</pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v140162335564928">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>cls</td>
                    <td class="code"><pre>&lt;class &#x27;messages_api.models.Message&#x27;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>fields</td>
                    <td class="code"><pre>(&lt;django.db.models.fields.CharField: message_id&gt;,
 &lt;django.db.models.fields.CharField: contact_id&gt;,
 &lt;django.db.models.fields.CharField: contact_number&gt;,
 &lt;django.db.models.fields.DateField: period&gt;,
 &lt;django.db.models.fields.DateTimeField: timestamp&gt;,
 &lt;django.db.models.fields.IntegerField: status&gt;,
 &lt;django.db.models.fields.CharField: ticket_service_id&gt;,
 &lt;django.db.models.fields.CharField: message_type&gt;,
 &lt;django.db.models.fields.BooleanField: is_from_me&gt;,
 &lt;django.db.models.fields.IntegerField: retries&gt;)</pre></td>
                  </tr>
                
                  <tr>
                    <td>force_insert</td>
                    <td class="code"><pre>True</pre></td>
                  </tr>
                
                  <tr>
                    <td>force_update</td>
                    <td class="code"><pre>False</pre></td>
                  </tr>
                
                  <tr>
                    <td>meta</td>
                    <td class="code"><pre>&lt;Options for Message&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>non_pks</td>
                    <td class="code"><pre>[&lt;django.db.models.fields.CharField: contact_id&gt;,
 &lt;django.db.models.fields.CharField: contact_number&gt;,
 &lt;django.db.models.fields.DateField: period&gt;,
 &lt;django.db.models.fields.DateTimeField: timestamp&gt;,
 &lt;django.db.models.fields.IntegerField: status&gt;,
 &lt;django.db.models.fields.CharField: ticket_service_id&gt;,
 &lt;django.db.models.fields.CharField: message_type&gt;,
 &lt;django.db.models.fields.BooleanField: is_from_me&gt;,
 &lt;django.db.models.fields.IntegerField: retries&gt;]</pre></td>
                  </tr>
                
                  <tr>
                    <td>pk_set</td>
                    <td class="code"><pre>True</pre></td>
                  </tr>
                
                  <tr>
                    <td>pk_val</td>
                    <td class="code"><pre>&#x27;c53cbcbe-e9ba-4ff7-9755-dae13819cd7c&#x27;</pre></td>
                  </tr>
                
                  <tr>
                    <td>raw</td>
                    <td class="code"><pre>False</pre></td>
                  </tr>
                
                  <tr>
                    <td>returning_fields</td>
                    <td class="code"><pre>[]</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;Message: 5588988562749 - 2023-05-01 - 0&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>update_fields</td>
                    <td class="code"><pre>None</pre></td>
                  </tr>
                
                  <tr>
                    <td>updated</td>
                    <td class="code"><pre>False</pre></td>
                  </tr>
                
                  <tr>
                    <td>using</td>
                    <td class="code"><pre>&#x27;default&#x27;</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
        <li class="frame django">
          
            <code class="fname">/home/jpfilho/.local/lib/python3.10/site-packages/django/db/models/base.py</code>, line 1061, in _do_insert
          

          
            <div class="context" id="c140162335598464">
              
                <ol start="1054" class="pre-context" id="pre140162335598464">
                
                  <li onclick="toggle('pre140162335598464', 'post140162335598464')"><pre>        return filtered._update(values) &gt; 0</pre></li>
                
                  <li onclick="toggle('pre140162335598464', 'post140162335598464')"><pre></pre></li>
                
                  <li onclick="toggle('pre140162335598464', 'post140162335598464')"><pre>    def _do_insert(self, manager, using, fields, returning_fields, raw):</pre></li>
                
                  <li onclick="toggle('pre140162335598464', 'post140162335598464')"><pre>        &quot;&quot;&quot;</pre></li>
                
                  <li onclick="toggle('pre140162335598464', 'post140162335598464')"><pre>        Do an INSERT. If returning_fields is defined then this method should</pre></li>
                
                  <li onclick="toggle('pre140162335598464', 'post140162335598464')"><pre>        return the newly created data for the model.</pre></li>
                
                  <li onclick="toggle('pre140162335598464', 'post140162335598464')"><pre>        &quot;&quot;&quot;</pre></li>
                
                </ol>
              
              <ol start="1061" class="context-line">
                <li onclick="toggle('pre140162335598464', 'post140162335598464')"><pre>        return manager._insert(</pre> <span>…</span></li>
              </ol>
              
                <ol start='1062' class="post-context" id="post140162335598464">
                  
                  <li onclick="toggle('pre140162335598464', 'post140162335598464')"><pre>            [self],</pre></li>
                  
                  <li onclick="toggle('pre140162335598464', 'post140162335598464')"><pre>            fields=fields,</pre></li>
                  
                  <li onclick="toggle('pre140162335598464', 'post140162335598464')"><pre>            returning_fields=returning_fields,</pre></li>
                  
                  <li onclick="toggle('pre140162335598464', 'post140162335598464')"><pre>            using=using,</pre></li>
                  
                  <li onclick="toggle('pre140162335598464', 'post140162335598464')"><pre>            raw=raw,</pre></li>
                  
                  <li onclick="toggle('pre140162335598464', 'post140162335598464')"><pre>        )</pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v140162335598464">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>fields</td>
                    <td class="code"><pre>(&lt;django.db.models.fields.CharField: message_id&gt;,
 &lt;django.db.models.fields.CharField: contact_id&gt;,
 &lt;django.db.models.fields.CharField: contact_number&gt;,
 &lt;django.db.models.fields.DateField: period&gt;,
 &lt;django.db.models.fields.DateTimeField: timestamp&gt;,
 &lt;django.db.models.fields.IntegerField: status&gt;,
 &lt;django.db.models.fields.CharField: ticket_service_id&gt;,
 &lt;django.db.models.fields.CharField: message_type&gt;,
 &lt;django.db.models.fields.BooleanField: is_from_me&gt;,
 &lt;django.db.models.fields.IntegerField: retries&gt;)</pre></td>
                  </tr>
                
                  <tr>
                    <td>manager</td>
                    <td class="code"><pre>&lt;django.db.models.manager.Manager object at 0x7f7a163543a0&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>raw</td>
                    <td class="code"><pre>False</pre></td>
                  </tr>
                
                  <tr>
                    <td>returning_fields</td>
                    <td class="code"><pre>[]</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;Message: 5588988562749 - 2023-05-01 - 0&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>using</td>
                    <td class="code"><pre>&#x27;default&#x27;</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
        <li class="frame django">
          
            <code class="fname">/home/jpfilho/.local/lib/python3.10/site-packages/django/db/models/manager.py</code>, line 87, in manager_method
          

          
            <div class="context" id="c140161911381184">
              
                <ol start="80" class="pre-context" id="pre140161911381184">
                
                  <li onclick="toggle('pre140161911381184', 'post140161911381184')"><pre>        return []</pre></li>
                
                  <li onclick="toggle('pre140161911381184', 'post140161911381184')"><pre></pre></li>
                
                  <li onclick="toggle('pre140161911381184', 'post140161911381184')"><pre>    @classmethod</pre></li>
                
                  <li onclick="toggle('pre140161911381184', 'post140161911381184')"><pre>    def _get_queryset_methods(cls, queryset_class):</pre></li>
                
                  <li onclick="toggle('pre140161911381184', 'post140161911381184')"><pre>        def create_method(name, method):</pre></li>
                
                  <li onclick="toggle('pre140161911381184', 'post140161911381184')"><pre>            @wraps(method)</pre></li>
                
                  <li onclick="toggle('pre140161911381184', 'post140161911381184')"><pre>            def manager_method(self, *args, **kwargs):</pre></li>
                
                </ol>
              
              <ol start="87" class="context-line">
                <li onclick="toggle('pre140161911381184', 'post140161911381184')"><pre>                return getattr(self.get_queryset(), name)(*args, **kwargs)</pre> <span>…</span></li>
              </ol>
              
                <ol start='88' class="post-context" id="post140161911381184">
                  
                  <li onclick="toggle('pre140161911381184', 'post140161911381184')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140161911381184', 'post140161911381184')"><pre>            return manager_method</pre></li>
                  
                  <li onclick="toggle('pre140161911381184', 'post140161911381184')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140161911381184', 'post140161911381184')"><pre>        new_methods = {}</pre></li>
                  
                  <li onclick="toggle('pre140161911381184', 'post140161911381184')"><pre>        for name, method in inspect.getmembers(</pre></li>
                  
                  <li onclick="toggle('pre140161911381184', 'post140161911381184')"><pre>            queryset_class, predicate=inspect.isfunction</pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v140161911381184">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>args</td>
                    <td class="code"><pre>([&lt;Message: 5588988562749 - 2023-05-01 - 0&gt;],)</pre></td>
                  </tr>
                
                  <tr>
                    <td>kwargs</td>
                    <td class="code"><pre>{&#x27;fields&#x27;: (&lt;django.db.models.fields.CharField: message_id&gt;,
            &lt;django.db.models.fields.CharField: contact_id&gt;,
            &lt;django.db.models.fields.CharField: contact_number&gt;,
            &lt;django.db.models.fields.DateField: period&gt;,
            &lt;django.db.models.fields.DateTimeField: timestamp&gt;,
            &lt;django.db.models.fields.IntegerField: status&gt;,
            &lt;django.db.models.fields.CharField: ticket_service_id&gt;,
            &lt;django.db.models.fields.CharField: message_type&gt;,
            &lt;django.db.models.fields.BooleanField: is_from_me&gt;,
            &lt;django.db.models.fields.IntegerField: retries&gt;),
 &#x27;raw&#x27;: False,
 &#x27;returning_fields&#x27;: [],
 &#x27;using&#x27;: &#x27;default&#x27;}</pre></td>
                  </tr>
                
                  <tr>
                    <td>name</td>
                    <td class="code"><pre>&#x27;_insert&#x27;</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;django.db.models.manager.Manager object at 0x7f7a163543a0&gt;</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
        <li class="frame django">
          
            <code class="fname">/home/jpfilho/.local/lib/python3.10/site-packages/django/db/models/query.py</code>, line 1805, in _insert
          

          
            <div class="context" id="c140161911432448">
              
                <ol start="1798" class="pre-context" id="pre140161911432448">
                
                  <li onclick="toggle('pre140161911432448', 'post140161911432448')"><pre>        query = sql.InsertQuery(</pre></li>
                
                  <li onclick="toggle('pre140161911432448', 'post140161911432448')"><pre>            self.model,</pre></li>
                
                  <li onclick="toggle('pre140161911432448', 'post140161911432448')"><pre>            on_conflict=on_conflict,</pre></li>
                
                  <li onclick="toggle('pre140161911432448', 'post140161911432448')"><pre>            update_fields=update_fields,</pre></li>
                
                  <li onclick="toggle('pre140161911432448', 'post140161911432448')"><pre>            unique_fields=unique_fields,</pre></li>
                
                  <li onclick="toggle('pre140161911432448', 'post140161911432448')"><pre>        )</pre></li>
                
                  <li onclick="toggle('pre140161911432448', 'post140161911432448')"><pre>        query.insert_values(fields, objs, raw=raw)</pre></li>
                
                </ol>
              
              <ol start="1805" class="context-line">
                <li onclick="toggle('pre140161911432448', 'post140161911432448')"><pre>        return query.get_compiler(using=using).execute_sql(returning_fields)</pre> <span>…</span></li>
              </ol>
              
                <ol start='1806' class="post-context" id="post140161911432448">
                  
                  <li onclick="toggle('pre140161911432448', 'post140161911432448')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140161911432448', 'post140161911432448')"><pre>    _insert.alters_data = True</pre></li>
                  
                  <li onclick="toggle('pre140161911432448', 'post140161911432448')"><pre>    _insert.queryset_only = False</pre></li>
                  
                  <li onclick="toggle('pre140161911432448', 'post140161911432448')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140161911432448', 'post140161911432448')"><pre>    def _batched_insert(</pre></li>
                  
                  <li onclick="toggle('pre140161911432448', 'post140161911432448')"><pre>        self,</pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v140161911432448">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>fields</td>
                    <td class="code"><pre>(&lt;django.db.models.fields.CharField: message_id&gt;,
 &lt;django.db.models.fields.CharField: contact_id&gt;,
 &lt;django.db.models.fields.CharField: contact_number&gt;,
 &lt;django.db.models.fields.DateField: period&gt;,
 &lt;django.db.models.fields.DateTimeField: timestamp&gt;,
 &lt;django.db.models.fields.IntegerField: status&gt;,
 &lt;django.db.models.fields.CharField: ticket_service_id&gt;,
 &lt;django.db.models.fields.CharField: message_type&gt;,
 &lt;django.db.models.fields.BooleanField: is_from_me&gt;,
 &lt;django.db.models.fields.IntegerField: retries&gt;)</pre></td>
                  </tr>
                
                  <tr>
                    <td>objs</td>
                    <td class="code"><pre>[&lt;Message: 5588988562749 - 2023-05-01 - 0&gt;]</pre></td>
                  </tr>
                
                  <tr>
                    <td>on_conflict</td>
                    <td class="code"><pre>None</pre></td>
                  </tr>
                
                  <tr>
                    <td>query</td>
                    <td class="code"><pre>&lt;django.db.models.sql.subqueries.InsertQuery object at 0x7f7a16355b10&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>raw</td>
                    <td class="code"><pre>False</pre></td>
                  </tr>
                
                  <tr>
                    <td>returning_fields</td>
                    <td class="code"><pre>[]</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;QuerySet []&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>unique_fields</td>
                    <td class="code"><pre>None</pre></td>
                  </tr>
                
                  <tr>
                    <td>update_fields</td>
                    <td class="code"><pre>None</pre></td>
                  </tr>
                
                  <tr>
                    <td>using</td>
                    <td class="code"><pre>&#x27;default&#x27;</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
        <li class="frame django">
          
            <code class="fname">/home/jpfilho/.local/lib/python3.10/site-packages/django/db/models/sql/compiler.py</code>, line 1819, in execute_sql
          

          
            <div class="context" id="c140162348344064">
              
                <ol start="1812" class="pre-context" id="pre140162348344064">
                
                  <li onclick="toggle('pre140162348344064', 'post140162348344064')"><pre>            returning_fields</pre></li>
                
                  <li onclick="toggle('pre140162348344064', 'post140162348344064')"><pre>            and len(self.query.objs) != 1</pre></li>
                
                  <li onclick="toggle('pre140162348344064', 'post140162348344064')"><pre>            and not self.connection.features.can_return_rows_from_bulk_insert</pre></li>
                
                  <li onclick="toggle('pre140162348344064', 'post140162348344064')"><pre>        )</pre></li>
                
                  <li onclick="toggle('pre140162348344064', 'post140162348344064')"><pre>        opts = self.query.get_meta()</pre></li>
                
                  <li onclick="toggle('pre140162348344064', 'post140162348344064')"><pre>        self.returning_fields = returning_fields</pre></li>
                
                  <li onclick="toggle('pre140162348344064', 'post140162348344064')"><pre>        with self.connection.cursor() as cursor:</pre></li>
                
                </ol>
              
              <ol start="1819" class="context-line">
                <li onclick="toggle('pre140162348344064', 'post140162348344064')"><pre>            for sql, params in self.as_sql():</pre> <span>…</span></li>
              </ol>
              
                <ol start='1820' class="post-context" id="post140162348344064">
                  
                  <li onclick="toggle('pre140162348344064', 'post140162348344064')"><pre>                cursor.execute(sql, params)</pre></li>
                  
                  <li onclick="toggle('pre140162348344064', 'post140162348344064')"><pre>            if not self.returning_fields:</pre></li>
                  
                  <li onclick="toggle('pre140162348344064', 'post140162348344064')"><pre>                return []</pre></li>
                  
                  <li onclick="toggle('pre140162348344064', 'post140162348344064')"><pre>            if (</pre></li>
                  
                  <li onclick="toggle('pre140162348344064', 'post140162348344064')"><pre>                self.connection.features.can_return_rows_from_bulk_insert</pre></li>
                  
                  <li onclick="toggle('pre140162348344064', 'post140162348344064')"><pre>                and len(self.query.objs) &gt; 1</pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v140162348344064">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>cursor</td>
                    <td class="code"><pre>&lt;django.db.backends.postgresql.base.CursorDebugWrapper object at 0x7f7a16f98ca0&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>opts</td>
                    <td class="code"><pre>&lt;Options for Message&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>returning_fields</td>
                    <td class="code"><pre>[]</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;SQLInsertCompiler model=Message connection=&lt;DatabaseWrapper vendor=&#x27;postgresql&#x27; alias=&#x27;default&#x27;&gt; using=&#x27;default&#x27;&gt;</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
        <li class="frame django">
          
            <code class="fname">/home/jpfilho/.local/lib/python3.10/site-packages/django/db/models/sql/compiler.py</code>, line 1743, in as_sql
          

          
            <div class="context" id="c140162348349376">
              
                <ol start="1736" class="pre-context" id="pre140162348349376">
                
                  <li onclick="toggle('pre140162348349376', 'post140162348349376')"><pre>            on_conflict=self.query.on_conflict,</pre></li>
                
                  <li onclick="toggle('pre140162348349376', 'post140162348349376')"><pre>        )</pre></li>
                
                  <li onclick="toggle('pre140162348349376', 'post140162348349376')"><pre>        result = [&quot;%s %s&quot; % (insert_statement, qn(opts.db_table))]</pre></li>
                
                  <li onclick="toggle('pre140162348349376', 'post140162348349376')"><pre>        fields = self.query.fields or [opts.pk]</pre></li>
                
                  <li onclick="toggle('pre140162348349376', 'post140162348349376')"><pre>        result.append(&quot;(%s)&quot; % &quot;, &quot;.join(qn(f.column) for f in fields))</pre></li>
                
                  <li onclick="toggle('pre140162348349376', 'post140162348349376')"><pre></pre></li>
                
                  <li onclick="toggle('pre140162348349376', 'post140162348349376')"><pre>        if self.query.fields:</pre></li>
                
                </ol>
              
              <ol start="1743" class="context-line">
                <li onclick="toggle('pre140162348349376', 'post140162348349376')"><pre>            value_rows = [</pre> <span>…</span></li>
              </ol>
              
                <ol start='1744' class="post-context" id="post140162348349376">
                  
                  <li onclick="toggle('pre140162348349376', 'post140162348349376')"><pre>                [</pre></li>
                  
                  <li onclick="toggle('pre140162348349376', 'post140162348349376')"><pre>                    self.prepare_value(field, self.pre_save_val(field, obj))</pre></li>
                  
                  <li onclick="toggle('pre140162348349376', 'post140162348349376')"><pre>                    for field in fields</pre></li>
                  
                  <li onclick="toggle('pre140162348349376', 'post140162348349376')"><pre>                ]</pre></li>
                  
                  <li onclick="toggle('pre140162348349376', 'post140162348349376')"><pre>                for obj in self.query.objs</pre></li>
                  
                  <li onclick="toggle('pre140162348349376', 'post140162348349376')"><pre>            ]</pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v140162348349376">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>fields</td>
                    <td class="code"><pre>(&lt;django.db.models.fields.CharField: message_id&gt;,
 &lt;django.db.models.fields.CharField: contact_id&gt;,
 &lt;django.db.models.fields.CharField: contact_number&gt;,
 &lt;django.db.models.fields.DateField: period&gt;,
 &lt;django.db.models.fields.DateTimeField: timestamp&gt;,
 &lt;django.db.models.fields.IntegerField: status&gt;,
 &lt;django.db.models.fields.CharField: ticket_service_id&gt;,
 &lt;django.db.models.fields.CharField: message_type&gt;,
 &lt;django.db.models.fields.BooleanField: is_from_me&gt;,
 &lt;django.db.models.fields.IntegerField: retries&gt;)</pre></td>
                  </tr>
                
                  <tr>
                    <td>insert_statement</td>
                    <td class="code"><pre>&#x27;INSERT INTO&#x27;</pre></td>
                  </tr>
                
                  <tr>
                    <td>opts</td>
                    <td class="code"><pre>&lt;Options for Message&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>qn</td>
                    <td class="code"><pre>&lt;bound method DatabaseOperations.quote_name of &lt;django.db.backends.postgresql.operations.DatabaseOperations object at 0x7f7a16355510&gt;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>result</td>
                    <td class="code"><pre>[&#x27;INSERT INTO &quot;messages_api_message&quot;&#x27;,
 &#x27;(&quot;message_id&quot;, &quot;contact_id&quot;, &quot;contact_number&quot;, &quot;period&quot;, &quot;timestamp&quot;, &#x27;
 &#x27;&quot;status&quot;, &quot;ticket_service_id&quot;, &quot;message_type&quot;, &quot;is_from_me&quot;, &quot;retries&quot;)&#x27;]</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;SQLInsertCompiler model=Message connection=&lt;DatabaseWrapper vendor=&#x27;postgresql&#x27; alias=&#x27;default&#x27;&gt; using=&#x27;default&#x27;&gt;</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
        <li class="frame django">
          
            <code class="fname">/home/jpfilho/.local/lib/python3.10/site-packages/django/db/models/sql/compiler.py</code>, line 1744, in &lt;listcomp&gt;
          

          
            <div class="context" id="c140162356902336">
              
                <ol start="1737" class="pre-context" id="pre140162356902336">
                
                  <li onclick="toggle('pre140162356902336', 'post140162356902336')"><pre>        )</pre></li>
                
                  <li onclick="toggle('pre140162356902336', 'post140162356902336')"><pre>        result = [&quot;%s %s&quot; % (insert_statement, qn(opts.db_table))]</pre></li>
                
                  <li onclick="toggle('pre140162356902336', 'post140162356902336')"><pre>        fields = self.query.fields or [opts.pk]</pre></li>
                
                  <li onclick="toggle('pre140162356902336', 'post140162356902336')"><pre>        result.append(&quot;(%s)&quot; % &quot;, &quot;.join(qn(f.column) for f in fields))</pre></li>
                
                  <li onclick="toggle('pre140162356902336', 'post140162356902336')"><pre></pre></li>
                
                  <li onclick="toggle('pre140162356902336', 'post140162356902336')"><pre>        if self.query.fields:</pre></li>
                
                  <li onclick="toggle('pre140162356902336', 'post140162356902336')"><pre>            value_rows = [</pre></li>
                
                </ol>
              
              <ol start="1744" class="context-line">
                <li onclick="toggle('pre140162356902336', 'post140162356902336')"><pre>                [</pre> <span>…</span></li>
              </ol>
              
                <ol start='1745' class="post-context" id="post140162356902336">
                  
                  <li onclick="toggle('pre140162356902336', 'post140162356902336')"><pre>                    self.prepare_value(field, self.pre_save_val(field, obj))</pre></li>
                  
                  <li onclick="toggle('pre140162356902336', 'post140162356902336')"><pre>                    for field in fields</pre></li>
                  
                  <li onclick="toggle('pre140162356902336', 'post140162356902336')"><pre>                ]</pre></li>
                  
                  <li onclick="toggle('pre140162356902336', 'post140162356902336')"><pre>                for obj in self.query.objs</pre></li>
                  
                  <li onclick="toggle('pre140162356902336', 'post140162356902336')"><pre>            ]</pre></li>
                  
                  <li onclick="toggle('pre140162356902336', 'post140162356902336')"><pre>        else:</pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v140162356902336">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>.0</td>
                    <td class="code"><pre>&lt;list_iterator object at 0x7f7a16f982b0&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>fields</td>
                    <td class="code"><pre>(&lt;django.db.models.fields.CharField: message_id&gt;,
 &lt;django.db.models.fields.CharField: contact_id&gt;,
 &lt;django.db.models.fields.CharField: contact_number&gt;,
 &lt;django.db.models.fields.DateField: period&gt;,
 &lt;django.db.models.fields.DateTimeField: timestamp&gt;,
 &lt;django.db.models.fields.IntegerField: status&gt;,
 &lt;django.db.models.fields.CharField: ticket_service_id&gt;,
 &lt;django.db.models.fields.CharField: message_type&gt;,
 &lt;django.db.models.fields.BooleanField: is_from_me&gt;,
 &lt;django.db.models.fields.IntegerField: retries&gt;)</pre></td>
                  </tr>
                
                  <tr>
                    <td>obj</td>
                    <td class="code"><pre>&lt;Message: 5588988562749 - 2023-05-01 - 0&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;SQLInsertCompiler model=Message connection=&lt;DatabaseWrapper vendor=&#x27;postgresql&#x27; alias=&#x27;default&#x27;&gt; using=&#x27;default&#x27;&gt;</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
        <li class="frame django">
          
            <code class="fname">/home/jpfilho/.local/lib/python3.10/site-packages/django/db/models/sql/compiler.py</code>, line 1745, in &lt;listcomp&gt;
          

          
            <div class="context" id="c140162348351104">
              
                <ol start="1738" class="pre-context" id="pre140162348351104">
                
                  <li onclick="toggle('pre140162348351104', 'post140162348351104')"><pre>        result = [&quot;%s %s&quot; % (insert_statement, qn(opts.db_table))]</pre></li>
                
                  <li onclick="toggle('pre140162348351104', 'post140162348351104')"><pre>        fields = self.query.fields or [opts.pk]</pre></li>
                
                  <li onclick="toggle('pre140162348351104', 'post140162348351104')"><pre>        result.append(&quot;(%s)&quot; % &quot;, &quot;.join(qn(f.column) for f in fields))</pre></li>
                
                  <li onclick="toggle('pre140162348351104', 'post140162348351104')"><pre></pre></li>
                
                  <li onclick="toggle('pre140162348351104', 'post140162348351104')"><pre>        if self.query.fields:</pre></li>
                
                  <li onclick="toggle('pre140162348351104', 'post140162348351104')"><pre>            value_rows = [</pre></li>
                
                  <li onclick="toggle('pre140162348351104', 'post140162348351104')"><pre>                [</pre></li>
                
                </ol>
              
              <ol start="1745" class="context-line">
                <li onclick="toggle('pre140162348351104', 'post140162348351104')"><pre>                    self.prepare_value(field, self.pre_save_val(field, obj))</pre> <span>…</span></li>
              </ol>
              
                <ol start='1746' class="post-context" id="post140162348351104">
                  
                  <li onclick="toggle('pre140162348351104', 'post140162348351104')"><pre>                    for field in fields</pre></li>
                  
                  <li onclick="toggle('pre140162348351104', 'post140162348351104')"><pre>                ]</pre></li>
                  
                  <li onclick="toggle('pre140162348351104', 'post140162348351104')"><pre>                for obj in self.query.objs</pre></li>
                  
                  <li onclick="toggle('pre140162348351104', 'post140162348351104')"><pre>            ]</pre></li>
                  
                  <li onclick="toggle('pre140162348351104', 'post140162348351104')"><pre>        else:</pre></li>
                  
                  <li onclick="toggle('pre140162348351104', 'post140162348351104')"><pre>            # An empty object.</pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v140162348351104">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>.0</td>
                    <td class="code"><pre>&lt;tuple_iterator object at 0x7f7a16f98640&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>field</td>
                    <td class="code"><pre>&lt;django.db.models.fields.BooleanField: is_from_me&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>obj</td>
                    <td class="code"><pre>&lt;Message: 5588988562749 - 2023-05-01 - 0&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;SQLInsertCompiler model=Message connection=&lt;DatabaseWrapper vendor=&#x27;postgresql&#x27; alias=&#x27;default&#x27;&gt; using=&#x27;default&#x27;&gt;</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
        <li class="frame django">
          
            <code class="fname">/home/jpfilho/.local/lib/python3.10/site-packages/django/db/models/sql/compiler.py</code>, line 1684, in prepare_value
          

          
            <div class="context" id="c140161911579264">
              
                <ol start="1677" class="pre-context" id="pre140161911579264">
                
                  <li onclick="toggle('pre140161911579264', 'post140161911579264')"><pre>                    &quot;(%s=%r).&quot; % (field.name, value)</pre></li>
                
                  <li onclick="toggle('pre140161911579264', 'post140161911579264')"><pre>                )</pre></li>
                
                  <li onclick="toggle('pre140161911579264', 'post140161911579264')"><pre>            if value.contains_over_clause:</pre></li>
                
                  <li onclick="toggle('pre140161911579264', 'post140161911579264')"><pre>                raise FieldError(</pre></li>
                
                  <li onclick="toggle('pre140161911579264', 'post140161911579264')"><pre>                    &quot;Window expressions are not allowed in this query (%s=%r).&quot;</pre></li>
                
                  <li onclick="toggle('pre140161911579264', 'post140161911579264')"><pre>                    % (field.name, value)</pre></li>
                
                  <li onclick="toggle('pre140161911579264', 'post140161911579264')"><pre>                )</pre></li>
                
                </ol>
              
              <ol start="1684" class="context-line">
                <li onclick="toggle('pre140161911579264', 'post140161911579264')"><pre>        return field.get_db_prep_save(value, connection=self.connection)</pre> <span>…</span></li>
              </ol>
              
                <ol start='1685' class="post-context" id="post140161911579264">
                  
                  <li onclick="toggle('pre140161911579264', 'post140161911579264')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140161911579264', 'post140161911579264')"><pre>    def pre_save_val(self, field, obj):</pre></li>
                  
                  <li onclick="toggle('pre140161911579264', 'post140161911579264')"><pre>        &quot;&quot;&quot;</pre></li>
                  
                  <li onclick="toggle('pre140161911579264', 'post140161911579264')"><pre>        Get the given field&#x27;s value off the given obj. pre_save() is used for</pre></li>
                  
                  <li onclick="toggle('pre140161911579264', 'post140161911579264')"><pre>        things like auto_now on DateTimeField. Skip it if this is a raw query.</pre></li>
                  
                  <li onclick="toggle('pre140161911579264', 'post140161911579264')"><pre>        &quot;&quot;&quot;</pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v140161911579264">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>field</td>
                    <td class="code"><pre>&lt;django.db.models.fields.BooleanField: is_from_me&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;SQLInsertCompiler model=Message connection=&lt;DatabaseWrapper vendor=&#x27;postgresql&#x27; alias=&#x27;default&#x27;&gt; using=&#x27;default&#x27;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>value</td>
                    <td class="code"><pre>[True]</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
        <li class="frame django">
          
            <code class="fname">/home/jpfilho/.local/lib/python3.10/site-packages/django/db/models/fields/__init__.py</code>, line 954, in get_db_prep_save
          

          
            <div class="context" id="c140162348347264">
              
                <ol start="947" class="pre-context" id="pre140162348347264">
                
                  <li onclick="toggle('pre140162348347264', 'post140162348347264')"><pre>            value = self.get_prep_value(value)</pre></li>
                
                  <li onclick="toggle('pre140162348347264', 'post140162348347264')"><pre>        return value</pre></li>
                
                  <li onclick="toggle('pre140162348347264', 'post140162348347264')"><pre></pre></li>
                
                  <li onclick="toggle('pre140162348347264', 'post140162348347264')"><pre>    def get_db_prep_save(self, value, connection):</pre></li>
                
                  <li onclick="toggle('pre140162348347264', 'post140162348347264')"><pre>        &quot;&quot;&quot;Return field&#x27;s value prepared for saving into a database.&quot;&quot;&quot;</pre></li>
                
                  <li onclick="toggle('pre140162348347264', 'post140162348347264')"><pre>        if hasattr(value, &quot;as_sql&quot;):</pre></li>
                
                  <li onclick="toggle('pre140162348347264', 'post140162348347264')"><pre>            return value</pre></li>
                
                </ol>
              
              <ol start="954" class="context-line">
                <li onclick="toggle('pre140162348347264', 'post140162348347264')"><pre>        return self.get_db_prep_value(value, connection=connection, prepared=False)</pre> <span>…</span></li>
              </ol>
              
                <ol start='955' class="post-context" id="post140162348347264">
                  
                  <li onclick="toggle('pre140162348347264', 'post140162348347264')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140162348347264', 'post140162348347264')"><pre>    def has_default(self):</pre></li>
                  
                  <li onclick="toggle('pre140162348347264', 'post140162348347264')"><pre>        &quot;&quot;&quot;Return a boolean of whether this field has a default value.&quot;&quot;&quot;</pre></li>
                  
                  <li onclick="toggle('pre140162348347264', 'post140162348347264')"><pre>        return self.default is not NOT_PROVIDED</pre></li>
                  
                  <li onclick="toggle('pre140162348347264', 'post140162348347264')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140162348347264', 'post140162348347264')"><pre>    def get_default(self):</pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v140162348347264">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>connection</td>
                    <td class="code"><pre>&lt;DatabaseWrapper vendor=&#x27;postgresql&#x27; alias=&#x27;default&#x27;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;django.db.models.fields.BooleanField: is_from_me&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>value</td>
                    <td class="code"><pre>[True]</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
        <li class="frame django">
          
            <code class="fname">/home/jpfilho/.local/lib/python3.10/site-packages/django/db/models/fields/__init__.py</code>, line 947, in get_db_prep_value
          

          
            <div class="context" id="c140162348349504">
              
                <ol start="940" class="pre-context" id="pre140162348349504">
                
                  <li onclick="toggle('pre140162348349504', 'post140162348349504')"><pre>    def get_db_prep_value(self, value, connection, prepared=False):</pre></li>
                
                  <li onclick="toggle('pre140162348349504', 'post140162348349504')"><pre>        &quot;&quot;&quot;</pre></li>
                
                  <li onclick="toggle('pre140162348349504', 'post140162348349504')"><pre>        Return field&#x27;s value prepared for interacting with the database backend.</pre></li>
                
                  <li onclick="toggle('pre140162348349504', 'post140162348349504')"><pre></pre></li>
                
                  <li onclick="toggle('pre140162348349504', 'post140162348349504')"><pre>        Used by the default implementations of get_db_prep_save().</pre></li>
                
                  <li onclick="toggle('pre140162348349504', 'post140162348349504')"><pre>        &quot;&quot;&quot;</pre></li>
                
                  <li onclick="toggle('pre140162348349504', 'post140162348349504')"><pre>        if not prepared:</pre></li>
                
                </ol>
              
              <ol start="947" class="context-line">
                <li onclick="toggle('pre140162348349504', 'post140162348349504')"><pre>            value = self.get_prep_value(value)</pre> <span>…</span></li>
              </ol>
              
                <ol start='948' class="post-context" id="post140162348349504">
                  
                  <li onclick="toggle('pre140162348349504', 'post140162348349504')"><pre>        return value</pre></li>
                  
                  <li onclick="toggle('pre140162348349504', 'post140162348349504')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140162348349504', 'post140162348349504')"><pre>    def get_db_prep_save(self, value, connection):</pre></li>
                  
                  <li onclick="toggle('pre140162348349504', 'post140162348349504')"><pre>        &quot;&quot;&quot;Return field&#x27;s value prepared for saving into a database.&quot;&quot;&quot;</pre></li>
                  
                  <li onclick="toggle('pre140162348349504', 'post140162348349504')"><pre>        if hasattr(value, &quot;as_sql&quot;):</pre></li>
                  
                  <li onclick="toggle('pre140162348349504', 'post140162348349504')"><pre>            return value</pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v140162348349504">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>connection</td>
                    <td class="code"><pre>&lt;DatabaseWrapper vendor=&#x27;postgresql&#x27; alias=&#x27;default&#x27;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>prepared</td>
                    <td class="code"><pre>False</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;django.db.models.fields.BooleanField: is_from_me&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>value</td>
                    <td class="code"><pre>[True]</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
        <li class="frame django">
          
            <code class="fname">/home/jpfilho/.local/lib/python3.10/site-packages/django/db/models/fields/__init__.py</code>, line 1122, in get_prep_value
          

          
            <div class="context" id="c140161911576832">
              
                <ol start="1115" class="pre-context" id="pre140161911576832">
                
                  <li onclick="toggle('pre140161911576832', 'post140161911576832')"><pre>            params={&quot;value&quot;: value},</pre></li>
                
                  <li onclick="toggle('pre140161911576832', 'post140161911576832')"><pre>        )</pre></li>
                
                  <li onclick="toggle('pre140161911576832', 'post140161911576832')"><pre></pre></li>
                
                  <li onclick="toggle('pre140161911576832', 'post140161911576832')"><pre>    def get_prep_value(self, value):</pre></li>
                
                  <li onclick="toggle('pre140161911576832', 'post140161911576832')"><pre>        value = super().get_prep_value(value)</pre></li>
                
                  <li onclick="toggle('pre140161911576832', 'post140161911576832')"><pre>        if value is None:</pre></li>
                
                  <li onclick="toggle('pre140161911576832', 'post140161911576832')"><pre>            return None</pre></li>
                
                </ol>
              
              <ol start="1122" class="context-line">
                <li onclick="toggle('pre140161911576832', 'post140161911576832')"><pre>        return self.to_python(value)</pre> <span>…</span></li>
              </ol>
              
                <ol start='1123' class="post-context" id="post140161911576832">
                  
                  <li onclick="toggle('pre140161911576832', 'post140161911576832')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140161911576832', 'post140161911576832')"><pre>    def formfield(self, **kwargs):</pre></li>
                  
                  <li onclick="toggle('pre140161911576832', 'post140161911576832')"><pre>        if self.choices is not None:</pre></li>
                  
                  <li onclick="toggle('pre140161911576832', 'post140161911576832')"><pre>            include_blank = not (self.has_default() or &quot;initial&quot; in kwargs)</pre></li>
                  
                  <li onclick="toggle('pre140161911576832', 'post140161911576832')"><pre>            defaults = {&quot;choices&quot;: self.get_choices(include_blank=include_blank)}</pre></li>
                  
                  <li onclick="toggle('pre140161911576832', 'post140161911576832')"><pre>        else:</pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v140161911576832">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>__class__</td>
                    <td class="code"><pre>&lt;class &#x27;django.db.models.fields.BooleanField&#x27;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;django.db.models.fields.BooleanField: is_from_me&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>value</td>
                    <td class="code"><pre>[True]</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
        <li class="frame django">
          
            <code class="fname">/home/jpfilho/.local/lib/python3.10/site-packages/django/db/models/fields/__init__.py</code>, line 1112, in to_python
          

          
            <div class="context" id="c140162399117120">
              
                <ol start="1105" class="pre-context" id="pre140162399117120">
                
                  <li onclick="toggle('pre140162399117120', 'post140162399117120')"><pre>        if value in (True, False):</pre></li>
                
                  <li onclick="toggle('pre140162399117120', 'post140162399117120')"><pre>            # 1/0 are equal to True/False. bool() converts former to latter.</pre></li>
                
                  <li onclick="toggle('pre140162399117120', 'post140162399117120')"><pre>            return bool(value)</pre></li>
                
                  <li onclick="toggle('pre140162399117120', 'post140162399117120')"><pre>        if value in (&quot;t&quot;, &quot;True&quot;, &quot;1&quot;):</pre></li>
                
                  <li onclick="toggle('pre140162399117120', 'post140162399117120')"><pre>            return True</pre></li>
                
                  <li onclick="toggle('pre140162399117120', 'post140162399117120')"><pre>        if value in (&quot;f&quot;, &quot;False&quot;, &quot;0&quot;):</pre></li>
                
                  <li onclick="toggle('pre140162399117120', 'post140162399117120')"><pre>            return False</pre></li>
                
                </ol>
              
              <ol start="1112" class="context-line">
                <li onclick="toggle('pre140162399117120', 'post140162399117120')"><pre>        raise exceptions.ValidationError(</pre> <span>…</span></li>
              </ol>
              
                <ol start='1113' class="post-context" id="post140162399117120">
                  
                  <li onclick="toggle('pre140162399117120', 'post140162399117120')"><pre>            self.error_messages[&quot;invalid_nullable&quot; if self.null else &quot;invalid&quot;],</pre></li>
                  
                  <li onclick="toggle('pre140162399117120', 'post140162399117120')"><pre>            code=&quot;invalid&quot;,</pre></li>
                  
                  <li onclick="toggle('pre140162399117120', 'post140162399117120')"><pre>            params={&quot;value&quot;: value},</pre></li>
                  
                  <li onclick="toggle('pre140162399117120', 'post140162399117120')"><pre>        )</pre></li>
                  
                  <li onclick="toggle('pre140162399117120', 'post140162399117120')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140162399117120', 'post140162399117120')"><pre>    def get_prep_value(self, value):</pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v140162399117120">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;django.db.models.fields.BooleanField: is_from_me&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>value</td>
                    <td class="code"><pre>[True]</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
    </ul>
  </div>

  <form action="https://dpaste.com/" name="pasteform" id="pasteform" method="post">
  <div id="pastebinTraceback" class="pastebin">
    <input type="hidden" name="language" value="PythonConsole">
    <input type="hidden" name="title"
      value="ValidationError at /webhook/messages/create">
    <input type="hidden" name="source" value="Django Dpaste Agent">
    <input type="hidden" name="poster" value="Django">
    <textarea name="content" id="traceback_area" cols="140" rows="25">
Environment:


Request Method: POST
Request URL: http://woz.serveo.net/webhook/messages/create?phone=5588988562749&amp;period=05%2F23

Django Version: 4.2.1
Python Version: 3.10.7
Installed Applications:
[&#x27;django.contrib.admin&#x27;,
 &#x27;django.contrib.auth&#x27;,
 &#x27;django.contrib.contenttypes&#x27;,
 &#x27;django.contrib.sessions&#x27;,
 &#x27;django.contrib.messages&#x27;,
 &#x27;django.contrib.staticfiles&#x27;,
 &#x27;drf_yasg&#x27;,
 &#x27;rest_framework&#x27;,
 &#x27;example&#x27;,
 &#x27;messages_api&#x27;,
 &#x27;celery&#x27;,
 &#x27;django_filters&#x27;]
Installed Middleware:
[&#x27;django.middleware.security.SecurityMiddleware&#x27;,
 &#x27;django.contrib.sessions.middleware.SessionMiddleware&#x27;,
 &#x27;django.middleware.common.CommonMiddleware&#x27;,
 &#x27;django.middleware.csrf.CsrfViewMiddleware&#x27;,
 &#x27;django.contrib.auth.middleware.AuthenticationMiddleware&#x27;,
 &#x27;django.contrib.messages.middleware.MessageMiddleware&#x27;,
 &#x27;django.middleware.clickjacking.XFrameOptionsMiddleware&#x27;]



Traceback (most recent call last):
  File "/home/jpfilho/.local/lib/python3.10/site-packages/django/core/handlers/exception.py", line 55, in inner
    response = get_response(request)
  File "/home/jpfilho/.local/lib/python3.10/site-packages/django/core/handlers/base.py", line 197, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/home/jpfilho/.local/lib/python3.10/site-packages/django/views/decorators/csrf.py", line 56, in wrapper_view
    return view_func(*args, **kwargs)
  File "/home/jpfilho/.local/lib/python3.10/site-packages/rest_framework/viewsets.py", line 125, in view
    return self.dispatch(request, *args, **kwargs)
  File "/home/jpfilho/.local/lib/python3.10/site-packages/rest_framework/views.py", line 509, in dispatch
    response = self.handle_exception(exc)
  File "/home/jpfilho/.local/lib/python3.10/site-packages/rest_framework/views.py", line 469, in handle_exception
    self.raise_uncaught_exception(exc)
  File "/home/jpfilho/.local/lib/python3.10/site-packages/rest_framework/views.py", line 480, in raise_uncaught_exception
    raise exc
  File "/home/jpfilho/.local/lib/python3.10/site-packages/rest_framework/views.py", line 506, in dispatch
    response = handler(request, *args, **kwargs)
  File "/home/jpfilho/Documents/code-ws/python/webhook/messages_api/views.py", line 153, in create
    message = Message.objects.create(
  File "/home/jpfilho/.local/lib/python3.10/site-packages/django/db/models/manager.py", line 87, in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
  File "/home/jpfilho/.local/lib/python3.10/site-packages/django/db/models/query.py", line 658, in create
    obj.save(force_insert=True, using=self.db)
  File "/home/jpfilho/.local/lib/python3.10/site-packages/django/db/models/base.py", line 814, in save
    self.save_base(
  File "/home/jpfilho/.local/lib/python3.10/site-packages/django/db/models/base.py", line 877, in save_base
    updated = self._save_table(
  File "/home/jpfilho/.local/lib/python3.10/site-packages/django/db/models/base.py", line 1020, in _save_table
    results = self._do_insert(
  File "/home/jpfilho/.local/lib/python3.10/site-packages/django/db/models/base.py", line 1061, in _do_insert
    return manager._insert(
  File "/home/jpfilho/.local/lib/python3.10/site-packages/django/db/models/manager.py", line 87, in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
  File "/home/jpfilho/.local/lib/python3.10/site-packages/django/db/models/query.py", line 1805, in _insert
    return query.get_compiler(using=using).execute_sql(returning_fields)
  File "/home/jpfilho/.local/lib/python3.10/site-packages/django/db/models/sql/compiler.py", line 1819, in execute_sql
    for sql, params in self.as_sql():
  File "/home/jpfilho/.local/lib/python3.10/site-packages/django/db/models/sql/compiler.py", line 1743, in as_sql
    value_rows = [
  File "/home/jpfilho/.local/lib/python3.10/site-packages/django/db/models/sql/compiler.py", line 1744, in &lt;listcomp&gt;
    [
  File "/home/jpfilho/.local/lib/python3.10/site-packages/django/db/models/sql/compiler.py", line 1745, in &lt;listcomp&gt;
    self.prepare_value(field, self.pre_save_val(field, obj))
  File "/home/jpfilho/.local/lib/python3.10/site-packages/django/db/models/sql/compiler.py", line 1684, in prepare_value
    return field.get_db_prep_save(value, connection=self.connection)
  File "/home/jpfilho/.local/lib/python3.10/site-packages/django/db/models/fields/__init__.py", line 954, in get_db_prep_save
    return self.get_db_prep_value(value, connection=connection, prepared=False)
  File "/home/jpfilho/.local/lib/python3.10/site-packages/django/db/models/fields/__init__.py", line 947, in get_db_prep_value
    value = self.get_prep_value(value)
  File "/home/jpfilho/.local/lib/python3.10/site-packages/django/db/models/fields/__init__.py", line 1122, in get_prep_value
    return self.to_python(value)
  File "/home/jpfilho/.local/lib/python3.10/site-packages/django/db/models/fields/__init__.py", line 1112, in to_python
    raise exceptions.ValidationError(

Exception Type: ValidationError at /webhook/messages/create
Exception Value: [&#x27;o valor “[True]”  deve ser True ou False.&#x27;]
</textarea>
  <br><br>
  <input type="submit" value="Share this traceback on a public website">
  </div>
</form>

</div>


<div id="requestinfo">
  <h2>Request information</h2>


  
    <h3 id="user-info">USER</h3>
    <p>AnonymousUser</p>
  

  <h3 id="get-info">GET</h3>
  
    <table class="req">
      <thead>
        <tr>
          <th>Variable</th>
          <th>Value</th>
        </tr>
      </thead>
      <tbody>
        
          <tr>
            <td>phone</td>
            <td class="code"><pre>&#x27;5588988562749&#x27;</pre></td>
          </tr>
        
          <tr>
            <td>period</td>
            <td class="code"><pre>&#x27;05/23&#x27;</pre></td>
          </tr>
        
      </tbody>
    </table>
  

  <h3 id="post-info">POST</h3>
  
    <p>No POST data</p>
  

  <h3 id="files-info">FILES</h3>
  
    <p>No FILES data</p>
  

  <h3 id="cookie-info">COOKIES</h3>
  
    <p>No cookie data</p>
  

  <h3 id="meta-info">META</h3>
  <table class="req">
    <thead>
      <tr>
        <th>Variable</th>
        <th>Value</th>
      </tr>
    </thead>
    <tbody>
      
        <tr>
          <td>API_URL</td>
          <td class="code"><pre>&#x27;********************&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>BAMF_DESKTOP_FILE_HINT</td>
          <td class="code"><pre>&#x27;/var/lib/snapd/desktop/applications/code_code.desktop&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>CHROME_DESKTOP</td>
          <td class="code"><pre>&#x27;code-url-handler.desktop&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>CLOUDAMQP_URL</td>
          <td class="code"><pre>&#x27;amqps://kzthoddb:3CziblJY4U4tFRNmARuMMdIDu8z53Ql6@fly.rmq.cloudamqp.com/kzthoddb&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>COLORTERM</td>
          <td class="code"><pre>&#x27;truecolor&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>COMPANIES_API</td>
          <td class="code"><pre>&#x27;********************&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>CONTENT_LENGTH</td>
          <td class="code"><pre>&#x27;261&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>CONTENT_TYPE</td>
          <td class="code"><pre>&#x27;application/json&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>DBUS_SESSION_BUS_ADDRESS</td>
          <td class="code"><pre>&#x27;unix:path=/run/user/1000/bus&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>DEBUGINFOD_URLS</td>
          <td class="code"><pre>&#x27;https://debuginfod.ubuntu.com &#x27;</pre></td>
        </tr>
      
        <tr>
          <td>DESKTOP_SESSION</td>
          <td class="code"><pre>&#x27;ubuntu&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>DISPLAY</td>
          <td class="code"><pre>&#x27;:1&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>DJANGO_SETTINGS_MODULE</td>
          <td class="code"><pre>&#x27;webhook.settings&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>GATEWAY_INTERFACE</td>
          <td class="code"><pre>&#x27;CGI/1.1&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>GDK_BACKEND</td>
          <td class="code"><pre>&#x27;x11&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>GDMSESSION</td>
          <td class="code"><pre>&#x27;ubuntu&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>GIO_LAUNCHED_DESKTOP_FILE</td>
          <td class="code"><pre>&#x27;/var/lib/snapd/desktop/applications/code_code.desktop&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>GIO_LAUNCHED_DESKTOP_FILE_PID</td>
          <td class="code"><pre>&#x27;2895&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>GIO_MODULE_DIR</td>
          <td class="code"><pre>&#x27;/home/jpfilho/snap/code/common/.cache/gio-modules&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>GIT_ASKPASS</td>
          <td class="code"><pre>&#x27;********************&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>GJS_DEBUG_OUTPUT</td>
          <td class="code"><pre>&#x27;stderr&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>GJS_DEBUG_TOPICS</td>
          <td class="code"><pre>&#x27;JS ERROR;JS LOG&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>GNOME_DESKTOP_SESSION_ID</td>
          <td class="code"><pre>&#x27;this-is-deprecated&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>GNOME_SHELL_SESSION_MODE</td>
          <td class="code"><pre>&#x27;ubuntu&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>GPG_AGENT_INFO</td>
          <td class="code"><pre>&#x27;/run/user/1000/gnupg/S.gpg-agent:0:1&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>GROUP_ID</td>
          <td class="code"><pre>&#x27;4bf3c03a-2d33-439c-8b13-efb50531e9c1&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>GSETTINGS_SCHEMA_DIR</td>
          <td class="code"><pre>&#x27;/home/jpfilho/snap/code/129/.local/share/glib-2.0/schemas&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>GTK_EXE_PREFIX</td>
          <td class="code"><pre>&#x27;/snap/code/129/usr&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>GTK_IM_MODULE_FILE</td>
          <td class="code"><pre>&#x27;/home/jpfilho/snap/code/common/.cache/immodules/immodules.cache&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>GTK_MODULES</td>
          <td class="code"><pre>&#x27;gail:atk-bridge&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>GTK_PATH</td>
          <td class="code"><pre>&#x27;/snap/code/129/usr/lib/x86_64-linux-gnu/gtk-3.0&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>HEROKU_API</td>
          <td class="code"><pre>&#x27;********************&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>HEROKU_API_KEY</td>
          <td class="code"><pre>&#x27;********************&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>HEROKU_DYNO_ID</td>
          <td class="code"><pre>&#x27;ba6aefd9-0ff3-4cfb-a04b-42b7bf6cf560&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>HOME</td>
          <td class="code"><pre>&#x27;/home/jpfilho&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>HTTP_ACCEPT</td>
          <td class="code"><pre>&#x27;*/*&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>HTTP_ACCEPT_ENCODING</td>
          <td class="code"><pre>&#x27;gzip, deflate&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>HTTP_HOST</td>
          <td class="code"><pre>&#x27;woz.serveo.net&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>HTTP_USER_AGENT</td>
          <td class="code"><pre>&#x27;python-requests/2.30.0&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>HTTP_X_FORWARDED_FOR</td>
          <td class="code"><pre>&#x27;177.37.130.81&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>ID_SERVICE</td>
          <td class="code"><pre>&#x27;83108c28-14f7-4646-acb8-dab165397fd5&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>INVOCATION_ID</td>
          <td class="code"><pre>&#x27;d9e9633aebb14edaa8abde0b26e491bc&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>JAVA_HOME</td>
          <td class="code"><pre>&#x27;/home/jpfilho/.sdkman/candidates/java/current&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>JOURNAL_STREAM</td>
          <td class="code"><pre>&#x27;8:33740&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>LANG</td>
          <td class="code"><pre>&#x27;pt_BR.UTF-8&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>LANGUAGE</td>
          <td class="code"><pre>&#x27;pt_BR:pt:pt_PT:en&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>LC_ADDRESS</td>
          <td class="code"><pre>&#x27;pt_BR.UTF-8&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>LC_IDENTIFICATION</td>
          <td class="code"><pre>&#x27;pt_BR.UTF-8&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>LC_MEASUREMENT</td>
          <td class="code"><pre>&#x27;pt_BR.UTF-8&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>LC_MONETARY</td>
          <td class="code"><pre>&#x27;pt_BR.UTF-8&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>LC_NAME</td>
          <td class="code"><pre>&#x27;pt_BR.UTF-8&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>LC_NUMERIC</td>
          <td class="code"><pre>&#x27;pt_BR.UTF-8&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>LC_PAPER</td>
          <td class="code"><pre>&#x27;pt_BR.UTF-8&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>LC_TELEPHONE</td>
          <td class="code"><pre>&#x27;pt_BR.UTF-8&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>LC_TIME</td>
          <td class="code"><pre>&#x27;pt_BR.UTF-8&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>LESSCLOSE</td>
          <td class="code"><pre>&#x27;/usr/bin/lesspipe %s %s&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>LESSOPEN</td>
          <td class="code"><pre>&#x27;| /usr/bin/lesspipe %s&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>LOCPATH</td>
          <td class="code"><pre>&#x27;/snap/code/129/usr/lib/locale&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>LOGNAME</td>
          <td class="code"><pre>&#x27;jpfilho&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>LS_COLORS</td>
          <td class="code"><pre>&#x27;rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:mi=00:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arc=01;31:*.arj=01;31:*.taz=01;31:*.lha=01;31:*.lz4=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.tzo=01;31:*.t7z=01;31:*.zip=01;31:*.z=01;31:*.dz=01;31:*.gz=01;31:*.lrz=01;31:*.lz=01;31:*.lzo=01;31:*.xz=01;31:*.zst=01;31:*.tzst=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.alz=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.cab=01;31:*.wim=01;31:*.swm=01;31:*.dwm=01;31:*.esd=01;31:*.jpg=01;35:*.jpeg=01;35:*.mjpg=01;35:*.mjpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.webp=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=00;36:*.au=00;36:*.flac=00;36:*.m4a=00;36:*.mid=00;36:*.midi=00;36:*.mka=00;36:*.mp3=00;36:*.mpc=00;36:*.ogg=00;36:*.ra=00;36:*.wav=00;36:*.oga=00;36:*.opus=00;36:*.spx=00;36:*.xspf=00;36:&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>MANAGERPID</td>
          <td class="code"><pre>&#x27;1783&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>MAVEN_HOME</td>
          <td class="code"><pre>&#x27;/home/jpfilho/.sdkman/candidates/maven/current&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>NVM_BIN</td>
          <td class="code"><pre>&#x27;/home/jpfilho/.nvm/versions/node/v18.16.0/bin&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>NVM_CD_FLAGS</td>
          <td class="code"><pre>&#x27;&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>NVM_DIR</td>
          <td class="code"><pre>&#x27;/home/jpfilho/.nvm&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>NVM_INC</td>
          <td class="code"><pre>&#x27;/home/jpfilho/.nvm/versions/node/v18.16.0/include/node&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>ORIGINAL_XDG_CURRENT_DESKTOP</td>
          <td class="code"><pre>&#x27;ubuntu:GNOME&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>PATH</td>
          <td class="code"><pre>&#x27;/home/jpfilho/.pyenv/libexec:/home/jpfilho/.pyenv/plugins/python-build/bin:/home/jpfilho/.pyenv/plugins/pyenv-virtualenv/bin:/home/jpfilho/.pyenv/plugins/pyenv-update/bin:/home/jpfilho/.pyenv/plugins/pyenv-doctor/bin:/home/jpfilho/.pyenv/shims:/home/jpfilho/.local/bin:/home/jpfilho/.pyenv/bin:/home/jpfilho/.nvm/versions/node/v18.16.0/bin:/home/jpfilho/.sdkman/candidates/maven/current/bin:/home/jpfilho/.sdkman/candidates/java/current/bin:/home/jpfilho/.local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:/snap/bin&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>PATH_INFO</td>
          <td class="code"><pre>&#x27;/webhook/messages/create&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>PWD</td>
          <td class="code"><pre>&#x27;/home/jpfilho/Documents/code-ws/python/webhook&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>PYENV_DIR</td>
          <td class="code"><pre>&#x27;/home/jpfilho/Documents/code-ws/python/webhook&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>PYENV_HOOK_PATH</td>
          <td class="code"><pre>&#x27;/home/jpfilho/.pyenv/pyenv.d:/usr/local/etc/pyenv.d:/etc/pyenv.d:/usr/lib/pyenv/hooks:/home/jpfilho/.pyenv/plugins/pyenv-virtualenv/etc/pyenv.d&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>PYENV_ROOT</td>
          <td class="code"><pre>&#x27;/home/jpfilho/.pyenv&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>PYENV_SHELL</td>
          <td class="code"><pre>&#x27;bash&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>PYENV_VERSION</td>
          <td class="code"><pre>&#x27;system&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>QT_ACCESSIBILITY</td>
          <td class="code"><pre>&#x27;1&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>QT_IM_MODULE</td>
          <td class="code"><pre>&#x27;ibus&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>QUERY_STRING</td>
          <td class="code"><pre>&#x27;phone=5588988562749&amp;period=05%2F23&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>REMOTE_ADDR</td>
          <td class="code"><pre>&#x27;127.0.0.1&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>REMOTE_HOST</td>
          <td class="code"><pre>&#x27;&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>REQUEST_METHOD</td>
          <td class="code"><pre>&#x27;POST&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>RUN_MAIN</td>
          <td class="code"><pre>&#x27;true&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SCRIPT_NAME</td>
          <td class="code"><pre>&#x27;&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SDKMAN_CANDIDATES_API</td>
          <td class="code"><pre>&#x27;********************&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SDKMAN_CANDIDATES_DIR</td>
          <td class="code"><pre>&#x27;/home/jpfilho/.sdkman/candidates&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SDKMAN_DIR</td>
          <td class="code"><pre>&#x27;/home/jpfilho/.sdkman&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SDKMAN_PLATFORM</td>
          <td class="code"><pre>&#x27;linuxx64&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SDKMAN_VERSION</td>
          <td class="code"><pre>&#x27;5.16.0&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SERVER_NAME</td>
          <td class="code"><pre>&#x27;localhost&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SERVER_PORT</td>
          <td class="code"><pre>&#x27;8000&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SERVER_PROTOCOL</td>
          <td class="code"><pre>&#x27;HTTP/1.1&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SERVER_SOFTWARE</td>
          <td class="code"><pre>&#x27;WSGIServer/0.2&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_MANAGER</td>
          <td class="code"><pre>&#x27;local/JPSERVER:@/tmp/.ICE-unix/2038,unix/JPSERVER:/tmp/.ICE-unix/2038&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SHELL</td>
          <td class="code"><pre>&#x27;/bin/bash&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SHLVL</td>
          <td class="code"><pre>&#x27;1&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SSH_AGENT_LAUNCHER</td>
          <td class="code"><pre>&#x27;openssh&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SSH_AUTH_SOCK</td>
          <td class="code"><pre>&#x27;/run/user/1000/keyring/ssh&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SYSTEMD_EXEC_PID</td>
          <td class="code"><pre>&#x27;2065&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>TERM</td>
          <td class="code"><pre>&#x27;xterm-256color&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>TERM_PROGRAM</td>
          <td class="code"><pre>&#x27;vscode&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>TERM_PROGRAM_VERSION</td>
          <td class="code"><pre>&#x27;1.78.2&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>TOKEN_API</td>
          <td class="code"><pre>&#x27;********************&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>TZ</td>
          <td class="code"><pre>&#x27;UTC&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>USER</td>
          <td class="code"><pre>&#x27;jpfilho&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>USERNAME</td>
          <td class="code"><pre>&#x27;jpfilho&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>VSCODE_GIT_ASKPASS_EXTRA_ARGS</td>
          <td class="code"><pre>&#x27;********************&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>VSCODE_GIT_ASKPASS_MAIN</td>
          <td class="code"><pre>&#x27;********************&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>VSCODE_GIT_ASKPASS_NODE</td>
          <td class="code"><pre>&#x27;********************&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>VSCODE_GIT_IPC_HANDLE</td>
          <td class="code"><pre>&#x27;/run/user/1000/vscode-git-1d8a16cec2.sock&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>WEBHOOK_API</td>
          <td class="code"><pre>&#x27;********************&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>WEB_URL</td>
          <td class="code"><pre>&#x27;https://woz.herokuapp.com&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>WINDOWPATH</td>
          <td class="code"><pre>&#x27;2&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>XAUTHORITY</td>
          <td class="code"><pre>&#x27;/run/user/1000/gdm/Xauthority&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>XDG_CONFIG_DIRS</td>
          <td class="code"><pre>&#x27;/etc/xdg/xdg-ubuntu:/etc/xdg&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>XDG_CURRENT_DESKTOP</td>
          <td class="code"><pre>&#x27;Unity&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>XDG_DATA_DIRS</td>
          <td class="code"><pre>&#x27;/home/jpfilho/snap/code/129/.local/share:/home/jpfilho/snap/code/129:/snap/code/129/usr/share:/usr/share/ubuntu:/usr/share/gnome:/usr/local/share/:/usr/share/:/var/lib/snapd/desktop&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>XDG_MENU_PREFIX</td>
          <td class="code"><pre>&#x27;gnome-&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>XDG_RUNTIME_DIR</td>
          <td class="code"><pre>&#x27;/run/user/1000&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>XDG_SESSION_CLASS</td>
          <td class="code"><pre>&#x27;user&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>XDG_SESSION_DESKTOP</td>
          <td class="code"><pre>&#x27;ubuntu&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>XDG_SESSION_TYPE</td>
          <td class="code"><pre>&#x27;x11&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>XMODIFIERS</td>
          <td class="code"><pre>&#x27;@im=ibus&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>wsgi.errors</td>
          <td class="code"><pre>&lt;_io.TextIOWrapper name=&#x27;&lt;stderr&gt;&#x27; mode=&#x27;w&#x27; encoding=&#x27;utf-8&#x27;&gt;</pre></td>
        </tr>
      
        <tr>
          <td>wsgi.file_wrapper</td>
          <td class="code"><pre>&lt;class &#x27;wsgiref.util.FileWrapper&#x27;&gt;</pre></td>
        </tr>
      
        <tr>
          <td>wsgi.input</td>
          <td class="code"><pre>&lt;django.core.handlers.wsgi.LimitedStream object at 0x7f7a1a0f2290&gt;</pre></td>
        </tr>
      
        <tr>
          <td>wsgi.multiprocess</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>wsgi.multithread</td>
          <td class="code"><pre>True</pre></td>
        </tr>
      
        <tr>
          <td>wsgi.run_once</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>wsgi.url_scheme</td>
          <td class="code"><pre>&#x27;http&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>wsgi.version</td>
          <td class="code"><pre>(1, 0)</pre></td>
        </tr>
      
    </tbody>
  </table>


  <h3 id="settings-info">Settings</h3>
  <h4>Using settings module <code>webhook.settings</code></h4>
  <table class="req">
    <thead>
      <tr>
        <th>Setting</th>
        <th>Value</th>
      </tr>
    </thead>
    <tbody>
      
        <tr>
          <td>ABSOLUTE_URL_OVERRIDES</td>
          <td class="code"><pre>{}</pre></td>
        </tr>
      
        <tr>
          <td>ADMINS</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>ALLOWED_HOSTS</td>
          <td class="code"><pre>[&#x27;*&#x27;]</pre></td>
        </tr>
      
        <tr>
          <td>APPEND_SLASH</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>AUTHENTICATION_BACKENDS</td>
          <td class="code"><pre>[&#x27;django.contrib.auth.backends.ModelBackend&#x27;]</pre></td>
        </tr>
      
        <tr>
          <td>AUTH_PASSWORD_VALIDATORS</td>
          <td class="code"><pre>&#x27;********************&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>AUTH_USER_MODEL</td>
          <td class="code"><pre>&#x27;auth.User&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>BASE_DIR</td>
          <td class="code"><pre>PosixPath(&#x27;/home/jpfilho/Documents/code-ws/python/webhook&#x27;)</pre></td>
        </tr>
      
        <tr>
          <td>BROKER_URL</td>
          <td class="code"><pre>&#x27;amqps://kzthoddb:3CziblJY4U4tFRNmARuMMdIDu8z53Ql6@fly.rmq.cloudamqp.com/kzthoddb&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>CACHES</td>
          <td class="code"><pre>{&#x27;default&#x27;: {&#x27;BACKEND&#x27;: &#x27;django.core.cache.backends.locmem.LocMemCache&#x27;}}</pre></td>
        </tr>
      
        <tr>
          <td>CACHE_MIDDLEWARE_ALIAS</td>
          <td class="code"><pre>&#x27;default&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>CACHE_MIDDLEWARE_KEY_PREFIX</td>
          <td class="code"><pre>&#x27;********************&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>CACHE_MIDDLEWARE_SECONDS</td>
          <td class="code"><pre>600</pre></td>
        </tr>
      
        <tr>
          <td>CELERY_BROKER_URL</td>
          <td class="code"><pre>&#x27;amqps://kzthoddb:3CziblJY4U4tFRNmARuMMdIDu8z53Ql6@fly.rmq.cloudamqp.com/kzthoddb&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>CSRF_COOKIE_AGE</td>
          <td class="code"><pre>31449600</pre></td>
        </tr>
      
        <tr>
          <td>CSRF_COOKIE_DOMAIN</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>CSRF_COOKIE_HTTPONLY</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>CSRF_COOKIE_MASKED</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>CSRF_COOKIE_NAME</td>
          <td class="code"><pre>&#x27;csrftoken&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>CSRF_COOKIE_PATH</td>
          <td class="code"><pre>&#x27;/&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>CSRF_COOKIE_SAMESITE</td>
          <td class="code"><pre>&#x27;Lax&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>CSRF_COOKIE_SECURE</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>CSRF_FAILURE_VIEW</td>
          <td class="code"><pre>&#x27;django.views.csrf.csrf_failure&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>CSRF_HEADER_NAME</td>
          <td class="code"><pre>&#x27;HTTP_X_CSRFTOKEN&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>CSRF_TRUSTED_ORIGINS</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>CSRF_USE_SESSIONS</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>DATABASES</td>
          <td class="code"><pre>{&#x27;default&#x27;: {&#x27;ATOMIC_REQUESTS&#x27;: False,
             &#x27;AUTOCOMMIT&#x27;: True,
             &#x27;CONN_HEALTH_CHECKS&#x27;: False,
             &#x27;CONN_MAX_AGE&#x27;: 0,
             &#x27;ENGINE&#x27;: &#x27;django.db.backends.postgresql&#x27;,
             &#x27;HOST&#x27;: &#x27;ep-young-feather-699075.us-east-1.aws.neon.tech&#x27;,
             &#x27;NAME&#x27;: &#x27;neondb&#x27;,
             &#x27;OPTIONS&#x27;: {},
             &#x27;PASSWORD&#x27;: &#x27;********************&#x27;,
             &#x27;PORT&#x27;: &#x27;5432&#x27;,
             &#x27;TEST&#x27;: {&#x27;CHARSET&#x27;: None,
                      &#x27;COLLATION&#x27;: None,
                      &#x27;MIGRATE&#x27;: True,
                      &#x27;MIRROR&#x27;: None,
                      &#x27;NAME&#x27;: None},
             &#x27;TIME_ZONE&#x27;: None,
             &#x27;USER&#x27;: &#x27;psousaj&#x27;}}</pre></td>
        </tr>
      
        <tr>
          <td>DATABASE_ROUTERS</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>DATA_UPLOAD_MAX_MEMORY_SIZE</td>
          <td class="code"><pre>2621440</pre></td>
        </tr>
      
        <tr>
          <td>DATA_UPLOAD_MAX_NUMBER_FIELDS</td>
          <td class="code"><pre>1000</pre></td>
        </tr>
      
        <tr>
          <td>DATA_UPLOAD_MAX_NUMBER_FILES</td>
          <td class="code"><pre>100</pre></td>
        </tr>
      
        <tr>
          <td>DATETIME_FORMAT</td>
          <td class="code"><pre>&#x27;N j, Y, P&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>DATETIME_INPUT_FORMATS</td>
          <td class="code"><pre>[&#x27;%Y-%m-%d %H:%M:%S&#x27;,
 &#x27;%Y-%m-%d %H:%M:%S.%f&#x27;,
 &#x27;%Y-%m-%d %H:%M&#x27;,
 &#x27;%m/%d/%Y %H:%M:%S&#x27;,
 &#x27;%m/%d/%Y %H:%M:%S.%f&#x27;,
 &#x27;%m/%d/%Y %H:%M&#x27;,
 &#x27;%m/%d/%y %H:%M:%S&#x27;,
 &#x27;%m/%d/%y %H:%M:%S.%f&#x27;,
 &#x27;%m/%d/%y %H:%M&#x27;]</pre></td>
        </tr>
      
        <tr>
          <td>DATE_FORMAT</td>
          <td class="code"><pre>&#x27;N j, Y&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>DATE_INPUT_FORMATS</td>
          <td class="code"><pre>[&#x27;%Y-%m-%d&#x27;,
 &#x27;%m/%d/%Y&#x27;,
 &#x27;%m/%d/%y&#x27;,
 &#x27;%b %d %Y&#x27;,
 &#x27;%b %d, %Y&#x27;,
 &#x27;%d %b %Y&#x27;,
 &#x27;%d %b, %Y&#x27;,
 &#x27;%B %d %Y&#x27;,
 &#x27;%B %d, %Y&#x27;,
 &#x27;%d %B %Y&#x27;,
 &#x27;%d %B, %Y&#x27;]</pre></td>
        </tr>
      
        <tr>
          <td>DEBUG</td>
          <td class="code"><pre>True</pre></td>
        </tr>
      
        <tr>
          <td>DEBUG_PROPAGATE_EXCEPTIONS</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>DECIMAL_SEPARATOR</td>
          <td class="code"><pre>&#x27;.&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>DEFAULT_AUTO_FIELD</td>
          <td class="code"><pre>&#x27;django.db.models.BigAutoField&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>DEFAULT_CHARSET</td>
          <td class="code"><pre>&#x27;utf-8&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>DEFAULT_EXCEPTION_REPORTER</td>
          <td class="code"><pre>&#x27;django.views.debug.ExceptionReporter&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>DEFAULT_EXCEPTION_REPORTER_FILTER</td>
          <td class="code"><pre>&#x27;django.views.debug.SafeExceptionReporterFilter&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>DEFAULT_FILE_STORAGE</td>
          <td class="code"><pre>&#x27;django.core.files.storage.FileSystemStorage&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>DEFAULT_FROM_EMAIL</td>
          <td class="code"><pre>&#x27;webmaster@localhost&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>DEFAULT_INDEX_TABLESPACE</td>
          <td class="code"><pre>&#x27;&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>DEFAULT_TABLESPACE</td>
          <td class="code"><pre>&#x27;&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>DISALLOWED_USER_AGENTS</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>EMAIL_BACKEND</td>
          <td class="code"><pre>&#x27;django.core.mail.backends.smtp.EmailBackend&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>EMAIL_HOST</td>
          <td class="code"><pre>&#x27;localhost&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>EMAIL_HOST_PASSWORD</td>
          <td class="code"><pre>&#x27;********************&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>EMAIL_HOST_USER</td>
          <td class="code"><pre>&#x27;&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>EMAIL_PORT</td>
          <td class="code"><pre>25</pre></td>
        </tr>
      
        <tr>
          <td>EMAIL_SSL_CERTFILE</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>EMAIL_SSL_KEYFILE</td>
          <td class="code"><pre>&#x27;********************&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>EMAIL_SUBJECT_PREFIX</td>
          <td class="code"><pre>&#x27;[Django] &#x27;</pre></td>
        </tr>
      
        <tr>
          <td>EMAIL_TIMEOUT</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>EMAIL_USE_LOCALTIME</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>EMAIL_USE_SSL</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>EMAIL_USE_TLS</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>FILE_UPLOAD_DIRECTORY_PERMISSIONS</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>FILE_UPLOAD_HANDLERS</td>
          <td class="code"><pre>[&#x27;django.core.files.uploadhandler.MemoryFileUploadHandler&#x27;,
 &#x27;django.core.files.uploadhandler.TemporaryFileUploadHandler&#x27;]</pre></td>
        </tr>
      
        <tr>
          <td>FILE_UPLOAD_MAX_MEMORY_SIZE</td>
          <td class="code"><pre>2621440</pre></td>
        </tr>
      
        <tr>
          <td>FILE_UPLOAD_PERMISSIONS</td>
          <td class="code"><pre>420</pre></td>
        </tr>
      
        <tr>
          <td>FILE_UPLOAD_TEMP_DIR</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>FIRST_DAY_OF_WEEK</td>
          <td class="code"><pre>0</pre></td>
        </tr>
      
        <tr>
          <td>FIXTURE_DIRS</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>FORCE_SCRIPT_NAME</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>FORMAT_MODULE_PATH</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>FORM_RENDERER</td>
          <td class="code"><pre>&#x27;django.forms.renderers.DjangoTemplates&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>IGNORABLE_404_URLS</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>INSTALLED_APPS</td>
          <td class="code"><pre>[&#x27;django.contrib.admin&#x27;,
 &#x27;django.contrib.auth&#x27;,
 &#x27;django.contrib.contenttypes&#x27;,
 &#x27;django.contrib.sessions&#x27;,
 &#x27;django.contrib.messages&#x27;,
 &#x27;django.contrib.staticfiles&#x27;,
 &#x27;drf_yasg&#x27;,
 &#x27;rest_framework&#x27;,
 &#x27;example&#x27;,
 &#x27;messages_api&#x27;,
 &#x27;celery&#x27;,
 &#x27;django_filters&#x27;]</pre></td>
        </tr>
      
        <tr>
          <td>INTERNAL_IPS</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>LANGUAGES</td>
          <td class="code"><pre>[(&#x27;af&#x27;, &#x27;Afrikaans&#x27;),
 (&#x27;ar&#x27;, &#x27;Arabic&#x27;),
 (&#x27;ar-dz&#x27;, &#x27;Algerian Arabic&#x27;),
 (&#x27;ast&#x27;, &#x27;Asturian&#x27;),
 (&#x27;az&#x27;, &#x27;Azerbaijani&#x27;),
 (&#x27;bg&#x27;, &#x27;Bulgarian&#x27;),
 (&#x27;be&#x27;, &#x27;Belarusian&#x27;),
 (&#x27;bn&#x27;, &#x27;Bengali&#x27;),
 (&#x27;br&#x27;, &#x27;Breton&#x27;),
 (&#x27;bs&#x27;, &#x27;Bosnian&#x27;),
 (&#x27;ca&#x27;, &#x27;Catalan&#x27;),
 (&#x27;ckb&#x27;, &#x27;Central Kurdish (Sorani)&#x27;),
 (&#x27;cs&#x27;, &#x27;Czech&#x27;),
 (&#x27;cy&#x27;, &#x27;Welsh&#x27;),
 (&#x27;da&#x27;, &#x27;Danish&#x27;),
 (&#x27;de&#x27;, &#x27;German&#x27;),
 (&#x27;dsb&#x27;, &#x27;Lower Sorbian&#x27;),
 (&#x27;el&#x27;, &#x27;Greek&#x27;),
 (&#x27;en&#x27;, &#x27;English&#x27;),
 (&#x27;en-au&#x27;, &#x27;Australian English&#x27;),
 (&#x27;en-gb&#x27;, &#x27;British English&#x27;),
 (&#x27;eo&#x27;, &#x27;Esperanto&#x27;),
 (&#x27;es&#x27;, &#x27;Spanish&#x27;),
 (&#x27;es-ar&#x27;, &#x27;Argentinian Spanish&#x27;),
 (&#x27;es-co&#x27;, &#x27;Colombian Spanish&#x27;),
 (&#x27;es-mx&#x27;, &#x27;Mexican Spanish&#x27;),
 (&#x27;es-ni&#x27;, &#x27;Nicaraguan Spanish&#x27;),
 (&#x27;es-ve&#x27;, &#x27;Venezuelan Spanish&#x27;),
 (&#x27;et&#x27;, &#x27;Estonian&#x27;),
 (&#x27;eu&#x27;, &#x27;Basque&#x27;),
 (&#x27;fa&#x27;, &#x27;Persian&#x27;),
 (&#x27;fi&#x27;, &#x27;Finnish&#x27;),
 (&#x27;fr&#x27;, &#x27;French&#x27;),
 (&#x27;fy&#x27;, &#x27;Frisian&#x27;),
 (&#x27;ga&#x27;, &#x27;Irish&#x27;),
 (&#x27;gd&#x27;, &#x27;Scottish Gaelic&#x27;),
 (&#x27;gl&#x27;, &#x27;Galician&#x27;),
 (&#x27;he&#x27;, &#x27;Hebrew&#x27;),
 (&#x27;hi&#x27;, &#x27;Hindi&#x27;),
 (&#x27;hr&#x27;, &#x27;Croatian&#x27;),
 (&#x27;hsb&#x27;, &#x27;Upper Sorbian&#x27;),
 (&#x27;hu&#x27;, &#x27;Hungarian&#x27;),
 (&#x27;hy&#x27;, &#x27;Armenian&#x27;),
 (&#x27;ia&#x27;, &#x27;Interlingua&#x27;),
 (&#x27;id&#x27;, &#x27;Indonesian&#x27;),
 (&#x27;ig&#x27;, &#x27;Igbo&#x27;),
 (&#x27;io&#x27;, &#x27;Ido&#x27;),
 (&#x27;is&#x27;, &#x27;Icelandic&#x27;),
 (&#x27;it&#x27;, &#x27;Italian&#x27;),
 (&#x27;ja&#x27;, &#x27;Japanese&#x27;),
 (&#x27;ka&#x27;, &#x27;Georgian&#x27;),
 (&#x27;kab&#x27;, &#x27;Kabyle&#x27;),
 (&#x27;kk&#x27;, &#x27;Kazakh&#x27;),
 (&#x27;km&#x27;, &#x27;Khmer&#x27;),
 (&#x27;kn&#x27;, &#x27;Kannada&#x27;),
 (&#x27;ko&#x27;, &#x27;Korean&#x27;),
 (&#x27;ky&#x27;, &#x27;Kyrgyz&#x27;),
 (&#x27;lb&#x27;, &#x27;Luxembourgish&#x27;),
 (&#x27;lt&#x27;, &#x27;Lithuanian&#x27;),
 (&#x27;lv&#x27;, &#x27;Latvian&#x27;),
 (&#x27;mk&#x27;, &#x27;Macedonian&#x27;),
 (&#x27;ml&#x27;, &#x27;Malayalam&#x27;),
 (&#x27;mn&#x27;, &#x27;Mongolian&#x27;),
 (&#x27;mr&#x27;, &#x27;Marathi&#x27;),
 (&#x27;ms&#x27;, &#x27;Malay&#x27;),
 (&#x27;my&#x27;, &#x27;Burmese&#x27;),
 (&#x27;nb&#x27;, &#x27;Norwegian Bokmål&#x27;),
 (&#x27;ne&#x27;, &#x27;Nepali&#x27;),
 (&#x27;nl&#x27;, &#x27;Dutch&#x27;),
 (&#x27;nn&#x27;, &#x27;Norwegian Nynorsk&#x27;),
 (&#x27;os&#x27;, &#x27;Ossetic&#x27;),
 (&#x27;pa&#x27;, &#x27;Punjabi&#x27;),
 (&#x27;pl&#x27;, &#x27;Polish&#x27;),
 (&#x27;pt&#x27;, &#x27;Portuguese&#x27;),
 (&#x27;pt-br&#x27;, &#x27;Brazilian Portuguese&#x27;),
 (&#x27;ro&#x27;, &#x27;Romanian&#x27;),
 (&#x27;ru&#x27;, &#x27;Russian&#x27;),
 (&#x27;sk&#x27;, &#x27;Slovak&#x27;),
 (&#x27;sl&#x27;, &#x27;Slovenian&#x27;),
 (&#x27;sq&#x27;, &#x27;Albanian&#x27;),
 (&#x27;sr&#x27;, &#x27;Serbian&#x27;),
 (&#x27;sr-latn&#x27;, &#x27;Serbian Latin&#x27;),
 (&#x27;sv&#x27;, &#x27;Swedish&#x27;),
 (&#x27;sw&#x27;, &#x27;Swahili&#x27;),
 (&#x27;ta&#x27;, &#x27;Tamil&#x27;),
 (&#x27;te&#x27;, &#x27;Telugu&#x27;),
 (&#x27;tg&#x27;, &#x27;Tajik&#x27;),
 (&#x27;th&#x27;, &#x27;Thai&#x27;),
 (&#x27;tk&#x27;, &#x27;Turkmen&#x27;),
 (&#x27;tr&#x27;, &#x27;Turkish&#x27;),
 (&#x27;tt&#x27;, &#x27;Tatar&#x27;),
 (&#x27;udm&#x27;, &#x27;Udmurt&#x27;),
 (&#x27;uk&#x27;, &#x27;Ukrainian&#x27;),
 (&#x27;ur&#x27;, &#x27;Urdu&#x27;),
 (&#x27;uz&#x27;, &#x27;Uzbek&#x27;),
 (&#x27;vi&#x27;, &#x27;Vietnamese&#x27;),
 (&#x27;zh-hans&#x27;, &#x27;Simplified Chinese&#x27;),
 (&#x27;zh-hant&#x27;, &#x27;Traditional Chinese&#x27;)]</pre></td>
        </tr>
      
        <tr>
          <td>LANGUAGES_BIDI</td>
          <td class="code"><pre>[&#x27;he&#x27;, &#x27;ar&#x27;, &#x27;ar-dz&#x27;, &#x27;ckb&#x27;, &#x27;fa&#x27;, &#x27;ur&#x27;]</pre></td>
        </tr>
      
        <tr>
          <td>LANGUAGE_CODE</td>
          <td class="code"><pre>&#x27;pt-BR&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>LANGUAGE_COOKIE_AGE</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>LANGUAGE_COOKIE_DOMAIN</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>LANGUAGE_COOKIE_HTTPONLY</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>LANGUAGE_COOKIE_NAME</td>
          <td class="code"><pre>&#x27;django_language&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>LANGUAGE_COOKIE_PATH</td>
          <td class="code"><pre>&#x27;/&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>LANGUAGE_COOKIE_SAMESITE</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>LANGUAGE_COOKIE_SECURE</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>LOCALE_PATHS</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>LOGGING</td>
          <td class="code"><pre>{}</pre></td>
        </tr>
      
        <tr>
          <td>LOGGING_CONFIG</td>
          <td class="code"><pre>&#x27;logging.config.dictConfig&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>LOGIN_REDIRECT_URL</td>
          <td class="code"><pre>&#x27;/accounts/profile/&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>LOGIN_URL</td>
          <td class="code"><pre>&#x27;/accounts/login/&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>LOGOUT_REDIRECT_URL</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>MANAGERS</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>MEDIA_ROOT</td>
          <td class="code"><pre>&#x27;&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>MEDIA_URL</td>
          <td class="code"><pre>&#x27;/&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>MESSAGE_STORAGE</td>
          <td class="code"><pre>&#x27;django.contrib.messages.storage.fallback.FallbackStorage&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>MIDDLEWARE</td>
          <td class="code"><pre>[&#x27;django.middleware.security.SecurityMiddleware&#x27;,
 &#x27;django.contrib.sessions.middleware.SessionMiddleware&#x27;,
 &#x27;django.middleware.common.CommonMiddleware&#x27;,
 &#x27;django.middleware.csrf.CsrfViewMiddleware&#x27;,
 &#x27;django.contrib.auth.middleware.AuthenticationMiddleware&#x27;,
 &#x27;django.contrib.messages.middleware.MessageMiddleware&#x27;,
 &#x27;django.middleware.clickjacking.XFrameOptionsMiddleware&#x27;]</pre></td>
        </tr>
      
        <tr>
          <td>MIGRATION_MODULES</td>
          <td class="code"><pre>{}</pre></td>
        </tr>
      
        <tr>
          <td>MONTH_DAY_FORMAT</td>
          <td class="code"><pre>&#x27;F j&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>NUMBER_GROUPING</td>
          <td class="code"><pre>0</pre></td>
        </tr>
      
        <tr>
          <td>PASSWORD_HASHERS</td>
          <td class="code"><pre>&#x27;********************&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>PASSWORD_RESET_TIMEOUT</td>
          <td class="code"><pre>&#x27;********************&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>PREPEND_WWW</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>ROOT_URLCONF</td>
          <td class="code"><pre>&#x27;webhook.urls&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SECRET_KEY</td>
          <td class="code"><pre>&#x27;********************&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SECRET_KEY_FALLBACKS</td>
          <td class="code"><pre>&#x27;********************&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SECURE_CONTENT_TYPE_NOSNIFF</td>
          <td class="code"><pre>True</pre></td>
        </tr>
      
        <tr>
          <td>SECURE_CROSS_ORIGIN_OPENER_POLICY</td>
          <td class="code"><pre>&#x27;same-origin&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SECURE_HSTS_INCLUDE_SUBDOMAINS</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>SECURE_HSTS_PRELOAD</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>SECURE_HSTS_SECONDS</td>
          <td class="code"><pre>0</pre></td>
        </tr>
      
        <tr>
          <td>SECURE_PROXY_SSL_HEADER</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>SECURE_REDIRECT_EXEMPT</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>SECURE_REFERRER_POLICY</td>
          <td class="code"><pre>&#x27;same-origin&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SECURE_SSL_HOST</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>SECURE_SSL_REDIRECT</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>SERVER_EMAIL</td>
          <td class="code"><pre>&#x27;root@localhost&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_CACHE_ALIAS</td>
          <td class="code"><pre>&#x27;default&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_COOKIE_AGE</td>
          <td class="code"><pre>1209600</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_COOKIE_DOMAIN</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_COOKIE_HTTPONLY</td>
          <td class="code"><pre>True</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_COOKIE_NAME</td>
          <td class="code"><pre>&#x27;sessionid&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_COOKIE_PATH</td>
          <td class="code"><pre>&#x27;/&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_COOKIE_SAMESITE</td>
          <td class="code"><pre>&#x27;Lax&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_COOKIE_SECURE</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_ENGINE</td>
          <td class="code"><pre>&#x27;django.contrib.sessions.backends.db&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_EXPIRE_AT_BROWSER_CLOSE</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_FILE_PATH</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_SAVE_EVERY_REQUEST</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_SERIALIZER</td>
          <td class="code"><pre>&#x27;django.contrib.sessions.serializers.JSONSerializer&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SETTINGS_MODULE</td>
          <td class="code"><pre>&#x27;webhook.settings&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SHORT_DATETIME_FORMAT</td>
          <td class="code"><pre>&#x27;m/d/Y P&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SHORT_DATE_FORMAT</td>
          <td class="code"><pre>&#x27;m/d/Y&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SIGNING_BACKEND</td>
          <td class="code"><pre>&#x27;django.core.signing.TimestampSigner&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SILENCED_SYSTEM_CHECKS</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>STATICFILES_DIRS</td>
          <td class="code"><pre>[&#x27;/home/jpfilho/Documents/code-ws/python/webhook/statics&#x27;]</pre></td>
        </tr>
      
        <tr>
          <td>STATICFILES_FINDERS</td>
          <td class="code"><pre>[&#x27;django.contrib.staticfiles.finders.FileSystemFinder&#x27;,
 &#x27;django.contrib.staticfiles.finders.AppDirectoriesFinder&#x27;]</pre></td>
        </tr>
      
        <tr>
          <td>STATICFILES_STORAGE</td>
          <td class="code"><pre>&#x27;django.contrib.staticfiles.storage.StaticFilesStorage&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>STATIC_ROOT</td>
          <td class="code"><pre>&#x27;/home/jpfilho/Documents/code-ws/python/webhook/static&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>STATIC_URL</td>
          <td class="code"><pre>&#x27;/static/&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>STORAGES</td>
          <td class="code"><pre>{&#x27;default&#x27;: {&#x27;BACKEND&#x27;: &#x27;django.core.files.storage.FileSystemStorage&#x27;},
 &#x27;staticfiles&#x27;: {&#x27;BACKEND&#x27;: &#x27;django.contrib.staticfiles.storage.StaticFilesStorage&#x27;}}</pre></td>
        </tr>
      
        <tr>
          <td>TEMPLATES</td>
          <td class="code"><pre>[{&#x27;APP_DIRS&#x27;: True,
  &#x27;BACKEND&#x27;: &#x27;django.template.backends.django.DjangoTemplates&#x27;,
  &#x27;DIRS&#x27;: [],
  &#x27;OPTIONS&#x27;: {&#x27;context_processors&#x27;: [&#x27;django.template.context_processors.debug&#x27;,
                                     &#x27;django.template.context_processors.request&#x27;,
                                     &#x27;django.contrib.auth.context_processors.auth&#x27;,
                                     &#x27;django.contrib.messages.context_processors.messages&#x27;]}}]</pre></td>
        </tr>
      
        <tr>
          <td>TEST_NON_SERIALIZED_APPS</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>TEST_RUNNER</td>
          <td class="code"><pre>&#x27;django.test.runner.DiscoverRunner&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>THOUSAND_SEPARATOR</td>
          <td class="code"><pre>&#x27;,&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>TIME_FORMAT</td>
          <td class="code"><pre>&#x27;P&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>TIME_INPUT_FORMATS</td>
          <td class="code"><pre>[&#x27;%H:%M:%S&#x27;, &#x27;%H:%M:%S.%f&#x27;, &#x27;%H:%M&#x27;]</pre></td>
        </tr>
      
        <tr>
          <td>TIME_ZONE</td>
          <td class="code"><pre>&#x27;UTC&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>USE_DEPRECATED_PYTZ</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>USE_I18N</td>
          <td class="code"><pre>True</pre></td>
        </tr>
      
        <tr>
          <td>USE_L10N</td>
          <td class="code"><pre>True</pre></td>
        </tr>
      
        <tr>
          <td>USE_THOUSAND_SEPARATOR</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>USE_TZ</td>
          <td class="code"><pre>True</pre></td>
        </tr>
      
        <tr>
          <td>USE_X_FORWARDED_HOST</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>USE_X_FORWARDED_PORT</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>WSGI_APPLICATION</td>
          <td class="code"><pre>&#x27;webhook.wsgi.app&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>X_FRAME_OPTIONS</td>
          <td class="code"><pre>&#x27;DENY&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>YEAR_MONTH_FORMAT</td>
          <td class="code"><pre>&#x27;F Y&#x27;</pre></td>
        </tr>
      
    </tbody>
  </table>

</div>

  <div id="explanation">
    <p>
      You’re seeing this error because you have <code>DEBUG = True</code> in your
      Django settings file. Change that to <code>False</code>, and Django will
      display a standard page generated by the handler for this status code.
    </p>
  </div>

</body>
</html>

21/05/2023|23:53:58 - messages_api.event -DEBUG- <Response [400]>-{"error":400,"message":"Message matching query does not exist."}
21/05/2023|23:53:59 - messages_api.event -DEBUG- <Response [400]>-{"error":400,"message":"Message matching query does not exist."}
21/05/2023|23:53:59 - messages_api.event -DEBUG- <Response [400]>-{"error":400,"message":"Message matching query does not exist."}
21/05/2023|23:54:58 - messages_api.event -DEBUG- <Response [400]>-{"error":400,"message":"Message matching query does not exist."}
21/05/2023|23:54:58 - messages_api.event -DEBUG- <Response [400]>-{"error":400,"message":"Message matching query does not exist."}
21/05/2023|23:54:59 - messages_api.event -DEBUG- <Response [400]>-{"error":400,"message":"Message matching query does not exist."}
21/05/2023|23:55:00 - messages_api.event -DEBUG- <Response [400]>-{"error":400,"message":"Message matching query does not exist."}
21/05/2023|23:55:00 - messages_api.event -DEBUG- <Response [400]>-{"error":400,"message":"Message matching query does not exist."}
21/05/2023|23:55:13 - webhook.views -INFO- Received webhook request
{'event': 'message.created', 'data': {'id': '18dfb6ab-ffd7-4e3f-ad45-682ab380b458', 'isFromMe': True, 'sent': True, 'type': 'chat', 'timestamp': '2023-05-21T23:55:12.000Z', 'data': {'ack': 0, 'isNew': True, 'isFirst': False}, 'visible': True, 'accountId': '966b70ba-27d8-43ae-a295-35e59f0007be', 'contactId': '79db7607-6088-44c1-a010-ed4ef39d4f37', 'fromId': 'e12d3a56-0c52-43ac-b33c-15c399eb06d4', 'serviceId': '83108c28-14f7-4646-acb8-dab165397fd5', 'toId': None, 'userId': '3f4cc332-516e-4f48-aff2-df6eaa2e5034', 'ticketId': 'e5a453e9-6cb1-476e-b416-3b334b0bc61a', 'ticketUserId': None, 'ticketDepartmentId': None, 'quotedMessageId': None, 'origin': 'user', 'hsmId': None, 'text': 'Cria mizera', 'obfuscated': False, 'files': None, 'quotedMessage': None, 'isFromBot': False}, 'webhookId': '27b4c18d-2ab0-4c70-a592-46bbe7e00bc8', 'timestamp': '2023-05-21T23:55:13.110Z'}
21/05/2023|23:55:13 - webhook.views -INFO- Received webhook request
{'event': 'message.updated', 'data': {'id': '18dfb6ab-ffd7-4e3f-ad45-682ab380b458', 'isFromMe': True, 'sent': True, 'type': 'chat', 'timestamp': '2023-05-21T23:55:12.000Z', 'data': {'ack': 1, 'isNew': True, 'isFirst': False}, 'visible': True, 'accountId': '966b70ba-27d8-43ae-a295-35e59f0007be', 'contactId': '79db7607-6088-44c1-a010-ed4ef39d4f37', 'fromId': 'e12d3a56-0c52-43ac-b33c-15c399eb06d4', 'serviceId': '83108c28-14f7-4646-acb8-dab165397fd5', 'toId': None, 'userId': '3f4cc332-516e-4f48-aff2-df6eaa2e5034', 'ticketId': 'e5a453e9-6cb1-476e-b416-3b334b0bc61a', 'ticketUserId': '3f4cc332-516e-4f48-aff2-df6eaa2e5034', 'ticketDepartmentId': 'a78046d7-809d-4cdb-a72a-31dfbc47d862', 'quotedMessageId': None, 'origin': 'user', 'hsmId': None, 'text': 'Cria mizera', 'obfuscated': False, 'files': None, 'quotedMessage': None, 'isFromBot': False}, 'webhookId': '27b4c18d-2ab0-4c70-a592-46bbe7e00bc8', 'timestamp': '2023-05-21T23:55:13.203Z'}
21/05/2023|23:55:14 - webhook.views -INFO- Received webhook request
{'event': 'message.updated', 'data': {'id': '18dfb6ab-ffd7-4e3f-ad45-682ab380b458', 'isFromMe': True, 'sent': True, 'type': 'chat', 'timestamp': '2023-05-21T23:55:12.000Z', 'data': {'ack': 3, 'isNew': True, 'isFirst': False}, 'visible': True, 'accountId': '966b70ba-27d8-43ae-a295-35e59f0007be', 'contactId': '79db7607-6088-44c1-a010-ed4ef39d4f37', 'fromId': 'e12d3a56-0c52-43ac-b33c-15c399eb06d4', 'serviceId': '83108c28-14f7-4646-acb8-dab165397fd5', 'toId': None, 'userId': '3f4cc332-516e-4f48-aff2-df6eaa2e5034', 'ticketId': 'e5a453e9-6cb1-476e-b416-3b334b0bc61a', 'ticketUserId': '3f4cc332-516e-4f48-aff2-df6eaa2e5034', 'ticketDepartmentId': 'a78046d7-809d-4cdb-a72a-31dfbc47d862', 'quotedMessageId': None, 'origin': 'user', 'hsmId': None, 'text': 'Cria mizera', 'obfuscated': False, 'files': None, 'quotedMessage': None, 'isFromBot': False}, 'webhookId': '27b4c18d-2ab0-4c70-a592-46bbe7e00bc8', 'timestamp': '2023-05-21T23:55:13.452Z'}
21/05/2023|23:55:17 - messages_api.event -DEBUG- <Response [400]>-{"error":400,"message":"Message matching query does not exist."}
21/05/2023|23:55:17 - messages_api.event -DEBUG- <Response [400]>-{"error":400,"message":"Message matching query does not exist."}
21/05/2023|23:55:19 - messages_api.event -DEBUG- Failed to create message_id: 18dfb6ab-ffd7-4e3f-ad45-682ab380b458
<Response [500]>-<!DOCTYPE html>
<html lang="en">
<head>
  <meta http-equiv="content-type" content="text/html; charset=utf-8">
  <meta name="robots" content="NONE,NOARCHIVE">
  <title>ValidationError
          at /webhook/messages/create</title>
  <style type="text/css">
    html * { padding:0; margin:0; }
    body * { padding:10px 20px; }
    body * * { padding:0; }
    body { font:small sans-serif; background-color:#fff; color:#000; }
    body>div { border-bottom:1px solid #ddd; }
    h1 { font-weight:normal; }
    h2 { margin-bottom:.8em; }
    h3 { margin:1em 0 .5em 0; }
    h4 { margin:0 0 .5em 0; font-weight: normal; }
    code, pre { font-size: 100%; white-space: pre-wrap; word-break: break-word; }
    summary { cursor: pointer; }
    table { border:1px solid #ccc; border-collapse: collapse; width:100%; background:white; }
    tbody td, tbody th { vertical-align:top; padding:2px 3px; }
    thead th {
      padding:1px 6px 1px 3px; background:#fefefe; text-align:left;
      font-weight:normal; font-size:11px; border:1px solid #ddd;
    }
    tbody th { width:12em; text-align:right; color:#666; padding-right:.5em; }
    table.vars { margin:5px 10px 2px 40px; width: auto; }
    table.vars td, table.req td { font-family:monospace; }
    table td.code { width:100%; }
    table td.code pre { overflow:hidden; }
    table.source th { color:#666; }
    table.source td { font-family:monospace; white-space:pre; border-bottom:1px solid #eee; }
    ul.traceback { list-style-type:none; color: #222; }
    ul.traceback li.cause { word-break: break-word; }
    ul.traceback li.frame { padding-bottom:1em; color:#4f4f4f; }
    ul.traceback li.user { background-color:#e0e0e0; color:#000 }
    div.context { padding:10px 0; overflow:hidden; }
    div.context ol { padding-left:30px; margin:0 10px; list-style-position: inside; }
    div.context ol li { font-family:monospace; white-space:pre; color:#777; cursor:pointer; padding-left: 2px; }
    div.context ol li pre { display:inline; }
    div.context ol.context-line li { color:#464646; background-color:#dfdfdf; padding: 3px 2px; }
    div.context ol.context-line li span { position:absolute; right:32px; }
    .user div.context ol.context-line li { background-color:#bbb; color:#000; }
    .user div.context ol li { color:#666; }
    div.commands, summary.commands { margin-left: 40px; }
    div.commands a, summary.commands { color:#555; text-decoration:none; }
    .user div.commands a { color: black; }
    #summary { background: #ffc; }
    #summary h2 { font-weight: normal; color: #666; }
    #explanation { background:#eee; }
    #template, #template-not-exist { background:#f6f6f6; }
    #template-not-exist ul { margin: 0 0 10px 20px; }
    #template-not-exist .postmortem-section { margin-bottom: 3px; }
    #unicode-hint { background:#eee; }
    #traceback { background:#eee; }
    #requestinfo { background:#f6f6f6; padding-left:120px; }
    #summary table { border:none; background:transparent; }
    #requestinfo h2, #requestinfo h3 { position:relative; margin-left:-100px; }
    #requestinfo h3 { margin-bottom:-1em; }
    .error { background: #ffc; }
    .specific { color:#cc3300; font-weight:bold; }
    h2 span.commands { font-size:.7em; font-weight:normal; }
    span.commands a:link {color:#5E5694;}
    pre.exception_value { font-family: sans-serif; color: #575757; font-size: 1.5em; margin: 10px 0 10px 0; }
    .append-bottom { margin-bottom: 10px; }
    .fname { user-select: all; }
  </style>
  
  <script>
    function hideAll(elems) {
      for (var e = 0; e < elems.length; e++) {
        elems[e].style.display = 'none';
      }
    }
    window.onload = function() {
      hideAll(document.querySelectorAll('ol.pre-context'));
      hideAll(document.querySelectorAll('ol.post-context'));
      hideAll(document.querySelectorAll('div.pastebin'));
    }
    function toggle() {
      for (var i = 0; i < arguments.length; i++) {
        var e = document.getElementById(arguments[i]);
        if (e) {
          e.style.display = e.style.display == 'none' ? 'block': 'none';
        }
      }
      return false;
    }
    function switchPastebinFriendly(link) {
      s1 = "Switch to copy-and-paste view";
      s2 = "Switch back to interactive view";
      link.textContent = link.textContent.trim() == s1 ? s2: s1;
      toggle('browserTraceback', 'pastebinTraceback');
      return false;
    }
  </script>
  
</head>
<body>
<div id="summary">
  <h1>ValidationError
       at /webhook/messages/create</h1>
  <pre class="exception_value">[&#x27;o valor “[True]”  deve ser True ou False.&#x27;]</pre>
  <table class="meta">

    <tr>
      <th>Request Method:</th>
      <td>POST</td>
    </tr>
    <tr>
      <th>Request URL:</th>
      <td>http://woz.serveo.net/webhook/messages/create?phone=5588988562749&amp;period=05%2F23</td>
    </tr>

    <tr>
      <th>Django Version:</th>
      <td>4.2.1</td>
    </tr>

    <tr>
      <th>Exception Type:</th>
      <td>ValidationError</td>
    </tr>


    <tr>
      <th>Exception Value:</th>
      <td><pre>[&#x27;o valor “[True]”  deve ser True ou False.&#x27;]</pre></td>
    </tr>


    <tr>
      <th>Exception Location:</th>
      <td><span class="fname">/home/jpfilho/.local/lib/python3.10/site-packages/django/db/models/fields/__init__.py</span>, line 1112, in to_python</td>
    </tr>


    <tr>
      <th>Raised during:</th>
      <td>messages_api.views.MessageViewSet</td>
    </tr>

    <tr>
      <th>Python Executable:</th>
      <td>/usr/bin/python3</td>
    </tr>
    <tr>
      <th>Python Version:</th>
      <td>3.10.7</td>
    </tr>
    <tr>
      <th>Python Path:</th>
      <td><pre>[&#x27;/home/jpfilho/Documents/code-ws/python/webhook&#x27;,
 &#x27;/home/jpfilho/Documents/code-ws/python/webhook&#x27;,
 &#x27;/usr/lib/python310.zip&#x27;,
 &#x27;/usr/lib/python3.10&#x27;,
 &#x27;/usr/lib/python3.10/lib-dynload&#x27;,
 &#x27;/home/jpfilho/.local/lib/python3.10/site-packages&#x27;,
 &#x27;/usr/local/lib/python3.10/dist-packages&#x27;,
 &#x27;/usr/lib/python3/dist-packages&#x27;]</pre></td>
    </tr>
    <tr>
      <th>Server time:</th>
      <td>Sun, 21 May 2023 23:55:18 +0000</td>
    </tr>
  </table>
</div>




<div id="traceback">
  <h2>Traceback <span class="commands"><a href="#" onclick="return switchPastebinFriendly(this);">
    Switch to copy-and-paste view</a></span>
  </h2>
  <div id="browserTraceback">
    <ul class="traceback">
      
        
        <li class="frame django">
          
            <code class="fname">/home/jpfilho/.local/lib/python3.10/site-packages/django/core/handlers/exception.py</code>, line 55, in inner
          

          
            <div class="context" id="c139828172982848">
              
                <ol start="48" class="pre-context" id="pre139828172982848">
                
                  <li onclick="toggle('pre139828172982848', 'post139828172982848')"><pre></pre></li>
                
                  <li onclick="toggle('pre139828172982848', 'post139828172982848')"><pre>        return inner</pre></li>
                
                  <li onclick="toggle('pre139828172982848', 'post139828172982848')"><pre>    else:</pre></li>
                
                  <li onclick="toggle('pre139828172982848', 'post139828172982848')"><pre></pre></li>
                
                  <li onclick="toggle('pre139828172982848', 'post139828172982848')"><pre>        @wraps(get_response)</pre></li>
                
                  <li onclick="toggle('pre139828172982848', 'post139828172982848')"><pre>        def inner(request):</pre></li>
                
                  <li onclick="toggle('pre139828172982848', 'post139828172982848')"><pre>            try:</pre></li>
                
                </ol>
              
              <ol start="55" class="context-line">
                <li onclick="toggle('pre139828172982848', 'post139828172982848')"><pre>                response = get_response(request)</pre> <span>…</span></li>
              </ol>
              
                <ol start='56' class="post-context" id="post139828172982848">
                  
                  <li onclick="toggle('pre139828172982848', 'post139828172982848')"><pre>            except Exception as exc:</pre></li>
                  
                  <li onclick="toggle('pre139828172982848', 'post139828172982848')"><pre>                response = response_for_exception(request, exc)</pre></li>
                  
                  <li onclick="toggle('pre139828172982848', 'post139828172982848')"><pre>            return response</pre></li>
                  
                  <li onclick="toggle('pre139828172982848', 'post139828172982848')"><pre></pre></li>
                  
                  <li onclick="toggle('pre139828172982848', 'post139828172982848')"><pre>        return inner</pre></li>
                  
                  <li onclick="toggle('pre139828172982848', 'post139828172982848')"><pre></pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v139828172982848">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>exc</td>
                    <td class="code"><pre>ValidationError([&#x27;o valor “[True]”  deve ser True ou False.&#x27;])</pre></td>
                  </tr>
                
                  <tr>
                    <td>get_response</td>
                    <td class="code"><pre>&lt;bound method BaseHandler._get_response of &lt;django.core.handlers.wsgi.WSGIHandler object at 0x7f2c4953bf10&gt;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>request</td>
                    <td class="code"><pre>&lt;WSGIRequest: POST &#x27;/webhook/messages/create?phone=5588988562749&amp;period=05%2F23&#x27;&gt;</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
        <li class="frame django">
          
            <code class="fname">/home/jpfilho/.local/lib/python3.10/site-packages/django/core/handlers/base.py</code>, line 197, in _get_response
          

          
            <div class="context" id="c139828173451648">
              
                <ol start="190" class="pre-context" id="pre139828173451648">
                
                  <li onclick="toggle('pre139828173451648', 'post139828173451648')"><pre></pre></li>
                
                  <li onclick="toggle('pre139828173451648', 'post139828173451648')"><pre>        if response is None:</pre></li>
                
                  <li onclick="toggle('pre139828173451648', 'post139828173451648')"><pre>            wrapped_callback = self.make_view_atomic(callback)</pre></li>
                
                  <li onclick="toggle('pre139828173451648', 'post139828173451648')"><pre>            # If it is an asynchronous view, run it in a subthread.</pre></li>
                
                  <li onclick="toggle('pre139828173451648', 'post139828173451648')"><pre>            if iscoroutinefunction(wrapped_callback):</pre></li>
                
                  <li onclick="toggle('pre139828173451648', 'post139828173451648')"><pre>                wrapped_callback = async_to_sync(wrapped_callback)</pre></li>
                
                  <li onclick="toggle('pre139828173451648', 'post139828173451648')"><pre>            try:</pre></li>
                
                </ol>
              
              <ol start="197" class="context-line">
                <li onclick="toggle('pre139828173451648', 'post139828173451648')"><pre>                response = wrapped_callback(request, *callback_args, **callback_kwargs)</pre> <span>…</span></li>
              </ol>
              
                <ol start='198' class="post-context" id="post139828173451648">
                  
                  <li onclick="toggle('pre139828173451648', 'post139828173451648')"><pre>            except Exception as e:</pre></li>
                  
                  <li onclick="toggle('pre139828173451648', 'post139828173451648')"><pre>                response = self.process_exception_by_middleware(e, request)</pre></li>
                  
                  <li onclick="toggle('pre139828173451648', 'post139828173451648')"><pre>                if response is None:</pre></li>
                  
                  <li onclick="toggle('pre139828173451648', 'post139828173451648')"><pre>                    raise</pre></li>
                  
                  <li onclick="toggle('pre139828173451648', 'post139828173451648')"><pre></pre></li>
                  
                  <li onclick="toggle('pre139828173451648', 'post139828173451648')"><pre>        # Complain if the view returned None (a common error).</pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v139828173451648">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>callback</td>
                    <td class="code"><pre>&lt;function MessageViewSet at 0x7f2c49de6560&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>callback_args</td>
                    <td class="code"><pre>()</pre></td>
                  </tr>
                
                  <tr>
                    <td>callback_kwargs</td>
                    <td class="code"><pre>{}</pre></td>
                  </tr>
                
                  <tr>
                    <td>middleware_method</td>
                    <td class="code"><pre>&lt;bound method CsrfViewMiddleware.process_view of &lt;CsrfViewMiddleware get_response=convert_exception_to_response.&lt;locals&gt;.inner&gt;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>request</td>
                    <td class="code"><pre>&lt;WSGIRequest: POST &#x27;/webhook/messages/create?phone=5588988562749&amp;period=05%2F23&#x27;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>response</td>
                    <td class="code"><pre>None</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;django.core.handlers.wsgi.WSGIHandler object at 0x7f2c4953bf10&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>wrapped_callback</td>
                    <td class="code"><pre>&lt;function MessageViewSet at 0x7f2c49de6560&gt;</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
        <li class="frame django">
          
            <code class="fname">/home/jpfilho/.local/lib/python3.10/site-packages/django/views/decorators/csrf.py</code>, line 56, in wrapper_view
          

          
            <div class="context" id="c139828173444160">
              
                <ol start="49" class="pre-context" id="pre139828173444160">
                
                  <li onclick="toggle('pre139828173444160', 'post139828173444160')"><pre>def csrf_exempt(view_func):</pre></li>
                
                  <li onclick="toggle('pre139828173444160', 'post139828173444160')"><pre>    &quot;&quot;&quot;Mark a view function as being exempt from the CSRF view protection.&quot;&quot;&quot;</pre></li>
                
                  <li onclick="toggle('pre139828173444160', 'post139828173444160')"><pre></pre></li>
                
                  <li onclick="toggle('pre139828173444160', 'post139828173444160')"><pre>    # view_func.csrf_exempt = True would also work, but decorators are nicer</pre></li>
                
                  <li onclick="toggle('pre139828173444160', 'post139828173444160')"><pre>    # if they don&#x27;t have side effects, so return a new function.</pre></li>
                
                  <li onclick="toggle('pre139828173444160', 'post139828173444160')"><pre>    @wraps(view_func)</pre></li>
                
                  <li onclick="toggle('pre139828173444160', 'post139828173444160')"><pre>    def wrapper_view(*args, **kwargs):</pre></li>
                
                </ol>
              
              <ol start="56" class="context-line">
                <li onclick="toggle('pre139828173444160', 'post139828173444160')"><pre>        return view_func(*args, **kwargs)</pre> <span>…</span></li>
              </ol>
              
                <ol start='57' class="post-context" id="post139828173444160">
                  
                  <li onclick="toggle('pre139828173444160', 'post139828173444160')"><pre></pre></li>
                  
                  <li onclick="toggle('pre139828173444160', 'post139828173444160')"><pre>    wrapper_view.csrf_exempt = True</pre></li>
                  
                  <li onclick="toggle('pre139828173444160', 'post139828173444160')"><pre>    return wrapper_view</pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v139828173444160">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>args</td>
                    <td class="code"><pre>(&lt;WSGIRequest: POST &#x27;/webhook/messages/create?phone=5588988562749&amp;period=05%2F23&#x27;&gt;,)</pre></td>
                  </tr>
                
                  <tr>
                    <td>kwargs</td>
                    <td class="code"><pre>{}</pre></td>
                  </tr>
                
                  <tr>
                    <td>view_func</td>
                    <td class="code"><pre>&lt;function MessageViewSet at 0x7f2c49de64d0&gt;</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
        <li class="frame user">
          
            <code class="fname">/home/jpfilho/.local/lib/python3.10/site-packages/rest_framework/viewsets.py</code>, line 125, in view
          

          
            <div class="context" id="c139828173451392">
              
                <ol start="118" class="pre-context" id="pre139828173451392">
                
                  <li onclick="toggle('pre139828173451392', 'post139828173451392')"><pre>                setattr(self, method, handler)</pre></li>
                
                  <li onclick="toggle('pre139828173451392', 'post139828173451392')"><pre></pre></li>
                
                  <li onclick="toggle('pre139828173451392', 'post139828173451392')"><pre>            self.request = request</pre></li>
                
                  <li onclick="toggle('pre139828173451392', 'post139828173451392')"><pre>            self.args = args</pre></li>
                
                  <li onclick="toggle('pre139828173451392', 'post139828173451392')"><pre>            self.kwargs = kwargs</pre></li>
                
                  <li onclick="toggle('pre139828173451392', 'post139828173451392')"><pre></pre></li>
                
                  <li onclick="toggle('pre139828173451392', 'post139828173451392')"><pre>            # And continue as usual</pre></li>
                
                </ol>
              
              <ol start="125" class="context-line">
                <li onclick="toggle('pre139828173451392', 'post139828173451392')"><pre>            return self.dispatch(request, *args, **kwargs)</pre> <span>…</span></li>
              </ol>
              
                <ol start='126' class="post-context" id="post139828173451392">
                  
                  <li onclick="toggle('pre139828173451392', 'post139828173451392')"><pre></pre></li>
                  
                  <li onclick="toggle('pre139828173451392', 'post139828173451392')"><pre>        # take name and docstring from class</pre></li>
                  
                  <li onclick="toggle('pre139828173451392', 'post139828173451392')"><pre>        update_wrapper(view, cls, updated=())</pre></li>
                  
                  <li onclick="toggle('pre139828173451392', 'post139828173451392')"><pre></pre></li>
                  
                  <li onclick="toggle('pre139828173451392', 'post139828173451392')"><pre>        # and possible attributes set by decorators</pre></li>
                  
                  <li onclick="toggle('pre139828173451392', 'post139828173451392')"><pre>        # like csrf_exempt from dispatch</pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v139828173451392">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>action</td>
                    <td class="code"><pre>&#x27;create&#x27;</pre></td>
                  </tr>
                
                  <tr>
                    <td>actions</td>
                    <td class="code"><pre>{&#x27;post&#x27;: &#x27;create&#x27;}</pre></td>
                  </tr>
                
                  <tr>
                    <td>args</td>
                    <td class="code"><pre>()</pre></td>
                  </tr>
                
                  <tr>
                    <td>cls</td>
                    <td class="code"><pre>&lt;class &#x27;messages_api.views.MessageViewSet&#x27;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>handler</td>
                    <td class="code"><pre>&lt;bound method MessageViewSet.create of &lt;messages_api.views.MessageViewSet object at 0x7f2c4895a290&gt;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>initkwargs</td>
                    <td class="code"><pre>{}</pre></td>
                  </tr>
                
                  <tr>
                    <td>kwargs</td>
                    <td class="code"><pre>{}</pre></td>
                  </tr>
                
                  <tr>
                    <td>method</td>
                    <td class="code"><pre>&#x27;post&#x27;</pre></td>
                  </tr>
                
                  <tr>
                    <td>request</td>
                    <td class="code"><pre>&lt;WSGIRequest: POST &#x27;/webhook/messages/create?phone=5588988562749&amp;period=05%2F23&#x27;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;messages_api.views.MessageViewSet object at 0x7f2c4895a290&gt;</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
        <li class="frame user">
          
            <code class="fname">/home/jpfilho/.local/lib/python3.10/site-packages/rest_framework/views.py</code>, line 509, in dispatch
          

          
            <div class="context" id="c139828172993408">
              
                <ol start="502" class="pre-context" id="pre139828172993408">
                
                  <li onclick="toggle('pre139828172993408', 'post139828172993408')"><pre>                                  self.http_method_not_allowed)</pre></li>
                
                  <li onclick="toggle('pre139828172993408', 'post139828172993408')"><pre>            else:</pre></li>
                
                  <li onclick="toggle('pre139828172993408', 'post139828172993408')"><pre>                handler = self.http_method_not_allowed</pre></li>
                
                  <li onclick="toggle('pre139828172993408', 'post139828172993408')"><pre></pre></li>
                
                  <li onclick="toggle('pre139828172993408', 'post139828172993408')"><pre>            response = handler(request, *args, **kwargs)</pre></li>
                
                  <li onclick="toggle('pre139828172993408', 'post139828172993408')"><pre></pre></li>
                
                  <li onclick="toggle('pre139828172993408', 'post139828172993408')"><pre>        except Exception as exc:</pre></li>
                
                </ol>
              
              <ol start="509" class="context-line">
                <li onclick="toggle('pre139828172993408', 'post139828172993408')"><pre>            response = self.handle_exception(exc)</pre> <span>…</span></li>
              </ol>
              
                <ol start='510' class="post-context" id="post139828172993408">
                  
                  <li onclick="toggle('pre139828172993408', 'post139828172993408')"><pre></pre></li>
                  
                  <li onclick="toggle('pre139828172993408', 'post139828172993408')"><pre>        self.response = self.finalize_response(request, response, *args, **kwargs)</pre></li>
                  
                  <li onclick="toggle('pre139828172993408', 'post139828172993408')"><pre>        return self.response</pre></li>
                  
                  <li onclick="toggle('pre139828172993408', 'post139828172993408')"><pre></pre></li>
                  
                  <li onclick="toggle('pre139828172993408', 'post139828172993408')"><pre>    def options(self, request, *args, **kwargs):</pre></li>
                  
                  <li onclick="toggle('pre139828172993408', 'post139828172993408')"><pre>        &quot;&quot;&quot;</pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v139828172993408">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>args</td>
                    <td class="code"><pre>()</pre></td>
                  </tr>
                
                  <tr>
                    <td>handler</td>
                    <td class="code"><pre>&lt;bound method MessageViewSet.create of &lt;messages_api.views.MessageViewSet object at 0x7f2c4895a290&gt;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>kwargs</td>
                    <td class="code"><pre>{}</pre></td>
                  </tr>
                
                  <tr>
                    <td>request</td>
                    <td class="code"><pre>&lt;rest_framework.request.Request: POST &#x27;/webhook/messages/create?phone=5588988562749&amp;period=05%2F23&#x27;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;messages_api.views.MessageViewSet object at 0x7f2c4895a290&gt;</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
        <li class="frame user">
          
            <code class="fname">/home/jpfilho/.local/lib/python3.10/site-packages/rest_framework/views.py</code>, line 469, in handle_exception
          

          
            <div class="context" id="c139828172991744">
              
                <ol start="462" class="pre-context" id="pre139828172991744">
                
                  <li onclick="toggle('pre139828172991744', 'post139828172991744')"><pre></pre></li>
                
                  <li onclick="toggle('pre139828172991744', 'post139828172991744')"><pre>        exception_handler = self.get_exception_handler()</pre></li>
                
                  <li onclick="toggle('pre139828172991744', 'post139828172991744')"><pre></pre></li>
                
                  <li onclick="toggle('pre139828172991744', 'post139828172991744')"><pre>        context = self.get_exception_handler_context()</pre></li>
                
                  <li onclick="toggle('pre139828172991744', 'post139828172991744')"><pre>        response = exception_handler(exc, context)</pre></li>
                
                  <li onclick="toggle('pre139828172991744', 'post139828172991744')"><pre></pre></li>
                
                  <li onclick="toggle('pre139828172991744', 'post139828172991744')"><pre>        if response is None:</pre></li>
                
                </ol>
              
              <ol start="469" class="context-line">
                <li onclick="toggle('pre139828172991744', 'post139828172991744')"><pre>            self.raise_uncaught_exception(exc)</pre> <span>…</span></li>
              </ol>
              
                <ol start='470' class="post-context" id="post139828172991744">
                  
                  <li onclick="toggle('pre139828172991744', 'post139828172991744')"><pre></pre></li>
                  
                  <li onclick="toggle('pre139828172991744', 'post139828172991744')"><pre>        response.exception = True</pre></li>
                  
                  <li onclick="toggle('pre139828172991744', 'post139828172991744')"><pre>        return response</pre></li>
                  
                  <li onclick="toggle('pre139828172991744', 'post139828172991744')"><pre></pre></li>
                  
                  <li onclick="toggle('pre139828172991744', 'post139828172991744')"><pre>    def raise_uncaught_exception(self, exc):</pre></li>
                  
                  <li onclick="toggle('pre139828172991744', 'post139828172991744')"><pre>        if settings.DEBUG:</pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v139828172991744">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>context</td>
                    <td class="code"><pre>{&#x27;args&#x27;: (),
 &#x27;kwargs&#x27;: {},
 &#x27;request&#x27;: &lt;rest_framework.request.Request: POST &#x27;/webhook/messages/create?phone=5588988562749&amp;period=05%2F23&#x27;&gt;,
 &#x27;view&#x27;: &lt;messages_api.views.MessageViewSet object at 0x7f2c4895a290&gt;}</pre></td>
                  </tr>
                
                  <tr>
                    <td>exc</td>
                    <td class="code"><pre>ValidationError([&#x27;o valor “[True]”  deve ser True ou False.&#x27;])</pre></td>
                  </tr>
                
                  <tr>
                    <td>exception_handler</td>
                    <td class="code"><pre>&lt;function exception_handler at 0x7f2c49da8700&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>response</td>
                    <td class="code"><pre>None</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;messages_api.views.MessageViewSet object at 0x7f2c4895a290&gt;</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
        <li class="frame user">
          
            <code class="fname">/home/jpfilho/.local/lib/python3.10/site-packages/rest_framework/views.py</code>, line 480, in raise_uncaught_exception
          

          
            <div class="context" id="c139828185480384">
              
                <ol start="473" class="pre-context" id="pre139828185480384">
                
                  <li onclick="toggle('pre139828185480384', 'post139828185480384')"><pre></pre></li>
                
                  <li onclick="toggle('pre139828185480384', 'post139828185480384')"><pre>    def raise_uncaught_exception(self, exc):</pre></li>
                
                  <li onclick="toggle('pre139828185480384', 'post139828185480384')"><pre>        if settings.DEBUG:</pre></li>
                
                  <li onclick="toggle('pre139828185480384', 'post139828185480384')"><pre>            request = self.request</pre></li>
                
                  <li onclick="toggle('pre139828185480384', 'post139828185480384')"><pre>            renderer_format = getattr(request.accepted_renderer, &#x27;format&#x27;)</pre></li>
                
                  <li onclick="toggle('pre139828185480384', 'post139828185480384')"><pre>            use_plaintext_traceback = renderer_format not in (&#x27;html&#x27;, &#x27;api&#x27;, &#x27;admin&#x27;)</pre></li>
                
                  <li onclick="toggle('pre139828185480384', 'post139828185480384')"><pre>            request.force_plaintext_errors(use_plaintext_traceback)</pre></li>
                
                </ol>
              
              <ol start="480" class="context-line">
                <li onclick="toggle('pre139828185480384', 'post139828185480384')"><pre>        raise exc</pre> <span>…</span></li>
              </ol>
              
                <ol start='481' class="post-context" id="post139828185480384">
                  
                  <li onclick="toggle('pre139828185480384', 'post139828185480384')"><pre></pre></li>
                  
                  <li onclick="toggle('pre139828185480384', 'post139828185480384')"><pre>    # Note: Views are made CSRF exempt from within `as_view` as to prevent</pre></li>
                  
                  <li onclick="toggle('pre139828185480384', 'post139828185480384')"><pre>    # accidental removal of this exemption in cases where `dispatch` needs to</pre></li>
                  
                  <li onclick="toggle('pre139828185480384', 'post139828185480384')"><pre>    # be overridden.</pre></li>
                  
                  <li onclick="toggle('pre139828185480384', 'post139828185480384')"><pre>    def dispatch(self, request, *args, **kwargs):</pre></li>
                  
                  <li onclick="toggle('pre139828185480384', 'post139828185480384')"><pre>        &quot;&quot;&quot;</pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v139828185480384">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>exc</td>
                    <td class="code"><pre>ValidationError([&#x27;o valor “[True]”  deve ser True ou False.&#x27;])</pre></td>
                  </tr>
                
                  <tr>
                    <td>renderer_format</td>
                    <td class="code"><pre>&#x27;json&#x27;</pre></td>
                  </tr>
                
                  <tr>
                    <td>request</td>
                    <td class="code"><pre>&lt;rest_framework.request.Request: POST &#x27;/webhook/messages/create?phone=5588988562749&amp;period=05%2F23&#x27;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;messages_api.views.MessageViewSet object at 0x7f2c4895a290&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>use_plaintext_traceback</td>
                    <td class="code"><pre>True</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
        <li class="frame user">
          
            <code class="fname">/home/jpfilho/.local/lib/python3.10/site-packages/rest_framework/views.py</code>, line 506, in dispatch
          

          
            <div class="context" id="c139828173139520">
              
                <ol start="499" class="pre-context" id="pre139828173139520">
                
                  <li onclick="toggle('pre139828173139520', 'post139828173139520')"><pre>            # Get the appropriate handler method</pre></li>
                
                  <li onclick="toggle('pre139828173139520', 'post139828173139520')"><pre>            if request.method.lower() in self.http_method_names:</pre></li>
                
                  <li onclick="toggle('pre139828173139520', 'post139828173139520')"><pre>                handler = getattr(self, request.method.lower(),</pre></li>
                
                  <li onclick="toggle('pre139828173139520', 'post139828173139520')"><pre>                                  self.http_method_not_allowed)</pre></li>
                
                  <li onclick="toggle('pre139828173139520', 'post139828173139520')"><pre>            else:</pre></li>
                
                  <li onclick="toggle('pre139828173139520', 'post139828173139520')"><pre>                handler = self.http_method_not_allowed</pre></li>
                
                  <li onclick="toggle('pre139828173139520', 'post139828173139520')"><pre></pre></li>
                
                </ol>
              
              <ol start="506" class="context-line">
                <li onclick="toggle('pre139828173139520', 'post139828173139520')"><pre>            response = handler(request, *args, **kwargs)</pre> <span>…</span></li>
              </ol>
              
                <ol start='507' class="post-context" id="post139828173139520">
                  
                  <li onclick="toggle('pre139828173139520', 'post139828173139520')"><pre></pre></li>
                  
                  <li onclick="toggle('pre139828173139520', 'post139828173139520')"><pre>        except Exception as exc:</pre></li>
                  
                  <li onclick="toggle('pre139828173139520', 'post139828173139520')"><pre>            response = self.handle_exception(exc)</pre></li>
                  
                  <li onclick="toggle('pre139828173139520', 'post139828173139520')"><pre></pre></li>
                  
                  <li onclick="toggle('pre139828173139520', 'post139828173139520')"><pre>        self.response = self.finalize_response(request, response, *args, **kwargs)</pre></li>
                  
                  <li onclick="toggle('pre139828173139520', 'post139828173139520')"><pre>        return self.response</pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v139828173139520">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>args</td>
                    <td class="code"><pre>()</pre></td>
                  </tr>
                
                  <tr>
                    <td>handler</td>
                    <td class="code"><pre>&lt;bound method MessageViewSet.create of &lt;messages_api.views.MessageViewSet object at 0x7f2c4895a290&gt;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>kwargs</td>
                    <td class="code"><pre>{}</pre></td>
                  </tr>
                
                  <tr>
                    <td>request</td>
                    <td class="code"><pre>&lt;rest_framework.request.Request: POST &#x27;/webhook/messages/create?phone=5588988562749&amp;period=05%2F23&#x27;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;messages_api.views.MessageViewSet object at 0x7f2c4895a290&gt;</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
        <li class="frame user">
          
            <code class="fname">/home/jpfilho/Documents/code-ws/python/webhook/messages_api/views.py</code>, line 153, in create
          

          
            <div class="context" id="c139828173452736">
              
                <ol start="146" class="pre-context" id="pre139828173452736">
                
                  <li onclick="toggle('pre139828173452736', 'post139828173452736')"><pre>        except ValueError:</pre></li>
                
                  <li onclick="toggle('pre139828173452736', 'post139828173452736')"><pre>            return Response({&#x27;error&#x27;: &#x27;Invalid period format, should be YYYY-MM-DD or MM-YY.&#x27;}, status=400)</pre></li>
                
                  <li onclick="toggle('pre139828173452736', 'post139828173452736')"><pre></pre></li>
                
                  <li onclick="toggle('pre139828173452736', 'post139828173452736')"><pre>        if len(period) == 5:</pre></li>
                
                  <li onclick="toggle('pre139828173452736', 'post139828173452736')"><pre>            period = dt.now().strftime(</pre></li>
                
                  <li onclick="toggle('pre139828173452736', 'post139828173452736')"><pre>                &#x27;%Y-&#x27;) + period[-2:] + &#x27;-&#x27; + period[:2] + &#x27; 00:00:00&#x27;</pre></li>
                
                  <li onclick="toggle('pre139828173452736', 'post139828173452736')"><pre>        try:</pre></li>
                
                </ol>
              
              <ol start="153" class="context-line">
                <li onclick="toggle('pre139828173452736', 'post139828173452736')"><pre>            message = Message.objects.create(</pre> <span>…</span></li>
              </ol>
              
                <ol start='154' class="post-context" id="post139828173452736">
                  
                  <li onclick="toggle('pre139828173452736', 'post139828173452736')"><pre>                contact_id=contact_id,</pre></li>
                  
                  <li onclick="toggle('pre139828173452736', 'post139828173452736')"><pre>                contact_number=contact_number,</pre></li>
                  
                  <li onclick="toggle('pre139828173452736', 'post139828173452736')"><pre>                period=period,</pre></li>
                  
                  <li onclick="toggle('pre139828173452736', 'post139828173452736')"><pre>                timestamp=timestamp,</pre></li>
                  
                  <li onclick="toggle('pre139828173452736', 'post139828173452736')"><pre>                status=status,</pre></li>
                  
                  <li onclick="toggle('pre139828173452736', 'post139828173452736')"><pre>                message_id=message_id,</pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v139828173452736">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>args</td>
                    <td class="code"><pre>()</pre></td>
                  </tr>
                
                  <tr>
                    <td>contact_id</td>
                    <td class="code"><pre>&#x27;79db7607-6088-44c1-a010-ed4ef39d4f37&#x27;</pre></td>
                  </tr>
                
                  <tr>
                    <td>contact_number</td>
                    <td class="code"><pre>&#x27;5588988562749&#x27;</pre></td>
                  </tr>
                
                  <tr>
                    <td>isFromMe</td>
                    <td class="code"><pre>[True]</pre></td>
                  </tr>
                
                  <tr>
                    <td>kwargs</td>
                    <td class="code"><pre>{}</pre></td>
                  </tr>
                
                  <tr>
                    <td>message_id</td>
                    <td class="code"><pre>&#x27;18dfb6ab-ffd7-4e3f-ad45-682ab380b458&#x27;</pre></td>
                  </tr>
                
                  <tr>
                    <td>message_type</td>
                    <td class="code"><pre>&#x27;chat&#x27;</pre></td>
                  </tr>
                
                  <tr>
                    <td>period</td>
                    <td class="code"><pre>&#x27;2023-05-01&#x27;</pre></td>
                  </tr>
                
                  <tr>
                    <td>request</td>
                    <td class="code"><pre>&lt;rest_framework.request.Request: POST &#x27;/webhook/messages/create?phone=5588988562749&amp;period=05%2F23&#x27;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;messages_api.views.MessageViewSet object at 0x7f2c4895a290&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>status</td>
                    <td class="code"><pre>0</pre></td>
                  </tr>
                
                  <tr>
                    <td>ticket_id</td>
                    <td class="code"><pre>&#x27;e5a453e9-6cb1-476e-b416-3b334b0bc61a&#x27;</pre></td>
                  </tr>
                
                  <tr>
                    <td>timestamp</td>
                    <td class="code"><pre>&#x27;2023-05-21T23:55:13.110Z&#x27;</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
        <li class="frame django">
          
            <code class="fname">/home/jpfilho/.local/lib/python3.10/site-packages/django/db/models/manager.py</code>, line 87, in manager_method
          

          
            <div class="context" id="c139828173131520">
              
                <ol start="80" class="pre-context" id="pre139828173131520">
                
                  <li onclick="toggle('pre139828173131520', 'post139828173131520')"><pre>        return []</pre></li>
                
                  <li onclick="toggle('pre139828173131520', 'post139828173131520')"><pre></pre></li>
                
                  <li onclick="toggle('pre139828173131520', 'post139828173131520')"><pre>    @classmethod</pre></li>
                
                  <li onclick="toggle('pre139828173131520', 'post139828173131520')"><pre>    def _get_queryset_methods(cls, queryset_class):</pre></li>
                
                  <li onclick="toggle('pre139828173131520', 'post139828173131520')"><pre>        def create_method(name, method):</pre></li>
                
                  <li onclick="toggle('pre139828173131520', 'post139828173131520')"><pre>            @wraps(method)</pre></li>
                
                  <li onclick="toggle('pre139828173131520', 'post139828173131520')"><pre>            def manager_method(self, *args, **kwargs):</pre></li>
                
                </ol>
              
              <ol start="87" class="context-line">
                <li onclick="toggle('pre139828173131520', 'post139828173131520')"><pre>                return getattr(self.get_queryset(), name)(*args, **kwargs)</pre> <span>…</span></li>
              </ol>
              
                <ol start='88' class="post-context" id="post139828173131520">
                  
                  <li onclick="toggle('pre139828173131520', 'post139828173131520')"><pre></pre></li>
                  
                  <li onclick="toggle('pre139828173131520', 'post139828173131520')"><pre>            return manager_method</pre></li>
                  
                  <li onclick="toggle('pre139828173131520', 'post139828173131520')"><pre></pre></li>
                  
                  <li onclick="toggle('pre139828173131520', 'post139828173131520')"><pre>        new_methods = {}</pre></li>
                  
                  <li onclick="toggle('pre139828173131520', 'post139828173131520')"><pre>        for name, method in inspect.getmembers(</pre></li>
                  
                  <li onclick="toggle('pre139828173131520', 'post139828173131520')"><pre>            queryset_class, predicate=inspect.isfunction</pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v139828173131520">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>args</td>
                    <td class="code"><pre>()</pre></td>
                  </tr>
                
                  <tr>
                    <td>kwargs</td>
                    <td class="code"><pre>{&#x27;contact_id&#x27;: &#x27;79db7607-6088-44c1-a010-ed4ef39d4f37&#x27;,
 &#x27;contact_number&#x27;: &#x27;5588988562749&#x27;,
 &#x27;is_from_me&#x27;: [True],
 &#x27;message_id&#x27;: &#x27;18dfb6ab-ffd7-4e3f-ad45-682ab380b458&#x27;,
 &#x27;message_type&#x27;: &#x27;chat&#x27;,
 &#x27;period&#x27;: &#x27;2023-05-01&#x27;,
 &#x27;retries&#x27;: 0,
 &#x27;status&#x27;: 0,
 &#x27;ticket_service_id&#x27;: &#x27;e5a453e9-6cb1-476e-b416-3b334b0bc61a&#x27;,
 &#x27;timestamp&#x27;: &#x27;2023-05-21T23:55:13.110Z&#x27;}</pre></td>
                  </tr>
                
                  <tr>
                    <td>name</td>
                    <td class="code"><pre>&#x27;create&#x27;</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;django.db.models.manager.Manager object at 0x7f2c4a9f58d0&gt;</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
        <li class="frame django">
          
            <code class="fname">/home/jpfilho/.local/lib/python3.10/site-packages/django/db/models/query.py</code>, line 658, in create
          

          
            <div class="context" id="c139828078586240">
              
                <ol start="651" class="pre-context" id="pre139828078586240">
                
                  <li onclick="toggle('pre139828078586240', 'post139828078586240')"><pre>    def create(self, **kwargs):</pre></li>
                
                  <li onclick="toggle('pre139828078586240', 'post139828078586240')"><pre>        &quot;&quot;&quot;</pre></li>
                
                  <li onclick="toggle('pre139828078586240', 'post139828078586240')"><pre>        Create a new object with the given kwargs, saving it to the database</pre></li>
                
                  <li onclick="toggle('pre139828078586240', 'post139828078586240')"><pre>        and returning the created object.</pre></li>
                
                  <li onclick="toggle('pre139828078586240', 'post139828078586240')"><pre>        &quot;&quot;&quot;</pre></li>
                
                  <li onclick="toggle('pre139828078586240', 'post139828078586240')"><pre>        obj = self.model(**kwargs)</pre></li>
                
                  <li onclick="toggle('pre139828078586240', 'post139828078586240')"><pre>        self._for_write = True</pre></li>
                
                </ol>
              
              <ol start="658" class="context-line">
                <li onclick="toggle('pre139828078586240', 'post139828078586240')"><pre>        obj.save(force_insert=True, using=self.db)</pre> <span>…</span></li>
              </ol>
              
                <ol start='659' class="post-context" id="post139828078586240">
                  
                  <li onclick="toggle('pre139828078586240', 'post139828078586240')"><pre>        return obj</pre></li>
                  
                  <li onclick="toggle('pre139828078586240', 'post139828078586240')"><pre></pre></li>
                  
                  <li onclick="toggle('pre139828078586240', 'post139828078586240')"><pre>    async def acreate(self, **kwargs):</pre></li>
                  
                  <li onclick="toggle('pre139828078586240', 'post139828078586240')"><pre>        return await sync_to_async(self.create)(**kwargs)</pre></li>
                  
                  <li onclick="toggle('pre139828078586240', 'post139828078586240')"><pre></pre></li>
                  
                  <li onclick="toggle('pre139828078586240', 'post139828078586240')"><pre>    def _prepare_for_bulk_create(self, objs):</pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v139828078586240">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>kwargs</td>
                    <td class="code"><pre>{&#x27;contact_id&#x27;: &#x27;79db7607-6088-44c1-a010-ed4ef39d4f37&#x27;,
 &#x27;contact_number&#x27;: &#x27;5588988562749&#x27;,
 &#x27;is_from_me&#x27;: [True],
 &#x27;message_id&#x27;: &#x27;18dfb6ab-ffd7-4e3f-ad45-682ab380b458&#x27;,
 &#x27;message_type&#x27;: &#x27;chat&#x27;,
 &#x27;period&#x27;: &#x27;2023-05-01&#x27;,
 &#x27;retries&#x27;: 0,
 &#x27;status&#x27;: 0,
 &#x27;ticket_service_id&#x27;: &#x27;e5a453e9-6cb1-476e-b416-3b334b0bc61a&#x27;,
 &#x27;timestamp&#x27;: &#x27;2023-05-21T23:55:13.110Z&#x27;}</pre></td>
                  </tr>
                
                  <tr>
                    <td>obj</td>
                    <td class="code"><pre>&lt;Message: 5588988562749 - 2023-05-01 - 0&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;QuerySet []&gt;</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
        <li class="frame django">
          
            <code class="fname">/home/jpfilho/.local/lib/python3.10/site-packages/django/db/models/base.py</code>, line 814, in save
          

          
            <div class="context" id="c139828173135360">
              
                <ol start="807" class="pre-context" id="pre139828173135360">
                
                  <li onclick="toggle('pre139828173135360', 'post139828173135360')"><pre>            for field in self._meta.concrete_fields:</pre></li>
                
                  <li onclick="toggle('pre139828173135360', 'post139828173135360')"><pre>                if not field.primary_key and not hasattr(field, &quot;through&quot;):</pre></li>
                
                  <li onclick="toggle('pre139828173135360', 'post139828173135360')"><pre>                    field_names.add(field.attname)</pre></li>
                
                  <li onclick="toggle('pre139828173135360', 'post139828173135360')"><pre>            loaded_fields = field_names.difference(deferred_fields)</pre></li>
                
                  <li onclick="toggle('pre139828173135360', 'post139828173135360')"><pre>            if loaded_fields:</pre></li>
                
                  <li onclick="toggle('pre139828173135360', 'post139828173135360')"><pre>                update_fields = frozenset(loaded_fields)</pre></li>
                
                  <li onclick="toggle('pre139828173135360', 'post139828173135360')"><pre></pre></li>
                
                </ol>
              
              <ol start="814" class="context-line">
                <li onclick="toggle('pre139828173135360', 'post139828173135360')"><pre>        self.save_base(</pre> <span>…</span></li>
              </ol>
              
                <ol start='815' class="post-context" id="post139828173135360">
                  
                  <li onclick="toggle('pre139828173135360', 'post139828173135360')"><pre>            using=using,</pre></li>
                  
                  <li onclick="toggle('pre139828173135360', 'post139828173135360')"><pre>            force_insert=force_insert,</pre></li>
                  
                  <li onclick="toggle('pre139828173135360', 'post139828173135360')"><pre>            force_update=force_update,</pre></li>
                  
                  <li onclick="toggle('pre139828173135360', 'post139828173135360')"><pre>            update_fields=update_fields,</pre></li>
                  
                  <li onclick="toggle('pre139828173135360', 'post139828173135360')"><pre>        )</pre></li>
                  
                  <li onclick="toggle('pre139828173135360', 'post139828173135360')"><pre></pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v139828173135360">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>deferred_fields</td>
                    <td class="code"><pre>set()</pre></td>
                  </tr>
                
                  <tr>
                    <td>force_insert</td>
                    <td class="code"><pre>True</pre></td>
                  </tr>
                
                  <tr>
                    <td>force_update</td>
                    <td class="code"><pre>False</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;Message: 5588988562749 - 2023-05-01 - 0&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>update_fields</td>
                    <td class="code"><pre>None</pre></td>
                  </tr>
                
                  <tr>
                    <td>using</td>
                    <td class="code"><pre>&#x27;default&#x27;</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
        <li class="frame django">
          
            <code class="fname">/home/jpfilho/.local/lib/python3.10/site-packages/django/db/models/base.py</code>, line 877, in save_base
          

          
            <div class="context" id="c139828173093184">
              
                <ol start="870" class="pre-context" id="pre139828173093184">
                
                  <li onclick="toggle('pre139828173093184', 'post139828173093184')"><pre>            context_manager = transaction.atomic(using=using, savepoint=False)</pre></li>
                
                  <li onclick="toggle('pre139828173093184', 'post139828173093184')"><pre>        else:</pre></li>
                
                  <li onclick="toggle('pre139828173093184', 'post139828173093184')"><pre>            context_manager = transaction.mark_for_rollback_on_error(using=using)</pre></li>
                
                  <li onclick="toggle('pre139828173093184', 'post139828173093184')"><pre>        with context_manager:</pre></li>
                
                  <li onclick="toggle('pre139828173093184', 'post139828173093184')"><pre>            parent_inserted = False</pre></li>
                
                  <li onclick="toggle('pre139828173093184', 'post139828173093184')"><pre>            if not raw:</pre></li>
                
                  <li onclick="toggle('pre139828173093184', 'post139828173093184')"><pre>                parent_inserted = self._save_parents(cls, using, update_fields)</pre></li>
                
                </ol>
              
              <ol start="877" class="context-line">
                <li onclick="toggle('pre139828173093184', 'post139828173093184')"><pre>            updated = self._save_table(</pre> <span>…</span></li>
              </ol>
              
                <ol start='878' class="post-context" id="post139828173093184">
                  
                  <li onclick="toggle('pre139828173093184', 'post139828173093184')"><pre>                raw,</pre></li>
                  
                  <li onclick="toggle('pre139828173093184', 'post139828173093184')"><pre>                cls,</pre></li>
                  
                  <li onclick="toggle('pre139828173093184', 'post139828173093184')"><pre>                force_insert or parent_inserted,</pre></li>
                  
                  <li onclick="toggle('pre139828173093184', 'post139828173093184')"><pre>                force_update,</pre></li>
                  
                  <li onclick="toggle('pre139828173093184', 'post139828173093184')"><pre>                using,</pre></li>
                  
                  <li onclick="toggle('pre139828173093184', 'post139828173093184')"><pre>                update_fields,</pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v139828173093184">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>cls</td>
                    <td class="code"><pre>&lt;class &#x27;messages_api.models.Message&#x27;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>context_manager</td>
                    <td class="code"><pre>&lt;contextlib._GeneratorContextManager object at 0x7f2c4895aa40&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>force_insert</td>
                    <td class="code"><pre>True</pre></td>
                  </tr>
                
                  <tr>
                    <td>force_update</td>
                    <td class="code"><pre>False</pre></td>
                  </tr>
                
                  <tr>
                    <td>meta</td>
                    <td class="code"><pre>&lt;Options for Message&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>origin</td>
                    <td class="code"><pre>&lt;class &#x27;messages_api.models.Message&#x27;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>parent_inserted</td>
                    <td class="code"><pre>False</pre></td>
                  </tr>
                
                  <tr>
                    <td>raw</td>
                    <td class="code"><pre>False</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;Message: 5588988562749 - 2023-05-01 - 0&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>update_fields</td>
                    <td class="code"><pre>None</pre></td>
                  </tr>
                
                  <tr>
                    <td>using</td>
                    <td class="code"><pre>&#x27;default&#x27;</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
        <li class="frame django">
          
            <code class="fname">/home/jpfilho/.local/lib/python3.10/site-packages/django/db/models/base.py</code>, line 1020, in _save_table
          

          
            <div class="context" id="c139828173079296">
              
                <ol start="1013" class="pre-context" id="pre139828173079296">
                
                  <li onclick="toggle('pre139828173079296', 'post139828173079296')"><pre>                    )[&quot;_order__max&quot;]</pre></li>
                
                  <li onclick="toggle('pre139828173079296', 'post139828173079296')"><pre>                )</pre></li>
                
                  <li onclick="toggle('pre139828173079296', 'post139828173079296')"><pre>            fields = meta.local_concrete_fields</pre></li>
                
                  <li onclick="toggle('pre139828173079296', 'post139828173079296')"><pre>            if not pk_set:</pre></li>
                
                  <li onclick="toggle('pre139828173079296', 'post139828173079296')"><pre>                fields = [f for f in fields if f is not meta.auto_field]</pre></li>
                
                  <li onclick="toggle('pre139828173079296', 'post139828173079296')"><pre></pre></li>
                
                  <li onclick="toggle('pre139828173079296', 'post139828173079296')"><pre>            returning_fields = meta.db_returning_fields</pre></li>
                
                </ol>
              
              <ol start="1020" class="context-line">
                <li onclick="toggle('pre139828173079296', 'post139828173079296')"><pre>            results = self._do_insert(</pre> <span>…</span></li>
              </ol>
              
                <ol start='1021' class="post-context" id="post139828173079296">
                  
                  <li onclick="toggle('pre139828173079296', 'post139828173079296')"><pre>                cls._base_manager, using, fields, returning_fields, raw</pre></li>
                  
                  <li onclick="toggle('pre139828173079296', 'post139828173079296')"><pre>            )</pre></li>
                  
                  <li onclick="toggle('pre139828173079296', 'post139828173079296')"><pre>            if results:</pre></li>
                  
                  <li onclick="toggle('pre139828173079296', 'post139828173079296')"><pre>                for value, field in zip(results[0], returning_fields):</pre></li>
                  
                  <li onclick="toggle('pre139828173079296', 'post139828173079296')"><pre>                    setattr(self, field.attname, value)</pre></li>
                  
                  <li onclick="toggle('pre139828173079296', 'post139828173079296')"><pre>        return updated</pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v139828173079296">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>cls</td>
                    <td class="code"><pre>&lt;class &#x27;messages_api.models.Message&#x27;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>fields</td>
                    <td class="code"><pre>(&lt;django.db.models.fields.CharField: message_id&gt;,
 &lt;django.db.models.fields.CharField: contact_id&gt;,
 &lt;django.db.models.fields.CharField: contact_number&gt;,
 &lt;django.db.models.fields.DateField: period&gt;,
 &lt;django.db.models.fields.DateTimeField: timestamp&gt;,
 &lt;django.db.models.fields.IntegerField: status&gt;,
 &lt;django.db.models.fields.CharField: ticket_service_id&gt;,
 &lt;django.db.models.fields.CharField: message_type&gt;,
 &lt;django.db.models.fields.BooleanField: is_from_me&gt;,
 &lt;django.db.models.fields.IntegerField: retries&gt;)</pre></td>
                  </tr>
                
                  <tr>
                    <td>force_insert</td>
                    <td class="code"><pre>True</pre></td>
                  </tr>
                
                  <tr>
                    <td>force_update</td>
                    <td class="code"><pre>False</pre></td>
                  </tr>
                
                  <tr>
                    <td>meta</td>
                    <td class="code"><pre>&lt;Options for Message&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>non_pks</td>
                    <td class="code"><pre>[&lt;django.db.models.fields.CharField: contact_id&gt;,
 &lt;django.db.models.fields.CharField: contact_number&gt;,
 &lt;django.db.models.fields.DateField: period&gt;,
 &lt;django.db.models.fields.DateTimeField: timestamp&gt;,
 &lt;django.db.models.fields.IntegerField: status&gt;,
 &lt;django.db.models.fields.CharField: ticket_service_id&gt;,
 &lt;django.db.models.fields.CharField: message_type&gt;,
 &lt;django.db.models.fields.BooleanField: is_from_me&gt;,
 &lt;django.db.models.fields.IntegerField: retries&gt;]</pre></td>
                  </tr>
                
                  <tr>
                    <td>pk_set</td>
                    <td class="code"><pre>True</pre></td>
                  </tr>
                
                  <tr>
                    <td>pk_val</td>
                    <td class="code"><pre>&#x27;18dfb6ab-ffd7-4e3f-ad45-682ab380b458&#x27;</pre></td>
                  </tr>
                
                  <tr>
                    <td>raw</td>
                    <td class="code"><pre>False</pre></td>
                  </tr>
                
                  <tr>
                    <td>returning_fields</td>
                    <td class="code"><pre>[]</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;Message: 5588988562749 - 2023-05-01 - 0&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>update_fields</td>
                    <td class="code"><pre>None</pre></td>
                  </tr>
                
                  <tr>
                    <td>updated</td>
                    <td class="code"><pre>False</pre></td>
                  </tr>
                
                  <tr>
                    <td>using</td>
                    <td class="code"><pre>&#x27;default&#x27;</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
        <li class="frame django">
          
            <code class="fname">/home/jpfilho/.local/lib/python3.10/site-packages/django/db/models/base.py</code>, line 1061, in _do_insert
          

          
            <div class="context" id="c139828173143552">
              
                <ol start="1054" class="pre-context" id="pre139828173143552">
                
                  <li onclick="toggle('pre139828173143552', 'post139828173143552')"><pre>        return filtered._update(values) &gt; 0</pre></li>
                
                  <li onclick="toggle('pre139828173143552', 'post139828173143552')"><pre></pre></li>
                
                  <li onclick="toggle('pre139828173143552', 'post139828173143552')"><pre>    def _do_insert(self, manager, using, fields, returning_fields, raw):</pre></li>
                
                  <li onclick="toggle('pre139828173143552', 'post139828173143552')"><pre>        &quot;&quot;&quot;</pre></li>
                
                  <li onclick="toggle('pre139828173143552', 'post139828173143552')"><pre>        Do an INSERT. If returning_fields is defined then this method should</pre></li>
                
                  <li onclick="toggle('pre139828173143552', 'post139828173143552')"><pre>        return the newly created data for the model.</pre></li>
                
                  <li onclick="toggle('pre139828173143552', 'post139828173143552')"><pre>        &quot;&quot;&quot;</pre></li>
                
                </ol>
              
              <ol start="1061" class="context-line">
                <li onclick="toggle('pre139828173143552', 'post139828173143552')"><pre>        return manager._insert(</pre> <span>…</span></li>
              </ol>
              
                <ol start='1062' class="post-context" id="post139828173143552">
                  
                  <li onclick="toggle('pre139828173143552', 'post139828173143552')"><pre>            [self],</pre></li>
                  
                  <li onclick="toggle('pre139828173143552', 'post139828173143552')"><pre>            fields=fields,</pre></li>
                  
                  <li onclick="toggle('pre139828173143552', 'post139828173143552')"><pre>            returning_fields=returning_fields,</pre></li>
                  
                  <li onclick="toggle('pre139828173143552', 'post139828173143552')"><pre>            using=using,</pre></li>
                  
                  <li onclick="toggle('pre139828173143552', 'post139828173143552')"><pre>            raw=raw,</pre></li>
                  
                  <li onclick="toggle('pre139828173143552', 'post139828173143552')"><pre>        )</pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v139828173143552">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>fields</td>
                    <td class="code"><pre>(&lt;django.db.models.fields.CharField: message_id&gt;,
 &lt;django.db.models.fields.CharField: contact_id&gt;,
 &lt;django.db.models.fields.CharField: contact_number&gt;,
 &lt;django.db.models.fields.DateField: period&gt;,
 &lt;django.db.models.fields.DateTimeField: timestamp&gt;,
 &lt;django.db.models.fields.IntegerField: status&gt;,
 &lt;django.db.models.fields.CharField: ticket_service_id&gt;,
 &lt;django.db.models.fields.CharField: message_type&gt;,
 &lt;django.db.models.fields.BooleanField: is_from_me&gt;,
 &lt;django.db.models.fields.IntegerField: retries&gt;)</pre></td>
                  </tr>
                
                  <tr>
                    <td>manager</td>
                    <td class="code"><pre>&lt;django.db.models.manager.Manager object at 0x7f2c489585b0&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>raw</td>
                    <td class="code"><pre>False</pre></td>
                  </tr>
                
                  <tr>
                    <td>returning_fields</td>
                    <td class="code"><pre>[]</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;Message: 5588988562749 - 2023-05-01 - 0&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>using</td>
                    <td class="code"><pre>&#x27;default&#x27;</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
        <li class="frame django">
          
            <code class="fname">/home/jpfilho/.local/lib/python3.10/site-packages/django/db/models/manager.py</code>, line 87, in manager_method
          

          
            <div class="context" id="c139828173139392">
              
                <ol start="80" class="pre-context" id="pre139828173139392">
                
                  <li onclick="toggle('pre139828173139392', 'post139828173139392')"><pre>        return []</pre></li>
                
                  <li onclick="toggle('pre139828173139392', 'post139828173139392')"><pre></pre></li>
                
                  <li onclick="toggle('pre139828173139392', 'post139828173139392')"><pre>    @classmethod</pre></li>
                
                  <li onclick="toggle('pre139828173139392', 'post139828173139392')"><pre>    def _get_queryset_methods(cls, queryset_class):</pre></li>
                
                  <li onclick="toggle('pre139828173139392', 'post139828173139392')"><pre>        def create_method(name, method):</pre></li>
                
                  <li onclick="toggle('pre139828173139392', 'post139828173139392')"><pre>            @wraps(method)</pre></li>
                
                  <li onclick="toggle('pre139828173139392', 'post139828173139392')"><pre>            def manager_method(self, *args, **kwargs):</pre></li>
                
                </ol>
              
              <ol start="87" class="context-line">
                <li onclick="toggle('pre139828173139392', 'post139828173139392')"><pre>                return getattr(self.get_queryset(), name)(*args, **kwargs)</pre> <span>…</span></li>
              </ol>
              
                <ol start='88' class="post-context" id="post139828173139392">
                  
                  <li onclick="toggle('pre139828173139392', 'post139828173139392')"><pre></pre></li>
                  
                  <li onclick="toggle('pre139828173139392', 'post139828173139392')"><pre>            return manager_method</pre></li>
                  
                  <li onclick="toggle('pre139828173139392', 'post139828173139392')"><pre></pre></li>
                  
                  <li onclick="toggle('pre139828173139392', 'post139828173139392')"><pre>        new_methods = {}</pre></li>
                  
                  <li onclick="toggle('pre139828173139392', 'post139828173139392')"><pre>        for name, method in inspect.getmembers(</pre></li>
                  
                  <li onclick="toggle('pre139828173139392', 'post139828173139392')"><pre>            queryset_class, predicate=inspect.isfunction</pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v139828173139392">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>args</td>
                    <td class="code"><pre>([&lt;Message: 5588988562749 - 2023-05-01 - 0&gt;],)</pre></td>
                  </tr>
                
                  <tr>
                    <td>kwargs</td>
                    <td class="code"><pre>{&#x27;fields&#x27;: (&lt;django.db.models.fields.CharField: message_id&gt;,
            &lt;django.db.models.fields.CharField: contact_id&gt;,
            &lt;django.db.models.fields.CharField: contact_number&gt;,
            &lt;django.db.models.fields.DateField: period&gt;,
            &lt;django.db.models.fields.DateTimeField: timestamp&gt;,
            &lt;django.db.models.fields.IntegerField: status&gt;,
            &lt;django.db.models.fields.CharField: ticket_service_id&gt;,
            &lt;django.db.models.fields.CharField: message_type&gt;,
            &lt;django.db.models.fields.BooleanField: is_from_me&gt;,
            &lt;django.db.models.fields.IntegerField: retries&gt;),
 &#x27;raw&#x27;: False,
 &#x27;returning_fields&#x27;: [],
 &#x27;using&#x27;: &#x27;default&#x27;}</pre></td>
                  </tr>
                
                  <tr>
                    <td>name</td>
                    <td class="code"><pre>&#x27;_insert&#x27;</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;django.db.models.manager.Manager object at 0x7f2c489585b0&gt;</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
        <li class="frame django">
          
            <code class="fname">/home/jpfilho/.local/lib/python3.10/site-packages/django/db/models/query.py</code>, line 1805, in _insert
          

          
            <div class="context" id="c139828079114176">
              
                <ol start="1798" class="pre-context" id="pre139828079114176">
                
                  <li onclick="toggle('pre139828079114176', 'post139828079114176')"><pre>        query = sql.InsertQuery(</pre></li>
                
                  <li onclick="toggle('pre139828079114176', 'post139828079114176')"><pre>            self.model,</pre></li>
                
                  <li onclick="toggle('pre139828079114176', 'post139828079114176')"><pre>            on_conflict=on_conflict,</pre></li>
                
                  <li onclick="toggle('pre139828079114176', 'post139828079114176')"><pre>            update_fields=update_fields,</pre></li>
                
                  <li onclick="toggle('pre139828079114176', 'post139828079114176')"><pre>            unique_fields=unique_fields,</pre></li>
                
                  <li onclick="toggle('pre139828079114176', 'post139828079114176')"><pre>        )</pre></li>
                
                  <li onclick="toggle('pre139828079114176', 'post139828079114176')"><pre>        query.insert_values(fields, objs, raw=raw)</pre></li>
                
                </ol>
              
              <ol start="1805" class="context-line">
                <li onclick="toggle('pre139828079114176', 'post139828079114176')"><pre>        return query.get_compiler(using=using).execute_sql(returning_fields)</pre> <span>…</span></li>
              </ol>
              
                <ol start='1806' class="post-context" id="post139828079114176">
                  
                  <li onclick="toggle('pre139828079114176', 'post139828079114176')"><pre></pre></li>
                  
                  <li onclick="toggle('pre139828079114176', 'post139828079114176')"><pre>    _insert.alters_data = True</pre></li>
                  
                  <li onclick="toggle('pre139828079114176', 'post139828079114176')"><pre>    _insert.queryset_only = False</pre></li>
                  
                  <li onclick="toggle('pre139828079114176', 'post139828079114176')"><pre></pre></li>
                  
                  <li onclick="toggle('pre139828079114176', 'post139828079114176')"><pre>    def _batched_insert(</pre></li>
                  
                  <li onclick="toggle('pre139828079114176', 'post139828079114176')"><pre>        self,</pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v139828079114176">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>fields</td>
                    <td class="code"><pre>(&lt;django.db.models.fields.CharField: message_id&gt;,
 &lt;django.db.models.fields.CharField: contact_id&gt;,
 &lt;django.db.models.fields.CharField: contact_number&gt;,
 &lt;django.db.models.fields.DateField: period&gt;,
 &lt;django.db.models.fields.DateTimeField: timestamp&gt;,
 &lt;django.db.models.fields.IntegerField: status&gt;,
 &lt;django.db.models.fields.CharField: ticket_service_id&gt;,
 &lt;django.db.models.fields.CharField: message_type&gt;,
 &lt;django.db.models.fields.BooleanField: is_from_me&gt;,
 &lt;django.db.models.fields.IntegerField: retries&gt;)</pre></td>
                  </tr>
                
                  <tr>
                    <td>objs</td>
                    <td class="code"><pre>[&lt;Message: 5588988562749 - 2023-05-01 - 0&gt;]</pre></td>
                  </tr>
                
                  <tr>
                    <td>on_conflict</td>
                    <td class="code"><pre>None</pre></td>
                  </tr>
                
                  <tr>
                    <td>query</td>
                    <td class="code"><pre>&lt;django.db.models.sql.subqueries.InsertQuery object at 0x7f2c4895af50&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>raw</td>
                    <td class="code"><pre>False</pre></td>
                  </tr>
                
                  <tr>
                    <td>returning_fields</td>
                    <td class="code"><pre>[]</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;QuerySet []&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>unique_fields</td>
                    <td class="code"><pre>None</pre></td>
                  </tr>
                
                  <tr>
                    <td>update_fields</td>
                    <td class="code"><pre>None</pre></td>
                  </tr>
                
                  <tr>
                    <td>using</td>
                    <td class="code"><pre>&#x27;default&#x27;</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
        <li class="frame django">
          
            <code class="fname">/home/jpfilho/.local/lib/python3.10/site-packages/django/db/models/sql/compiler.py</code>, line 1819, in execute_sql
          

          
            <div class="context" id="c139828173079808">
              
                <ol start="1812" class="pre-context" id="pre139828173079808">
                
                  <li onclick="toggle('pre139828173079808', 'post139828173079808')"><pre>            returning_fields</pre></li>
                
                  <li onclick="toggle('pre139828173079808', 'post139828173079808')"><pre>            and len(self.query.objs) != 1</pre></li>
                
                  <li onclick="toggle('pre139828173079808', 'post139828173079808')"><pre>            and not self.connection.features.can_return_rows_from_bulk_insert</pre></li>
                
                  <li onclick="toggle('pre139828173079808', 'post139828173079808')"><pre>        )</pre></li>
                
                  <li onclick="toggle('pre139828173079808', 'post139828173079808')"><pre>        opts = self.query.get_meta()</pre></li>
                
                  <li onclick="toggle('pre139828173079808', 'post139828173079808')"><pre>        self.returning_fields = returning_fields</pre></li>
                
                  <li onclick="toggle('pre139828173079808', 'post139828173079808')"><pre>        with self.connection.cursor() as cursor:</pre></li>
                
                </ol>
              
              <ol start="1819" class="context-line">
                <li onclick="toggle('pre139828173079808', 'post139828173079808')"><pre>            for sql, params in self.as_sql():</pre> <span>…</span></li>
              </ol>
              
                <ol start='1820' class="post-context" id="post139828173079808">
                  
                  <li onclick="toggle('pre139828173079808', 'post139828173079808')"><pre>                cursor.execute(sql, params)</pre></li>
                  
                  <li onclick="toggle('pre139828173079808', 'post139828173079808')"><pre>            if not self.returning_fields:</pre></li>
                  
                  <li onclick="toggle('pre139828173079808', 'post139828173079808')"><pre>                return []</pre></li>
                  
                  <li onclick="toggle('pre139828173079808', 'post139828173079808')"><pre>            if (</pre></li>
                  
                  <li onclick="toggle('pre139828173079808', 'post139828173079808')"><pre>                self.connection.features.can_return_rows_from_bulk_insert</pre></li>
                  
                  <li onclick="toggle('pre139828173079808', 'post139828173079808')"><pre>                and len(self.query.objs) &gt; 1</pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v139828173079808">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>cursor</td>
                    <td class="code"><pre>&lt;django.db.backends.postgresql.base.CursorDebugWrapper object at 0x7f2c4cf64c70&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>opts</td>
                    <td class="code"><pre>&lt;Options for Message&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>returning_fields</td>
                    <td class="code"><pre>[]</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;SQLInsertCompiler model=Message connection=&lt;DatabaseWrapper vendor=&#x27;postgresql&#x27; alias=&#x27;default&#x27;&gt; using=&#x27;default&#x27;&gt;</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
        <li class="frame django">
          
            <code class="fname">/home/jpfilho/.local/lib/python3.10/site-packages/django/db/models/sql/compiler.py</code>, line 1743, in as_sql
          

          
            <div class="context" id="c139828173080704">
              
                <ol start="1736" class="pre-context" id="pre139828173080704">
                
                  <li onclick="toggle('pre139828173080704', 'post139828173080704')"><pre>            on_conflict=self.query.on_conflict,</pre></li>
                
                  <li onclick="toggle('pre139828173080704', 'post139828173080704')"><pre>        )</pre></li>
                
                  <li onclick="toggle('pre139828173080704', 'post139828173080704')"><pre>        result = [&quot;%s %s&quot; % (insert_statement, qn(opts.db_table))]</pre></li>
                
                  <li onclick="toggle('pre139828173080704', 'post139828173080704')"><pre>        fields = self.query.fields or [opts.pk]</pre></li>
                
                  <li onclick="toggle('pre139828173080704', 'post139828173080704')"><pre>        result.append(&quot;(%s)&quot; % &quot;, &quot;.join(qn(f.column) for f in fields))</pre></li>
                
                  <li onclick="toggle('pre139828173080704', 'post139828173080704')"><pre></pre></li>
                
                  <li onclick="toggle('pre139828173080704', 'post139828173080704')"><pre>        if self.query.fields:</pre></li>
                
                </ol>
              
              <ol start="1743" class="context-line">
                <li onclick="toggle('pre139828173080704', 'post139828173080704')"><pre>            value_rows = [</pre> <span>…</span></li>
              </ol>
              
                <ol start='1744' class="post-context" id="post139828173080704">
                  
                  <li onclick="toggle('pre139828173080704', 'post139828173080704')"><pre>                [</pre></li>
                  
                  <li onclick="toggle('pre139828173080704', 'post139828173080704')"><pre>                    self.prepare_value(field, self.pre_save_val(field, obj))</pre></li>
                  
                  <li onclick="toggle('pre139828173080704', 'post139828173080704')"><pre>                    for field in fields</pre></li>
                  
                  <li onclick="toggle('pre139828173080704', 'post139828173080704')"><pre>                ]</pre></li>
                  
                  <li onclick="toggle('pre139828173080704', 'post139828173080704')"><pre>                for obj in self.query.objs</pre></li>
                  
                  <li onclick="toggle('pre139828173080704', 'post139828173080704')"><pre>            ]</pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v139828173080704">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>fields</td>
                    <td class="code"><pre>(&lt;django.db.models.fields.CharField: message_id&gt;,
 &lt;django.db.models.fields.CharField: contact_id&gt;,
 &lt;django.db.models.fields.CharField: contact_number&gt;,
 &lt;django.db.models.fields.DateField: period&gt;,
 &lt;django.db.models.fields.DateTimeField: timestamp&gt;,
 &lt;django.db.models.fields.IntegerField: status&gt;,
 &lt;django.db.models.fields.CharField: ticket_service_id&gt;,
 &lt;django.db.models.fields.CharField: message_type&gt;,
 &lt;django.db.models.fields.BooleanField: is_from_me&gt;,
 &lt;django.db.models.fields.IntegerField: retries&gt;)</pre></td>
                  </tr>
                
                  <tr>
                    <td>insert_statement</td>
                    <td class="code"><pre>&#x27;INSERT INTO&#x27;</pre></td>
                  </tr>
                
                  <tr>
                    <td>opts</td>
                    <td class="code"><pre>&lt;Options for Message&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>qn</td>
                    <td class="code"><pre>&lt;bound method DatabaseOperations.quote_name of &lt;django.db.backends.postgresql.operations.DatabaseOperations object at 0x7f2c4895bd90&gt;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>result</td>
                    <td class="code"><pre>[&#x27;INSERT INTO &quot;messages_api_message&quot;&#x27;,
 &#x27;(&quot;message_id&quot;, &quot;contact_id&quot;, &quot;contact_number&quot;, &quot;period&quot;, &quot;timestamp&quot;, &#x27;
 &#x27;&quot;status&quot;, &quot;ticket_service_id&quot;, &quot;message_type&quot;, &quot;is_from_me&quot;, &quot;retries&quot;)&#x27;]</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;SQLInsertCompiler model=Message connection=&lt;DatabaseWrapper vendor=&#x27;postgresql&#x27; alias=&#x27;default&#x27;&gt; using=&#x27;default&#x27;&gt;</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
        <li class="frame django">
          
            <code class="fname">/home/jpfilho/.local/lib/python3.10/site-packages/django/db/models/sql/compiler.py</code>, line 1744, in &lt;listcomp&gt;
          

          
            <div class="context" id="c139828185891328">
              
                <ol start="1737" class="pre-context" id="pre139828185891328">
                
                  <li onclick="toggle('pre139828185891328', 'post139828185891328')"><pre>        )</pre></li>
                
                  <li onclick="toggle('pre139828185891328', 'post139828185891328')"><pre>        result = [&quot;%s %s&quot; % (insert_statement, qn(opts.db_table))]</pre></li>
                
                  <li onclick="toggle('pre139828185891328', 'post139828185891328')"><pre>        fields = self.query.fields or [opts.pk]</pre></li>
                
                  <li onclick="toggle('pre139828185891328', 'post139828185891328')"><pre>        result.append(&quot;(%s)&quot; % &quot;, &quot;.join(qn(f.column) for f in fields))</pre></li>
                
                  <li onclick="toggle('pre139828185891328', 'post139828185891328')"><pre></pre></li>
                
                  <li onclick="toggle('pre139828185891328', 'post139828185891328')"><pre>        if self.query.fields:</pre></li>
                
                  <li onclick="toggle('pre139828185891328', 'post139828185891328')"><pre>            value_rows = [</pre></li>
                
                </ol>
              
              <ol start="1744" class="context-line">
                <li onclick="toggle('pre139828185891328', 'post139828185891328')"><pre>                [</pre> <span>…</span></li>
              </ol>
              
                <ol start='1745' class="post-context" id="post139828185891328">
                  
                  <li onclick="toggle('pre139828185891328', 'post139828185891328')"><pre>                    self.prepare_value(field, self.pre_save_val(field, obj))</pre></li>
                  
                  <li onclick="toggle('pre139828185891328', 'post139828185891328')"><pre>                    for field in fields</pre></li>
                  
                  <li onclick="toggle('pre139828185891328', 'post139828185891328')"><pre>                ]</pre></li>
                  
                  <li onclick="toggle('pre139828185891328', 'post139828185891328')"><pre>                for obj in self.query.objs</pre></li>
                  
                  <li onclick="toggle('pre139828185891328', 'post139828185891328')"><pre>            ]</pre></li>
                  
                  <li onclick="toggle('pre139828185891328', 'post139828185891328')"><pre>        else:</pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v139828185891328">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>.0</td>
                    <td class="code"><pre>&lt;list_iterator object at 0x7f2c495d4310&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>fields</td>
                    <td class="code"><pre>(&lt;django.db.models.fields.CharField: message_id&gt;,
 &lt;django.db.models.fields.CharField: contact_id&gt;,
 &lt;django.db.models.fields.CharField: contact_number&gt;,
 &lt;django.db.models.fields.DateField: period&gt;,
 &lt;django.db.models.fields.DateTimeField: timestamp&gt;,
 &lt;django.db.models.fields.IntegerField: status&gt;,
 &lt;django.db.models.fields.CharField: ticket_service_id&gt;,
 &lt;django.db.models.fields.CharField: message_type&gt;,
 &lt;django.db.models.fields.BooleanField: is_from_me&gt;,
 &lt;django.db.models.fields.IntegerField: retries&gt;)</pre></td>
                  </tr>
                
                  <tr>
                    <td>obj</td>
                    <td class="code"><pre>&lt;Message: 5588988562749 - 2023-05-01 - 0&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;SQLInsertCompiler model=Message connection=&lt;DatabaseWrapper vendor=&#x27;postgresql&#x27; alias=&#x27;default&#x27;&gt; using=&#x27;default&#x27;&gt;</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
        <li class="frame django">
          
            <code class="fname">/home/jpfilho/.local/lib/python3.10/site-packages/django/db/models/sql/compiler.py</code>, line 1745, in &lt;listcomp&gt;
          

          
            <div class="context" id="c139828173083968">
              
                <ol start="1738" class="pre-context" id="pre139828173083968">
                
                  <li onclick="toggle('pre139828173083968', 'post139828173083968')"><pre>        result = [&quot;%s %s&quot; % (insert_statement, qn(opts.db_table))]</pre></li>
                
                  <li onclick="toggle('pre139828173083968', 'post139828173083968')"><pre>        fields = self.query.fields or [opts.pk]</pre></li>
                
                  <li onclick="toggle('pre139828173083968', 'post139828173083968')"><pre>        result.append(&quot;(%s)&quot; % &quot;, &quot;.join(qn(f.column) for f in fields))</pre></li>
                
                  <li onclick="toggle('pre139828173083968', 'post139828173083968')"><pre></pre></li>
                
                  <li onclick="toggle('pre139828173083968', 'post139828173083968')"><pre>        if self.query.fields:</pre></li>
                
                  <li onclick="toggle('pre139828173083968', 'post139828173083968')"><pre>            value_rows = [</pre></li>
                
                  <li onclick="toggle('pre139828173083968', 'post139828173083968')"><pre>                [</pre></li>
                
                </ol>
              
              <ol start="1745" class="context-line">
                <li onclick="toggle('pre139828173083968', 'post139828173083968')"><pre>                    self.prepare_value(field, self.pre_save_val(field, obj))</pre> <span>…</span></li>
              </ol>
              
                <ol start='1746' class="post-context" id="post139828173083968">
                  
                  <li onclick="toggle('pre139828173083968', 'post139828173083968')"><pre>                    for field in fields</pre></li>
                  
                  <li onclick="toggle('pre139828173083968', 'post139828173083968')"><pre>                ]</pre></li>
                  
                  <li onclick="toggle('pre139828173083968', 'post139828173083968')"><pre>                for obj in self.query.objs</pre></li>
                  
                  <li onclick="toggle('pre139828173083968', 'post139828173083968')"><pre>            ]</pre></li>
                  
                  <li onclick="toggle('pre139828173083968', 'post139828173083968')"><pre>        else:</pre></li>
                  
                  <li onclick="toggle('pre139828173083968', 'post139828173083968')"><pre>            # An empty object.</pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v139828173083968">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>.0</td>
                    <td class="code"><pre>&lt;tuple_iterator object at 0x7f2c495d65c0&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>field</td>
                    <td class="code"><pre>&lt;django.db.models.fields.BooleanField: is_from_me&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>obj</td>
                    <td class="code"><pre>&lt;Message: 5588988562749 - 2023-05-01 - 0&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;SQLInsertCompiler model=Message connection=&lt;DatabaseWrapper vendor=&#x27;postgresql&#x27; alias=&#x27;default&#x27;&gt; using=&#x27;default&#x27;&gt;</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
        <li class="frame django">
          
            <code class="fname">/home/jpfilho/.local/lib/python3.10/site-packages/django/db/models/sql/compiler.py</code>, line 1684, in prepare_value
          

          
            <div class="context" id="c139828190068416">
              
                <ol start="1677" class="pre-context" id="pre139828190068416">
                
                  <li onclick="toggle('pre139828190068416', 'post139828190068416')"><pre>                    &quot;(%s=%r).&quot; % (field.name, value)</pre></li>
                
                  <li onclick="toggle('pre139828190068416', 'post139828190068416')"><pre>                )</pre></li>
                
                  <li onclick="toggle('pre139828190068416', 'post139828190068416')"><pre>            if value.contains_over_clause:</pre></li>
                
                  <li onclick="toggle('pre139828190068416', 'post139828190068416')"><pre>                raise FieldError(</pre></li>
                
                  <li onclick="toggle('pre139828190068416', 'post139828190068416')"><pre>                    &quot;Window expressions are not allowed in this query (%s=%r).&quot;</pre></li>
                
                  <li onclick="toggle('pre139828190068416', 'post139828190068416')"><pre>                    % (field.name, value)</pre></li>
                
                  <li onclick="toggle('pre139828190068416', 'post139828190068416')"><pre>                )</pre></li>
                
                </ol>
              
              <ol start="1684" class="context-line">
                <li onclick="toggle('pre139828190068416', 'post139828190068416')"><pre>        return field.get_db_prep_save(value, connection=self.connection)</pre> <span>…</span></li>
              </ol>
              
                <ol start='1685' class="post-context" id="post139828190068416">
                  
                  <li onclick="toggle('pre139828190068416', 'post139828190068416')"><pre></pre></li>
                  
                  <li onclick="toggle('pre139828190068416', 'post139828190068416')"><pre>    def pre_save_val(self, field, obj):</pre></li>
                  
                  <li onclick="toggle('pre139828190068416', 'post139828190068416')"><pre>        &quot;&quot;&quot;</pre></li>
                  
                  <li onclick="toggle('pre139828190068416', 'post139828190068416')"><pre>        Get the given field&#x27;s value off the given obj. pre_save() is used for</pre></li>
                  
                  <li onclick="toggle('pre139828190068416', 'post139828190068416')"><pre>        things like auto_now on DateTimeField. Skip it if this is a raw query.</pre></li>
                  
                  <li onclick="toggle('pre139828190068416', 'post139828190068416')"><pre>        &quot;&quot;&quot;</pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v139828190068416">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>field</td>
                    <td class="code"><pre>&lt;django.db.models.fields.BooleanField: is_from_me&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;SQLInsertCompiler model=Message connection=&lt;DatabaseWrapper vendor=&#x27;postgresql&#x27; alias=&#x27;default&#x27;&gt; using=&#x27;default&#x27;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>value</td>
                    <td class="code"><pre>[True]</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
        <li class="frame django">
          
            <code class="fname">/home/jpfilho/.local/lib/python3.10/site-packages/django/db/models/fields/__init__.py</code>, line 954, in get_db_prep_save
          

          
            <div class="context" id="c139828079109312">
              
                <ol start="947" class="pre-context" id="pre139828079109312">
                
                  <li onclick="toggle('pre139828079109312', 'post139828079109312')"><pre>            value = self.get_prep_value(value)</pre></li>
                
                  <li onclick="toggle('pre139828079109312', 'post139828079109312')"><pre>        return value</pre></li>
                
                  <li onclick="toggle('pre139828079109312', 'post139828079109312')"><pre></pre></li>
                
                  <li onclick="toggle('pre139828079109312', 'post139828079109312')"><pre>    def get_db_prep_save(self, value, connection):</pre></li>
                
                  <li onclick="toggle('pre139828079109312', 'post139828079109312')"><pre>        &quot;&quot;&quot;Return field&#x27;s value prepared for saving into a database.&quot;&quot;&quot;</pre></li>
                
                  <li onclick="toggle('pre139828079109312', 'post139828079109312')"><pre>        if hasattr(value, &quot;as_sql&quot;):</pre></li>
                
                  <li onclick="toggle('pre139828079109312', 'post139828079109312')"><pre>            return value</pre></li>
                
                </ol>
              
              <ol start="954" class="context-line">
                <li onclick="toggle('pre139828079109312', 'post139828079109312')"><pre>        return self.get_db_prep_value(value, connection=connection, prepared=False)</pre> <span>…</span></li>
              </ol>
              
                <ol start='955' class="post-context" id="post139828079109312">
                  
                  <li onclick="toggle('pre139828079109312', 'post139828079109312')"><pre></pre></li>
                  
                  <li onclick="toggle('pre139828079109312', 'post139828079109312')"><pre>    def has_default(self):</pre></li>
                  
                  <li onclick="toggle('pre139828079109312', 'post139828079109312')"><pre>        &quot;&quot;&quot;Return a boolean of whether this field has a default value.&quot;&quot;&quot;</pre></li>
                  
                  <li onclick="toggle('pre139828079109312', 'post139828079109312')"><pre>        return self.default is not NOT_PROVIDED</pre></li>
                  
                  <li onclick="toggle('pre139828079109312', 'post139828079109312')"><pre></pre></li>
                  
                  <li onclick="toggle('pre139828079109312', 'post139828079109312')"><pre>    def get_default(self):</pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v139828079109312">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>connection</td>
                    <td class="code"><pre>&lt;DatabaseWrapper vendor=&#x27;postgresql&#x27; alias=&#x27;default&#x27;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;django.db.models.fields.BooleanField: is_from_me&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>value</td>
                    <td class="code"><pre>[True]</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
        <li class="frame django">
          
            <code class="fname">/home/jpfilho/.local/lib/python3.10/site-packages/django/db/models/fields/__init__.py</code>, line 947, in get_db_prep_value
          

          
            <div class="context" id="c139828185533888">
              
                <ol start="940" class="pre-context" id="pre139828185533888">
                
                  <li onclick="toggle('pre139828185533888', 'post139828185533888')"><pre>    def get_db_prep_value(self, value, connection, prepared=False):</pre></li>
                
                  <li onclick="toggle('pre139828185533888', 'post139828185533888')"><pre>        &quot;&quot;&quot;</pre></li>
                
                  <li onclick="toggle('pre139828185533888', 'post139828185533888')"><pre>        Return field&#x27;s value prepared for interacting with the database backend.</pre></li>
                
                  <li onclick="toggle('pre139828185533888', 'post139828185533888')"><pre></pre></li>
                
                  <li onclick="toggle('pre139828185533888', 'post139828185533888')"><pre>        Used by the default implementations of get_db_prep_save().</pre></li>
                
                  <li onclick="toggle('pre139828185533888', 'post139828185533888')"><pre>        &quot;&quot;&quot;</pre></li>
                
                  <li onclick="toggle('pre139828185533888', 'post139828185533888')"><pre>        if not prepared:</pre></li>
                
                </ol>
              
              <ol start="947" class="context-line">
                <li onclick="toggle('pre139828185533888', 'post139828185533888')"><pre>            value = self.get_prep_value(value)</pre> <span>…</span></li>
              </ol>
              
                <ol start='948' class="post-context" id="post139828185533888">
                  
                  <li onclick="toggle('pre139828185533888', 'post139828185533888')"><pre>        return value</pre></li>
                  
                  <li onclick="toggle('pre139828185533888', 'post139828185533888')"><pre></pre></li>
                  
                  <li onclick="toggle('pre139828185533888', 'post139828185533888')"><pre>    def get_db_prep_save(self, value, connection):</pre></li>
                  
                  <li onclick="toggle('pre139828185533888', 'post139828185533888')"><pre>        &quot;&quot;&quot;Return field&#x27;s value prepared for saving into a database.&quot;&quot;&quot;</pre></li>
                  
                  <li onclick="toggle('pre139828185533888', 'post139828185533888')"><pre>        if hasattr(value, &quot;as_sql&quot;):</pre></li>
                  
                  <li onclick="toggle('pre139828185533888', 'post139828185533888')"><pre>            return value</pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v139828185533888">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>connection</td>
                    <td class="code"><pre>&lt;DatabaseWrapper vendor=&#x27;postgresql&#x27; alias=&#x27;default&#x27;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>prepared</td>
                    <td class="code"><pre>False</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;django.db.models.fields.BooleanField: is_from_me&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>value</td>
                    <td class="code"><pre>[True]</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
        <li class="frame django">
          
            <code class="fname">/home/jpfilho/.local/lib/python3.10/site-packages/django/db/models/fields/__init__.py</code>, line 1122, in get_prep_value
          

          
            <div class="context" id="c139828223137344">
              
                <ol start="1115" class="pre-context" id="pre139828223137344">
                
                  <li onclick="toggle('pre139828223137344', 'post139828223137344')"><pre>            params={&quot;value&quot;: value},</pre></li>
                
                  <li onclick="toggle('pre139828223137344', 'post139828223137344')"><pre>        )</pre></li>
                
                  <li onclick="toggle('pre139828223137344', 'post139828223137344')"><pre></pre></li>
                
                  <li onclick="toggle('pre139828223137344', 'post139828223137344')"><pre>    def get_prep_value(self, value):</pre></li>
                
                  <li onclick="toggle('pre139828223137344', 'post139828223137344')"><pre>        value = super().get_prep_value(value)</pre></li>
                
                  <li onclick="toggle('pre139828223137344', 'post139828223137344')"><pre>        if value is None:</pre></li>
                
                  <li onclick="toggle('pre139828223137344', 'post139828223137344')"><pre>            return None</pre></li>
                
                </ol>
              
              <ol start="1122" class="context-line">
                <li onclick="toggle('pre139828223137344', 'post139828223137344')"><pre>        return self.to_python(value)</pre> <span>…</span></li>
              </ol>
              
                <ol start='1123' class="post-context" id="post139828223137344">
                  
                  <li onclick="toggle('pre139828223137344', 'post139828223137344')"><pre></pre></li>
                  
                  <li onclick="toggle('pre139828223137344', 'post139828223137344')"><pre>    def formfield(self, **kwargs):</pre></li>
                  
                  <li onclick="toggle('pre139828223137344', 'post139828223137344')"><pre>        if self.choices is not None:</pre></li>
                  
                  <li onclick="toggle('pre139828223137344', 'post139828223137344')"><pre>            include_blank = not (self.has_default() or &quot;initial&quot; in kwargs)</pre></li>
                  
                  <li onclick="toggle('pre139828223137344', 'post139828223137344')"><pre>            defaults = {&quot;choices&quot;: self.get_choices(include_blank=include_blank)}</pre></li>
                  
                  <li onclick="toggle('pre139828223137344', 'post139828223137344')"><pre>        else:</pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v139828223137344">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>__class__</td>
                    <td class="code"><pre>&lt;class &#x27;django.db.models.fields.BooleanField&#x27;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;django.db.models.fields.BooleanField: is_from_me&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>value</td>
                    <td class="code"><pre>[True]</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
        <li class="frame django">
          
            <code class="fname">/home/jpfilho/.local/lib/python3.10/site-packages/django/db/models/fields/__init__.py</code>, line 1112, in to_python
          

          
            <div class="context" id="c139828221226240">
              
                <ol start="1105" class="pre-context" id="pre139828221226240">
                
                  <li onclick="toggle('pre139828221226240', 'post139828221226240')"><pre>        if value in (True, False):</pre></li>
                
                  <li onclick="toggle('pre139828221226240', 'post139828221226240')"><pre>            # 1/0 are equal to True/False. bool() converts former to latter.</pre></li>
                
                  <li onclick="toggle('pre139828221226240', 'post139828221226240')"><pre>            return bool(value)</pre></li>
                
                  <li onclick="toggle('pre139828221226240', 'post139828221226240')"><pre>        if value in (&quot;t&quot;, &quot;True&quot;, &quot;1&quot;):</pre></li>
                
                  <li onclick="toggle('pre139828221226240', 'post139828221226240')"><pre>            return True</pre></li>
                
                  <li onclick="toggle('pre139828221226240', 'post139828221226240')"><pre>        if value in (&quot;f&quot;, &quot;False&quot;, &quot;0&quot;):</pre></li>
                
                  <li onclick="toggle('pre139828221226240', 'post139828221226240')"><pre>            return False</pre></li>
                
                </ol>
              
              <ol start="1112" class="context-line">
                <li onclick="toggle('pre139828221226240', 'post139828221226240')"><pre>        raise exceptions.ValidationError(</pre> <span>…</span></li>
              </ol>
              
                <ol start='1113' class="post-context" id="post139828221226240">
                  
                  <li onclick="toggle('pre139828221226240', 'post139828221226240')"><pre>            self.error_messages[&quot;invalid_nullable&quot; if self.null else &quot;invalid&quot;],</pre></li>
                  
                  <li onclick="toggle('pre139828221226240', 'post139828221226240')"><pre>            code=&quot;invalid&quot;,</pre></li>
                  
                  <li onclick="toggle('pre139828221226240', 'post139828221226240')"><pre>            params={&quot;value&quot;: value},</pre></li>
                  
                  <li onclick="toggle('pre139828221226240', 'post139828221226240')"><pre>        )</pre></li>
                  
                  <li onclick="toggle('pre139828221226240', 'post139828221226240')"><pre></pre></li>
                  
                  <li onclick="toggle('pre139828221226240', 'post139828221226240')"><pre>    def get_prep_value(self, value):</pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v139828221226240">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;django.db.models.fields.BooleanField: is_from_me&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>value</td>
                    <td class="code"><pre>[True]</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
    </ul>
  </div>

  <form action="https://dpaste.com/" name="pasteform" id="pasteform" method="post">
  <div id="pastebinTraceback" class="pastebin">
    <input type="hidden" name="language" value="PythonConsole">
    <input type="hidden" name="title"
      value="ValidationError at /webhook/messages/create">
    <input type="hidden" name="source" value="Django Dpaste Agent">
    <input type="hidden" name="poster" value="Django">
    <textarea name="content" id="traceback_area" cols="140" rows="25">
Environment:


Request Method: POST
Request URL: http://woz.serveo.net/webhook/messages/create?phone=5588988562749&amp;period=05%2F23

Django Version: 4.2.1
Python Version: 3.10.7
Installed Applications:
[&#x27;django.contrib.admin&#x27;,
 &#x27;django.contrib.auth&#x27;,
 &#x27;django.contrib.contenttypes&#x27;,
 &#x27;django.contrib.sessions&#x27;,
 &#x27;django.contrib.messages&#x27;,
 &#x27;django.contrib.staticfiles&#x27;,
 &#x27;drf_yasg&#x27;,
 &#x27;rest_framework&#x27;,
 &#x27;example&#x27;,
 &#x27;messages_api&#x27;,
 &#x27;celery&#x27;,
 &#x27;django_filters&#x27;]
Installed Middleware:
[&#x27;django.middleware.security.SecurityMiddleware&#x27;,
 &#x27;django.contrib.sessions.middleware.SessionMiddleware&#x27;,
 &#x27;django.middleware.common.CommonMiddleware&#x27;,
 &#x27;django.middleware.csrf.CsrfViewMiddleware&#x27;,
 &#x27;django.contrib.auth.middleware.AuthenticationMiddleware&#x27;,
 &#x27;django.contrib.messages.middleware.MessageMiddleware&#x27;,
 &#x27;django.middleware.clickjacking.XFrameOptionsMiddleware&#x27;]



Traceback (most recent call last):
  File "/home/jpfilho/.local/lib/python3.10/site-packages/django/core/handlers/exception.py", line 55, in inner
    response = get_response(request)
  File "/home/jpfilho/.local/lib/python3.10/site-packages/django/core/handlers/base.py", line 197, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/home/jpfilho/.local/lib/python3.10/site-packages/django/views/decorators/csrf.py", line 56, in wrapper_view
    return view_func(*args, **kwargs)
  File "/home/jpfilho/.local/lib/python3.10/site-packages/rest_framework/viewsets.py", line 125, in view
    return self.dispatch(request, *args, **kwargs)
  File "/home/jpfilho/.local/lib/python3.10/site-packages/rest_framework/views.py", line 509, in dispatch
    response = self.handle_exception(exc)
  File "/home/jpfilho/.local/lib/python3.10/site-packages/rest_framework/views.py", line 469, in handle_exception
    self.raise_uncaught_exception(exc)
  File "/home/jpfilho/.local/lib/python3.10/site-packages/rest_framework/views.py", line 480, in raise_uncaught_exception
    raise exc
  File "/home/jpfilho/.local/lib/python3.10/site-packages/rest_framework/views.py", line 506, in dispatch
    response = handler(request, *args, **kwargs)
  File "/home/jpfilho/Documents/code-ws/python/webhook/messages_api/views.py", line 153, in create
    message = Message.objects.create(
  File "/home/jpfilho/.local/lib/python3.10/site-packages/django/db/models/manager.py", line 87, in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
  File "/home/jpfilho/.local/lib/python3.10/site-packages/django/db/models/query.py", line 658, in create
    obj.save(force_insert=True, using=self.db)
  File "/home/jpfilho/.local/lib/python3.10/site-packages/django/db/models/base.py", line 814, in save
    self.save_base(
  File "/home/jpfilho/.local/lib/python3.10/site-packages/django/db/models/base.py", line 877, in save_base
    updated = self._save_table(
  File "/home/jpfilho/.local/lib/python3.10/site-packages/django/db/models/base.py", line 1020, in _save_table
    results = self._do_insert(
  File "/home/jpfilho/.local/lib/python3.10/site-packages/django/db/models/base.py", line 1061, in _do_insert
    return manager._insert(
  File "/home/jpfilho/.local/lib/python3.10/site-packages/django/db/models/manager.py", line 87, in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
  File "/home/jpfilho/.local/lib/python3.10/site-packages/django/db/models/query.py", line 1805, in _insert
    return query.get_compiler(using=using).execute_sql(returning_fields)
  File "/home/jpfilho/.local/lib/python3.10/site-packages/django/db/models/sql/compiler.py", line 1819, in execute_sql
    for sql, params in self.as_sql():
  File "/home/jpfilho/.local/lib/python3.10/site-packages/django/db/models/sql/compiler.py", line 1743, in as_sql
    value_rows = [
  File "/home/jpfilho/.local/lib/python3.10/site-packages/django/db/models/sql/compiler.py", line 1744, in &lt;listcomp&gt;
    [
  File "/home/jpfilho/.local/lib/python3.10/site-packages/django/db/models/sql/compiler.py", line 1745, in &lt;listcomp&gt;
    self.prepare_value(field, self.pre_save_val(field, obj))
  File "/home/jpfilho/.local/lib/python3.10/site-packages/django/db/models/sql/compiler.py", line 1684, in prepare_value
    return field.get_db_prep_save(value, connection=self.connection)
  File "/home/jpfilho/.local/lib/python3.10/site-packages/django/db/models/fields/__init__.py", line 954, in get_db_prep_save
    return self.get_db_prep_value(value, connection=connection, prepared=False)
  File "/home/jpfilho/.local/lib/python3.10/site-packages/django/db/models/fields/__init__.py", line 947, in get_db_prep_value
    value = self.get_prep_value(value)
  File "/home/jpfilho/.local/lib/python3.10/site-packages/django/db/models/fields/__init__.py", line 1122, in get_prep_value
    return self.to_python(value)
  File "/home/jpfilho/.local/lib/python3.10/site-packages/django/db/models/fields/__init__.py", line 1112, in to_python
    raise exceptions.ValidationError(

Exception Type: ValidationError at /webhook/messages/create
Exception Value: [&#x27;o valor “[True]”  deve ser True ou False.&#x27;]
</textarea>
  <br><br>
  <input type="submit" value="Share this traceback on a public website">
  </div>
</form>

</div>


<div id="requestinfo">
  <h2>Request information</h2>


  
    <h3 id="user-info">USER</h3>
    <p>AnonymousUser</p>
  

  <h3 id="get-info">GET</h3>
  
    <table class="req">
      <thead>
        <tr>
          <th>Variable</th>
          <th>Value</th>
        </tr>
      </thead>
      <tbody>
        
          <tr>
            <td>phone</td>
            <td class="code"><pre>&#x27;5588988562749&#x27;</pre></td>
          </tr>
        
          <tr>
            <td>period</td>
            <td class="code"><pre>&#x27;05/23&#x27;</pre></td>
          </tr>
        
      </tbody>
    </table>
  

  <h3 id="post-info">POST</h3>
  
    <p>No POST data</p>
  

  <h3 id="files-info">FILES</h3>
  
    <p>No FILES data</p>
  

  <h3 id="cookie-info">COOKIES</h3>
  
    <p>No cookie data</p>
  

  <h3 id="meta-info">META</h3>
  <table class="req">
    <thead>
      <tr>
        <th>Variable</th>
        <th>Value</th>
      </tr>
    </thead>
    <tbody>
      
        <tr>
          <td>API_URL</td>
          <td class="code"><pre>&#x27;********************&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>BAMF_DESKTOP_FILE_HINT</td>
          <td class="code"><pre>&#x27;/var/lib/snapd/desktop/applications/code_code.desktop&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>CHROME_DESKTOP</td>
          <td class="code"><pre>&#x27;code-url-handler.desktop&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>CLOUDAMQP_URL</td>
          <td class="code"><pre>&#x27;amqps://kzthoddb:3CziblJY4U4tFRNmARuMMdIDu8z53Ql6@fly.rmq.cloudamqp.com/kzthoddb&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>COLORTERM</td>
          <td class="code"><pre>&#x27;truecolor&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>COMPANIES_API</td>
          <td class="code"><pre>&#x27;********************&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>CONTENT_LENGTH</td>
          <td class="code"><pre>&#x27;261&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>CONTENT_TYPE</td>
          <td class="code"><pre>&#x27;application/json&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>DBUS_SESSION_BUS_ADDRESS</td>
          <td class="code"><pre>&#x27;unix:path=/run/user/1000/bus&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>DEBUGINFOD_URLS</td>
          <td class="code"><pre>&#x27;https://debuginfod.ubuntu.com &#x27;</pre></td>
        </tr>
      
        <tr>
          <td>DESKTOP_SESSION</td>
          <td class="code"><pre>&#x27;ubuntu&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>DISPLAY</td>
          <td class="code"><pre>&#x27;:1&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>DJANGO_SETTINGS_MODULE</td>
          <td class="code"><pre>&#x27;webhook.settings&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>GATEWAY_INTERFACE</td>
          <td class="code"><pre>&#x27;CGI/1.1&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>GDK_BACKEND</td>
          <td class="code"><pre>&#x27;x11&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>GDMSESSION</td>
          <td class="code"><pre>&#x27;ubuntu&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>GIO_LAUNCHED_DESKTOP_FILE</td>
          <td class="code"><pre>&#x27;/var/lib/snapd/desktop/applications/code_code.desktop&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>GIO_LAUNCHED_DESKTOP_FILE_PID</td>
          <td class="code"><pre>&#x27;2895&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>GIO_MODULE_DIR</td>
          <td class="code"><pre>&#x27;/home/jpfilho/snap/code/common/.cache/gio-modules&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>GIT_ASKPASS</td>
          <td class="code"><pre>&#x27;********************&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>GJS_DEBUG_OUTPUT</td>
          <td class="code"><pre>&#x27;stderr&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>GJS_DEBUG_TOPICS</td>
          <td class="code"><pre>&#x27;JS ERROR;JS LOG&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>GNOME_DESKTOP_SESSION_ID</td>
          <td class="code"><pre>&#x27;this-is-deprecated&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>GNOME_SHELL_SESSION_MODE</td>
          <td class="code"><pre>&#x27;ubuntu&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>GPG_AGENT_INFO</td>
          <td class="code"><pre>&#x27;/run/user/1000/gnupg/S.gpg-agent:0:1&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>GROUP_ID</td>
          <td class="code"><pre>&#x27;4bf3c03a-2d33-439c-8b13-efb50531e9c1&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>GSETTINGS_SCHEMA_DIR</td>
          <td class="code"><pre>&#x27;/home/jpfilho/snap/code/129/.local/share/glib-2.0/schemas&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>GTK_EXE_PREFIX</td>
          <td class="code"><pre>&#x27;/snap/code/129/usr&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>GTK_IM_MODULE_FILE</td>
          <td class="code"><pre>&#x27;/home/jpfilho/snap/code/common/.cache/immodules/immodules.cache&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>GTK_MODULES</td>
          <td class="code"><pre>&#x27;gail:atk-bridge&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>GTK_PATH</td>
          <td class="code"><pre>&#x27;/snap/code/129/usr/lib/x86_64-linux-gnu/gtk-3.0&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>HEROKU_API</td>
          <td class="code"><pre>&#x27;********************&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>HEROKU_API_KEY</td>
          <td class="code"><pre>&#x27;********************&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>HEROKU_DYNO_ID</td>
          <td class="code"><pre>&#x27;ba6aefd9-0ff3-4cfb-a04b-42b7bf6cf560&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>HOME</td>
          <td class="code"><pre>&#x27;/home/jpfilho&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>HTTP_ACCEPT</td>
          <td class="code"><pre>&#x27;*/*&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>HTTP_ACCEPT_ENCODING</td>
          <td class="code"><pre>&#x27;gzip, deflate&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>HTTP_HOST</td>
          <td class="code"><pre>&#x27;woz.serveo.net&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>HTTP_USER_AGENT</td>
          <td class="code"><pre>&#x27;python-requests/2.30.0&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>HTTP_X_FORWARDED_FOR</td>
          <td class="code"><pre>&#x27;177.37.130.81&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>ID_SERVICE</td>
          <td class="code"><pre>&#x27;83108c28-14f7-4646-acb8-dab165397fd5&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>INVOCATION_ID</td>
          <td class="code"><pre>&#x27;d9e9633aebb14edaa8abde0b26e491bc&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>JAVA_HOME</td>
          <td class="code"><pre>&#x27;/home/jpfilho/.sdkman/candidates/java/current&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>JOURNAL_STREAM</td>
          <td class="code"><pre>&#x27;8:33740&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>LANG</td>
          <td class="code"><pre>&#x27;pt_BR.UTF-8&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>LANGUAGE</td>
          <td class="code"><pre>&#x27;pt_BR:pt:pt_PT:en&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>LC_ADDRESS</td>
          <td class="code"><pre>&#x27;pt_BR.UTF-8&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>LC_IDENTIFICATION</td>
          <td class="code"><pre>&#x27;pt_BR.UTF-8&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>LC_MEASUREMENT</td>
          <td class="code"><pre>&#x27;pt_BR.UTF-8&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>LC_MONETARY</td>
          <td class="code"><pre>&#x27;pt_BR.UTF-8&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>LC_NAME</td>
          <td class="code"><pre>&#x27;pt_BR.UTF-8&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>LC_NUMERIC</td>
          <td class="code"><pre>&#x27;pt_BR.UTF-8&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>LC_PAPER</td>
          <td class="code"><pre>&#x27;pt_BR.UTF-8&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>LC_TELEPHONE</td>
          <td class="code"><pre>&#x27;pt_BR.UTF-8&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>LC_TIME</td>
          <td class="code"><pre>&#x27;pt_BR.UTF-8&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>LESSCLOSE</td>
          <td class="code"><pre>&#x27;/usr/bin/lesspipe %s %s&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>LESSOPEN</td>
          <td class="code"><pre>&#x27;| /usr/bin/lesspipe %s&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>LOCPATH</td>
          <td class="code"><pre>&#x27;/snap/code/129/usr/lib/locale&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>LOGNAME</td>
          <td class="code"><pre>&#x27;jpfilho&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>LS_COLORS</td>
          <td class="code"><pre>&#x27;rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:mi=00:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arc=01;31:*.arj=01;31:*.taz=01;31:*.lha=01;31:*.lz4=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.tzo=01;31:*.t7z=01;31:*.zip=01;31:*.z=01;31:*.dz=01;31:*.gz=01;31:*.lrz=01;31:*.lz=01;31:*.lzo=01;31:*.xz=01;31:*.zst=01;31:*.tzst=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.alz=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.cab=01;31:*.wim=01;31:*.swm=01;31:*.dwm=01;31:*.esd=01;31:*.jpg=01;35:*.jpeg=01;35:*.mjpg=01;35:*.mjpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.webp=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=00;36:*.au=00;36:*.flac=00;36:*.m4a=00;36:*.mid=00;36:*.midi=00;36:*.mka=00;36:*.mp3=00;36:*.mpc=00;36:*.ogg=00;36:*.ra=00;36:*.wav=00;36:*.oga=00;36:*.opus=00;36:*.spx=00;36:*.xspf=00;36:&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>MANAGERPID</td>
          <td class="code"><pre>&#x27;1783&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>MAVEN_HOME</td>
          <td class="code"><pre>&#x27;/home/jpfilho/.sdkman/candidates/maven/current&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>NVM_BIN</td>
          <td class="code"><pre>&#x27;/home/jpfilho/.nvm/versions/node/v18.16.0/bin&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>NVM_CD_FLAGS</td>
          <td class="code"><pre>&#x27;&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>NVM_DIR</td>
          <td class="code"><pre>&#x27;/home/jpfilho/.nvm&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>NVM_INC</td>
          <td class="code"><pre>&#x27;/home/jpfilho/.nvm/versions/node/v18.16.0/include/node&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>ORIGINAL_XDG_CURRENT_DESKTOP</td>
          <td class="code"><pre>&#x27;ubuntu:GNOME&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>PATH</td>
          <td class="code"><pre>&#x27;/home/jpfilho/.pyenv/libexec:/home/jpfilho/.pyenv/plugins/python-build/bin:/home/jpfilho/.pyenv/plugins/pyenv-virtualenv/bin:/home/jpfilho/.pyenv/plugins/pyenv-update/bin:/home/jpfilho/.pyenv/plugins/pyenv-doctor/bin:/home/jpfilho/.pyenv/shims:/home/jpfilho/.local/bin:/home/jpfilho/.pyenv/bin:/home/jpfilho/.nvm/versions/node/v18.16.0/bin:/home/jpfilho/.sdkman/candidates/maven/current/bin:/home/jpfilho/.sdkman/candidates/java/current/bin:/home/jpfilho/.local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:/snap/bin&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>PATH_INFO</td>
          <td class="code"><pre>&#x27;/webhook/messages/create&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>PWD</td>
          <td class="code"><pre>&#x27;/home/jpfilho/Documents/code-ws/python/webhook&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>PYENV_DIR</td>
          <td class="code"><pre>&#x27;/home/jpfilho/Documents/code-ws/python/webhook&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>PYENV_HOOK_PATH</td>
          <td class="code"><pre>&#x27;/home/jpfilho/.pyenv/pyenv.d:/usr/local/etc/pyenv.d:/etc/pyenv.d:/usr/lib/pyenv/hooks:/home/jpfilho/.pyenv/plugins/pyenv-virtualenv/etc/pyenv.d&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>PYENV_ROOT</td>
          <td class="code"><pre>&#x27;/home/jpfilho/.pyenv&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>PYENV_SHELL</td>
          <td class="code"><pre>&#x27;bash&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>PYENV_VERSION</td>
          <td class="code"><pre>&#x27;system&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>QT_ACCESSIBILITY</td>
          <td class="code"><pre>&#x27;1&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>QT_IM_MODULE</td>
          <td class="code"><pre>&#x27;ibus&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>QUERY_STRING</td>
          <td class="code"><pre>&#x27;phone=5588988562749&amp;period=05%2F23&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>REMOTE_ADDR</td>
          <td class="code"><pre>&#x27;127.0.0.1&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>REMOTE_HOST</td>
          <td class="code"><pre>&#x27;&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>REQUEST_METHOD</td>
          <td class="code"><pre>&#x27;POST&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>RUN_MAIN</td>
          <td class="code"><pre>&#x27;true&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SCRIPT_NAME</td>
          <td class="code"><pre>&#x27;&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SDKMAN_CANDIDATES_API</td>
          <td class="code"><pre>&#x27;********************&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SDKMAN_CANDIDATES_DIR</td>
          <td class="code"><pre>&#x27;/home/jpfilho/.sdkman/candidates&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SDKMAN_DIR</td>
          <td class="code"><pre>&#x27;/home/jpfilho/.sdkman&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SDKMAN_PLATFORM</td>
          <td class="code"><pre>&#x27;linuxx64&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SDKMAN_VERSION</td>
          <td class="code"><pre>&#x27;5.16.0&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SERVER_NAME</td>
          <td class="code"><pre>&#x27;localhost&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SERVER_PORT</td>
          <td class="code"><pre>&#x27;8000&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SERVER_PROTOCOL</td>
          <td class="code"><pre>&#x27;HTTP/1.1&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SERVER_SOFTWARE</td>
          <td class="code"><pre>&#x27;WSGIServer/0.2&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_MANAGER</td>
          <td class="code"><pre>&#x27;local/JPSERVER:@/tmp/.ICE-unix/2038,unix/JPSERVER:/tmp/.ICE-unix/2038&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SHELL</td>
          <td class="code"><pre>&#x27;/bin/bash&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SHLVL</td>
          <td class="code"><pre>&#x27;1&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SSH_AGENT_LAUNCHER</td>
          <td class="code"><pre>&#x27;openssh&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SSH_AUTH_SOCK</td>
          <td class="code"><pre>&#x27;/run/user/1000/keyring/ssh&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SYSTEMD_EXEC_PID</td>
          <td class="code"><pre>&#x27;2065&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>TERM</td>
          <td class="code"><pre>&#x27;xterm-256color&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>TERM_PROGRAM</td>
          <td class="code"><pre>&#x27;vscode&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>TERM_PROGRAM_VERSION</td>
          <td class="code"><pre>&#x27;1.78.2&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>TOKEN_API</td>
          <td class="code"><pre>&#x27;********************&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>TZ</td>
          <td class="code"><pre>&#x27;UTC&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>USER</td>
          <td class="code"><pre>&#x27;jpfilho&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>USERNAME</td>
          <td class="code"><pre>&#x27;jpfilho&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>VSCODE_GIT_ASKPASS_EXTRA_ARGS</td>
          <td class="code"><pre>&#x27;********************&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>VSCODE_GIT_ASKPASS_MAIN</td>
          <td class="code"><pre>&#x27;********************&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>VSCODE_GIT_ASKPASS_NODE</td>
          <td class="code"><pre>&#x27;********************&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>VSCODE_GIT_IPC_HANDLE</td>
          <td class="code"><pre>&#x27;/run/user/1000/vscode-git-1d8a16cec2.sock&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>WEBHOOK_API</td>
          <td class="code"><pre>&#x27;********************&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>WEB_URL</td>
          <td class="code"><pre>&#x27;https://woz.herokuapp.com&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>WINDOWPATH</td>
          <td class="code"><pre>&#x27;2&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>XAUTHORITY</td>
          <td class="code"><pre>&#x27;/run/user/1000/gdm/Xauthority&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>XDG_CONFIG_DIRS</td>
          <td class="code"><pre>&#x27;/etc/xdg/xdg-ubuntu:/etc/xdg&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>XDG_CURRENT_DESKTOP</td>
          <td class="code"><pre>&#x27;Unity&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>XDG_DATA_DIRS</td>
          <td class="code"><pre>&#x27;/home/jpfilho/snap/code/129/.local/share:/home/jpfilho/snap/code/129:/snap/code/129/usr/share:/usr/share/ubuntu:/usr/share/gnome:/usr/local/share/:/usr/share/:/var/lib/snapd/desktop&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>XDG_MENU_PREFIX</td>
          <td class="code"><pre>&#x27;gnome-&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>XDG_RUNTIME_DIR</td>
          <td class="code"><pre>&#x27;/run/user/1000&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>XDG_SESSION_CLASS</td>
          <td class="code"><pre>&#x27;user&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>XDG_SESSION_DESKTOP</td>
          <td class="code"><pre>&#x27;ubuntu&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>XDG_SESSION_TYPE</td>
          <td class="code"><pre>&#x27;x11&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>XMODIFIERS</td>
          <td class="code"><pre>&#x27;@im=ibus&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>wsgi.errors</td>
          <td class="code"><pre>&lt;_io.TextIOWrapper name=&#x27;&lt;stderr&gt;&#x27; mode=&#x27;w&#x27; encoding=&#x27;utf-8&#x27;&gt;</pre></td>
        </tr>
      
        <tr>
          <td>wsgi.file_wrapper</td>
          <td class="code"><pre>&lt;class &#x27;wsgiref.util.FileWrapper&#x27;&gt;</pre></td>
        </tr>
      
        <tr>
          <td>wsgi.input</td>
          <td class="code"><pre>&lt;django.core.handlers.wsgi.LimitedStream object at 0x7f2c48959630&gt;</pre></td>
        </tr>
      
        <tr>
          <td>wsgi.multiprocess</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>wsgi.multithread</td>
          <td class="code"><pre>True</pre></td>
        </tr>
      
        <tr>
          <td>wsgi.run_once</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>wsgi.url_scheme</td>
          <td class="code"><pre>&#x27;http&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>wsgi.version</td>
          <td class="code"><pre>(1, 0)</pre></td>
        </tr>
      
    </tbody>
  </table>


  <h3 id="settings-info">Settings</h3>
  <h4>Using settings module <code>webhook.settings</code></h4>
  <table class="req">
    <thead>
      <tr>
        <th>Setting</th>
        <th>Value</th>
      </tr>
    </thead>
    <tbody>
      
        <tr>
          <td>ABSOLUTE_URL_OVERRIDES</td>
          <td class="code"><pre>{}</pre></td>
        </tr>
      
        <tr>
          <td>ADMINS</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>ALLOWED_HOSTS</td>
          <td class="code"><pre>[&#x27;*&#x27;]</pre></td>
        </tr>
      
        <tr>
          <td>APPEND_SLASH</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>AUTHENTICATION_BACKENDS</td>
          <td class="code"><pre>[&#x27;django.contrib.auth.backends.ModelBackend&#x27;]</pre></td>
        </tr>
      
        <tr>
          <td>AUTH_PASSWORD_VALIDATORS</td>
          <td class="code"><pre>&#x27;********************&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>AUTH_USER_MODEL</td>
          <td class="code"><pre>&#x27;auth.User&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>BASE_DIR</td>
          <td class="code"><pre>PosixPath(&#x27;/home/jpfilho/Documents/code-ws/python/webhook&#x27;)</pre></td>
        </tr>
      
        <tr>
          <td>BROKER_URL</td>
          <td class="code"><pre>&#x27;amqps://kzthoddb:3CziblJY4U4tFRNmARuMMdIDu8z53Ql6@fly.rmq.cloudamqp.com/kzthoddb&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>CACHES</td>
          <td class="code"><pre>{&#x27;default&#x27;: {&#x27;BACKEND&#x27;: &#x27;django.core.cache.backends.locmem.LocMemCache&#x27;}}</pre></td>
        </tr>
      
        <tr>
          <td>CACHE_MIDDLEWARE_ALIAS</td>
          <td class="code"><pre>&#x27;default&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>CACHE_MIDDLEWARE_KEY_PREFIX</td>
          <td class="code"><pre>&#x27;********************&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>CACHE_MIDDLEWARE_SECONDS</td>
          <td class="code"><pre>600</pre></td>
        </tr>
      
        <tr>
          <td>CELERY_BROKER_URL</td>
          <td class="code"><pre>&#x27;amqps://kzthoddb:3CziblJY4U4tFRNmARuMMdIDu8z53Ql6@fly.rmq.cloudamqp.com/kzthoddb&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>CSRF_COOKIE_AGE</td>
          <td class="code"><pre>31449600</pre></td>
        </tr>
      
        <tr>
          <td>CSRF_COOKIE_DOMAIN</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>CSRF_COOKIE_HTTPONLY</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>CSRF_COOKIE_MASKED</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>CSRF_COOKIE_NAME</td>
          <td class="code"><pre>&#x27;csrftoken&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>CSRF_COOKIE_PATH</td>
          <td class="code"><pre>&#x27;/&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>CSRF_COOKIE_SAMESITE</td>
          <td class="code"><pre>&#x27;Lax&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>CSRF_COOKIE_SECURE</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>CSRF_FAILURE_VIEW</td>
          <td class="code"><pre>&#x27;django.views.csrf.csrf_failure&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>CSRF_HEADER_NAME</td>
          <td class="code"><pre>&#x27;HTTP_X_CSRFTOKEN&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>CSRF_TRUSTED_ORIGINS</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>CSRF_USE_SESSIONS</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>DATABASES</td>
          <td class="code"><pre>{&#x27;default&#x27;: {&#x27;ATOMIC_REQUESTS&#x27;: False,
             &#x27;AUTOCOMMIT&#x27;: True,
             &#x27;CONN_HEALTH_CHECKS&#x27;: False,
             &#x27;CONN_MAX_AGE&#x27;: 0,
             &#x27;ENGINE&#x27;: &#x27;django.db.backends.postgresql&#x27;,
             &#x27;HOST&#x27;: &#x27;ep-young-feather-699075.us-east-1.aws.neon.tech&#x27;,
             &#x27;NAME&#x27;: &#x27;neondb&#x27;,
             &#x27;OPTIONS&#x27;: {},
             &#x27;PASSWORD&#x27;: &#x27;********************&#x27;,
             &#x27;PORT&#x27;: &#x27;5432&#x27;,
             &#x27;TEST&#x27;: {&#x27;CHARSET&#x27;: None,
                      &#x27;COLLATION&#x27;: None,
                      &#x27;MIGRATE&#x27;: True,
                      &#x27;MIRROR&#x27;: None,
                      &#x27;NAME&#x27;: None},
             &#x27;TIME_ZONE&#x27;: None,
             &#x27;USER&#x27;: &#x27;psousaj&#x27;}}</pre></td>
        </tr>
      
        <tr>
          <td>DATABASE_ROUTERS</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>DATA_UPLOAD_MAX_MEMORY_SIZE</td>
          <td class="code"><pre>2621440</pre></td>
        </tr>
      
        <tr>
          <td>DATA_UPLOAD_MAX_NUMBER_FIELDS</td>
          <td class="code"><pre>1000</pre></td>
        </tr>
      
        <tr>
          <td>DATA_UPLOAD_MAX_NUMBER_FILES</td>
          <td class="code"><pre>100</pre></td>
        </tr>
      
        <tr>
          <td>DATETIME_FORMAT</td>
          <td class="code"><pre>&#x27;N j, Y, P&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>DATETIME_INPUT_FORMATS</td>
          <td class="code"><pre>[&#x27;%Y-%m-%d %H:%M:%S&#x27;,
 &#x27;%Y-%m-%d %H:%M:%S.%f&#x27;,
 &#x27;%Y-%m-%d %H:%M&#x27;,
 &#x27;%m/%d/%Y %H:%M:%S&#x27;,
 &#x27;%m/%d/%Y %H:%M:%S.%f&#x27;,
 &#x27;%m/%d/%Y %H:%M&#x27;,
 &#x27;%m/%d/%y %H:%M:%S&#x27;,
 &#x27;%m/%d/%y %H:%M:%S.%f&#x27;,
 &#x27;%m/%d/%y %H:%M&#x27;]</pre></td>
        </tr>
      
        <tr>
          <td>DATE_FORMAT</td>
          <td class="code"><pre>&#x27;N j, Y&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>DATE_INPUT_FORMATS</td>
          <td class="code"><pre>[&#x27;%Y-%m-%d&#x27;,
 &#x27;%m/%d/%Y&#x27;,
 &#x27;%m/%d/%y&#x27;,
 &#x27;%b %d %Y&#x27;,
 &#x27;%b %d, %Y&#x27;,
 &#x27;%d %b %Y&#x27;,
 &#x27;%d %b, %Y&#x27;,
 &#x27;%B %d %Y&#x27;,
 &#x27;%B %d, %Y&#x27;,
 &#x27;%d %B %Y&#x27;,
 &#x27;%d %B, %Y&#x27;]</pre></td>
        </tr>
      
        <tr>
          <td>DEBUG</td>
          <td class="code"><pre>True</pre></td>
        </tr>
      
        <tr>
          <td>DEBUG_PROPAGATE_EXCEPTIONS</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>DECIMAL_SEPARATOR</td>
          <td class="code"><pre>&#x27;.&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>DEFAULT_AUTO_FIELD</td>
          <td class="code"><pre>&#x27;django.db.models.BigAutoField&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>DEFAULT_CHARSET</td>
          <td class="code"><pre>&#x27;utf-8&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>DEFAULT_EXCEPTION_REPORTER</td>
          <td class="code"><pre>&#x27;django.views.debug.ExceptionReporter&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>DEFAULT_EXCEPTION_REPORTER_FILTER</td>
          <td class="code"><pre>&#x27;django.views.debug.SafeExceptionReporterFilter&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>DEFAULT_FILE_STORAGE</td>
          <td class="code"><pre>&#x27;django.core.files.storage.FileSystemStorage&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>DEFAULT_FROM_EMAIL</td>
          <td class="code"><pre>&#x27;webmaster@localhost&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>DEFAULT_INDEX_TABLESPACE</td>
          <td class="code"><pre>&#x27;&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>DEFAULT_TABLESPACE</td>
          <td class="code"><pre>&#x27;&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>DISALLOWED_USER_AGENTS</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>EMAIL_BACKEND</td>
          <td class="code"><pre>&#x27;django.core.mail.backends.smtp.EmailBackend&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>EMAIL_HOST</td>
          <td class="code"><pre>&#x27;localhost&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>EMAIL_HOST_PASSWORD</td>
          <td class="code"><pre>&#x27;********************&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>EMAIL_HOST_USER</td>
          <td class="code"><pre>&#x27;&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>EMAIL_PORT</td>
          <td class="code"><pre>25</pre></td>
        </tr>
      
        <tr>
          <td>EMAIL_SSL_CERTFILE</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>EMAIL_SSL_KEYFILE</td>
          <td class="code"><pre>&#x27;********************&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>EMAIL_SUBJECT_PREFIX</td>
          <td class="code"><pre>&#x27;[Django] &#x27;</pre></td>
        </tr>
      
        <tr>
          <td>EMAIL_TIMEOUT</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>EMAIL_USE_LOCALTIME</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>EMAIL_USE_SSL</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>EMAIL_USE_TLS</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>FILE_UPLOAD_DIRECTORY_PERMISSIONS</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>FILE_UPLOAD_HANDLERS</td>
          <td class="code"><pre>[&#x27;django.core.files.uploadhandler.MemoryFileUploadHandler&#x27;,
 &#x27;django.core.files.uploadhandler.TemporaryFileUploadHandler&#x27;]</pre></td>
        </tr>
      
        <tr>
          <td>FILE_UPLOAD_MAX_MEMORY_SIZE</td>
          <td class="code"><pre>2621440</pre></td>
        </tr>
      
        <tr>
          <td>FILE_UPLOAD_PERMISSIONS</td>
          <td class="code"><pre>420</pre></td>
        </tr>
      
        <tr>
          <td>FILE_UPLOAD_TEMP_DIR</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>FIRST_DAY_OF_WEEK</td>
          <td class="code"><pre>0</pre></td>
        </tr>
      
        <tr>
          <td>FIXTURE_DIRS</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>FORCE_SCRIPT_NAME</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>FORMAT_MODULE_PATH</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>FORM_RENDERER</td>
          <td class="code"><pre>&#x27;django.forms.renderers.DjangoTemplates&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>IGNORABLE_404_URLS</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>INSTALLED_APPS</td>
          <td class="code"><pre>[&#x27;django.contrib.admin&#x27;,
 &#x27;django.contrib.auth&#x27;,
 &#x27;django.contrib.contenttypes&#x27;,
 &#x27;django.contrib.sessions&#x27;,
 &#x27;django.contrib.messages&#x27;,
 &#x27;django.contrib.staticfiles&#x27;,
 &#x27;drf_yasg&#x27;,
 &#x27;rest_framework&#x27;,
 &#x27;example&#x27;,
 &#x27;messages_api&#x27;,
 &#x27;celery&#x27;,
 &#x27;django_filters&#x27;]</pre></td>
        </tr>
      
        <tr>
          <td>INTERNAL_IPS</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>LANGUAGES</td>
          <td class="code"><pre>[(&#x27;af&#x27;, &#x27;Afrikaans&#x27;),
 (&#x27;ar&#x27;, &#x27;Arabic&#x27;),
 (&#x27;ar-dz&#x27;, &#x27;Algerian Arabic&#x27;),
 (&#x27;ast&#x27;, &#x27;Asturian&#x27;),
 (&#x27;az&#x27;, &#x27;Azerbaijani&#x27;),
 (&#x27;bg&#x27;, &#x27;Bulgarian&#x27;),
 (&#x27;be&#x27;, &#x27;Belarusian&#x27;),
 (&#x27;bn&#x27;, &#x27;Bengali&#x27;),
 (&#x27;br&#x27;, &#x27;Breton&#x27;),
 (&#x27;bs&#x27;, &#x27;Bosnian&#x27;),
 (&#x27;ca&#x27;, &#x27;Catalan&#x27;),
 (&#x27;ckb&#x27;, &#x27;Central Kurdish (Sorani)&#x27;),
 (&#x27;cs&#x27;, &#x27;Czech&#x27;),
 (&#x27;cy&#x27;, &#x27;Welsh&#x27;),
 (&#x27;da&#x27;, &#x27;Danish&#x27;),
 (&#x27;de&#x27;, &#x27;German&#x27;),
 (&#x27;dsb&#x27;, &#x27;Lower Sorbian&#x27;),
 (&#x27;el&#x27;, &#x27;Greek&#x27;),
 (&#x27;en&#x27;, &#x27;English&#x27;),
 (&#x27;en-au&#x27;, &#x27;Australian English&#x27;),
 (&#x27;en-gb&#x27;, &#x27;British English&#x27;),
 (&#x27;eo&#x27;, &#x27;Esperanto&#x27;),
 (&#x27;es&#x27;, &#x27;Spanish&#x27;),
 (&#x27;es-ar&#x27;, &#x27;Argentinian Spanish&#x27;),
 (&#x27;es-co&#x27;, &#x27;Colombian Spanish&#x27;),
 (&#x27;es-mx&#x27;, &#x27;Mexican Spanish&#x27;),
 (&#x27;es-ni&#x27;, &#x27;Nicaraguan Spanish&#x27;),
 (&#x27;es-ve&#x27;, &#x27;Venezuelan Spanish&#x27;),
 (&#x27;et&#x27;, &#x27;Estonian&#x27;),
 (&#x27;eu&#x27;, &#x27;Basque&#x27;),
 (&#x27;fa&#x27;, &#x27;Persian&#x27;),
 (&#x27;fi&#x27;, &#x27;Finnish&#x27;),
 (&#x27;fr&#x27;, &#x27;French&#x27;),
 (&#x27;fy&#x27;, &#x27;Frisian&#x27;),
 (&#x27;ga&#x27;, &#x27;Irish&#x27;),
 (&#x27;gd&#x27;, &#x27;Scottish Gaelic&#x27;),
 (&#x27;gl&#x27;, &#x27;Galician&#x27;),
 (&#x27;he&#x27;, &#x27;Hebrew&#x27;),
 (&#x27;hi&#x27;, &#x27;Hindi&#x27;),
 (&#x27;hr&#x27;, &#x27;Croatian&#x27;),
 (&#x27;hsb&#x27;, &#x27;Upper Sorbian&#x27;),
 (&#x27;hu&#x27;, &#x27;Hungarian&#x27;),
 (&#x27;hy&#x27;, &#x27;Armenian&#x27;),
 (&#x27;ia&#x27;, &#x27;Interlingua&#x27;),
 (&#x27;id&#x27;, &#x27;Indonesian&#x27;),
 (&#x27;ig&#x27;, &#x27;Igbo&#x27;),
 (&#x27;io&#x27;, &#x27;Ido&#x27;),
 (&#x27;is&#x27;, &#x27;Icelandic&#x27;),
 (&#x27;it&#x27;, &#x27;Italian&#x27;),
 (&#x27;ja&#x27;, &#x27;Japanese&#x27;),
 (&#x27;ka&#x27;, &#x27;Georgian&#x27;),
 (&#x27;kab&#x27;, &#x27;Kabyle&#x27;),
 (&#x27;kk&#x27;, &#x27;Kazakh&#x27;),
 (&#x27;km&#x27;, &#x27;Khmer&#x27;),
 (&#x27;kn&#x27;, &#x27;Kannada&#x27;),
 (&#x27;ko&#x27;, &#x27;Korean&#x27;),
 (&#x27;ky&#x27;, &#x27;Kyrgyz&#x27;),
 (&#x27;lb&#x27;, &#x27;Luxembourgish&#x27;),
 (&#x27;lt&#x27;, &#x27;Lithuanian&#x27;),
 (&#x27;lv&#x27;, &#x27;Latvian&#x27;),
 (&#x27;mk&#x27;, &#x27;Macedonian&#x27;),
 (&#x27;ml&#x27;, &#x27;Malayalam&#x27;),
 (&#x27;mn&#x27;, &#x27;Mongolian&#x27;),
 (&#x27;mr&#x27;, &#x27;Marathi&#x27;),
 (&#x27;ms&#x27;, &#x27;Malay&#x27;),
 (&#x27;my&#x27;, &#x27;Burmese&#x27;),
 (&#x27;nb&#x27;, &#x27;Norwegian Bokmål&#x27;),
 (&#x27;ne&#x27;, &#x27;Nepali&#x27;),
 (&#x27;nl&#x27;, &#x27;Dutch&#x27;),
 (&#x27;nn&#x27;, &#x27;Norwegian Nynorsk&#x27;),
 (&#x27;os&#x27;, &#x27;Ossetic&#x27;),
 (&#x27;pa&#x27;, &#x27;Punjabi&#x27;),
 (&#x27;pl&#x27;, &#x27;Polish&#x27;),
 (&#x27;pt&#x27;, &#x27;Portuguese&#x27;),
 (&#x27;pt-br&#x27;, &#x27;Brazilian Portuguese&#x27;),
 (&#x27;ro&#x27;, &#x27;Romanian&#x27;),
 (&#x27;ru&#x27;, &#x27;Russian&#x27;),
 (&#x27;sk&#x27;, &#x27;Slovak&#x27;),
 (&#x27;sl&#x27;, &#x27;Slovenian&#x27;),
 (&#x27;sq&#x27;, &#x27;Albanian&#x27;),
 (&#x27;sr&#x27;, &#x27;Serbian&#x27;),
 (&#x27;sr-latn&#x27;, &#x27;Serbian Latin&#x27;),
 (&#x27;sv&#x27;, &#x27;Swedish&#x27;),
 (&#x27;sw&#x27;, &#x27;Swahili&#x27;),
 (&#x27;ta&#x27;, &#x27;Tamil&#x27;),
 (&#x27;te&#x27;, &#x27;Telugu&#x27;),
 (&#x27;tg&#x27;, &#x27;Tajik&#x27;),
 (&#x27;th&#x27;, &#x27;Thai&#x27;),
 (&#x27;tk&#x27;, &#x27;Turkmen&#x27;),
 (&#x27;tr&#x27;, &#x27;Turkish&#x27;),
 (&#x27;tt&#x27;, &#x27;Tatar&#x27;),
 (&#x27;udm&#x27;, &#x27;Udmurt&#x27;),
 (&#x27;uk&#x27;, &#x27;Ukrainian&#x27;),
 (&#x27;ur&#x27;, &#x27;Urdu&#x27;),
 (&#x27;uz&#x27;, &#x27;Uzbek&#x27;),
 (&#x27;vi&#x27;, &#x27;Vietnamese&#x27;),
 (&#x27;zh-hans&#x27;, &#x27;Simplified Chinese&#x27;),
 (&#x27;zh-hant&#x27;, &#x27;Traditional Chinese&#x27;)]</pre></td>
        </tr>
      
        <tr>
          <td>LANGUAGES_BIDI</td>
          <td class="code"><pre>[&#x27;he&#x27;, &#x27;ar&#x27;, &#x27;ar-dz&#x27;, &#x27;ckb&#x27;, &#x27;fa&#x27;, &#x27;ur&#x27;]</pre></td>
        </tr>
      
        <tr>
          <td>LANGUAGE_CODE</td>
          <td class="code"><pre>&#x27;pt-BR&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>LANGUAGE_COOKIE_AGE</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>LANGUAGE_COOKIE_DOMAIN</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>LANGUAGE_COOKIE_HTTPONLY</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>LANGUAGE_COOKIE_NAME</td>
          <td class="code"><pre>&#x27;django_language&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>LANGUAGE_COOKIE_PATH</td>
          <td class="code"><pre>&#x27;/&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>LANGUAGE_COOKIE_SAMESITE</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>LANGUAGE_COOKIE_SECURE</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>LOCALE_PATHS</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>LOGGING</td>
          <td class="code"><pre>{}</pre></td>
        </tr>
      
        <tr>
          <td>LOGGING_CONFIG</td>
          <td class="code"><pre>&#x27;logging.config.dictConfig&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>LOGIN_REDIRECT_URL</td>
          <td class="code"><pre>&#x27;/accounts/profile/&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>LOGIN_URL</td>
          <td class="code"><pre>&#x27;/accounts/login/&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>LOGOUT_REDIRECT_URL</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>MANAGERS</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>MEDIA_ROOT</td>
          <td class="code"><pre>&#x27;&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>MEDIA_URL</td>
          <td class="code"><pre>&#x27;/&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>MESSAGE_STORAGE</td>
          <td class="code"><pre>&#x27;django.contrib.messages.storage.fallback.FallbackStorage&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>MIDDLEWARE</td>
          <td class="code"><pre>[&#x27;django.middleware.security.SecurityMiddleware&#x27;,
 &#x27;django.contrib.sessions.middleware.SessionMiddleware&#x27;,
 &#x27;django.middleware.common.CommonMiddleware&#x27;,
 &#x27;django.middleware.csrf.CsrfViewMiddleware&#x27;,
 &#x27;django.contrib.auth.middleware.AuthenticationMiddleware&#x27;,
 &#x27;django.contrib.messages.middleware.MessageMiddleware&#x27;,
 &#x27;django.middleware.clickjacking.XFrameOptionsMiddleware&#x27;]</pre></td>
        </tr>
      
        <tr>
          <td>MIGRATION_MODULES</td>
          <td class="code"><pre>{}</pre></td>
        </tr>
      
        <tr>
          <td>MONTH_DAY_FORMAT</td>
          <td class="code"><pre>&#x27;F j&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>NUMBER_GROUPING</td>
          <td class="code"><pre>0</pre></td>
        </tr>
      
        <tr>
          <td>PASSWORD_HASHERS</td>
          <td class="code"><pre>&#x27;********************&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>PASSWORD_RESET_TIMEOUT</td>
          <td class="code"><pre>&#x27;********************&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>PREPEND_WWW</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>ROOT_URLCONF</td>
          <td class="code"><pre>&#x27;webhook.urls&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SECRET_KEY</td>
          <td class="code"><pre>&#x27;********************&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SECRET_KEY_FALLBACKS</td>
          <td class="code"><pre>&#x27;********************&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SECURE_CONTENT_TYPE_NOSNIFF</td>
          <td class="code"><pre>True</pre></td>
        </tr>
      
        <tr>
          <td>SECURE_CROSS_ORIGIN_OPENER_POLICY</td>
          <td class="code"><pre>&#x27;same-origin&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SECURE_HSTS_INCLUDE_SUBDOMAINS</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>SECURE_HSTS_PRELOAD</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>SECURE_HSTS_SECONDS</td>
          <td class="code"><pre>0</pre></td>
        </tr>
      
        <tr>
          <td>SECURE_PROXY_SSL_HEADER</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>SECURE_REDIRECT_EXEMPT</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>SECURE_REFERRER_POLICY</td>
          <td class="code"><pre>&#x27;same-origin&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SECURE_SSL_HOST</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>SECURE_SSL_REDIRECT</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>SERVER_EMAIL</td>
          <td class="code"><pre>&#x27;root@localhost&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_CACHE_ALIAS</td>
          <td class="code"><pre>&#x27;default&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_COOKIE_AGE</td>
          <td class="code"><pre>1209600</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_COOKIE_DOMAIN</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_COOKIE_HTTPONLY</td>
          <td class="code"><pre>True</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_COOKIE_NAME</td>
          <td class="code"><pre>&#x27;sessionid&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_COOKIE_PATH</td>
          <td class="code"><pre>&#x27;/&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_COOKIE_SAMESITE</td>
          <td class="code"><pre>&#x27;Lax&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_COOKIE_SECURE</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_ENGINE</td>
          <td class="code"><pre>&#x27;django.contrib.sessions.backends.db&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_EXPIRE_AT_BROWSER_CLOSE</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_FILE_PATH</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_SAVE_EVERY_REQUEST</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_SERIALIZER</td>
          <td class="code"><pre>&#x27;django.contrib.sessions.serializers.JSONSerializer&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SETTINGS_MODULE</td>
          <td class="code"><pre>&#x27;webhook.settings&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SHORT_DATETIME_FORMAT</td>
          <td class="code"><pre>&#x27;m/d/Y P&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SHORT_DATE_FORMAT</td>
          <td class="code"><pre>&#x27;m/d/Y&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SIGNING_BACKEND</td>
          <td class="code"><pre>&#x27;django.core.signing.TimestampSigner&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SILENCED_SYSTEM_CHECKS</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>STATICFILES_DIRS</td>
          <td class="code"><pre>[&#x27;/home/jpfilho/Documents/code-ws/python/webhook/statics&#x27;]</pre></td>
        </tr>
      
        <tr>
          <td>STATICFILES_FINDERS</td>
          <td class="code"><pre>[&#x27;django.contrib.staticfiles.finders.FileSystemFinder&#x27;,
 &#x27;django.contrib.staticfiles.finders.AppDirectoriesFinder&#x27;]</pre></td>
        </tr>
      
        <tr>
          <td>STATICFILES_STORAGE</td>
          <td class="code"><pre>&#x27;django.contrib.staticfiles.storage.StaticFilesStorage&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>STATIC_ROOT</td>
          <td class="code"><pre>&#x27;/home/jpfilho/Documents/code-ws/python/webhook/static&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>STATIC_URL</td>
          <td class="code"><pre>&#x27;/static/&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>STORAGES</td>
          <td class="code"><pre>{&#x27;default&#x27;: {&#x27;BACKEND&#x27;: &#x27;django.core.files.storage.FileSystemStorage&#x27;},
 &#x27;staticfiles&#x27;: {&#x27;BACKEND&#x27;: &#x27;django.contrib.staticfiles.storage.StaticFilesStorage&#x27;}}</pre></td>
        </tr>
      
        <tr>
          <td>TEMPLATES</td>
          <td class="code"><pre>[{&#x27;APP_DIRS&#x27;: True,
  &#x27;BACKEND&#x27;: &#x27;django.template.backends.django.DjangoTemplates&#x27;,
  &#x27;DIRS&#x27;: [],
  &#x27;OPTIONS&#x27;: {&#x27;context_processors&#x27;: [&#x27;django.template.context_processors.debug&#x27;,
                                     &#x27;django.template.context_processors.request&#x27;,
                                     &#x27;django.contrib.auth.context_processors.auth&#x27;,
                                     &#x27;django.contrib.messages.context_processors.messages&#x27;]}}]</pre></td>
        </tr>
      
        <tr>
          <td>TEST_NON_SERIALIZED_APPS</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>TEST_RUNNER</td>
          <td class="code"><pre>&#x27;django.test.runner.DiscoverRunner&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>THOUSAND_SEPARATOR</td>
          <td class="code"><pre>&#x27;,&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>TIME_FORMAT</td>
          <td class="code"><pre>&#x27;P&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>TIME_INPUT_FORMATS</td>
          <td class="code"><pre>[&#x27;%H:%M:%S&#x27;, &#x27;%H:%M:%S.%f&#x27;, &#x27;%H:%M&#x27;]</pre></td>
        </tr>
      
        <tr>
          <td>TIME_ZONE</td>
          <td class="code"><pre>&#x27;UTC&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>USE_DEPRECATED_PYTZ</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>USE_I18N</td>
          <td class="code"><pre>True</pre></td>
        </tr>
      
        <tr>
          <td>USE_L10N</td>
          <td class="code"><pre>True</pre></td>
        </tr>
      
        <tr>
          <td>USE_THOUSAND_SEPARATOR</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>USE_TZ</td>
          <td class="code"><pre>True</pre></td>
        </tr>
      
        <tr>
          <td>USE_X_FORWARDED_HOST</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>USE_X_FORWARDED_PORT</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>WSGI_APPLICATION</td>
          <td class="code"><pre>&#x27;webhook.wsgi.app&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>X_FRAME_OPTIONS</td>
          <td class="code"><pre>&#x27;DENY&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>YEAR_MONTH_FORMAT</td>
          <td class="code"><pre>&#x27;F Y&#x27;</pre></td>
        </tr>
      
    </tbody>
  </table>

</div>

  <div id="explanation">
    <p>
      You’re seeing this error because you have <code>DEBUG = True</code> in your
      Django settings file. Change that to <code>False</code>, and Django will
      display a standard page generated by the handler for this status code.
    </p>
  </div>

</body>
</html>

21/05/2023|23:55:56 - messages_api.event -DEBUG- <Response [400]>-{"error":400,"message":"Message matching query does not exist."}
21/05/2023|23:55:56 - messages_api.event -DEBUG- <Response [400]>-{"error":400,"message":"Message matching query does not exist."}
21/05/2023|23:55:59 - messages_api.event -DEBUG- <Response [400]>-{"error":400,"message":"Message matching query does not exist."}
21/05/2023|23:55:59 - messages_api.event -DEBUG- <Response [400]>-{"error":400,"message":"Message matching query does not exist."}
21/05/2023|23:56:00 - messages_api.event -DEBUG- <Response [400]>-{"error":400,"message":"Message matching query does not exist."}
21/05/2023|23:56:01 - messages_api.event -DEBUG- <Response [400]>-{"error":400,"message":"Message matching query does not exist."}
21/05/2023|23:56:01 - messages_api.event -DEBUG- <Response [400]>-{"error":400,"message":"Message matching query does not exist."}
21/05/2023|23:56:18 - messages_api.event -DEBUG- <Response [400]>-{"error":400,"message":"Message matching query does not exist."}
21/05/2023|23:56:19 - messages_api.event -DEBUG- <Response [400]>-{"error":400,"message":"Message matching query does not exist."}
21/05/2023|23:57:00 - messages_api.event -DEBUG- <Response [400]>-{"error":400,"message":"Message matching query does not exist."}
21/05/2023|23:57:00 - messages_api.event -DEBUG- <Response [400]>-{"error":400,"message":"Message matching query does not exist."}
21/05/2023|23:57:01 - messages_api.event -DEBUG- <Response [400]>-{"error":400,"message":"Message matching query does not exist."}
21/05/2023|23:57:02 - messages_api.event -DEBUG- <Response [400]>-{"error":400,"message":"Message matching query does not exist."}
21/05/2023|23:57:02 - messages_api.event -DEBUG- <Response [400]>-{"error":400,"message":"Message matching query does not exist."}
21/05/2023|23:57:20 - messages_api.event -DEBUG- <Response [400]>-{"error":400,"message":"Message matching query does not exist."}
21/05/2023|23:57:20 - messages_api.event -DEBUG- <Response [400]>-{"error":400,"message":"Message matching query does not exist."}
21/05/2023|23:57:59 - webhook.views -INFO- Received webhook request
{'event': 'message.created', 'data': {'id': 'a83d7580-2294-4fad-9672-027686d6924c', 'isFromMe': True, 'sent': True, 'type': 'chat', 'timestamp': '2023-05-21T23:57:57.000Z', 'data': {'ack': 0, 'isNew': True, 'isFirst': False}, 'visible': True, 'accountId': '966b70ba-27d8-43ae-a295-35e59f0007be', 'contactId': '79db7607-6088-44c1-a010-ed4ef39d4f37', 'fromId': 'e12d3a56-0c52-43ac-b33c-15c399eb06d4', 'serviceId': '83108c28-14f7-4646-acb8-dab165397fd5', 'toId': None, 'userId': '3f4cc332-516e-4f48-aff2-df6eaa2e5034', 'ticketId': 'e5a453e9-6cb1-476e-b416-3b334b0bc61a', 'ticketUserId': None, 'ticketDepartmentId': None, 'quotedMessageId': None, 'origin': 'user', 'hsmId': None, 'text': 'Mizera', 'obfuscated': False, 'files': None, 'quotedMessage': None, 'isFromBot': False}, 'webhookId': '27b4c18d-2ab0-4c70-a592-46bbe7e00bc8', 'timestamp': '2023-05-21T23:57:58.311Z'}
21/05/2023|23:57:59 - webhook.views -INFO- Received webhook request
{'event': 'message.updated', 'data': {'id': 'a83d7580-2294-4fad-9672-027686d6924c', 'isFromMe': True, 'sent': True, 'type': 'chat', 'timestamp': '2023-05-21T23:57:57.000Z', 'data': {'ack': 1, 'isNew': True, 'isFirst': False}, 'visible': True, 'accountId': '966b70ba-27d8-43ae-a295-35e59f0007be', 'contactId': '79db7607-6088-44c1-a010-ed4ef39d4f37', 'fromId': 'e12d3a56-0c52-43ac-b33c-15c399eb06d4', 'serviceId': '83108c28-14f7-4646-acb8-dab165397fd5', 'toId': None, 'userId': '3f4cc332-516e-4f48-aff2-df6eaa2e5034', 'ticketId': 'e5a453e9-6cb1-476e-b416-3b334b0bc61a', 'ticketUserId': '3f4cc332-516e-4f48-aff2-df6eaa2e5034', 'ticketDepartmentId': 'a78046d7-809d-4cdb-a72a-31dfbc47d862', 'quotedMessageId': None, 'origin': 'user', 'hsmId': None, 'text': 'Mizera', 'obfuscated': False, 'files': None, 'quotedMessage': None, 'isFromBot': False}, 'webhookId': '27b4c18d-2ab0-4c70-a592-46bbe7e00bc8', 'timestamp': '2023-05-21T23:57:58.374Z'}
21/05/2023|23:57:59 - webhook.views -INFO- Received webhook request
{'event': 'message.updated', 'data': {'id': 'a83d7580-2294-4fad-9672-027686d6924c', 'isFromMe': True, 'sent': True, 'type': 'chat', 'timestamp': '2023-05-21T23:57:57.000Z', 'data': {'ack': 3, 'isNew': True, 'isFirst': False}, 'visible': True, 'accountId': '966b70ba-27d8-43ae-a295-35e59f0007be', 'contactId': '79db7607-6088-44c1-a010-ed4ef39d4f37', 'fromId': 'e12d3a56-0c52-43ac-b33c-15c399eb06d4', 'serviceId': '83108c28-14f7-4646-acb8-dab165397fd5', 'toId': None, 'userId': '3f4cc332-516e-4f48-aff2-df6eaa2e5034', 'ticketId': 'e5a453e9-6cb1-476e-b416-3b334b0bc61a', 'ticketUserId': '3f4cc332-516e-4f48-aff2-df6eaa2e5034', 'ticketDepartmentId': 'a78046d7-809d-4cdb-a72a-31dfbc47d862', 'quotedMessageId': None, 'origin': 'user', 'hsmId': None, 'text': 'Mizera', 'obfuscated': False, 'files': None, 'quotedMessage': None, 'isFromBot': False}, 'webhookId': '27b4c18d-2ab0-4c70-a592-46bbe7e00bc8', 'timestamp': '2023-05-21T23:57:58.529Z'}
21/05/2023|23:58:02 - messages_api.event -DEBUG- <Response [400]>-{"error":400,"message":"Message matching query does not exist."}
21/05/2023|23:58:04 - messages_api.event -DEBUG- <Response [400]>-{"error":400,"message":"Message matching query does not exist."}
21/05/2023|23:58:04 - messages_api.event -DEBUG- Failed to create message_id: a83d7580-2294-4fad-9672-027686d6924c
<Response [500]>-<!DOCTYPE html>
<html lang="en">
<head>
  <meta http-equiv="content-type" content="text/html; charset=utf-8">
  <meta name="robots" content="NONE,NOARCHIVE">
  <title>ValidationError
          at /webhook/messages/create</title>
  <style type="text/css">
    html * { padding:0; margin:0; }
    body * { padding:10px 20px; }
    body * * { padding:0; }
    body { font:small sans-serif; background-color:#fff; color:#000; }
    body>div { border-bottom:1px solid #ddd; }
    h1 { font-weight:normal; }
    h2 { margin-bottom:.8em; }
    h3 { margin:1em 0 .5em 0; }
    h4 { margin:0 0 .5em 0; font-weight: normal; }
    code, pre { font-size: 100%; white-space: pre-wrap; word-break: break-word; }
    summary { cursor: pointer; }
    table { border:1px solid #ccc; border-collapse: collapse; width:100%; background:white; }
    tbody td, tbody th { vertical-align:top; padding:2px 3px; }
    thead th {
      padding:1px 6px 1px 3px; background:#fefefe; text-align:left;
      font-weight:normal; font-size:11px; border:1px solid #ddd;
    }
    tbody th { width:12em; text-align:right; color:#666; padding-right:.5em; }
    table.vars { margin:5px 10px 2px 40px; width: auto; }
    table.vars td, table.req td { font-family:monospace; }
    table td.code { width:100%; }
    table td.code pre { overflow:hidden; }
    table.source th { color:#666; }
    table.source td { font-family:monospace; white-space:pre; border-bottom:1px solid #eee; }
    ul.traceback { list-style-type:none; color: #222; }
    ul.traceback li.cause { word-break: break-word; }
    ul.traceback li.frame { padding-bottom:1em; color:#4f4f4f; }
    ul.traceback li.user { background-color:#e0e0e0; color:#000 }
    div.context { padding:10px 0; overflow:hidden; }
    div.context ol { padding-left:30px; margin:0 10px; list-style-position: inside; }
    div.context ol li { font-family:monospace; white-space:pre; color:#777; cursor:pointer; padding-left: 2px; }
    div.context ol li pre { display:inline; }
    div.context ol.context-line li { color:#464646; background-color:#dfdfdf; padding: 3px 2px; }
    div.context ol.context-line li span { position:absolute; right:32px; }
    .user div.context ol.context-line li { background-color:#bbb; color:#000; }
    .user div.context ol li { color:#666; }
    div.commands, summary.commands { margin-left: 40px; }
    div.commands a, summary.commands { color:#555; text-decoration:none; }
    .user div.commands a { color: black; }
    #summary { background: #ffc; }
    #summary h2 { font-weight: normal; color: #666; }
    #explanation { background:#eee; }
    #template, #template-not-exist { background:#f6f6f6; }
    #template-not-exist ul { margin: 0 0 10px 20px; }
    #template-not-exist .postmortem-section { margin-bottom: 3px; }
    #unicode-hint { background:#eee; }
    #traceback { background:#eee; }
    #requestinfo { background:#f6f6f6; padding-left:120px; }
    #summary table { border:none; background:transparent; }
    #requestinfo h2, #requestinfo h3 { position:relative; margin-left:-100px; }
    #requestinfo h3 { margin-bottom:-1em; }
    .error { background: #ffc; }
    .specific { color:#cc3300; font-weight:bold; }
    h2 span.commands { font-size:.7em; font-weight:normal; }
    span.commands a:link {color:#5E5694;}
    pre.exception_value { font-family: sans-serif; color: #575757; font-size: 1.5em; margin: 10px 0 10px 0; }
    .append-bottom { margin-bottom: 10px; }
    .fname { user-select: all; }
  </style>
  
  <script>
    function hideAll(elems) {
      for (var e = 0; e < elems.length; e++) {
        elems[e].style.display = 'none';
      }
    }
    window.onload = function() {
      hideAll(document.querySelectorAll('ol.pre-context'));
      hideAll(document.querySelectorAll('ol.post-context'));
      hideAll(document.querySelectorAll('div.pastebin'));
    }
    function toggle() {
      for (var i = 0; i < arguments.length; i++) {
        var e = document.getElementById(arguments[i]);
        if (e) {
          e.style.display = e.style.display == 'none' ? 'block': 'none';
        }
      }
      return false;
    }
    function switchPastebinFriendly(link) {
      s1 = "Switch to copy-and-paste view";
      s2 = "Switch back to interactive view";
      link.textContent = link.textContent.trim() == s1 ? s2: s1;
      toggle('browserTraceback', 'pastebinTraceback');
      return false;
    }
  </script>
  
</head>
<body>
<div id="summary">
  <h1>ValidationError
       at /webhook/messages/create</h1>
  <pre class="exception_value">[&#x27;o valor “[True]”  deve ser True ou False.&#x27;]</pre>
  <table class="meta">

    <tr>
      <th>Request Method:</th>
      <td>POST</td>
    </tr>
    <tr>
      <th>Request URL:</th>
      <td>http://woz.serveo.net/webhook/messages/create?phone=5588988562749&amp;period=05%2F23</td>
    </tr>

    <tr>
      <th>Django Version:</th>
      <td>4.2.1</td>
    </tr>

    <tr>
      <th>Exception Type:</th>
      <td>ValidationError</td>
    </tr>


    <tr>
      <th>Exception Value:</th>
      <td><pre>[&#x27;o valor “[True]”  deve ser True ou False.&#x27;]</pre></td>
    </tr>


    <tr>
      <th>Exception Location:</th>
      <td><span class="fname">/home/jpfilho/.local/lib/python3.10/site-packages/django/db/models/fields/__init__.py</span>, line 1112, in to_python</td>
    </tr>


    <tr>
      <th>Raised during:</th>
      <td>messages_api.views.MessageViewSet</td>
    </tr>

    <tr>
      <th>Python Executable:</th>
      <td>/usr/bin/python3</td>
    </tr>
    <tr>
      <th>Python Version:</th>
      <td>3.10.7</td>
    </tr>
    <tr>
      <th>Python Path:</th>
      <td><pre>[&#x27;/home/jpfilho/Documents/code-ws/python/webhook&#x27;,
 &#x27;/home/jpfilho/Documents/code-ws/python/webhook&#x27;,
 &#x27;/usr/lib/python310.zip&#x27;,
 &#x27;/usr/lib/python3.10&#x27;,
 &#x27;/usr/lib/python3.10/lib-dynload&#x27;,
 &#x27;/home/jpfilho/.local/lib/python3.10/site-packages&#x27;,
 &#x27;/usr/local/lib/python3.10/dist-packages&#x27;,
 &#x27;/usr/lib/python3/dist-packages&#x27;]</pre></td>
    </tr>
    <tr>
      <th>Server time:</th>
      <td>Sun, 21 May 2023 23:58:03 +0000</td>
    </tr>
  </table>
</div>




<div id="traceback">
  <h2>Traceback <span class="commands"><a href="#" onclick="return switchPastebinFriendly(this);">
    Switch to copy-and-paste view</a></span>
  </h2>
  <div id="browserTraceback">
    <ul class="traceback">
      
        
        <li class="frame django">
          
            <code class="fname">/home/jpfilho/.local/lib/python3.10/site-packages/django/core/handlers/exception.py</code>, line 55, in inner
          

          
            <div class="context" id="c140320683257792">
              
                <ol start="48" class="pre-context" id="pre140320683257792">
                
                  <li onclick="toggle('pre140320683257792', 'post140320683257792')"><pre></pre></li>
                
                  <li onclick="toggle('pre140320683257792', 'post140320683257792')"><pre>        return inner</pre></li>
                
                  <li onclick="toggle('pre140320683257792', 'post140320683257792')"><pre>    else:</pre></li>
                
                  <li onclick="toggle('pre140320683257792', 'post140320683257792')"><pre></pre></li>
                
                  <li onclick="toggle('pre140320683257792', 'post140320683257792')"><pre>        @wraps(get_response)</pre></li>
                
                  <li onclick="toggle('pre140320683257792', 'post140320683257792')"><pre>        def inner(request):</pre></li>
                
                  <li onclick="toggle('pre140320683257792', 'post140320683257792')"><pre>            try:</pre></li>
                
                </ol>
              
              <ol start="55" class="context-line">
                <li onclick="toggle('pre140320683257792', 'post140320683257792')"><pre>                response = get_response(request)</pre> <span>…</span></li>
              </ol>
              
                <ol start='56' class="post-context" id="post140320683257792">
                  
                  <li onclick="toggle('pre140320683257792', 'post140320683257792')"><pre>            except Exception as exc:</pre></li>
                  
                  <li onclick="toggle('pre140320683257792', 'post140320683257792')"><pre>                response = response_for_exception(request, exc)</pre></li>
                  
                  <li onclick="toggle('pre140320683257792', 'post140320683257792')"><pre>            return response</pre></li>
                  
                  <li onclick="toggle('pre140320683257792', 'post140320683257792')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140320683257792', 'post140320683257792')"><pre>        return inner</pre></li>
                  
                  <li onclick="toggle('pre140320683257792', 'post140320683257792')"><pre></pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v140320683257792">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>exc</td>
                    <td class="code"><pre>ValidationError([&#x27;o valor “[True]”  deve ser True ou False.&#x27;])</pre></td>
                  </tr>
                
                  <tr>
                    <td>get_response</td>
                    <td class="code"><pre>&lt;bound method BaseHandler._get_response of &lt;django.core.handlers.wsgi.WSGIHandler object at 0x7f9ef1b70730&gt;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>request</td>
                    <td class="code"><pre>&lt;WSGIRequest: POST &#x27;/webhook/messages/create?phone=5588988562749&amp;period=05%2F23&#x27;&gt;</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
        <li class="frame django">
          
            <code class="fname">/home/jpfilho/.local/lib/python3.10/site-packages/django/core/handlers/base.py</code>, line 197, in _get_response
          

          
            <div class="context" id="c140320683247488">
              
                <ol start="190" class="pre-context" id="pre140320683247488">
                
                  <li onclick="toggle('pre140320683247488', 'post140320683247488')"><pre></pre></li>
                
                  <li onclick="toggle('pre140320683247488', 'post140320683247488')"><pre>        if response is None:</pre></li>
                
                  <li onclick="toggle('pre140320683247488', 'post140320683247488')"><pre>            wrapped_callback = self.make_view_atomic(callback)</pre></li>
                
                  <li onclick="toggle('pre140320683247488', 'post140320683247488')"><pre>            # If it is an asynchronous view, run it in a subthread.</pre></li>
                
                  <li onclick="toggle('pre140320683247488', 'post140320683247488')"><pre>            if iscoroutinefunction(wrapped_callback):</pre></li>
                
                  <li onclick="toggle('pre140320683247488', 'post140320683247488')"><pre>                wrapped_callback = async_to_sync(wrapped_callback)</pre></li>
                
                  <li onclick="toggle('pre140320683247488', 'post140320683247488')"><pre>            try:</pre></li>
                
                </ol>
              
              <ol start="197" class="context-line">
                <li onclick="toggle('pre140320683247488', 'post140320683247488')"><pre>                response = wrapped_callback(request, *callback_args, **callback_kwargs)</pre> <span>…</span></li>
              </ol>
              
                <ol start='198' class="post-context" id="post140320683247488">
                  
                  <li onclick="toggle('pre140320683247488', 'post140320683247488')"><pre>            except Exception as e:</pre></li>
                  
                  <li onclick="toggle('pre140320683247488', 'post140320683247488')"><pre>                response = self.process_exception_by_middleware(e, request)</pre></li>
                  
                  <li onclick="toggle('pre140320683247488', 'post140320683247488')"><pre>                if response is None:</pre></li>
                  
                  <li onclick="toggle('pre140320683247488', 'post140320683247488')"><pre>                    raise</pre></li>
                  
                  <li onclick="toggle('pre140320683247488', 'post140320683247488')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140320683247488', 'post140320683247488')"><pre>        # Complain if the view returned None (a common error).</pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v140320683247488">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>callback</td>
                    <td class="code"><pre>&lt;function MessageViewSet at 0x7f9ef1fda560&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>callback_args</td>
                    <td class="code"><pre>()</pre></td>
                  </tr>
                
                  <tr>
                    <td>callback_kwargs</td>
                    <td class="code"><pre>{}</pre></td>
                  </tr>
                
                  <tr>
                    <td>middleware_method</td>
                    <td class="code"><pre>&lt;bound method CsrfViewMiddleware.process_view of &lt;CsrfViewMiddleware get_response=convert_exception_to_response.&lt;locals&gt;.inner&gt;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>request</td>
                    <td class="code"><pre>&lt;WSGIRequest: POST &#x27;/webhook/messages/create?phone=5588988562749&amp;period=05%2F23&#x27;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>response</td>
                    <td class="code"><pre>None</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;django.core.handlers.wsgi.WSGIHandler object at 0x7f9ef1b70730&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>wrapped_callback</td>
                    <td class="code"><pre>&lt;function MessageViewSet at 0x7f9ef1fda560&gt;</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
        <li class="frame django">
          
            <code class="fname">/home/jpfilho/.local/lib/python3.10/site-packages/django/views/decorators/csrf.py</code>, line 56, in wrapper_view
          

          
            <div class="context" id="c140320683257280">
              
                <ol start="49" class="pre-context" id="pre140320683257280">
                
                  <li onclick="toggle('pre140320683257280', 'post140320683257280')"><pre>def csrf_exempt(view_func):</pre></li>
                
                  <li onclick="toggle('pre140320683257280', 'post140320683257280')"><pre>    &quot;&quot;&quot;Mark a view function as being exempt from the CSRF view protection.&quot;&quot;&quot;</pre></li>
                
                  <li onclick="toggle('pre140320683257280', 'post140320683257280')"><pre></pre></li>
                
                  <li onclick="toggle('pre140320683257280', 'post140320683257280')"><pre>    # view_func.csrf_exempt = True would also work, but decorators are nicer</pre></li>
                
                  <li onclick="toggle('pre140320683257280', 'post140320683257280')"><pre>    # if they don&#x27;t have side effects, so return a new function.</pre></li>
                
                  <li onclick="toggle('pre140320683257280', 'post140320683257280')"><pre>    @wraps(view_func)</pre></li>
                
                  <li onclick="toggle('pre140320683257280', 'post140320683257280')"><pre>    def wrapper_view(*args, **kwargs):</pre></li>
                
                </ol>
              
              <ol start="56" class="context-line">
                <li onclick="toggle('pre140320683257280', 'post140320683257280')"><pre>        return view_func(*args, **kwargs)</pre> <span>…</span></li>
              </ol>
              
                <ol start='57' class="post-context" id="post140320683257280">
                  
                  <li onclick="toggle('pre140320683257280', 'post140320683257280')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140320683257280', 'post140320683257280')"><pre>    wrapper_view.csrf_exempt = True</pre></li>
                  
                  <li onclick="toggle('pre140320683257280', 'post140320683257280')"><pre>    return wrapper_view</pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v140320683257280">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>args</td>
                    <td class="code"><pre>(&lt;WSGIRequest: POST &#x27;/webhook/messages/create?phone=5588988562749&amp;period=05%2F23&#x27;&gt;,)</pre></td>
                  </tr>
                
                  <tr>
                    <td>kwargs</td>
                    <td class="code"><pre>{}</pre></td>
                  </tr>
                
                  <tr>
                    <td>view_func</td>
                    <td class="code"><pre>&lt;function MessageViewSet at 0x7f9ef1fda4d0&gt;</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
        <li class="frame user">
          
            <code class="fname">/home/jpfilho/.local/lib/python3.10/site-packages/rest_framework/viewsets.py</code>, line 125, in view
          

          
            <div class="context" id="c140320682681088">
              
                <ol start="118" class="pre-context" id="pre140320682681088">
                
                  <li onclick="toggle('pre140320682681088', 'post140320682681088')"><pre>                setattr(self, method, handler)</pre></li>
                
                  <li onclick="toggle('pre140320682681088', 'post140320682681088')"><pre></pre></li>
                
                  <li onclick="toggle('pre140320682681088', 'post140320682681088')"><pre>            self.request = request</pre></li>
                
                  <li onclick="toggle('pre140320682681088', 'post140320682681088')"><pre>            self.args = args</pre></li>
                
                  <li onclick="toggle('pre140320682681088', 'post140320682681088')"><pre>            self.kwargs = kwargs</pre></li>
                
                  <li onclick="toggle('pre140320682681088', 'post140320682681088')"><pre></pre></li>
                
                  <li onclick="toggle('pre140320682681088', 'post140320682681088')"><pre>            # And continue as usual</pre></li>
                
                </ol>
              
              <ol start="125" class="context-line">
                <li onclick="toggle('pre140320682681088', 'post140320682681088')"><pre>            return self.dispatch(request, *args, **kwargs)</pre> <span>…</span></li>
              </ol>
              
                <ol start='126' class="post-context" id="post140320682681088">
                  
                  <li onclick="toggle('pre140320682681088', 'post140320682681088')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140320682681088', 'post140320682681088')"><pre>        # take name and docstring from class</pre></li>
                  
                  <li onclick="toggle('pre140320682681088', 'post140320682681088')"><pre>        update_wrapper(view, cls, updated=())</pre></li>
                  
                  <li onclick="toggle('pre140320682681088', 'post140320682681088')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140320682681088', 'post140320682681088')"><pre>        # and possible attributes set by decorators</pre></li>
                  
                  <li onclick="toggle('pre140320682681088', 'post140320682681088')"><pre>        # like csrf_exempt from dispatch</pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v140320682681088">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>action</td>
                    <td class="code"><pre>&#x27;create&#x27;</pre></td>
                  </tr>
                
                  <tr>
                    <td>actions</td>
                    <td class="code"><pre>{&#x27;post&#x27;: &#x27;create&#x27;}</pre></td>
                  </tr>
                
                  <tr>
                    <td>args</td>
                    <td class="code"><pre>()</pre></td>
                  </tr>
                
                  <tr>
                    <td>cls</td>
                    <td class="code"><pre>&lt;class &#x27;messages_api.views.MessageViewSet&#x27;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>handler</td>
                    <td class="code"><pre>&lt;bound method MessageViewSet.create of &lt;messages_api.views.MessageViewSet object at 0x7f9ef478ae00&gt;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>initkwargs</td>
                    <td class="code"><pre>{}</pre></td>
                  </tr>
                
                  <tr>
                    <td>kwargs</td>
                    <td class="code"><pre>{}</pre></td>
                  </tr>
                
                  <tr>
                    <td>method</td>
                    <td class="code"><pre>&#x27;post&#x27;</pre></td>
                  </tr>
                
                  <tr>
                    <td>request</td>
                    <td class="code"><pre>&lt;WSGIRequest: POST &#x27;/webhook/messages/create?phone=5588988562749&amp;period=05%2F23&#x27;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;messages_api.views.MessageViewSet object at 0x7f9ef478ae00&gt;</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
        <li class="frame user">
          
            <code class="fname">/home/jpfilho/.local/lib/python3.10/site-packages/rest_framework/views.py</code>, line 509, in dispatch
          

          
            <div class="context" id="c140320683253312">
              
                <ol start="502" class="pre-context" id="pre140320683253312">
                
                  <li onclick="toggle('pre140320683253312', 'post140320683253312')"><pre>                                  self.http_method_not_allowed)</pre></li>
                
                  <li onclick="toggle('pre140320683253312', 'post140320683253312')"><pre>            else:</pre></li>
                
                  <li onclick="toggle('pre140320683253312', 'post140320683253312')"><pre>                handler = self.http_method_not_allowed</pre></li>
                
                  <li onclick="toggle('pre140320683253312', 'post140320683253312')"><pre></pre></li>
                
                  <li onclick="toggle('pre140320683253312', 'post140320683253312')"><pre>            response = handler(request, *args, **kwargs)</pre></li>
                
                  <li onclick="toggle('pre140320683253312', 'post140320683253312')"><pre></pre></li>
                
                  <li onclick="toggle('pre140320683253312', 'post140320683253312')"><pre>        except Exception as exc:</pre></li>
                
                </ol>
              
              <ol start="509" class="context-line">
                <li onclick="toggle('pre140320683253312', 'post140320683253312')"><pre>            response = self.handle_exception(exc)</pre> <span>…</span></li>
              </ol>
              
                <ol start='510' class="post-context" id="post140320683253312">
                  
                  <li onclick="toggle('pre140320683253312', 'post140320683253312')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140320683253312', 'post140320683253312')"><pre>        self.response = self.finalize_response(request, response, *args, **kwargs)</pre></li>
                  
                  <li onclick="toggle('pre140320683253312', 'post140320683253312')"><pre>        return self.response</pre></li>
                  
                  <li onclick="toggle('pre140320683253312', 'post140320683253312')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140320683253312', 'post140320683253312')"><pre>    def options(self, request, *args, **kwargs):</pre></li>
                  
                  <li onclick="toggle('pre140320683253312', 'post140320683253312')"><pre>        &quot;&quot;&quot;</pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v140320683253312">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>args</td>
                    <td class="code"><pre>()</pre></td>
                  </tr>
                
                  <tr>
                    <td>handler</td>
                    <td class="code"><pre>&lt;bound method MessageViewSet.create of &lt;messages_api.views.MessageViewSet object at 0x7f9ef478ae00&gt;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>kwargs</td>
                    <td class="code"><pre>{}</pre></td>
                  </tr>
                
                  <tr>
                    <td>request</td>
                    <td class="code"><pre>&lt;rest_framework.request.Request: POST &#x27;/webhook/messages/create?phone=5588988562749&amp;period=05%2F23&#x27;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;messages_api.views.MessageViewSet object at 0x7f9ef478ae00&gt;</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
        <li class="frame user">
          
            <code class="fname">/home/jpfilho/.local/lib/python3.10/site-packages/rest_framework/views.py</code>, line 469, in handle_exception
          

          
            <div class="context" id="c140320683257024">
              
                <ol start="462" class="pre-context" id="pre140320683257024">
                
                  <li onclick="toggle('pre140320683257024', 'post140320683257024')"><pre></pre></li>
                
                  <li onclick="toggle('pre140320683257024', 'post140320683257024')"><pre>        exception_handler = self.get_exception_handler()</pre></li>
                
                  <li onclick="toggle('pre140320683257024', 'post140320683257024')"><pre></pre></li>
                
                  <li onclick="toggle('pre140320683257024', 'post140320683257024')"><pre>        context = self.get_exception_handler_context()</pre></li>
                
                  <li onclick="toggle('pre140320683257024', 'post140320683257024')"><pre>        response = exception_handler(exc, context)</pre></li>
                
                  <li onclick="toggle('pre140320683257024', 'post140320683257024')"><pre></pre></li>
                
                  <li onclick="toggle('pre140320683257024', 'post140320683257024')"><pre>        if response is None:</pre></li>
                
                </ol>
              
              <ol start="469" class="context-line">
                <li onclick="toggle('pre140320683257024', 'post140320683257024')"><pre>            self.raise_uncaught_exception(exc)</pre> <span>…</span></li>
              </ol>
              
                <ol start='470' class="post-context" id="post140320683257024">
                  
                  <li onclick="toggle('pre140320683257024', 'post140320683257024')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140320683257024', 'post140320683257024')"><pre>        response.exception = True</pre></li>
                  
                  <li onclick="toggle('pre140320683257024', 'post140320683257024')"><pre>        return response</pre></li>
                  
                  <li onclick="toggle('pre140320683257024', 'post140320683257024')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140320683257024', 'post140320683257024')"><pre>    def raise_uncaught_exception(self, exc):</pre></li>
                  
                  <li onclick="toggle('pre140320683257024', 'post140320683257024')"><pre>        if settings.DEBUG:</pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v140320683257024">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>context</td>
                    <td class="code"><pre>{&#x27;args&#x27;: (),
 &#x27;kwargs&#x27;: {},
 &#x27;request&#x27;: &lt;rest_framework.request.Request: POST &#x27;/webhook/messages/create?phone=5588988562749&amp;period=05%2F23&#x27;&gt;,
 &#x27;view&#x27;: &lt;messages_api.views.MessageViewSet object at 0x7f9ef478ae00&gt;}</pre></td>
                  </tr>
                
                  <tr>
                    <td>exc</td>
                    <td class="code"><pre>ValidationError([&#x27;o valor “[True]”  deve ser True ou False.&#x27;])</pre></td>
                  </tr>
                
                  <tr>
                    <td>exception_handler</td>
                    <td class="code"><pre>&lt;function exception_handler at 0x7f9ef1f9c700&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>response</td>
                    <td class="code"><pre>None</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;messages_api.views.MessageViewSet object at 0x7f9ef478ae00&gt;</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
        <li class="frame user">
          
            <code class="fname">/home/jpfilho/.local/lib/python3.10/site-packages/rest_framework/views.py</code>, line 480, in raise_uncaught_exception
          

          
            <div class="context" id="c140320683251712">
              
                <ol start="473" class="pre-context" id="pre140320683251712">
                
                  <li onclick="toggle('pre140320683251712', 'post140320683251712')"><pre></pre></li>
                
                  <li onclick="toggle('pre140320683251712', 'post140320683251712')"><pre>    def raise_uncaught_exception(self, exc):</pre></li>
                
                  <li onclick="toggle('pre140320683251712', 'post140320683251712')"><pre>        if settings.DEBUG:</pre></li>
                
                  <li onclick="toggle('pre140320683251712', 'post140320683251712')"><pre>            request = self.request</pre></li>
                
                  <li onclick="toggle('pre140320683251712', 'post140320683251712')"><pre>            renderer_format = getattr(request.accepted_renderer, &#x27;format&#x27;)</pre></li>
                
                  <li onclick="toggle('pre140320683251712', 'post140320683251712')"><pre>            use_plaintext_traceback = renderer_format not in (&#x27;html&#x27;, &#x27;api&#x27;, &#x27;admin&#x27;)</pre></li>
                
                  <li onclick="toggle('pre140320683251712', 'post140320683251712')"><pre>            request.force_plaintext_errors(use_plaintext_traceback)</pre></li>
                
                </ol>
              
              <ol start="480" class="context-line">
                <li onclick="toggle('pre140320683251712', 'post140320683251712')"><pre>        raise exc</pre> <span>…</span></li>
              </ol>
              
                <ol start='481' class="post-context" id="post140320683251712">
                  
                  <li onclick="toggle('pre140320683251712', 'post140320683251712')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140320683251712', 'post140320683251712')"><pre>    # Note: Views are made CSRF exempt from within `as_view` as to prevent</pre></li>
                  
                  <li onclick="toggle('pre140320683251712', 'post140320683251712')"><pre>    # accidental removal of this exemption in cases where `dispatch` needs to</pre></li>
                  
                  <li onclick="toggle('pre140320683251712', 'post140320683251712')"><pre>    # be overridden.</pre></li>
                  
                  <li onclick="toggle('pre140320683251712', 'post140320683251712')"><pre>    def dispatch(self, request, *args, **kwargs):</pre></li>
                  
                  <li onclick="toggle('pre140320683251712', 'post140320683251712')"><pre>        &quot;&quot;&quot;</pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v140320683251712">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>exc</td>
                    <td class="code"><pre>ValidationError([&#x27;o valor “[True]”  deve ser True ou False.&#x27;])</pre></td>
                  </tr>
                
                  <tr>
                    <td>renderer_format</td>
                    <td class="code"><pre>&#x27;json&#x27;</pre></td>
                  </tr>
                
                  <tr>
                    <td>request</td>
                    <td class="code"><pre>&lt;rest_framework.request.Request: POST &#x27;/webhook/messages/create?phone=5588988562749&amp;period=05%2F23&#x27;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;messages_api.views.MessageViewSet object at 0x7f9ef478ae00&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>use_plaintext_traceback</td>
                    <td class="code"><pre>True</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
        <li class="frame user">
          
            <code class="fname">/home/jpfilho/.local/lib/python3.10/site-packages/rest_framework/views.py</code>, line 506, in dispatch
          

          
            <div class="context" id="c140320683188352">
              
                <ol start="499" class="pre-context" id="pre140320683188352">
                
                  <li onclick="toggle('pre140320683188352', 'post140320683188352')"><pre>            # Get the appropriate handler method</pre></li>
                
                  <li onclick="toggle('pre140320683188352', 'post140320683188352')"><pre>            if request.method.lower() in self.http_method_names:</pre></li>
                
                  <li onclick="toggle('pre140320683188352', 'post140320683188352')"><pre>                handler = getattr(self, request.method.lower(),</pre></li>
                
                  <li onclick="toggle('pre140320683188352', 'post140320683188352')"><pre>                                  self.http_method_not_allowed)</pre></li>
                
                  <li onclick="toggle('pre140320683188352', 'post140320683188352')"><pre>            else:</pre></li>
                
                  <li onclick="toggle('pre140320683188352', 'post140320683188352')"><pre>                handler = self.http_method_not_allowed</pre></li>
                
                  <li onclick="toggle('pre140320683188352', 'post140320683188352')"><pre></pre></li>
                
                </ol>
              
              <ol start="506" class="context-line">
                <li onclick="toggle('pre140320683188352', 'post140320683188352')"><pre>            response = handler(request, *args, **kwargs)</pre> <span>…</span></li>
              </ol>
              
                <ol start='507' class="post-context" id="post140320683188352">
                  
                  <li onclick="toggle('pre140320683188352', 'post140320683188352')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140320683188352', 'post140320683188352')"><pre>        except Exception as exc:</pre></li>
                  
                  <li onclick="toggle('pre140320683188352', 'post140320683188352')"><pre>            response = self.handle_exception(exc)</pre></li>
                  
                  <li onclick="toggle('pre140320683188352', 'post140320683188352')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140320683188352', 'post140320683188352')"><pre>        self.response = self.finalize_response(request, response, *args, **kwargs)</pre></li>
                  
                  <li onclick="toggle('pre140320683188352', 'post140320683188352')"><pre>        return self.response</pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v140320683188352">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>args</td>
                    <td class="code"><pre>()</pre></td>
                  </tr>
                
                  <tr>
                    <td>handler</td>
                    <td class="code"><pre>&lt;bound method MessageViewSet.create of &lt;messages_api.views.MessageViewSet object at 0x7f9ef478ae00&gt;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>kwargs</td>
                    <td class="code"><pre>{}</pre></td>
                  </tr>
                
                  <tr>
                    <td>request</td>
                    <td class="code"><pre>&lt;rest_framework.request.Request: POST &#x27;/webhook/messages/create?phone=5588988562749&amp;period=05%2F23&#x27;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;messages_api.views.MessageViewSet object at 0x7f9ef478ae00&gt;</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
        <li class="frame user">
          
            <code class="fname">/home/jpfilho/Documents/code-ws/python/webhook/messages_api/views.py</code>, line 153, in create
          

          
            <div class="context" id="c140320682632896">
              
                <ol start="146" class="pre-context" id="pre140320682632896">
                
                  <li onclick="toggle('pre140320682632896', 'post140320682632896')"><pre>        except ValueError:</pre></li>
                
                  <li onclick="toggle('pre140320682632896', 'post140320682632896')"><pre>            return Response({&#x27;error&#x27;: &#x27;Invalid period format, should be YYYY-MM-DD or MM-YY.&#x27;}, status=400)</pre></li>
                
                  <li onclick="toggle('pre140320682632896', 'post140320682632896')"><pre></pre></li>
                
                  <li onclick="toggle('pre140320682632896', 'post140320682632896')"><pre>        if len(period) == 5:</pre></li>
                
                  <li onclick="toggle('pre140320682632896', 'post140320682632896')"><pre>            period = dt.now().strftime(</pre></li>
                
                  <li onclick="toggle('pre140320682632896', 'post140320682632896')"><pre>                &#x27;%Y-&#x27;) + period[-2:] + &#x27;-&#x27; + period[:2] + &#x27; 00:00:00&#x27;</pre></li>
                
                  <li onclick="toggle('pre140320682632896', 'post140320682632896')"><pre>        try:</pre></li>
                
                </ol>
              
              <ol start="153" class="context-line">
                <li onclick="toggle('pre140320682632896', 'post140320682632896')"><pre>            message = Message.objects.create(</pre> <span>…</span></li>
              </ol>
              
                <ol start='154' class="post-context" id="post140320682632896">
                  
                  <li onclick="toggle('pre140320682632896', 'post140320682632896')"><pre>                contact_id=contact_id,</pre></li>
                  
                  <li onclick="toggle('pre140320682632896', 'post140320682632896')"><pre>                contact_number=contact_number,</pre></li>
                  
                  <li onclick="toggle('pre140320682632896', 'post140320682632896')"><pre>                period=period,</pre></li>
                  
                  <li onclick="toggle('pre140320682632896', 'post140320682632896')"><pre>                timestamp=timestamp,</pre></li>
                  
                  <li onclick="toggle('pre140320682632896', 'post140320682632896')"><pre>                status=status,</pre></li>
                  
                  <li onclick="toggle('pre140320682632896', 'post140320682632896')"><pre>                message_id=message_id,</pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v140320682632896">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>args</td>
                    <td class="code"><pre>()</pre></td>
                  </tr>
                
                  <tr>
                    <td>contact_id</td>
                    <td class="code"><pre>&#x27;79db7607-6088-44c1-a010-ed4ef39d4f37&#x27;</pre></td>
                  </tr>
                
                  <tr>
                    <td>contact_number</td>
                    <td class="code"><pre>&#x27;5588988562749&#x27;</pre></td>
                  </tr>
                
                  <tr>
                    <td>isFromMe</td>
                    <td class="code"><pre>[True]</pre></td>
                  </tr>
                
                  <tr>
                    <td>kwargs</td>
                    <td class="code"><pre>{}</pre></td>
                  </tr>
                
                  <tr>
                    <td>message_id</td>
                    <td class="code"><pre>&#x27;a83d7580-2294-4fad-9672-027686d6924c&#x27;</pre></td>
                  </tr>
                
                  <tr>
                    <td>message_type</td>
                    <td class="code"><pre>&#x27;chat&#x27;</pre></td>
                  </tr>
                
                  <tr>
                    <td>period</td>
                    <td class="code"><pre>&#x27;2023-05-01&#x27;</pre></td>
                  </tr>
                
                  <tr>
                    <td>request</td>
                    <td class="code"><pre>&lt;rest_framework.request.Request: POST &#x27;/webhook/messages/create?phone=5588988562749&amp;period=05%2F23&#x27;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;messages_api.views.MessageViewSet object at 0x7f9ef478ae00&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>status</td>
                    <td class="code"><pre>0</pre></td>
                  </tr>
                
                  <tr>
                    <td>ticket_id</td>
                    <td class="code"><pre>&#x27;e5a453e9-6cb1-476e-b416-3b334b0bc61a&#x27;</pre></td>
                  </tr>
                
                  <tr>
                    <td>timestamp</td>
                    <td class="code"><pre>&#x27;2023-05-21T23:57:58.311Z&#x27;</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
        <li class="frame django">
          
            <code class="fname">/home/jpfilho/.local/lib/python3.10/site-packages/django/db/models/manager.py</code>, line 87, in manager_method
          

          
            <div class="context" id="c140320620193920">
              
                <ol start="80" class="pre-context" id="pre140320620193920">
                
                  <li onclick="toggle('pre140320620193920', 'post140320620193920')"><pre>        return []</pre></li>
                
                  <li onclick="toggle('pre140320620193920', 'post140320620193920')"><pre></pre></li>
                
                  <li onclick="toggle('pre140320620193920', 'post140320620193920')"><pre>    @classmethod</pre></li>
                
                  <li onclick="toggle('pre140320620193920', 'post140320620193920')"><pre>    def _get_queryset_methods(cls, queryset_class):</pre></li>
                
                  <li onclick="toggle('pre140320620193920', 'post140320620193920')"><pre>        def create_method(name, method):</pre></li>
                
                  <li onclick="toggle('pre140320620193920', 'post140320620193920')"><pre>            @wraps(method)</pre></li>
                
                  <li onclick="toggle('pre140320620193920', 'post140320620193920')"><pre>            def manager_method(self, *args, **kwargs):</pre></li>
                
                </ol>
              
              <ol start="87" class="context-line">
                <li onclick="toggle('pre140320620193920', 'post140320620193920')"><pre>                return getattr(self.get_queryset(), name)(*args, **kwargs)</pre> <span>…</span></li>
              </ol>
              
                <ol start='88' class="post-context" id="post140320620193920">
                  
                  <li onclick="toggle('pre140320620193920', 'post140320620193920')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140320620193920', 'post140320620193920')"><pre>            return manager_method</pre></li>
                  
                  <li onclick="toggle('pre140320620193920', 'post140320620193920')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140320620193920', 'post140320620193920')"><pre>        new_methods = {}</pre></li>
                  
                  <li onclick="toggle('pre140320620193920', 'post140320620193920')"><pre>        for name, method in inspect.getmembers(</pre></li>
                  
                  <li onclick="toggle('pre140320620193920', 'post140320620193920')"><pre>            queryset_class, predicate=inspect.isfunction</pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v140320620193920">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>args</td>
                    <td class="code"><pre>()</pre></td>
                  </tr>
                
                  <tr>
                    <td>kwargs</td>
                    <td class="code"><pre>{&#x27;contact_id&#x27;: &#x27;79db7607-6088-44c1-a010-ed4ef39d4f37&#x27;,
 &#x27;contact_number&#x27;: &#x27;5588988562749&#x27;,
 &#x27;is_from_me&#x27;: [True],
 &#x27;message_id&#x27;: &#x27;a83d7580-2294-4fad-9672-027686d6924c&#x27;,
 &#x27;message_type&#x27;: &#x27;chat&#x27;,
 &#x27;period&#x27;: &#x27;2023-05-01&#x27;,
 &#x27;retries&#x27;: 0,
 &#x27;status&#x27;: 0,
 &#x27;ticket_service_id&#x27;: &#x27;e5a453e9-6cb1-476e-b416-3b334b0bc61a&#x27;,
 &#x27;timestamp&#x27;: &#x27;2023-05-21T23:57:58.311Z&#x27;}</pre></td>
                  </tr>
                
                  <tr>
                    <td>name</td>
                    <td class="code"><pre>&#x27;create&#x27;</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;django.db.models.manager.Manager object at 0x7f9ef2b51750&gt;</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
        <li class="frame django">
          
            <code class="fname">/home/jpfilho/.local/lib/python3.10/site-packages/django/db/models/query.py</code>, line 658, in create
          

          
            <div class="context" id="c140320682549888">
              
                <ol start="651" class="pre-context" id="pre140320682549888">
                
                  <li onclick="toggle('pre140320682549888', 'post140320682549888')"><pre>    def create(self, **kwargs):</pre></li>
                
                  <li onclick="toggle('pre140320682549888', 'post140320682549888')"><pre>        &quot;&quot;&quot;</pre></li>
                
                  <li onclick="toggle('pre140320682549888', 'post140320682549888')"><pre>        Create a new object with the given kwargs, saving it to the database</pre></li>
                
                  <li onclick="toggle('pre140320682549888', 'post140320682549888')"><pre>        and returning the created object.</pre></li>
                
                  <li onclick="toggle('pre140320682549888', 'post140320682549888')"><pre>        &quot;&quot;&quot;</pre></li>
                
                  <li onclick="toggle('pre140320682549888', 'post140320682549888')"><pre>        obj = self.model(**kwargs)</pre></li>
                
                  <li onclick="toggle('pre140320682549888', 'post140320682549888')"><pre>        self._for_write = True</pre></li>
                
                </ol>
              
              <ol start="658" class="context-line">
                <li onclick="toggle('pre140320682549888', 'post140320682549888')"><pre>        obj.save(force_insert=True, using=self.db)</pre> <span>…</span></li>
              </ol>
              
                <ol start='659' class="post-context" id="post140320682549888">
                  
                  <li onclick="toggle('pre140320682549888', 'post140320682549888')"><pre>        return obj</pre></li>
                  
                  <li onclick="toggle('pre140320682549888', 'post140320682549888')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140320682549888', 'post140320682549888')"><pre>    async def acreate(self, **kwargs):</pre></li>
                  
                  <li onclick="toggle('pre140320682549888', 'post140320682549888')"><pre>        return await sync_to_async(self.create)(**kwargs)</pre></li>
                  
                  <li onclick="toggle('pre140320682549888', 'post140320682549888')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140320682549888', 'post140320682549888')"><pre>    def _prepare_for_bulk_create(self, objs):</pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v140320682549888">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>kwargs</td>
                    <td class="code"><pre>{&#x27;contact_id&#x27;: &#x27;79db7607-6088-44c1-a010-ed4ef39d4f37&#x27;,
 &#x27;contact_number&#x27;: &#x27;5588988562749&#x27;,
 &#x27;is_from_me&#x27;: [True],
 &#x27;message_id&#x27;: &#x27;a83d7580-2294-4fad-9672-027686d6924c&#x27;,
 &#x27;message_type&#x27;: &#x27;chat&#x27;,
 &#x27;period&#x27;: &#x27;2023-05-01&#x27;,
 &#x27;retries&#x27;: 0,
 &#x27;status&#x27;: 0,
 &#x27;ticket_service_id&#x27;: &#x27;e5a453e9-6cb1-476e-b416-3b334b0bc61a&#x27;,
 &#x27;timestamp&#x27;: &#x27;2023-05-21T23:57:58.311Z&#x27;}</pre></td>
                  </tr>
                
                  <tr>
                    <td>obj</td>
                    <td class="code"><pre>&lt;Message: 5588988562749 - 2023-05-01 - 0&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;QuerySet []&gt;</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
        <li class="frame django">
          
            <code class="fname">/home/jpfilho/.local/lib/python3.10/site-packages/django/db/models/base.py</code>, line 814, in save
          

          
            <div class="context" id="c140320632494080">
              
                <ol start="807" class="pre-context" id="pre140320632494080">
                
                  <li onclick="toggle('pre140320632494080', 'post140320632494080')"><pre>            for field in self._meta.concrete_fields:</pre></li>
                
                  <li onclick="toggle('pre140320632494080', 'post140320632494080')"><pre>                if not field.primary_key and not hasattr(field, &quot;through&quot;):</pre></li>
                
                  <li onclick="toggle('pre140320632494080', 'post140320632494080')"><pre>                    field_names.add(field.attname)</pre></li>
                
                  <li onclick="toggle('pre140320632494080', 'post140320632494080')"><pre>            loaded_fields = field_names.difference(deferred_fields)</pre></li>
                
                  <li onclick="toggle('pre140320632494080', 'post140320632494080')"><pre>            if loaded_fields:</pre></li>
                
                  <li onclick="toggle('pre140320632494080', 'post140320632494080')"><pre>                update_fields = frozenset(loaded_fields)</pre></li>
                
                  <li onclick="toggle('pre140320632494080', 'post140320632494080')"><pre></pre></li>
                
                </ol>
              
              <ol start="814" class="context-line">
                <li onclick="toggle('pre140320632494080', 'post140320632494080')"><pre>        self.save_base(</pre> <span>…</span></li>
              </ol>
              
                <ol start='815' class="post-context" id="post140320632494080">
                  
                  <li onclick="toggle('pre140320632494080', 'post140320632494080')"><pre>            using=using,</pre></li>
                  
                  <li onclick="toggle('pre140320632494080', 'post140320632494080')"><pre>            force_insert=force_insert,</pre></li>
                  
                  <li onclick="toggle('pre140320632494080', 'post140320632494080')"><pre>            force_update=force_update,</pre></li>
                  
                  <li onclick="toggle('pre140320632494080', 'post140320632494080')"><pre>            update_fields=update_fields,</pre></li>
                  
                  <li onclick="toggle('pre140320632494080', 'post140320632494080')"><pre>        )</pre></li>
                  
                  <li onclick="toggle('pre140320632494080', 'post140320632494080')"><pre></pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v140320632494080">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>deferred_fields</td>
                    <td class="code"><pre>set()</pre></td>
                  </tr>
                
                  <tr>
                    <td>force_insert</td>
                    <td class="code"><pre>True</pre></td>
                  </tr>
                
                  <tr>
                    <td>force_update</td>
                    <td class="code"><pre>False</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;Message: 5588988562749 - 2023-05-01 - 0&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>update_fields</td>
                    <td class="code"><pre>None</pre></td>
                  </tr>
                
                  <tr>
                    <td>using</td>
                    <td class="code"><pre>&#x27;default&#x27;</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
        <li class="frame django">
          
            <code class="fname">/home/jpfilho/.local/lib/python3.10/site-packages/django/db/models/base.py</code>, line 877, in save_base
          

          
            <div class="context" id="c140320683256000">
              
                <ol start="870" class="pre-context" id="pre140320683256000">
                
                  <li onclick="toggle('pre140320683256000', 'post140320683256000')"><pre>            context_manager = transaction.atomic(using=using, savepoint=False)</pre></li>
                
                  <li onclick="toggle('pre140320683256000', 'post140320683256000')"><pre>        else:</pre></li>
                
                  <li onclick="toggle('pre140320683256000', 'post140320683256000')"><pre>            context_manager = transaction.mark_for_rollback_on_error(using=using)</pre></li>
                
                  <li onclick="toggle('pre140320683256000', 'post140320683256000')"><pre>        with context_manager:</pre></li>
                
                  <li onclick="toggle('pre140320683256000', 'post140320683256000')"><pre>            parent_inserted = False</pre></li>
                
                  <li onclick="toggle('pre140320683256000', 'post140320683256000')"><pre>            if not raw:</pre></li>
                
                  <li onclick="toggle('pre140320683256000', 'post140320683256000')"><pre>                parent_inserted = self._save_parents(cls, using, update_fields)</pre></li>
                
                </ol>
              
              <ol start="877" class="context-line">
                <li onclick="toggle('pre140320683256000', 'post140320683256000')"><pre>            updated = self._save_table(</pre> <span>…</span></li>
              </ol>
              
                <ol start='878' class="post-context" id="post140320683256000">
                  
                  <li onclick="toggle('pre140320683256000', 'post140320683256000')"><pre>                raw,</pre></li>
                  
                  <li onclick="toggle('pre140320683256000', 'post140320683256000')"><pre>                cls,</pre></li>
                  
                  <li onclick="toggle('pre140320683256000', 'post140320683256000')"><pre>                force_insert or parent_inserted,</pre></li>
                  
                  <li onclick="toggle('pre140320683256000', 'post140320683256000')"><pre>                force_update,</pre></li>
                  
                  <li onclick="toggle('pre140320683256000', 'post140320683256000')"><pre>                using,</pre></li>
                  
                  <li onclick="toggle('pre140320683256000', 'post140320683256000')"><pre>                update_fields,</pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v140320683256000">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>cls</td>
                    <td class="code"><pre>&lt;class &#x27;messages_api.models.Message&#x27;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>context_manager</td>
                    <td class="code"><pre>&lt;contextlib._GeneratorContextManager object at 0x7f9ef478a920&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>force_insert</td>
                    <td class="code"><pre>True</pre></td>
                  </tr>
                
                  <tr>
                    <td>force_update</td>
                    <td class="code"><pre>False</pre></td>
                  </tr>
                
                  <tr>
                    <td>meta</td>
                    <td class="code"><pre>&lt;Options for Message&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>origin</td>
                    <td class="code"><pre>&lt;class &#x27;messages_api.models.Message&#x27;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>parent_inserted</td>
                    <td class="code"><pre>False</pre></td>
                  </tr>
                
                  <tr>
                    <td>raw</td>
                    <td class="code"><pre>False</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;Message: 5588988562749 - 2023-05-01 - 0&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>update_fields</td>
                    <td class="code"><pre>None</pre></td>
                  </tr>
                
                  <tr>
                    <td>using</td>
                    <td class="code"><pre>&#x27;default&#x27;</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
        <li class="frame django">
          
            <code class="fname">/home/jpfilho/.local/lib/python3.10/site-packages/django/db/models/base.py</code>, line 1020, in _save_table
          

          
            <div class="context" id="c140320683256384">
              
                <ol start="1013" class="pre-context" id="pre140320683256384">
                
                  <li onclick="toggle('pre140320683256384', 'post140320683256384')"><pre>                    )[&quot;_order__max&quot;]</pre></li>
                
                  <li onclick="toggle('pre140320683256384', 'post140320683256384')"><pre>                )</pre></li>
                
                  <li onclick="toggle('pre140320683256384', 'post140320683256384')"><pre>            fields = meta.local_concrete_fields</pre></li>
                
                  <li onclick="toggle('pre140320683256384', 'post140320683256384')"><pre>            if not pk_set:</pre></li>
                
                  <li onclick="toggle('pre140320683256384', 'post140320683256384')"><pre>                fields = [f for f in fields if f is not meta.auto_field]</pre></li>
                
                  <li onclick="toggle('pre140320683256384', 'post140320683256384')"><pre></pre></li>
                
                  <li onclick="toggle('pre140320683256384', 'post140320683256384')"><pre>            returning_fields = meta.db_returning_fields</pre></li>
                
                </ol>
              
              <ol start="1020" class="context-line">
                <li onclick="toggle('pre140320683256384', 'post140320683256384')"><pre>            results = self._do_insert(</pre> <span>…</span></li>
              </ol>
              
                <ol start='1021' class="post-context" id="post140320683256384">
                  
                  <li onclick="toggle('pre140320683256384', 'post140320683256384')"><pre>                cls._base_manager, using, fields, returning_fields, raw</pre></li>
                  
                  <li onclick="toggle('pre140320683256384', 'post140320683256384')"><pre>            )</pre></li>
                  
                  <li onclick="toggle('pre140320683256384', 'post140320683256384')"><pre>            if results:</pre></li>
                  
                  <li onclick="toggle('pre140320683256384', 'post140320683256384')"><pre>                for value, field in zip(results[0], returning_fields):</pre></li>
                  
                  <li onclick="toggle('pre140320683256384', 'post140320683256384')"><pre>                    setattr(self, field.attname, value)</pre></li>
                  
                  <li onclick="toggle('pre140320683256384', 'post140320683256384')"><pre>        return updated</pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v140320683256384">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>cls</td>
                    <td class="code"><pre>&lt;class &#x27;messages_api.models.Message&#x27;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>fields</td>
                    <td class="code"><pre>(&lt;django.db.models.fields.CharField: message_id&gt;,
 &lt;django.db.models.fields.CharField: contact_id&gt;,
 &lt;django.db.models.fields.CharField: contact_number&gt;,
 &lt;django.db.models.fields.DateField: period&gt;,
 &lt;django.db.models.fields.DateTimeField: timestamp&gt;,
 &lt;django.db.models.fields.IntegerField: status&gt;,
 &lt;django.db.models.fields.CharField: ticket_service_id&gt;,
 &lt;django.db.models.fields.CharField: message_type&gt;,
 &lt;django.db.models.fields.BooleanField: is_from_me&gt;,
 &lt;django.db.models.fields.IntegerField: retries&gt;)</pre></td>
                  </tr>
                
                  <tr>
                    <td>force_insert</td>
                    <td class="code"><pre>True</pre></td>
                  </tr>
                
                  <tr>
                    <td>force_update</td>
                    <td class="code"><pre>False</pre></td>
                  </tr>
                
                  <tr>
                    <td>meta</td>
                    <td class="code"><pre>&lt;Options for Message&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>non_pks</td>
                    <td class="code"><pre>[&lt;django.db.models.fields.CharField: contact_id&gt;,
 &lt;django.db.models.fields.CharField: contact_number&gt;,
 &lt;django.db.models.fields.DateField: period&gt;,
 &lt;django.db.models.fields.DateTimeField: timestamp&gt;,
 &lt;django.db.models.fields.IntegerField: status&gt;,
 &lt;django.db.models.fields.CharField: ticket_service_id&gt;,
 &lt;django.db.models.fields.CharField: message_type&gt;,
 &lt;django.db.models.fields.BooleanField: is_from_me&gt;,
 &lt;django.db.models.fields.IntegerField: retries&gt;]</pre></td>
                  </tr>
                
                  <tr>
                    <td>pk_set</td>
                    <td class="code"><pre>True</pre></td>
                  </tr>
                
                  <tr>
                    <td>pk_val</td>
                    <td class="code"><pre>&#x27;a83d7580-2294-4fad-9672-027686d6924c&#x27;</pre></td>
                  </tr>
                
                  <tr>
                    <td>raw</td>
                    <td class="code"><pre>False</pre></td>
                  </tr>
                
                  <tr>
                    <td>returning_fields</td>
                    <td class="code"><pre>[]</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;Message: 5588988562749 - 2023-05-01 - 0&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>update_fields</td>
                    <td class="code"><pre>None</pre></td>
                  </tr>
                
                  <tr>
                    <td>updated</td>
                    <td class="code"><pre>False</pre></td>
                  </tr>
                
                  <tr>
                    <td>using</td>
                    <td class="code"><pre>&#x27;default&#x27;</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
        <li class="frame django">
          
            <code class="fname">/home/jpfilho/.local/lib/python3.10/site-packages/django/db/models/base.py</code>, line 1061, in _do_insert
          

          
            <div class="context" id="c140320683189440">
              
                <ol start="1054" class="pre-context" id="pre140320683189440">
                
                  <li onclick="toggle('pre140320683189440', 'post140320683189440')"><pre>        return filtered._update(values) &gt; 0</pre></li>
                
                  <li onclick="toggle('pre140320683189440', 'post140320683189440')"><pre></pre></li>
                
                  <li onclick="toggle('pre140320683189440', 'post140320683189440')"><pre>    def _do_insert(self, manager, using, fields, returning_fields, raw):</pre></li>
                
                  <li onclick="toggle('pre140320683189440', 'post140320683189440')"><pre>        &quot;&quot;&quot;</pre></li>
                
                  <li onclick="toggle('pre140320683189440', 'post140320683189440')"><pre>        Do an INSERT. If returning_fields is defined then this method should</pre></li>
                
                  <li onclick="toggle('pre140320683189440', 'post140320683189440')"><pre>        return the newly created data for the model.</pre></li>
                
                  <li onclick="toggle('pre140320683189440', 'post140320683189440')"><pre>        &quot;&quot;&quot;</pre></li>
                
                </ol>
              
              <ol start="1061" class="context-line">
                <li onclick="toggle('pre140320683189440', 'post140320683189440')"><pre>        return manager._insert(</pre> <span>…</span></li>
              </ol>
              
                <ol start='1062' class="post-context" id="post140320683189440">
                  
                  <li onclick="toggle('pre140320683189440', 'post140320683189440')"><pre>            [self],</pre></li>
                  
                  <li onclick="toggle('pre140320683189440', 'post140320683189440')"><pre>            fields=fields,</pre></li>
                  
                  <li onclick="toggle('pre140320683189440', 'post140320683189440')"><pre>            returning_fields=returning_fields,</pre></li>
                  
                  <li onclick="toggle('pre140320683189440', 'post140320683189440')"><pre>            using=using,</pre></li>
                  
                  <li onclick="toggle('pre140320683189440', 'post140320683189440')"><pre>            raw=raw,</pre></li>
                  
                  <li onclick="toggle('pre140320683189440', 'post140320683189440')"><pre>        )</pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v140320683189440">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>fields</td>
                    <td class="code"><pre>(&lt;django.db.models.fields.CharField: message_id&gt;,
 &lt;django.db.models.fields.CharField: contact_id&gt;,
 &lt;django.db.models.fields.CharField: contact_number&gt;,
 &lt;django.db.models.fields.DateField: period&gt;,
 &lt;django.db.models.fields.DateTimeField: timestamp&gt;,
 &lt;django.db.models.fields.IntegerField: status&gt;,
 &lt;django.db.models.fields.CharField: ticket_service_id&gt;,
 &lt;django.db.models.fields.CharField: message_type&gt;,
 &lt;django.db.models.fields.BooleanField: is_from_me&gt;,
 &lt;django.db.models.fields.IntegerField: retries&gt;)</pre></td>
                  </tr>
                
                  <tr>
                    <td>manager</td>
                    <td class="code"><pre>&lt;django.db.models.manager.Manager object at 0x7f9ef478a6b0&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>raw</td>
                    <td class="code"><pre>False</pre></td>
                  </tr>
                
                  <tr>
                    <td>returning_fields</td>
                    <td class="code"><pre>[]</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;Message: 5588988562749 - 2023-05-01 - 0&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>using</td>
                    <td class="code"><pre>&#x27;default&#x27;</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
        <li class="frame django">
          
            <code class="fname">/home/jpfilho/.local/lib/python3.10/site-packages/django/db/models/manager.py</code>, line 87, in manager_method
          

          
            <div class="context" id="c140320683225152">
              
                <ol start="80" class="pre-context" id="pre140320683225152">
                
                  <li onclick="toggle('pre140320683225152', 'post140320683225152')"><pre>        return []</pre></li>
                
                  <li onclick="toggle('pre140320683225152', 'post140320683225152')"><pre></pre></li>
                
                  <li onclick="toggle('pre140320683225152', 'post140320683225152')"><pre>    @classmethod</pre></li>
                
                  <li onclick="toggle('pre140320683225152', 'post140320683225152')"><pre>    def _get_queryset_methods(cls, queryset_class):</pre></li>
                
                  <li onclick="toggle('pre140320683225152', 'post140320683225152')"><pre>        def create_method(name, method):</pre></li>
                
                  <li onclick="toggle('pre140320683225152', 'post140320683225152')"><pre>            @wraps(method)</pre></li>
                
                  <li onclick="toggle('pre140320683225152', 'post140320683225152')"><pre>            def manager_method(self, *args, **kwargs):</pre></li>
                
                </ol>
              
              <ol start="87" class="context-line">
                <li onclick="toggle('pre140320683225152', 'post140320683225152')"><pre>                return getattr(self.get_queryset(), name)(*args, **kwargs)</pre> <span>…</span></li>
              </ol>
              
                <ol start='88' class="post-context" id="post140320683225152">
                  
                  <li onclick="toggle('pre140320683225152', 'post140320683225152')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140320683225152', 'post140320683225152')"><pre>            return manager_method</pre></li>
                  
                  <li onclick="toggle('pre140320683225152', 'post140320683225152')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140320683225152', 'post140320683225152')"><pre>        new_methods = {}</pre></li>
                  
                  <li onclick="toggle('pre140320683225152', 'post140320683225152')"><pre>        for name, method in inspect.getmembers(</pre></li>
                  
                  <li onclick="toggle('pre140320683225152', 'post140320683225152')"><pre>            queryset_class, predicate=inspect.isfunction</pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v140320683225152">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>args</td>
                    <td class="code"><pre>([&lt;Message: 5588988562749 - 2023-05-01 - 0&gt;],)</pre></td>
                  </tr>
                
                  <tr>
                    <td>kwargs</td>
                    <td class="code"><pre>{&#x27;fields&#x27;: (&lt;django.db.models.fields.CharField: message_id&gt;,
            &lt;django.db.models.fields.CharField: contact_id&gt;,
            &lt;django.db.models.fields.CharField: contact_number&gt;,
            &lt;django.db.models.fields.DateField: period&gt;,
            &lt;django.db.models.fields.DateTimeField: timestamp&gt;,
            &lt;django.db.models.fields.IntegerField: status&gt;,
            &lt;django.db.models.fields.CharField: ticket_service_id&gt;,
            &lt;django.db.models.fields.CharField: message_type&gt;,
            &lt;django.db.models.fields.BooleanField: is_from_me&gt;,
            &lt;django.db.models.fields.IntegerField: retries&gt;),
 &#x27;raw&#x27;: False,
 &#x27;returning_fields&#x27;: [],
 &#x27;using&#x27;: &#x27;default&#x27;}</pre></td>
                  </tr>
                
                  <tr>
                    <td>name</td>
                    <td class="code"><pre>&#x27;_insert&#x27;</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;django.db.models.manager.Manager object at 0x7f9ef478a6b0&gt;</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
        <li class="frame django">
          
            <code class="fname">/home/jpfilho/.local/lib/python3.10/site-packages/django/db/models/query.py</code>, line 1805, in _insert
          

          
            <div class="context" id="c140320683213120">
              
                <ol start="1798" class="pre-context" id="pre140320683213120">
                
                  <li onclick="toggle('pre140320683213120', 'post140320683213120')"><pre>        query = sql.InsertQuery(</pre></li>
                
                  <li onclick="toggle('pre140320683213120', 'post140320683213120')"><pre>            self.model,</pre></li>
                
                  <li onclick="toggle('pre140320683213120', 'post140320683213120')"><pre>            on_conflict=on_conflict,</pre></li>
                
                  <li onclick="toggle('pre140320683213120', 'post140320683213120')"><pre>            update_fields=update_fields,</pre></li>
                
                  <li onclick="toggle('pre140320683213120', 'post140320683213120')"><pre>            unique_fields=unique_fields,</pre></li>
                
                  <li onclick="toggle('pre140320683213120', 'post140320683213120')"><pre>        )</pre></li>
                
                  <li onclick="toggle('pre140320683213120', 'post140320683213120')"><pre>        query.insert_values(fields, objs, raw=raw)</pre></li>
                
                </ol>
              
              <ol start="1805" class="context-line">
                <li onclick="toggle('pre140320683213120', 'post140320683213120')"><pre>        return query.get_compiler(using=using).execute_sql(returning_fields)</pre> <span>…</span></li>
              </ol>
              
                <ol start='1806' class="post-context" id="post140320683213120">
                  
                  <li onclick="toggle('pre140320683213120', 'post140320683213120')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140320683213120', 'post140320683213120')"><pre>    _insert.alters_data = True</pre></li>
                  
                  <li onclick="toggle('pre140320683213120', 'post140320683213120')"><pre>    _insert.queryset_only = False</pre></li>
                  
                  <li onclick="toggle('pre140320683213120', 'post140320683213120')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140320683213120', 'post140320683213120')"><pre>    def _batched_insert(</pre></li>
                  
                  <li onclick="toggle('pre140320683213120', 'post140320683213120')"><pre>        self,</pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v140320683213120">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>fields</td>
                    <td class="code"><pre>(&lt;django.db.models.fields.CharField: message_id&gt;,
 &lt;django.db.models.fields.CharField: contact_id&gt;,
 &lt;django.db.models.fields.CharField: contact_number&gt;,
 &lt;django.db.models.fields.DateField: period&gt;,
 &lt;django.db.models.fields.DateTimeField: timestamp&gt;,
 &lt;django.db.models.fields.IntegerField: status&gt;,
 &lt;django.db.models.fields.CharField: ticket_service_id&gt;,
 &lt;django.db.models.fields.CharField: message_type&gt;,
 &lt;django.db.models.fields.BooleanField: is_from_me&gt;,
 &lt;django.db.models.fields.IntegerField: retries&gt;)</pre></td>
                  </tr>
                
                  <tr>
                    <td>objs</td>
                    <td class="code"><pre>[&lt;Message: 5588988562749 - 2023-05-01 - 0&gt;]</pre></td>
                  </tr>
                
                  <tr>
                    <td>on_conflict</td>
                    <td class="code"><pre>None</pre></td>
                  </tr>
                
                  <tr>
                    <td>query</td>
                    <td class="code"><pre>&lt;django.db.models.sql.subqueries.InsertQuery object at 0x7f9ef4788cd0&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>raw</td>
                    <td class="code"><pre>False</pre></td>
                  </tr>
                
                  <tr>
                    <td>returning_fields</td>
                    <td class="code"><pre>[]</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;QuerySet []&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>unique_fields</td>
                    <td class="code"><pre>None</pre></td>
                  </tr>
                
                  <tr>
                    <td>update_fields</td>
                    <td class="code"><pre>None</pre></td>
                  </tr>
                
                  <tr>
                    <td>using</td>
                    <td class="code"><pre>&#x27;default&#x27;</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
        <li class="frame django">
          
            <code class="fname">/home/jpfilho/.local/lib/python3.10/site-packages/django/db/models/sql/compiler.py</code>, line 1819, in execute_sql
          

          
            <div class="context" id="c140320683254464">
              
                <ol start="1812" class="pre-context" id="pre140320683254464">
                
                  <li onclick="toggle('pre140320683254464', 'post140320683254464')"><pre>            returning_fields</pre></li>
                
                  <li onclick="toggle('pre140320683254464', 'post140320683254464')"><pre>            and len(self.query.objs) != 1</pre></li>
                
                  <li onclick="toggle('pre140320683254464', 'post140320683254464')"><pre>            and not self.connection.features.can_return_rows_from_bulk_insert</pre></li>
                
                  <li onclick="toggle('pre140320683254464', 'post140320683254464')"><pre>        )</pre></li>
                
                  <li onclick="toggle('pre140320683254464', 'post140320683254464')"><pre>        opts = self.query.get_meta()</pre></li>
                
                  <li onclick="toggle('pre140320683254464', 'post140320683254464')"><pre>        self.returning_fields = returning_fields</pre></li>
                
                  <li onclick="toggle('pre140320683254464', 'post140320683254464')"><pre>        with self.connection.cursor() as cursor:</pre></li>
                
                </ol>
              
              <ol start="1819" class="context-line">
                <li onclick="toggle('pre140320683254464', 'post140320683254464')"><pre>            for sql, params in self.as_sql():</pre> <span>…</span></li>
              </ol>
              
                <ol start='1820' class="post-context" id="post140320683254464">
                  
                  <li onclick="toggle('pre140320683254464', 'post140320683254464')"><pre>                cursor.execute(sql, params)</pre></li>
                  
                  <li onclick="toggle('pre140320683254464', 'post140320683254464')"><pre>            if not self.returning_fields:</pre></li>
                  
                  <li onclick="toggle('pre140320683254464', 'post140320683254464')"><pre>                return []</pre></li>
                  
                  <li onclick="toggle('pre140320683254464', 'post140320683254464')"><pre>            if (</pre></li>
                  
                  <li onclick="toggle('pre140320683254464', 'post140320683254464')"><pre>                self.connection.features.can_return_rows_from_bulk_insert</pre></li>
                  
                  <li onclick="toggle('pre140320683254464', 'post140320683254464')"><pre>                and len(self.query.objs) &gt; 1</pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v140320683254464">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>cursor</td>
                    <td class="code"><pre>&lt;django.db.backends.postgresql.base.CursorDebugWrapper object at 0x7f9ef478b370&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>opts</td>
                    <td class="code"><pre>&lt;Options for Message&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>returning_fields</td>
                    <td class="code"><pre>[]</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;SQLInsertCompiler model=Message connection=&lt;DatabaseWrapper vendor=&#x27;postgresql&#x27; alias=&#x27;default&#x27;&gt; using=&#x27;default&#x27;&gt;</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
        <li class="frame django">
          
            <code class="fname">/home/jpfilho/.local/lib/python3.10/site-packages/django/db/models/sql/compiler.py</code>, line 1743, in as_sql
          

          
            <div class="context" id="c140320683249216">
              
                <ol start="1736" class="pre-context" id="pre140320683249216">
                
                  <li onclick="toggle('pre140320683249216', 'post140320683249216')"><pre>            on_conflict=self.query.on_conflict,</pre></li>
                
                  <li onclick="toggle('pre140320683249216', 'post140320683249216')"><pre>        )</pre></li>
                
                  <li onclick="toggle('pre140320683249216', 'post140320683249216')"><pre>        result = [&quot;%s %s&quot; % (insert_statement, qn(opts.db_table))]</pre></li>
                
                  <li onclick="toggle('pre140320683249216', 'post140320683249216')"><pre>        fields = self.query.fields or [opts.pk]</pre></li>
                
                  <li onclick="toggle('pre140320683249216', 'post140320683249216')"><pre>        result.append(&quot;(%s)&quot; % &quot;, &quot;.join(qn(f.column) for f in fields))</pre></li>
                
                  <li onclick="toggle('pre140320683249216', 'post140320683249216')"><pre></pre></li>
                
                  <li onclick="toggle('pre140320683249216', 'post140320683249216')"><pre>        if self.query.fields:</pre></li>
                
                </ol>
              
              <ol start="1743" class="context-line">
                <li onclick="toggle('pre140320683249216', 'post140320683249216')"><pre>            value_rows = [</pre> <span>…</span></li>
              </ol>
              
                <ol start='1744' class="post-context" id="post140320683249216">
                  
                  <li onclick="toggle('pre140320683249216', 'post140320683249216')"><pre>                [</pre></li>
                  
                  <li onclick="toggle('pre140320683249216', 'post140320683249216')"><pre>                    self.prepare_value(field, self.pre_save_val(field, obj))</pre></li>
                  
                  <li onclick="toggle('pre140320683249216', 'post140320683249216')"><pre>                    for field in fields</pre></li>
                  
                  <li onclick="toggle('pre140320683249216', 'post140320683249216')"><pre>                ]</pre></li>
                  
                  <li onclick="toggle('pre140320683249216', 'post140320683249216')"><pre>                for obj in self.query.objs</pre></li>
                  
                  <li onclick="toggle('pre140320683249216', 'post140320683249216')"><pre>            ]</pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v140320683249216">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>fields</td>
                    <td class="code"><pre>(&lt;django.db.models.fields.CharField: message_id&gt;,
 &lt;django.db.models.fields.CharField: contact_id&gt;,
 &lt;django.db.models.fields.CharField: contact_number&gt;,
 &lt;django.db.models.fields.DateField: period&gt;,
 &lt;django.db.models.fields.DateTimeField: timestamp&gt;,
 &lt;django.db.models.fields.IntegerField: status&gt;,
 &lt;django.db.models.fields.CharField: ticket_service_id&gt;,
 &lt;django.db.models.fields.CharField: message_type&gt;,
 &lt;django.db.models.fields.BooleanField: is_from_me&gt;,
 &lt;django.db.models.fields.IntegerField: retries&gt;)</pre></td>
                  </tr>
                
                  <tr>
                    <td>insert_statement</td>
                    <td class="code"><pre>&#x27;INSERT INTO&#x27;</pre></td>
                  </tr>
                
                  <tr>
                    <td>opts</td>
                    <td class="code"><pre>&lt;Options for Message&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>qn</td>
                    <td class="code"><pre>&lt;bound method DatabaseOperations.quote_name of &lt;django.db.backends.postgresql.operations.DatabaseOperations object at 0x7f9ef478ba30&gt;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>result</td>
                    <td class="code"><pre>[&#x27;INSERT INTO &quot;messages_api_message&quot;&#x27;,
 &#x27;(&quot;message_id&quot;, &quot;contact_id&quot;, &quot;contact_number&quot;, &quot;period&quot;, &quot;timestamp&quot;, &#x27;
 &#x27;&quot;status&quot;, &quot;ticket_service_id&quot;, &quot;message_type&quot;, &quot;is_from_me&quot;, &quot;retries&quot;)&#x27;]</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;SQLInsertCompiler model=Message connection=&lt;DatabaseWrapper vendor=&#x27;postgresql&#x27; alias=&#x27;default&#x27;&gt; using=&#x27;default&#x27;&gt;</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
        <li class="frame django">
          
            <code class="fname">/home/jpfilho/.local/lib/python3.10/site-packages/django/db/models/sql/compiler.py</code>, line 1744, in &lt;listcomp&gt;
          

          
            <div class="context" id="c140320619689216">
              
                <ol start="1737" class="pre-context" id="pre140320619689216">
                
                  <li onclick="toggle('pre140320619689216', 'post140320619689216')"><pre>        )</pre></li>
                
                  <li onclick="toggle('pre140320619689216', 'post140320619689216')"><pre>        result = [&quot;%s %s&quot; % (insert_statement, qn(opts.db_table))]</pre></li>
                
                  <li onclick="toggle('pre140320619689216', 'post140320619689216')"><pre>        fields = self.query.fields or [opts.pk]</pre></li>
                
                  <li onclick="toggle('pre140320619689216', 'post140320619689216')"><pre>        result.append(&quot;(%s)&quot; % &quot;, &quot;.join(qn(f.column) for f in fields))</pre></li>
                
                  <li onclick="toggle('pre140320619689216', 'post140320619689216')"><pre></pre></li>
                
                  <li onclick="toggle('pre140320619689216', 'post140320619689216')"><pre>        if self.query.fields:</pre></li>
                
                  <li onclick="toggle('pre140320619689216', 'post140320619689216')"><pre>            value_rows = [</pre></li>
                
                </ol>
              
              <ol start="1744" class="context-line">
                <li onclick="toggle('pre140320619689216', 'post140320619689216')"><pre>                [</pre> <span>…</span></li>
              </ol>
              
                <ol start='1745' class="post-context" id="post140320619689216">
                  
                  <li onclick="toggle('pre140320619689216', 'post140320619689216')"><pre>                    self.prepare_value(field, self.pre_save_val(field, obj))</pre></li>
                  
                  <li onclick="toggle('pre140320619689216', 'post140320619689216')"><pre>                    for field in fields</pre></li>
                  
                  <li onclick="toggle('pre140320619689216', 'post140320619689216')"><pre>                ]</pre></li>
                  
                  <li onclick="toggle('pre140320619689216', 'post140320619689216')"><pre>                for obj in self.query.objs</pre></li>
                  
                  <li onclick="toggle('pre140320619689216', 'post140320619689216')"><pre>            ]</pre></li>
                  
                  <li onclick="toggle('pre140320619689216', 'post140320619689216')"><pre>        else:</pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v140320619689216">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>.0</td>
                    <td class="code"><pre>&lt;list_iterator object at 0x7f9ef47d84f0&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>fields</td>
                    <td class="code"><pre>(&lt;django.db.models.fields.CharField: message_id&gt;,
 &lt;django.db.models.fields.CharField: contact_id&gt;,
 &lt;django.db.models.fields.CharField: contact_number&gt;,
 &lt;django.db.models.fields.DateField: period&gt;,
 &lt;django.db.models.fields.DateTimeField: timestamp&gt;,
 &lt;django.db.models.fields.IntegerField: status&gt;,
 &lt;django.db.models.fields.CharField: ticket_service_id&gt;,
 &lt;django.db.models.fields.CharField: message_type&gt;,
 &lt;django.db.models.fields.BooleanField: is_from_me&gt;,
 &lt;django.db.models.fields.IntegerField: retries&gt;)</pre></td>
                  </tr>
                
                  <tr>
                    <td>obj</td>
                    <td class="code"><pre>&lt;Message: 5588988562749 - 2023-05-01 - 0&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;SQLInsertCompiler model=Message connection=&lt;DatabaseWrapper vendor=&#x27;postgresql&#x27; alias=&#x27;default&#x27;&gt; using=&#x27;default&#x27;&gt;</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
        <li class="frame django">
          
            <code class="fname">/home/jpfilho/.local/lib/python3.10/site-packages/django/db/models/sql/compiler.py</code>, line 1745, in &lt;listcomp&gt;
          

          
            <div class="context" id="c140320619681664">
              
                <ol start="1738" class="pre-context" id="pre140320619681664">
                
                  <li onclick="toggle('pre140320619681664', 'post140320619681664')"><pre>        result = [&quot;%s %s&quot; % (insert_statement, qn(opts.db_table))]</pre></li>
                
                  <li onclick="toggle('pre140320619681664', 'post140320619681664')"><pre>        fields = self.query.fields or [opts.pk]</pre></li>
                
                  <li onclick="toggle('pre140320619681664', 'post140320619681664')"><pre>        result.append(&quot;(%s)&quot; % &quot;, &quot;.join(qn(f.column) for f in fields))</pre></li>
                
                  <li onclick="toggle('pre140320619681664', 'post140320619681664')"><pre></pre></li>
                
                  <li onclick="toggle('pre140320619681664', 'post140320619681664')"><pre>        if self.query.fields:</pre></li>
                
                  <li onclick="toggle('pre140320619681664', 'post140320619681664')"><pre>            value_rows = [</pre></li>
                
                  <li onclick="toggle('pre140320619681664', 'post140320619681664')"><pre>                [</pre></li>
                
                </ol>
              
              <ol start="1745" class="context-line">
                <li onclick="toggle('pre140320619681664', 'post140320619681664')"><pre>                    self.prepare_value(field, self.pre_save_val(field, obj))</pre> <span>…</span></li>
              </ol>
              
                <ol start='1746' class="post-context" id="post140320619681664">
                  
                  <li onclick="toggle('pre140320619681664', 'post140320619681664')"><pre>                    for field in fields</pre></li>
                  
                  <li onclick="toggle('pre140320619681664', 'post140320619681664')"><pre>                ]</pre></li>
                  
                  <li onclick="toggle('pre140320619681664', 'post140320619681664')"><pre>                for obj in self.query.objs</pre></li>
                  
                  <li onclick="toggle('pre140320619681664', 'post140320619681664')"><pre>            ]</pre></li>
                  
                  <li onclick="toggle('pre140320619681664', 'post140320619681664')"><pre>        else:</pre></li>
                  
                  <li onclick="toggle('pre140320619681664', 'post140320619681664')"><pre>            # An empty object.</pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v140320619681664">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>.0</td>
                    <td class="code"><pre>&lt;tuple_iterator object at 0x7f9ef47d83a0&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>field</td>
                    <td class="code"><pre>&lt;django.db.models.fields.BooleanField: is_from_me&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>obj</td>
                    <td class="code"><pre>&lt;Message: 5588988562749 - 2023-05-01 - 0&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;SQLInsertCompiler model=Message connection=&lt;DatabaseWrapper vendor=&#x27;postgresql&#x27; alias=&#x27;default&#x27;&gt; using=&#x27;default&#x27;&gt;</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
        <li class="frame django">
          
            <code class="fname">/home/jpfilho/.local/lib/python3.10/site-packages/django/db/models/sql/compiler.py</code>, line 1684, in prepare_value
          

          
            <div class="context" id="c140320619678272">
              
                <ol start="1677" class="pre-context" id="pre140320619678272">
                
                  <li onclick="toggle('pre140320619678272', 'post140320619678272')"><pre>                    &quot;(%s=%r).&quot; % (field.name, value)</pre></li>
                
                  <li onclick="toggle('pre140320619678272', 'post140320619678272')"><pre>                )</pre></li>
                
                  <li onclick="toggle('pre140320619678272', 'post140320619678272')"><pre>            if value.contains_over_clause:</pre></li>
                
                  <li onclick="toggle('pre140320619678272', 'post140320619678272')"><pre>                raise FieldError(</pre></li>
                
                  <li onclick="toggle('pre140320619678272', 'post140320619678272')"><pre>                    &quot;Window expressions are not allowed in this query (%s=%r).&quot;</pre></li>
                
                  <li onclick="toggle('pre140320619678272', 'post140320619678272')"><pre>                    % (field.name, value)</pre></li>
                
                  <li onclick="toggle('pre140320619678272', 'post140320619678272')"><pre>                )</pre></li>
                
                </ol>
              
              <ol start="1684" class="context-line">
                <li onclick="toggle('pre140320619678272', 'post140320619678272')"><pre>        return field.get_db_prep_save(value, connection=self.connection)</pre> <span>…</span></li>
              </ol>
              
                <ol start='1685' class="post-context" id="post140320619678272">
                  
                  <li onclick="toggle('pre140320619678272', 'post140320619678272')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140320619678272', 'post140320619678272')"><pre>    def pre_save_val(self, field, obj):</pre></li>
                  
                  <li onclick="toggle('pre140320619678272', 'post140320619678272')"><pre>        &quot;&quot;&quot;</pre></li>
                  
                  <li onclick="toggle('pre140320619678272', 'post140320619678272')"><pre>        Get the given field&#x27;s value off the given obj. pre_save() is used for</pre></li>
                  
                  <li onclick="toggle('pre140320619678272', 'post140320619678272')"><pre>        things like auto_now on DateTimeField. Skip it if this is a raw query.</pre></li>
                  
                  <li onclick="toggle('pre140320619678272', 'post140320619678272')"><pre>        &quot;&quot;&quot;</pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v140320619678272">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>field</td>
                    <td class="code"><pre>&lt;django.db.models.fields.BooleanField: is_from_me&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;SQLInsertCompiler model=Message connection=&lt;DatabaseWrapper vendor=&#x27;postgresql&#x27; alias=&#x27;default&#x27;&gt; using=&#x27;default&#x27;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>value</td>
                    <td class="code"><pre>[True]</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
        <li class="frame django">
          
            <code class="fname">/home/jpfilho/.local/lib/python3.10/site-packages/django/db/models/fields/__init__.py</code>, line 954, in get_db_prep_save
          

          
            <div class="context" id="c140320619683136">
              
                <ol start="947" class="pre-context" id="pre140320619683136">
                
                  <li onclick="toggle('pre140320619683136', 'post140320619683136')"><pre>            value = self.get_prep_value(value)</pre></li>
                
                  <li onclick="toggle('pre140320619683136', 'post140320619683136')"><pre>        return value</pre></li>
                
                  <li onclick="toggle('pre140320619683136', 'post140320619683136')"><pre></pre></li>
                
                  <li onclick="toggle('pre140320619683136', 'post140320619683136')"><pre>    def get_db_prep_save(self, value, connection):</pre></li>
                
                  <li onclick="toggle('pre140320619683136', 'post140320619683136')"><pre>        &quot;&quot;&quot;Return field&#x27;s value prepared for saving into a database.&quot;&quot;&quot;</pre></li>
                
                  <li onclick="toggle('pre140320619683136', 'post140320619683136')"><pre>        if hasattr(value, &quot;as_sql&quot;):</pre></li>
                
                  <li onclick="toggle('pre140320619683136', 'post140320619683136')"><pre>            return value</pre></li>
                
                </ol>
              
              <ol start="954" class="context-line">
                <li onclick="toggle('pre140320619683136', 'post140320619683136')"><pre>        return self.get_db_prep_value(value, connection=connection, prepared=False)</pre> <span>…</span></li>
              </ol>
              
                <ol start='955' class="post-context" id="post140320619683136">
                  
                  <li onclick="toggle('pre140320619683136', 'post140320619683136')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140320619683136', 'post140320619683136')"><pre>    def has_default(self):</pre></li>
                  
                  <li onclick="toggle('pre140320619683136', 'post140320619683136')"><pre>        &quot;&quot;&quot;Return a boolean of whether this field has a default value.&quot;&quot;&quot;</pre></li>
                  
                  <li onclick="toggle('pre140320619683136', 'post140320619683136')"><pre>        return self.default is not NOT_PROVIDED</pre></li>
                  
                  <li onclick="toggle('pre140320619683136', 'post140320619683136')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140320619683136', 'post140320619683136')"><pre>    def get_default(self):</pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v140320619683136">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>connection</td>
                    <td class="code"><pre>&lt;DatabaseWrapper vendor=&#x27;postgresql&#x27; alias=&#x27;default&#x27;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;django.db.models.fields.BooleanField: is_from_me&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>value</td>
                    <td class="code"><pre>[True]</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
        <li class="frame django">
          
            <code class="fname">/home/jpfilho/.local/lib/python3.10/site-packages/django/db/models/fields/__init__.py</code>, line 947, in get_db_prep_value
          

          
            <div class="context" id="c140320619677568">
              
                <ol start="940" class="pre-context" id="pre140320619677568">
                
                  <li onclick="toggle('pre140320619677568', 'post140320619677568')"><pre>    def get_db_prep_value(self, value, connection, prepared=False):</pre></li>
                
                  <li onclick="toggle('pre140320619677568', 'post140320619677568')"><pre>        &quot;&quot;&quot;</pre></li>
                
                  <li onclick="toggle('pre140320619677568', 'post140320619677568')"><pre>        Return field&#x27;s value prepared for interacting with the database backend.</pre></li>
                
                  <li onclick="toggle('pre140320619677568', 'post140320619677568')"><pre></pre></li>
                
                  <li onclick="toggle('pre140320619677568', 'post140320619677568')"><pre>        Used by the default implementations of get_db_prep_save().</pre></li>
                
                  <li onclick="toggle('pre140320619677568', 'post140320619677568')"><pre>        &quot;&quot;&quot;</pre></li>
                
                  <li onclick="toggle('pre140320619677568', 'post140320619677568')"><pre>        if not prepared:</pre></li>
                
                </ol>
              
              <ol start="947" class="context-line">
                <li onclick="toggle('pre140320619677568', 'post140320619677568')"><pre>            value = self.get_prep_value(value)</pre> <span>…</span></li>
              </ol>
              
                <ol start='948' class="post-context" id="post140320619677568">
                  
                  <li onclick="toggle('pre140320619677568', 'post140320619677568')"><pre>        return value</pre></li>
                  
                  <li onclick="toggle('pre140320619677568', 'post140320619677568')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140320619677568', 'post140320619677568')"><pre>    def get_db_prep_save(self, value, connection):</pre></li>
                  
                  <li onclick="toggle('pre140320619677568', 'post140320619677568')"><pre>        &quot;&quot;&quot;Return field&#x27;s value prepared for saving into a database.&quot;&quot;&quot;</pre></li>
                  
                  <li onclick="toggle('pre140320619677568', 'post140320619677568')"><pre>        if hasattr(value, &quot;as_sql&quot;):</pre></li>
                  
                  <li onclick="toggle('pre140320619677568', 'post140320619677568')"><pre>            return value</pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v140320619677568">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>connection</td>
                    <td class="code"><pre>&lt;DatabaseWrapper vendor=&#x27;postgresql&#x27; alias=&#x27;default&#x27;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>prepared</td>
                    <td class="code"><pre>False</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;django.db.models.fields.BooleanField: is_from_me&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>value</td>
                    <td class="code"><pre>[True]</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
        <li class="frame django">
          
            <code class="fname">/home/jpfilho/.local/lib/python3.10/site-packages/django/db/models/fields/__init__.py</code>, line 1122, in get_prep_value
          

          
            <div class="context" id="c140320619678592">
              
                <ol start="1115" class="pre-context" id="pre140320619678592">
                
                  <li onclick="toggle('pre140320619678592', 'post140320619678592')"><pre>            params={&quot;value&quot;: value},</pre></li>
                
                  <li onclick="toggle('pre140320619678592', 'post140320619678592')"><pre>        )</pre></li>
                
                  <li onclick="toggle('pre140320619678592', 'post140320619678592')"><pre></pre></li>
                
                  <li onclick="toggle('pre140320619678592', 'post140320619678592')"><pre>    def get_prep_value(self, value):</pre></li>
                
                  <li onclick="toggle('pre140320619678592', 'post140320619678592')"><pre>        value = super().get_prep_value(value)</pre></li>
                
                  <li onclick="toggle('pre140320619678592', 'post140320619678592')"><pre>        if value is None:</pre></li>
                
                  <li onclick="toggle('pre140320619678592', 'post140320619678592')"><pre>            return None</pre></li>
                
                </ol>
              
              <ol start="1122" class="context-line">
                <li onclick="toggle('pre140320619678592', 'post140320619678592')"><pre>        return self.to_python(value)</pre> <span>…</span></li>
              </ol>
              
                <ol start='1123' class="post-context" id="post140320619678592">
                  
                  <li onclick="toggle('pre140320619678592', 'post140320619678592')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140320619678592', 'post140320619678592')"><pre>    def formfield(self, **kwargs):</pre></li>
                  
                  <li onclick="toggle('pre140320619678592', 'post140320619678592')"><pre>        if self.choices is not None:</pre></li>
                  
                  <li onclick="toggle('pre140320619678592', 'post140320619678592')"><pre>            include_blank = not (self.has_default() or &quot;initial&quot; in kwargs)</pre></li>
                  
                  <li onclick="toggle('pre140320619678592', 'post140320619678592')"><pre>            defaults = {&quot;choices&quot;: self.get_choices(include_blank=include_blank)}</pre></li>
                  
                  <li onclick="toggle('pre140320619678592', 'post140320619678592')"><pre>        else:</pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v140320619678592">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>__class__</td>
                    <td class="code"><pre>&lt;class &#x27;django.db.models.fields.BooleanField&#x27;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;django.db.models.fields.BooleanField: is_from_me&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>value</td>
                    <td class="code"><pre>[True]</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
        <li class="frame django">
          
            <code class="fname">/home/jpfilho/.local/lib/python3.10/site-packages/django/db/models/fields/__init__.py</code>, line 1112, in to_python
          

          
            <div class="context" id="c140320619681856">
              
                <ol start="1105" class="pre-context" id="pre140320619681856">
                
                  <li onclick="toggle('pre140320619681856', 'post140320619681856')"><pre>        if value in (True, False):</pre></li>
                
                  <li onclick="toggle('pre140320619681856', 'post140320619681856')"><pre>            # 1/0 are equal to True/False. bool() converts former to latter.</pre></li>
                
                  <li onclick="toggle('pre140320619681856', 'post140320619681856')"><pre>            return bool(value)</pre></li>
                
                  <li onclick="toggle('pre140320619681856', 'post140320619681856')"><pre>        if value in (&quot;t&quot;, &quot;True&quot;, &quot;1&quot;):</pre></li>
                
                  <li onclick="toggle('pre140320619681856', 'post140320619681856')"><pre>            return True</pre></li>
                
                  <li onclick="toggle('pre140320619681856', 'post140320619681856')"><pre>        if value in (&quot;f&quot;, &quot;False&quot;, &quot;0&quot;):</pre></li>
                
                  <li onclick="toggle('pre140320619681856', 'post140320619681856')"><pre>            return False</pre></li>
                
                </ol>
              
              <ol start="1112" class="context-line">
                <li onclick="toggle('pre140320619681856', 'post140320619681856')"><pre>        raise exceptions.ValidationError(</pre> <span>…</span></li>
              </ol>
              
                <ol start='1113' class="post-context" id="post140320619681856">
                  
                  <li onclick="toggle('pre140320619681856', 'post140320619681856')"><pre>            self.error_messages[&quot;invalid_nullable&quot; if self.null else &quot;invalid&quot;],</pre></li>
                  
                  <li onclick="toggle('pre140320619681856', 'post140320619681856')"><pre>            code=&quot;invalid&quot;,</pre></li>
                  
                  <li onclick="toggle('pre140320619681856', 'post140320619681856')"><pre>            params={&quot;value&quot;: value},</pre></li>
                  
                  <li onclick="toggle('pre140320619681856', 'post140320619681856')"><pre>        )</pre></li>
                  
                  <li onclick="toggle('pre140320619681856', 'post140320619681856')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140320619681856', 'post140320619681856')"><pre>    def get_prep_value(self, value):</pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v140320619681856">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;django.db.models.fields.BooleanField: is_from_me&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>value</td>
                    <td class="code"><pre>[True]</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
    </ul>
  </div>

  <form action="https://dpaste.com/" name="pasteform" id="pasteform" method="post">
  <div id="pastebinTraceback" class="pastebin">
    <input type="hidden" name="language" value="PythonConsole">
    <input type="hidden" name="title"
      value="ValidationError at /webhook/messages/create">
    <input type="hidden" name="source" value="Django Dpaste Agent">
    <input type="hidden" name="poster" value="Django">
    <textarea name="content" id="traceback_area" cols="140" rows="25">
Environment:


Request Method: POST
Request URL: http://woz.serveo.net/webhook/messages/create?phone=5588988562749&amp;period=05%2F23

Django Version: 4.2.1
Python Version: 3.10.7
Installed Applications:
[&#x27;django.contrib.admin&#x27;,
 &#x27;django.contrib.auth&#x27;,
 &#x27;django.contrib.contenttypes&#x27;,
 &#x27;django.contrib.sessions&#x27;,
 &#x27;django.contrib.messages&#x27;,
 &#x27;django.contrib.staticfiles&#x27;,
 &#x27;drf_yasg&#x27;,
 &#x27;rest_framework&#x27;,
 &#x27;example&#x27;,
 &#x27;messages_api&#x27;,
 &#x27;celery&#x27;,
 &#x27;django_filters&#x27;]
Installed Middleware:
[&#x27;django.middleware.security.SecurityMiddleware&#x27;,
 &#x27;django.contrib.sessions.middleware.SessionMiddleware&#x27;,
 &#x27;django.middleware.common.CommonMiddleware&#x27;,
 &#x27;django.middleware.csrf.CsrfViewMiddleware&#x27;,
 &#x27;django.contrib.auth.middleware.AuthenticationMiddleware&#x27;,
 &#x27;django.contrib.messages.middleware.MessageMiddleware&#x27;,
 &#x27;django.middleware.clickjacking.XFrameOptionsMiddleware&#x27;]



Traceback (most recent call last):
  File "/home/jpfilho/.local/lib/python3.10/site-packages/django/core/handlers/exception.py", line 55, in inner
    response = get_response(request)
  File "/home/jpfilho/.local/lib/python3.10/site-packages/django/core/handlers/base.py", line 197, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/home/jpfilho/.local/lib/python3.10/site-packages/django/views/decorators/csrf.py", line 56, in wrapper_view
    return view_func(*args, **kwargs)
  File "/home/jpfilho/.local/lib/python3.10/site-packages/rest_framework/viewsets.py", line 125, in view
    return self.dispatch(request, *args, **kwargs)
  File "/home/jpfilho/.local/lib/python3.10/site-packages/rest_framework/views.py", line 509, in dispatch
    response = self.handle_exception(exc)
  File "/home/jpfilho/.local/lib/python3.10/site-packages/rest_framework/views.py", line 469, in handle_exception
    self.raise_uncaught_exception(exc)
  File "/home/jpfilho/.local/lib/python3.10/site-packages/rest_framework/views.py", line 480, in raise_uncaught_exception
    raise exc
  File "/home/jpfilho/.local/lib/python3.10/site-packages/rest_framework/views.py", line 506, in dispatch
    response = handler(request, *args, **kwargs)
  File "/home/jpfilho/Documents/code-ws/python/webhook/messages_api/views.py", line 153, in create
    message = Message.objects.create(
  File "/home/jpfilho/.local/lib/python3.10/site-packages/django/db/models/manager.py", line 87, in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
  File "/home/jpfilho/.local/lib/python3.10/site-packages/django/db/models/query.py", line 658, in create
    obj.save(force_insert=True, using=self.db)
  File "/home/jpfilho/.local/lib/python3.10/site-packages/django/db/models/base.py", line 814, in save
    self.save_base(
  File "/home/jpfilho/.local/lib/python3.10/site-packages/django/db/models/base.py", line 877, in save_base
    updated = self._save_table(
  File "/home/jpfilho/.local/lib/python3.10/site-packages/django/db/models/base.py", line 1020, in _save_table
    results = self._do_insert(
  File "/home/jpfilho/.local/lib/python3.10/site-packages/django/db/models/base.py", line 1061, in _do_insert
    return manager._insert(
  File "/home/jpfilho/.local/lib/python3.10/site-packages/django/db/models/manager.py", line 87, in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
  File "/home/jpfilho/.local/lib/python3.10/site-packages/django/db/models/query.py", line 1805, in _insert
    return query.get_compiler(using=using).execute_sql(returning_fields)
  File "/home/jpfilho/.local/lib/python3.10/site-packages/django/db/models/sql/compiler.py", line 1819, in execute_sql
    for sql, params in self.as_sql():
  File "/home/jpfilho/.local/lib/python3.10/site-packages/django/db/models/sql/compiler.py", line 1743, in as_sql
    value_rows = [
  File "/home/jpfilho/.local/lib/python3.10/site-packages/django/db/models/sql/compiler.py", line 1744, in &lt;listcomp&gt;
    [
  File "/home/jpfilho/.local/lib/python3.10/site-packages/django/db/models/sql/compiler.py", line 1745, in &lt;listcomp&gt;
    self.prepare_value(field, self.pre_save_val(field, obj))
  File "/home/jpfilho/.local/lib/python3.10/site-packages/django/db/models/sql/compiler.py", line 1684, in prepare_value
    return field.get_db_prep_save(value, connection=self.connection)
  File "/home/jpfilho/.local/lib/python3.10/site-packages/django/db/models/fields/__init__.py", line 954, in get_db_prep_save
    return self.get_db_prep_value(value, connection=connection, prepared=False)
  File "/home/jpfilho/.local/lib/python3.10/site-packages/django/db/models/fields/__init__.py", line 947, in get_db_prep_value
    value = self.get_prep_value(value)
  File "/home/jpfilho/.local/lib/python3.10/site-packages/django/db/models/fields/__init__.py", line 1122, in get_prep_value
    return self.to_python(value)
  File "/home/jpfilho/.local/lib/python3.10/site-packages/django/db/models/fields/__init__.py", line 1112, in to_python
    raise exceptions.ValidationError(

Exception Type: ValidationError at /webhook/messages/create
Exception Value: [&#x27;o valor “[True]”  deve ser True ou False.&#x27;]
</textarea>
  <br><br>
  <input type="submit" value="Share this traceback on a public website">
  </div>
</form>

</div>


<div id="requestinfo">
  <h2>Request information</h2>


  
    <h3 id="user-info">USER</h3>
    <p>AnonymousUser</p>
  

  <h3 id="get-info">GET</h3>
  
    <table class="req">
      <thead>
        <tr>
          <th>Variable</th>
          <th>Value</th>
        </tr>
      </thead>
      <tbody>
        
          <tr>
            <td>phone</td>
            <td class="code"><pre>&#x27;5588988562749&#x27;</pre></td>
          </tr>
        
          <tr>
            <td>period</td>
            <td class="code"><pre>&#x27;05/23&#x27;</pre></td>
          </tr>
        
      </tbody>
    </table>
  

  <h3 id="post-info">POST</h3>
  
    <p>No POST data</p>
  

  <h3 id="files-info">FILES</h3>
  
    <p>No FILES data</p>
  

  <h3 id="cookie-info">COOKIES</h3>
  
    <p>No cookie data</p>
  

  <h3 id="meta-info">META</h3>
  <table class="req">
    <thead>
      <tr>
        <th>Variable</th>
        <th>Value</th>
      </tr>
    </thead>
    <tbody>
      
        <tr>
          <td>API_URL</td>
          <td class="code"><pre>&#x27;********************&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>BAMF_DESKTOP_FILE_HINT</td>
          <td class="code"><pre>&#x27;/var/lib/snapd/desktop/applications/code_code.desktop&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>CHROME_DESKTOP</td>
          <td class="code"><pre>&#x27;code-url-handler.desktop&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>CLOUDAMQP_URL</td>
          <td class="code"><pre>&#x27;amqps://kzthoddb:3CziblJY4U4tFRNmARuMMdIDu8z53Ql6@fly.rmq.cloudamqp.com/kzthoddb&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>COLORTERM</td>
          <td class="code"><pre>&#x27;truecolor&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>COMPANIES_API</td>
          <td class="code"><pre>&#x27;********************&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>CONTENT_LENGTH</td>
          <td class="code"><pre>&#x27;261&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>CONTENT_TYPE</td>
          <td class="code"><pre>&#x27;application/json&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>DBUS_SESSION_BUS_ADDRESS</td>
          <td class="code"><pre>&#x27;unix:path=/run/user/1000/bus&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>DEBUGINFOD_URLS</td>
          <td class="code"><pre>&#x27;https://debuginfod.ubuntu.com &#x27;</pre></td>
        </tr>
      
        <tr>
          <td>DESKTOP_SESSION</td>
          <td class="code"><pre>&#x27;ubuntu&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>DISPLAY</td>
          <td class="code"><pre>&#x27;:1&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>DJANGO_SETTINGS_MODULE</td>
          <td class="code"><pre>&#x27;webhook.settings&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>GATEWAY_INTERFACE</td>
          <td class="code"><pre>&#x27;CGI/1.1&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>GDK_BACKEND</td>
          <td class="code"><pre>&#x27;x11&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>GDMSESSION</td>
          <td class="code"><pre>&#x27;ubuntu&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>GIO_LAUNCHED_DESKTOP_FILE</td>
          <td class="code"><pre>&#x27;/var/lib/snapd/desktop/applications/code_code.desktop&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>GIO_LAUNCHED_DESKTOP_FILE_PID</td>
          <td class="code"><pre>&#x27;2895&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>GIO_MODULE_DIR</td>
          <td class="code"><pre>&#x27;/home/jpfilho/snap/code/common/.cache/gio-modules&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>GIT_ASKPASS</td>
          <td class="code"><pre>&#x27;********************&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>GJS_DEBUG_OUTPUT</td>
          <td class="code"><pre>&#x27;stderr&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>GJS_DEBUG_TOPICS</td>
          <td class="code"><pre>&#x27;JS ERROR;JS LOG&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>GNOME_DESKTOP_SESSION_ID</td>
          <td class="code"><pre>&#x27;this-is-deprecated&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>GNOME_SHELL_SESSION_MODE</td>
          <td class="code"><pre>&#x27;ubuntu&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>GPG_AGENT_INFO</td>
          <td class="code"><pre>&#x27;/run/user/1000/gnupg/S.gpg-agent:0:1&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>GROUP_ID</td>
          <td class="code"><pre>&#x27;4bf3c03a-2d33-439c-8b13-efb50531e9c1&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>GSETTINGS_SCHEMA_DIR</td>
          <td class="code"><pre>&#x27;/home/jpfilho/snap/code/129/.local/share/glib-2.0/schemas&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>GTK_EXE_PREFIX</td>
          <td class="code"><pre>&#x27;/snap/code/129/usr&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>GTK_IM_MODULE_FILE</td>
          <td class="code"><pre>&#x27;/home/jpfilho/snap/code/common/.cache/immodules/immodules.cache&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>GTK_MODULES</td>
          <td class="code"><pre>&#x27;gail:atk-bridge&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>GTK_PATH</td>
          <td class="code"><pre>&#x27;/snap/code/129/usr/lib/x86_64-linux-gnu/gtk-3.0&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>HEROKU_API</td>
          <td class="code"><pre>&#x27;********************&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>HEROKU_API_KEY</td>
          <td class="code"><pre>&#x27;********************&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>HEROKU_DYNO_ID</td>
          <td class="code"><pre>&#x27;ba6aefd9-0ff3-4cfb-a04b-42b7bf6cf560&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>HOME</td>
          <td class="code"><pre>&#x27;/home/jpfilho&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>HTTP_ACCEPT</td>
          <td class="code"><pre>&#x27;*/*&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>HTTP_ACCEPT_ENCODING</td>
          <td class="code"><pre>&#x27;gzip, deflate&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>HTTP_HOST</td>
          <td class="code"><pre>&#x27;woz.serveo.net&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>HTTP_USER_AGENT</td>
          <td class="code"><pre>&#x27;python-requests/2.30.0&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>HTTP_X_FORWARDED_FOR</td>
          <td class="code"><pre>&#x27;177.37.130.81&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>ID_SERVICE</td>
          <td class="code"><pre>&#x27;83108c28-14f7-4646-acb8-dab165397fd5&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>INVOCATION_ID</td>
          <td class="code"><pre>&#x27;d9e9633aebb14edaa8abde0b26e491bc&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>JAVA_HOME</td>
          <td class="code"><pre>&#x27;/home/jpfilho/.sdkman/candidates/java/current&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>JOURNAL_STREAM</td>
          <td class="code"><pre>&#x27;8:33740&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>LANG</td>
          <td class="code"><pre>&#x27;pt_BR.UTF-8&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>LANGUAGE</td>
          <td class="code"><pre>&#x27;pt_BR:pt:pt_PT:en&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>LC_ADDRESS</td>
          <td class="code"><pre>&#x27;pt_BR.UTF-8&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>LC_IDENTIFICATION</td>
          <td class="code"><pre>&#x27;pt_BR.UTF-8&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>LC_MEASUREMENT</td>
          <td class="code"><pre>&#x27;pt_BR.UTF-8&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>LC_MONETARY</td>
          <td class="code"><pre>&#x27;pt_BR.UTF-8&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>LC_NAME</td>
          <td class="code"><pre>&#x27;pt_BR.UTF-8&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>LC_NUMERIC</td>
          <td class="code"><pre>&#x27;pt_BR.UTF-8&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>LC_PAPER</td>
          <td class="code"><pre>&#x27;pt_BR.UTF-8&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>LC_TELEPHONE</td>
          <td class="code"><pre>&#x27;pt_BR.UTF-8&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>LC_TIME</td>
          <td class="code"><pre>&#x27;pt_BR.UTF-8&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>LESSCLOSE</td>
          <td class="code"><pre>&#x27;/usr/bin/lesspipe %s %s&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>LESSOPEN</td>
          <td class="code"><pre>&#x27;| /usr/bin/lesspipe %s&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>LOCPATH</td>
          <td class="code"><pre>&#x27;/snap/code/129/usr/lib/locale&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>LOGNAME</td>
          <td class="code"><pre>&#x27;jpfilho&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>LS_COLORS</td>
          <td class="code"><pre>&#x27;rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:mi=00:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arc=01;31:*.arj=01;31:*.taz=01;31:*.lha=01;31:*.lz4=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.tzo=01;31:*.t7z=01;31:*.zip=01;31:*.z=01;31:*.dz=01;31:*.gz=01;31:*.lrz=01;31:*.lz=01;31:*.lzo=01;31:*.xz=01;31:*.zst=01;31:*.tzst=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.alz=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.cab=01;31:*.wim=01;31:*.swm=01;31:*.dwm=01;31:*.esd=01;31:*.jpg=01;35:*.jpeg=01;35:*.mjpg=01;35:*.mjpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.webp=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=00;36:*.au=00;36:*.flac=00;36:*.m4a=00;36:*.mid=00;36:*.midi=00;36:*.mka=00;36:*.mp3=00;36:*.mpc=00;36:*.ogg=00;36:*.ra=00;36:*.wav=00;36:*.oga=00;36:*.opus=00;36:*.spx=00;36:*.xspf=00;36:&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>MANAGERPID</td>
          <td class="code"><pre>&#x27;1783&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>MAVEN_HOME</td>
          <td class="code"><pre>&#x27;/home/jpfilho/.sdkman/candidates/maven/current&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>NVM_BIN</td>
          <td class="code"><pre>&#x27;/home/jpfilho/.nvm/versions/node/v18.16.0/bin&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>NVM_CD_FLAGS</td>
          <td class="code"><pre>&#x27;&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>NVM_DIR</td>
          <td class="code"><pre>&#x27;/home/jpfilho/.nvm&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>NVM_INC</td>
          <td class="code"><pre>&#x27;/home/jpfilho/.nvm/versions/node/v18.16.0/include/node&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>ORIGINAL_XDG_CURRENT_DESKTOP</td>
          <td class="code"><pre>&#x27;ubuntu:GNOME&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>PATH</td>
          <td class="code"><pre>&#x27;/home/jpfilho/.pyenv/libexec:/home/jpfilho/.pyenv/plugins/python-build/bin:/home/jpfilho/.pyenv/plugins/pyenv-virtualenv/bin:/home/jpfilho/.pyenv/plugins/pyenv-update/bin:/home/jpfilho/.pyenv/plugins/pyenv-doctor/bin:/home/jpfilho/.pyenv/shims:/home/jpfilho/.local/bin:/home/jpfilho/.pyenv/bin:/home/jpfilho/.nvm/versions/node/v18.16.0/bin:/home/jpfilho/.sdkman/candidates/maven/current/bin:/home/jpfilho/.sdkman/candidates/java/current/bin:/home/jpfilho/.local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:/snap/bin&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>PATH_INFO</td>
          <td class="code"><pre>&#x27;/webhook/messages/create&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>PWD</td>
          <td class="code"><pre>&#x27;/home/jpfilho/Documents/code-ws/python/webhook&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>PYENV_DIR</td>
          <td class="code"><pre>&#x27;/home/jpfilho/Documents/code-ws/python/webhook&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>PYENV_HOOK_PATH</td>
          <td class="code"><pre>&#x27;/home/jpfilho/.pyenv/pyenv.d:/usr/local/etc/pyenv.d:/etc/pyenv.d:/usr/lib/pyenv/hooks:/home/jpfilho/.pyenv/plugins/pyenv-virtualenv/etc/pyenv.d&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>PYENV_ROOT</td>
          <td class="code"><pre>&#x27;/home/jpfilho/.pyenv&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>PYENV_SHELL</td>
          <td class="code"><pre>&#x27;bash&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>PYENV_VERSION</td>
          <td class="code"><pre>&#x27;system&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>QT_ACCESSIBILITY</td>
          <td class="code"><pre>&#x27;1&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>QT_IM_MODULE</td>
          <td class="code"><pre>&#x27;ibus&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>QUERY_STRING</td>
          <td class="code"><pre>&#x27;phone=5588988562749&amp;period=05%2F23&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>REMOTE_ADDR</td>
          <td class="code"><pre>&#x27;127.0.0.1&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>REMOTE_HOST</td>
          <td class="code"><pre>&#x27;&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>REQUEST_METHOD</td>
          <td class="code"><pre>&#x27;POST&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>RUN_MAIN</td>
          <td class="code"><pre>&#x27;true&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SCRIPT_NAME</td>
          <td class="code"><pre>&#x27;&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SDKMAN_CANDIDATES_API</td>
          <td class="code"><pre>&#x27;********************&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SDKMAN_CANDIDATES_DIR</td>
          <td class="code"><pre>&#x27;/home/jpfilho/.sdkman/candidates&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SDKMAN_DIR</td>
          <td class="code"><pre>&#x27;/home/jpfilho/.sdkman&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SDKMAN_PLATFORM</td>
          <td class="code"><pre>&#x27;linuxx64&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SDKMAN_VERSION</td>
          <td class="code"><pre>&#x27;5.16.0&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SERVER_NAME</td>
          <td class="code"><pre>&#x27;localhost&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SERVER_PORT</td>
          <td class="code"><pre>&#x27;8000&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SERVER_PROTOCOL</td>
          <td class="code"><pre>&#x27;HTTP/1.1&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SERVER_SOFTWARE</td>
          <td class="code"><pre>&#x27;WSGIServer/0.2&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_MANAGER</td>
          <td class="code"><pre>&#x27;local/JPSERVER:@/tmp/.ICE-unix/2038,unix/JPSERVER:/tmp/.ICE-unix/2038&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SHELL</td>
          <td class="code"><pre>&#x27;/bin/bash&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SHLVL</td>
          <td class="code"><pre>&#x27;1&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SSH_AGENT_LAUNCHER</td>
          <td class="code"><pre>&#x27;openssh&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SSH_AUTH_SOCK</td>
          <td class="code"><pre>&#x27;/run/user/1000/keyring/ssh&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SYSTEMD_EXEC_PID</td>
          <td class="code"><pre>&#x27;2065&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>TERM</td>
          <td class="code"><pre>&#x27;xterm-256color&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>TERM_PROGRAM</td>
          <td class="code"><pre>&#x27;vscode&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>TERM_PROGRAM_VERSION</td>
          <td class="code"><pre>&#x27;1.78.2&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>TOKEN_API</td>
          <td class="code"><pre>&#x27;********************&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>TZ</td>
          <td class="code"><pre>&#x27;UTC&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>USER</td>
          <td class="code"><pre>&#x27;jpfilho&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>USERNAME</td>
          <td class="code"><pre>&#x27;jpfilho&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>VSCODE_GIT_ASKPASS_EXTRA_ARGS</td>
          <td class="code"><pre>&#x27;********************&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>VSCODE_GIT_ASKPASS_MAIN</td>
          <td class="code"><pre>&#x27;********************&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>VSCODE_GIT_ASKPASS_NODE</td>
          <td class="code"><pre>&#x27;********************&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>VSCODE_GIT_IPC_HANDLE</td>
          <td class="code"><pre>&#x27;/run/user/1000/vscode-git-1d8a16cec2.sock&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>WEBHOOK_API</td>
          <td class="code"><pre>&#x27;********************&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>WEB_URL</td>
          <td class="code"><pre>&#x27;https://woz.herokuapp.com&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>WINDOWPATH</td>
          <td class="code"><pre>&#x27;2&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>XAUTHORITY</td>
          <td class="code"><pre>&#x27;/run/user/1000/gdm/Xauthority&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>XDG_CONFIG_DIRS</td>
          <td class="code"><pre>&#x27;/etc/xdg/xdg-ubuntu:/etc/xdg&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>XDG_CURRENT_DESKTOP</td>
          <td class="code"><pre>&#x27;Unity&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>XDG_DATA_DIRS</td>
          <td class="code"><pre>&#x27;/home/jpfilho/snap/code/129/.local/share:/home/jpfilho/snap/code/129:/snap/code/129/usr/share:/usr/share/ubuntu:/usr/share/gnome:/usr/local/share/:/usr/share/:/var/lib/snapd/desktop&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>XDG_MENU_PREFIX</td>
          <td class="code"><pre>&#x27;gnome-&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>XDG_RUNTIME_DIR</td>
          <td class="code"><pre>&#x27;/run/user/1000&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>XDG_SESSION_CLASS</td>
          <td class="code"><pre>&#x27;user&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>XDG_SESSION_DESKTOP</td>
          <td class="code"><pre>&#x27;ubuntu&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>XDG_SESSION_TYPE</td>
          <td class="code"><pre>&#x27;x11&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>XMODIFIERS</td>
          <td class="code"><pre>&#x27;@im=ibus&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>wsgi.errors</td>
          <td class="code"><pre>&lt;_io.TextIOWrapper name=&#x27;&lt;stderr&gt;&#x27; mode=&#x27;w&#x27; encoding=&#x27;utf-8&#x27;&gt;</pre></td>
        </tr>
      
        <tr>
          <td>wsgi.file_wrapper</td>
          <td class="code"><pre>&lt;class &#x27;wsgiref.util.FileWrapper&#x27;&gt;</pre></td>
        </tr>
      
        <tr>
          <td>wsgi.input</td>
          <td class="code"><pre>&lt;django.core.handlers.wsgi.LimitedStream object at 0x7f9ef478baf0&gt;</pre></td>
        </tr>
      
        <tr>
          <td>wsgi.multiprocess</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>wsgi.multithread</td>
          <td class="code"><pre>True</pre></td>
        </tr>
      
        <tr>
          <td>wsgi.run_once</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>wsgi.url_scheme</td>
          <td class="code"><pre>&#x27;http&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>wsgi.version</td>
          <td class="code"><pre>(1, 0)</pre></td>
        </tr>
      
    </tbody>
  </table>


  <h3 id="settings-info">Settings</h3>
  <h4>Using settings module <code>webhook.settings</code></h4>
  <table class="req">
    <thead>
      <tr>
        <th>Setting</th>
        <th>Value</th>
      </tr>
    </thead>
    <tbody>
      
        <tr>
          <td>ABSOLUTE_URL_OVERRIDES</td>
          <td class="code"><pre>{}</pre></td>
        </tr>
      
        <tr>
          <td>ADMINS</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>ALLOWED_HOSTS</td>
          <td class="code"><pre>[&#x27;*&#x27;]</pre></td>
        </tr>
      
        <tr>
          <td>APPEND_SLASH</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>AUTHENTICATION_BACKENDS</td>
          <td class="code"><pre>[&#x27;django.contrib.auth.backends.ModelBackend&#x27;]</pre></td>
        </tr>
      
        <tr>
          <td>AUTH_PASSWORD_VALIDATORS</td>
          <td class="code"><pre>&#x27;********************&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>AUTH_USER_MODEL</td>
          <td class="code"><pre>&#x27;auth.User&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>BASE_DIR</td>
          <td class="code"><pre>PosixPath(&#x27;/home/jpfilho/Documents/code-ws/python/webhook&#x27;)</pre></td>
        </tr>
      
        <tr>
          <td>BROKER_URL</td>
          <td class="code"><pre>&#x27;amqps://kzthoddb:3CziblJY4U4tFRNmARuMMdIDu8z53Ql6@fly.rmq.cloudamqp.com/kzthoddb&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>CACHES</td>
          <td class="code"><pre>{&#x27;default&#x27;: {&#x27;BACKEND&#x27;: &#x27;django.core.cache.backends.locmem.LocMemCache&#x27;}}</pre></td>
        </tr>
      
        <tr>
          <td>CACHE_MIDDLEWARE_ALIAS</td>
          <td class="code"><pre>&#x27;default&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>CACHE_MIDDLEWARE_KEY_PREFIX</td>
          <td class="code"><pre>&#x27;********************&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>CACHE_MIDDLEWARE_SECONDS</td>
          <td class="code"><pre>600</pre></td>
        </tr>
      
        <tr>
          <td>CELERY_BROKER_URL</td>
          <td class="code"><pre>&#x27;amqps://kzthoddb:3CziblJY4U4tFRNmARuMMdIDu8z53Ql6@fly.rmq.cloudamqp.com/kzthoddb&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>CSRF_COOKIE_AGE</td>
          <td class="code"><pre>31449600</pre></td>
        </tr>
      
        <tr>
          <td>CSRF_COOKIE_DOMAIN</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>CSRF_COOKIE_HTTPONLY</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>CSRF_COOKIE_MASKED</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>CSRF_COOKIE_NAME</td>
          <td class="code"><pre>&#x27;csrftoken&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>CSRF_COOKIE_PATH</td>
          <td class="code"><pre>&#x27;/&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>CSRF_COOKIE_SAMESITE</td>
          <td class="code"><pre>&#x27;Lax&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>CSRF_COOKIE_SECURE</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>CSRF_FAILURE_VIEW</td>
          <td class="code"><pre>&#x27;django.views.csrf.csrf_failure&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>CSRF_HEADER_NAME</td>
          <td class="code"><pre>&#x27;HTTP_X_CSRFTOKEN&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>CSRF_TRUSTED_ORIGINS</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>CSRF_USE_SESSIONS</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>DATABASES</td>
          <td class="code"><pre>{&#x27;default&#x27;: {&#x27;ATOMIC_REQUESTS&#x27;: False,
             &#x27;AUTOCOMMIT&#x27;: True,
             &#x27;CONN_HEALTH_CHECKS&#x27;: False,
             &#x27;CONN_MAX_AGE&#x27;: 0,
             &#x27;ENGINE&#x27;: &#x27;django.db.backends.postgresql&#x27;,
             &#x27;HOST&#x27;: &#x27;ep-young-feather-699075.us-east-1.aws.neon.tech&#x27;,
             &#x27;NAME&#x27;: &#x27;neondb&#x27;,
             &#x27;OPTIONS&#x27;: {},
             &#x27;PASSWORD&#x27;: &#x27;********************&#x27;,
             &#x27;PORT&#x27;: &#x27;5432&#x27;,
             &#x27;TEST&#x27;: {&#x27;CHARSET&#x27;: None,
                      &#x27;COLLATION&#x27;: None,
                      &#x27;MIGRATE&#x27;: True,
                      &#x27;MIRROR&#x27;: None,
                      &#x27;NAME&#x27;: None},
             &#x27;TIME_ZONE&#x27;: None,
             &#x27;USER&#x27;: &#x27;psousaj&#x27;}}</pre></td>
        </tr>
      
        <tr>
          <td>DATABASE_ROUTERS</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>DATA_UPLOAD_MAX_MEMORY_SIZE</td>
          <td class="code"><pre>2621440</pre></td>
        </tr>
      
        <tr>
          <td>DATA_UPLOAD_MAX_NUMBER_FIELDS</td>
          <td class="code"><pre>1000</pre></td>
        </tr>
      
        <tr>
          <td>DATA_UPLOAD_MAX_NUMBER_FILES</td>
          <td class="code"><pre>100</pre></td>
        </tr>
      
        <tr>
          <td>DATETIME_FORMAT</td>
          <td class="code"><pre>&#x27;N j, Y, P&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>DATETIME_INPUT_FORMATS</td>
          <td class="code"><pre>[&#x27;%Y-%m-%d %H:%M:%S&#x27;,
 &#x27;%Y-%m-%d %H:%M:%S.%f&#x27;,
 &#x27;%Y-%m-%d %H:%M&#x27;,
 &#x27;%m/%d/%Y %H:%M:%S&#x27;,
 &#x27;%m/%d/%Y %H:%M:%S.%f&#x27;,
 &#x27;%m/%d/%Y %H:%M&#x27;,
 &#x27;%m/%d/%y %H:%M:%S&#x27;,
 &#x27;%m/%d/%y %H:%M:%S.%f&#x27;,
 &#x27;%m/%d/%y %H:%M&#x27;]</pre></td>
        </tr>
      
        <tr>
          <td>DATE_FORMAT</td>
          <td class="code"><pre>&#x27;N j, Y&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>DATE_INPUT_FORMATS</td>
          <td class="code"><pre>[&#x27;%Y-%m-%d&#x27;,
 &#x27;%m/%d/%Y&#x27;,
 &#x27;%m/%d/%y&#x27;,
 &#x27;%b %d %Y&#x27;,
 &#x27;%b %d, %Y&#x27;,
 &#x27;%d %b %Y&#x27;,
 &#x27;%d %b, %Y&#x27;,
 &#x27;%B %d %Y&#x27;,
 &#x27;%B %d, %Y&#x27;,
 &#x27;%d %B %Y&#x27;,
 &#x27;%d %B, %Y&#x27;]</pre></td>
        </tr>
      
        <tr>
          <td>DEBUG</td>
          <td class="code"><pre>True</pre></td>
        </tr>
      
        <tr>
          <td>DEBUG_PROPAGATE_EXCEPTIONS</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>DECIMAL_SEPARATOR</td>
          <td class="code"><pre>&#x27;.&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>DEFAULT_AUTO_FIELD</td>
          <td class="code"><pre>&#x27;django.db.models.BigAutoField&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>DEFAULT_CHARSET</td>
          <td class="code"><pre>&#x27;utf-8&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>DEFAULT_EXCEPTION_REPORTER</td>
          <td class="code"><pre>&#x27;django.views.debug.ExceptionReporter&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>DEFAULT_EXCEPTION_REPORTER_FILTER</td>
          <td class="code"><pre>&#x27;django.views.debug.SafeExceptionReporterFilter&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>DEFAULT_FILE_STORAGE</td>
          <td class="code"><pre>&#x27;django.core.files.storage.FileSystemStorage&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>DEFAULT_FROM_EMAIL</td>
          <td class="code"><pre>&#x27;webmaster@localhost&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>DEFAULT_INDEX_TABLESPACE</td>
          <td class="code"><pre>&#x27;&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>DEFAULT_TABLESPACE</td>
          <td class="code"><pre>&#x27;&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>DISALLOWED_USER_AGENTS</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>EMAIL_BACKEND</td>
          <td class="code"><pre>&#x27;django.core.mail.backends.smtp.EmailBackend&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>EMAIL_HOST</td>
          <td class="code"><pre>&#x27;localhost&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>EMAIL_HOST_PASSWORD</td>
          <td class="code"><pre>&#x27;********************&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>EMAIL_HOST_USER</td>
          <td class="code"><pre>&#x27;&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>EMAIL_PORT</td>
          <td class="code"><pre>25</pre></td>
        </tr>
      
        <tr>
          <td>EMAIL_SSL_CERTFILE</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>EMAIL_SSL_KEYFILE</td>
          <td class="code"><pre>&#x27;********************&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>EMAIL_SUBJECT_PREFIX</td>
          <td class="code"><pre>&#x27;[Django] &#x27;</pre></td>
        </tr>
      
        <tr>
          <td>EMAIL_TIMEOUT</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>EMAIL_USE_LOCALTIME</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>EMAIL_USE_SSL</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>EMAIL_USE_TLS</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>FILE_UPLOAD_DIRECTORY_PERMISSIONS</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>FILE_UPLOAD_HANDLERS</td>
          <td class="code"><pre>[&#x27;django.core.files.uploadhandler.MemoryFileUploadHandler&#x27;,
 &#x27;django.core.files.uploadhandler.TemporaryFileUploadHandler&#x27;]</pre></td>
        </tr>
      
        <tr>
          <td>FILE_UPLOAD_MAX_MEMORY_SIZE</td>
          <td class="code"><pre>2621440</pre></td>
        </tr>
      
        <tr>
          <td>FILE_UPLOAD_PERMISSIONS</td>
          <td class="code"><pre>420</pre></td>
        </tr>
      
        <tr>
          <td>FILE_UPLOAD_TEMP_DIR</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>FIRST_DAY_OF_WEEK</td>
          <td class="code"><pre>0</pre></td>
        </tr>
      
        <tr>
          <td>FIXTURE_DIRS</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>FORCE_SCRIPT_NAME</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>FORMAT_MODULE_PATH</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>FORM_RENDERER</td>
          <td class="code"><pre>&#x27;django.forms.renderers.DjangoTemplates&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>IGNORABLE_404_URLS</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>INSTALLED_APPS</td>
          <td class="code"><pre>[&#x27;django.contrib.admin&#x27;,
 &#x27;django.contrib.auth&#x27;,
 &#x27;django.contrib.contenttypes&#x27;,
 &#x27;django.contrib.sessions&#x27;,
 &#x27;django.contrib.messages&#x27;,
 &#x27;django.contrib.staticfiles&#x27;,
 &#x27;drf_yasg&#x27;,
 &#x27;rest_framework&#x27;,
 &#x27;example&#x27;,
 &#x27;messages_api&#x27;,
 &#x27;celery&#x27;,
 &#x27;django_filters&#x27;]</pre></td>
        </tr>
      
        <tr>
          <td>INTERNAL_IPS</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>LANGUAGES</td>
          <td class="code"><pre>[(&#x27;af&#x27;, &#x27;Afrikaans&#x27;),
 (&#x27;ar&#x27;, &#x27;Arabic&#x27;),
 (&#x27;ar-dz&#x27;, &#x27;Algerian Arabic&#x27;),
 (&#x27;ast&#x27;, &#x27;Asturian&#x27;),
 (&#x27;az&#x27;, &#x27;Azerbaijani&#x27;),
 (&#x27;bg&#x27;, &#x27;Bulgarian&#x27;),
 (&#x27;be&#x27;, &#x27;Belarusian&#x27;),
 (&#x27;bn&#x27;, &#x27;Bengali&#x27;),
 (&#x27;br&#x27;, &#x27;Breton&#x27;),
 (&#x27;bs&#x27;, &#x27;Bosnian&#x27;),
 (&#x27;ca&#x27;, &#x27;Catalan&#x27;),
 (&#x27;ckb&#x27;, &#x27;Central Kurdish (Sorani)&#x27;),
 (&#x27;cs&#x27;, &#x27;Czech&#x27;),
 (&#x27;cy&#x27;, &#x27;Welsh&#x27;),
 (&#x27;da&#x27;, &#x27;Danish&#x27;),
 (&#x27;de&#x27;, &#x27;German&#x27;),
 (&#x27;dsb&#x27;, &#x27;Lower Sorbian&#x27;),
 (&#x27;el&#x27;, &#x27;Greek&#x27;),
 (&#x27;en&#x27;, &#x27;English&#x27;),
 (&#x27;en-au&#x27;, &#x27;Australian English&#x27;),
 (&#x27;en-gb&#x27;, &#x27;British English&#x27;),
 (&#x27;eo&#x27;, &#x27;Esperanto&#x27;),
 (&#x27;es&#x27;, &#x27;Spanish&#x27;),
 (&#x27;es-ar&#x27;, &#x27;Argentinian Spanish&#x27;),
 (&#x27;es-co&#x27;, &#x27;Colombian Spanish&#x27;),
 (&#x27;es-mx&#x27;, &#x27;Mexican Spanish&#x27;),
 (&#x27;es-ni&#x27;, &#x27;Nicaraguan Spanish&#x27;),
 (&#x27;es-ve&#x27;, &#x27;Venezuelan Spanish&#x27;),
 (&#x27;et&#x27;, &#x27;Estonian&#x27;),
 (&#x27;eu&#x27;, &#x27;Basque&#x27;),
 (&#x27;fa&#x27;, &#x27;Persian&#x27;),
 (&#x27;fi&#x27;, &#x27;Finnish&#x27;),
 (&#x27;fr&#x27;, &#x27;French&#x27;),
 (&#x27;fy&#x27;, &#x27;Frisian&#x27;),
 (&#x27;ga&#x27;, &#x27;Irish&#x27;),
 (&#x27;gd&#x27;, &#x27;Scottish Gaelic&#x27;),
 (&#x27;gl&#x27;, &#x27;Galician&#x27;),
 (&#x27;he&#x27;, &#x27;Hebrew&#x27;),
 (&#x27;hi&#x27;, &#x27;Hindi&#x27;),
 (&#x27;hr&#x27;, &#x27;Croatian&#x27;),
 (&#x27;hsb&#x27;, &#x27;Upper Sorbian&#x27;),
 (&#x27;hu&#x27;, &#x27;Hungarian&#x27;),
 (&#x27;hy&#x27;, &#x27;Armenian&#x27;),
 (&#x27;ia&#x27;, &#x27;Interlingua&#x27;),
 (&#x27;id&#x27;, &#x27;Indonesian&#x27;),
 (&#x27;ig&#x27;, &#x27;Igbo&#x27;),
 (&#x27;io&#x27;, &#x27;Ido&#x27;),
 (&#x27;is&#x27;, &#x27;Icelandic&#x27;),
 (&#x27;it&#x27;, &#x27;Italian&#x27;),
 (&#x27;ja&#x27;, &#x27;Japanese&#x27;),
 (&#x27;ka&#x27;, &#x27;Georgian&#x27;),
 (&#x27;kab&#x27;, &#x27;Kabyle&#x27;),
 (&#x27;kk&#x27;, &#x27;Kazakh&#x27;),
 (&#x27;km&#x27;, &#x27;Khmer&#x27;),
 (&#x27;kn&#x27;, &#x27;Kannada&#x27;),
 (&#x27;ko&#x27;, &#x27;Korean&#x27;),
 (&#x27;ky&#x27;, &#x27;Kyrgyz&#x27;),
 (&#x27;lb&#x27;, &#x27;Luxembourgish&#x27;),
 (&#x27;lt&#x27;, &#x27;Lithuanian&#x27;),
 (&#x27;lv&#x27;, &#x27;Latvian&#x27;),
 (&#x27;mk&#x27;, &#x27;Macedonian&#x27;),
 (&#x27;ml&#x27;, &#x27;Malayalam&#x27;),
 (&#x27;mn&#x27;, &#x27;Mongolian&#x27;),
 (&#x27;mr&#x27;, &#x27;Marathi&#x27;),
 (&#x27;ms&#x27;, &#x27;Malay&#x27;),
 (&#x27;my&#x27;, &#x27;Burmese&#x27;),
 (&#x27;nb&#x27;, &#x27;Norwegian Bokmål&#x27;),
 (&#x27;ne&#x27;, &#x27;Nepali&#x27;),
 (&#x27;nl&#x27;, &#x27;Dutch&#x27;),
 (&#x27;nn&#x27;, &#x27;Norwegian Nynorsk&#x27;),
 (&#x27;os&#x27;, &#x27;Ossetic&#x27;),
 (&#x27;pa&#x27;, &#x27;Punjabi&#x27;),
 (&#x27;pl&#x27;, &#x27;Polish&#x27;),
 (&#x27;pt&#x27;, &#x27;Portuguese&#x27;),
 (&#x27;pt-br&#x27;, &#x27;Brazilian Portuguese&#x27;),
 (&#x27;ro&#x27;, &#x27;Romanian&#x27;),
 (&#x27;ru&#x27;, &#x27;Russian&#x27;),
 (&#x27;sk&#x27;, &#x27;Slovak&#x27;),
 (&#x27;sl&#x27;, &#x27;Slovenian&#x27;),
 (&#x27;sq&#x27;, &#x27;Albanian&#x27;),
 (&#x27;sr&#x27;, &#x27;Serbian&#x27;),
 (&#x27;sr-latn&#x27;, &#x27;Serbian Latin&#x27;),
 (&#x27;sv&#x27;, &#x27;Swedish&#x27;),
 (&#x27;sw&#x27;, &#x27;Swahili&#x27;),
 (&#x27;ta&#x27;, &#x27;Tamil&#x27;),
 (&#x27;te&#x27;, &#x27;Telugu&#x27;),
 (&#x27;tg&#x27;, &#x27;Tajik&#x27;),
 (&#x27;th&#x27;, &#x27;Thai&#x27;),
 (&#x27;tk&#x27;, &#x27;Turkmen&#x27;),
 (&#x27;tr&#x27;, &#x27;Turkish&#x27;),
 (&#x27;tt&#x27;, &#x27;Tatar&#x27;),
 (&#x27;udm&#x27;, &#x27;Udmurt&#x27;),
 (&#x27;uk&#x27;, &#x27;Ukrainian&#x27;),
 (&#x27;ur&#x27;, &#x27;Urdu&#x27;),
 (&#x27;uz&#x27;, &#x27;Uzbek&#x27;),
 (&#x27;vi&#x27;, &#x27;Vietnamese&#x27;),
 (&#x27;zh-hans&#x27;, &#x27;Simplified Chinese&#x27;),
 (&#x27;zh-hant&#x27;, &#x27;Traditional Chinese&#x27;)]</pre></td>
        </tr>
      
        <tr>
          <td>LANGUAGES_BIDI</td>
          <td class="code"><pre>[&#x27;he&#x27;, &#x27;ar&#x27;, &#x27;ar-dz&#x27;, &#x27;ckb&#x27;, &#x27;fa&#x27;, &#x27;ur&#x27;]</pre></td>
        </tr>
      
        <tr>
          <td>LANGUAGE_CODE</td>
          <td class="code"><pre>&#x27;pt-BR&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>LANGUAGE_COOKIE_AGE</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>LANGUAGE_COOKIE_DOMAIN</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>LANGUAGE_COOKIE_HTTPONLY</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>LANGUAGE_COOKIE_NAME</td>
          <td class="code"><pre>&#x27;django_language&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>LANGUAGE_COOKIE_PATH</td>
          <td class="code"><pre>&#x27;/&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>LANGUAGE_COOKIE_SAMESITE</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>LANGUAGE_COOKIE_SECURE</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>LOCALE_PATHS</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>LOGGING</td>
          <td class="code"><pre>{}</pre></td>
        </tr>
      
        <tr>
          <td>LOGGING_CONFIG</td>
          <td class="code"><pre>&#x27;logging.config.dictConfig&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>LOGIN_REDIRECT_URL</td>
          <td class="code"><pre>&#x27;/accounts/profile/&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>LOGIN_URL</td>
          <td class="code"><pre>&#x27;/accounts/login/&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>LOGOUT_REDIRECT_URL</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>MANAGERS</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>MEDIA_ROOT</td>
          <td class="code"><pre>&#x27;&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>MEDIA_URL</td>
          <td class="code"><pre>&#x27;/&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>MESSAGE_STORAGE</td>
          <td class="code"><pre>&#x27;django.contrib.messages.storage.fallback.FallbackStorage&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>MIDDLEWARE</td>
          <td class="code"><pre>[&#x27;django.middleware.security.SecurityMiddleware&#x27;,
 &#x27;django.contrib.sessions.middleware.SessionMiddleware&#x27;,
 &#x27;django.middleware.common.CommonMiddleware&#x27;,
 &#x27;django.middleware.csrf.CsrfViewMiddleware&#x27;,
 &#x27;django.contrib.auth.middleware.AuthenticationMiddleware&#x27;,
 &#x27;django.contrib.messages.middleware.MessageMiddleware&#x27;,
 &#x27;django.middleware.clickjacking.XFrameOptionsMiddleware&#x27;]</pre></td>
        </tr>
      
        <tr>
          <td>MIGRATION_MODULES</td>
          <td class="code"><pre>{}</pre></td>
        </tr>
      
        <tr>
          <td>MONTH_DAY_FORMAT</td>
          <td class="code"><pre>&#x27;F j&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>NUMBER_GROUPING</td>
          <td class="code"><pre>0</pre></td>
        </tr>
      
        <tr>
          <td>PASSWORD_HASHERS</td>
          <td class="code"><pre>&#x27;********************&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>PASSWORD_RESET_TIMEOUT</td>
          <td class="code"><pre>&#x27;********************&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>PREPEND_WWW</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>ROOT_URLCONF</td>
          <td class="code"><pre>&#x27;webhook.urls&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SECRET_KEY</td>
          <td class="code"><pre>&#x27;********************&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SECRET_KEY_FALLBACKS</td>
          <td class="code"><pre>&#x27;********************&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SECURE_CONTENT_TYPE_NOSNIFF</td>
          <td class="code"><pre>True</pre></td>
        </tr>
      
        <tr>
          <td>SECURE_CROSS_ORIGIN_OPENER_POLICY</td>
          <td class="code"><pre>&#x27;same-origin&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SECURE_HSTS_INCLUDE_SUBDOMAINS</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>SECURE_HSTS_PRELOAD</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>SECURE_HSTS_SECONDS</td>
          <td class="code"><pre>0</pre></td>
        </tr>
      
        <tr>
          <td>SECURE_PROXY_SSL_HEADER</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>SECURE_REDIRECT_EXEMPT</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>SECURE_REFERRER_POLICY</td>
          <td class="code"><pre>&#x27;same-origin&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SECURE_SSL_HOST</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>SECURE_SSL_REDIRECT</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>SERVER_EMAIL</td>
          <td class="code"><pre>&#x27;root@localhost&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_CACHE_ALIAS</td>
          <td class="code"><pre>&#x27;default&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_COOKIE_AGE</td>
          <td class="code"><pre>1209600</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_COOKIE_DOMAIN</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_COOKIE_HTTPONLY</td>
          <td class="code"><pre>True</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_COOKIE_NAME</td>
          <td class="code"><pre>&#x27;sessionid&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_COOKIE_PATH</td>
          <td class="code"><pre>&#x27;/&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_COOKIE_SAMESITE</td>
          <td class="code"><pre>&#x27;Lax&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_COOKIE_SECURE</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_ENGINE</td>
          <td class="code"><pre>&#x27;django.contrib.sessions.backends.db&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_EXPIRE_AT_BROWSER_CLOSE</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_FILE_PATH</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_SAVE_EVERY_REQUEST</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_SERIALIZER</td>
          <td class="code"><pre>&#x27;django.contrib.sessions.serializers.JSONSerializer&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SETTINGS_MODULE</td>
          <td class="code"><pre>&#x27;webhook.settings&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SHORT_DATETIME_FORMAT</td>
          <td class="code"><pre>&#x27;m/d/Y P&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SHORT_DATE_FORMAT</td>
          <td class="code"><pre>&#x27;m/d/Y&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SIGNING_BACKEND</td>
          <td class="code"><pre>&#x27;django.core.signing.TimestampSigner&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SILENCED_SYSTEM_CHECKS</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>STATICFILES_DIRS</td>
          <td class="code"><pre>[&#x27;/home/jpfilho/Documents/code-ws/python/webhook/statics&#x27;]</pre></td>
        </tr>
      
        <tr>
          <td>STATICFILES_FINDERS</td>
          <td class="code"><pre>[&#x27;django.contrib.staticfiles.finders.FileSystemFinder&#x27;,
 &#x27;django.contrib.staticfiles.finders.AppDirectoriesFinder&#x27;]</pre></td>
        </tr>
      
        <tr>
          <td>STATICFILES_STORAGE</td>
          <td class="code"><pre>&#x27;django.contrib.staticfiles.storage.StaticFilesStorage&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>STATIC_ROOT</td>
          <td class="code"><pre>&#x27;/home/jpfilho/Documents/code-ws/python/webhook/static&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>STATIC_URL</td>
          <td class="code"><pre>&#x27;/static/&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>STORAGES</td>
          <td class="code"><pre>{&#x27;default&#x27;: {&#x27;BACKEND&#x27;: &#x27;django.core.files.storage.FileSystemStorage&#x27;},
 &#x27;staticfiles&#x27;: {&#x27;BACKEND&#x27;: &#x27;django.contrib.staticfiles.storage.StaticFilesStorage&#x27;}}</pre></td>
        </tr>
      
        <tr>
          <td>TEMPLATES</td>
          <td class="code"><pre>[{&#x27;APP_DIRS&#x27;: True,
  &#x27;BACKEND&#x27;: &#x27;django.template.backends.django.DjangoTemplates&#x27;,
  &#x27;DIRS&#x27;: [],
  &#x27;OPTIONS&#x27;: {&#x27;context_processors&#x27;: [&#x27;django.template.context_processors.debug&#x27;,
                                     &#x27;django.template.context_processors.request&#x27;,
                                     &#x27;django.contrib.auth.context_processors.auth&#x27;,
                                     &#x27;django.contrib.messages.context_processors.messages&#x27;]}}]</pre></td>
        </tr>
      
        <tr>
          <td>TEST_NON_SERIALIZED_APPS</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>TEST_RUNNER</td>
          <td class="code"><pre>&#x27;django.test.runner.DiscoverRunner&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>THOUSAND_SEPARATOR</td>
          <td class="code"><pre>&#x27;,&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>TIME_FORMAT</td>
          <td class="code"><pre>&#x27;P&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>TIME_INPUT_FORMATS</td>
          <td class="code"><pre>[&#x27;%H:%M:%S&#x27;, &#x27;%H:%M:%S.%f&#x27;, &#x27;%H:%M&#x27;]</pre></td>
        </tr>
      
        <tr>
          <td>TIME_ZONE</td>
          <td class="code"><pre>&#x27;UTC&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>USE_DEPRECATED_PYTZ</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>USE_I18N</td>
          <td class="code"><pre>True</pre></td>
        </tr>
      
        <tr>
          <td>USE_L10N</td>
          <td class="code"><pre>True</pre></td>
        </tr>
      
        <tr>
          <td>USE_THOUSAND_SEPARATOR</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>USE_TZ</td>
          <td class="code"><pre>True</pre></td>
        </tr>
      
        <tr>
          <td>USE_X_FORWARDED_HOST</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>USE_X_FORWARDED_PORT</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>WSGI_APPLICATION</td>
          <td class="code"><pre>&#x27;webhook.wsgi.app&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>X_FRAME_OPTIONS</td>
          <td class="code"><pre>&#x27;DENY&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>YEAR_MONTH_FORMAT</td>
          <td class="code"><pre>&#x27;F Y&#x27;</pre></td>
        </tr>
      
    </tbody>
  </table>

</div>

  <div id="explanation">
    <p>
      You’re seeing this error because you have <code>DEBUG = True</code> in your
      Django settings file. Change that to <code>False</code>, and Django will
      display a standard page generated by the handler for this status code.
    </p>
  </div>

</body>
</html>

21/05/2023|23:59:43 - webhook.views -INFO- Received webhook request
{'event': 'message.created', 'data': {'id': '8890a8bf-48f7-4f23-93cf-0b72e91178de', 'isFromMe': True, 'sent': True, 'type': 'chat', 'timestamp': '2023-05-21T23:59:41.000Z', 'data': {'ack': 0, 'isNew': True, 'isFirst': False}, 'visible': True, 'accountId': '966b70ba-27d8-43ae-a295-35e59f0007be', 'contactId': '79db7607-6088-44c1-a010-ed4ef39d4f37', 'fromId': 'e12d3a56-0c52-43ac-b33c-15c399eb06d4', 'serviceId': '83108c28-14f7-4646-acb8-dab165397fd5', 'toId': None, 'userId': '3f4cc332-516e-4f48-aff2-df6eaa2e5034', 'ticketId': 'e5a453e9-6cb1-476e-b416-3b334b0bc61a', 'ticketUserId': None, 'ticketDepartmentId': None, 'quotedMessageId': None, 'origin': 'user', 'hsmId': None, 'text': 'tururu', 'obfuscated': False, 'files': None, 'quotedMessage': None, 'isFromBot': False}, 'webhookId': '27b4c18d-2ab0-4c70-a592-46bbe7e00bc8', 'timestamp': '2023-05-21T23:59:42.253Z'}
21/05/2023|23:59:43 - webhook.views -INFO- Received webhook request
{'event': 'message.updated', 'data': {'id': '8890a8bf-48f7-4f23-93cf-0b72e91178de', 'isFromMe': True, 'sent': True, 'type': 'chat', 'timestamp': '2023-05-21T23:59:41.000Z', 'data': {'ack': 1, 'isNew': True, 'isFirst': False}, 'visible': True, 'accountId': '966b70ba-27d8-43ae-a295-35e59f0007be', 'contactId': '79db7607-6088-44c1-a010-ed4ef39d4f37', 'fromId': 'e12d3a56-0c52-43ac-b33c-15c399eb06d4', 'serviceId': '83108c28-14f7-4646-acb8-dab165397fd5', 'toId': None, 'userId': '3f4cc332-516e-4f48-aff2-df6eaa2e5034', 'ticketId': 'e5a453e9-6cb1-476e-b416-3b334b0bc61a', 'ticketUserId': '3f4cc332-516e-4f48-aff2-df6eaa2e5034', 'ticketDepartmentId': 'a78046d7-809d-4cdb-a72a-31dfbc47d862', 'quotedMessageId': None, 'origin': 'user', 'hsmId': None, 'text': 'tururu', 'obfuscated': False, 'files': None, 'quotedMessage': None, 'isFromBot': False}, 'webhookId': '27b4c18d-2ab0-4c70-a592-46bbe7e00bc8', 'timestamp': '2023-05-21T23:59:42.346Z'}
21/05/2023|23:59:43 - webhook.views -INFO- Received webhook request
{'event': 'message.updated', 'data': {'id': '8890a8bf-48f7-4f23-93cf-0b72e91178de', 'isFromMe': True, 'sent': True, 'type': 'chat', 'timestamp': '2023-05-21T23:59:41.000Z', 'data': {'ack': 3, 'isNew': True, 'isFirst': False}, 'visible': True, 'accountId': '966b70ba-27d8-43ae-a295-35e59f0007be', 'contactId': '79db7607-6088-44c1-a010-ed4ef39d4f37', 'fromId': 'e12d3a56-0c52-43ac-b33c-15c399eb06d4', 'serviceId': '83108c28-14f7-4646-acb8-dab165397fd5', 'toId': None, 'userId': '3f4cc332-516e-4f48-aff2-df6eaa2e5034', 'ticketId': 'e5a453e9-6cb1-476e-b416-3b334b0bc61a', 'ticketUserId': '3f4cc332-516e-4f48-aff2-df6eaa2e5034', 'ticketDepartmentId': 'a78046d7-809d-4cdb-a72a-31dfbc47d862', 'quotedMessageId': None, 'origin': 'user', 'hsmId': None, 'text': 'tururu', 'obfuscated': False, 'files': None, 'quotedMessage': None, 'isFromBot': False}, 'webhookId': '27b4c18d-2ab0-4c70-a592-46bbe7e00bc8', 'timestamp': '2023-05-21T23:59:42.568Z'}
21/05/2023|23:59:46 - messages_api.event -DEBUG- <Response [400]>-{"error":400,"message":"Message matching query does not exist."}
21/05/2023|23:59:49 - messages_api.event -DEBUG- <Response [400]>-{"error":400,"message":"Message matching query does not exist."}
22/05/2023|00:00:48 - messages_api.event -DEBUG- <Response [400]>-{"error":400,"message":"Message matching query does not exist."}
22/05/2023|00:00:50 - messages_api.event -DEBUG- <Response [400]>-{"error":400,"message":"Message matching query does not exist."}
22/05/2023|00:01:49 - messages_api.event -DEBUG- <Response [400]>-{"error":400,"message":"Message matching query does not exist."}
22/05/2023|00:01:52 - messages_api.event -DEBUG- <Response [400]>-{"error":400,"message":"Message matching query does not exist."}
22/05/2023|00:02:50 - messages_api.event -DEBUG- <Response [400]>-{"error":400,"message":"Message matching query does not exist."}
22/05/2023|00:02:53 - messages_api.event -DEBUG- <Response [400]>-{"error":400,"message":"Message matching query does not exist."}
22/05/2023|00:18:03 - webhook.views -INFO- Received webhook request
{'event': 'message.created', 'data': {'id': '6e85ac23-783c-47f4-ba7f-e98ecd0226f3', 'isFromMe': True, 'sent': True, 'type': 'chat', 'timestamp': '2023-05-22T00:18:01.000Z', 'data': {'ack': 0, 'isNew': True, 'isFirst': False}, 'visible': True, 'accountId': '966b70ba-27d8-43ae-a295-35e59f0007be', 'contactId': '79db7607-6088-44c1-a010-ed4ef39d4f37', 'fromId': 'e12d3a56-0c52-43ac-b33c-15c399eb06d4', 'serviceId': '83108c28-14f7-4646-acb8-dab165397fd5', 'toId': None, 'userId': '3f4cc332-516e-4f48-aff2-df6eaa2e5034', 'ticketId': 'e5a453e9-6cb1-476e-b416-3b334b0bc61a', 'ticketUserId': None, 'ticketDepartmentId': None, 'quotedMessageId': None, 'origin': 'user', 'hsmId': None, 'text': 'M', 'obfuscated': False, 'files': None, 'quotedMessage': None, 'isFromBot': False}, 'webhookId': '27b4c18d-2ab0-4c70-a592-46bbe7e00bc8', 'timestamp': '2023-05-22T00:18:02.050Z'}
22/05/2023|00:18:03 - webhook.views -INFO- Received webhook request
{'event': 'message.updated', 'data': {'id': '6e85ac23-783c-47f4-ba7f-e98ecd0226f3', 'isFromMe': True, 'sent': True, 'type': 'chat', 'timestamp': '2023-05-22T00:18:01.000Z', 'data': {'ack': 2, 'isNew': True, 'isFirst': False}, 'visible': True, 'accountId': '966b70ba-27d8-43ae-a295-35e59f0007be', 'contactId': '79db7607-6088-44c1-a010-ed4ef39d4f37', 'fromId': 'e12d3a56-0c52-43ac-b33c-15c399eb06d4', 'serviceId': '83108c28-14f7-4646-acb8-dab165397fd5', 'toId': None, 'userId': '3f4cc332-516e-4f48-aff2-df6eaa2e5034', 'ticketId': 'e5a453e9-6cb1-476e-b416-3b334b0bc61a', 'ticketUserId': '3f4cc332-516e-4f48-aff2-df6eaa2e5034', 'ticketDepartmentId': 'a78046d7-809d-4cdb-a72a-31dfbc47d862', 'quotedMessageId': None, 'origin': 'user', 'hsmId': None, 'text': 'M', 'obfuscated': False, 'files': None, 'quotedMessage': None, 'isFromBot': False}, 'webhookId': '27b4c18d-2ab0-4c70-a592-46bbe7e00bc8', 'timestamp': '2023-05-22T00:18:02.346Z'}
22/05/2023|00:18:03 - webhook.views -INFO- Received webhook request
{'event': 'message.updated', 'data': {'id': '6e85ac23-783c-47f4-ba7f-e98ecd0226f3', 'isFromMe': True, 'sent': True, 'type': 'chat', 'timestamp': '2023-05-22T00:18:01.000Z', 'data': {'ack': 1, 'isNew': True, 'isFirst': False}, 'visible': True, 'accountId': '966b70ba-27d8-43ae-a295-35e59f0007be', 'contactId': '79db7607-6088-44c1-a010-ed4ef39d4f37', 'fromId': 'e12d3a56-0c52-43ac-b33c-15c399eb06d4', 'serviceId': '83108c28-14f7-4646-acb8-dab165397fd5', 'toId': None, 'userId': '3f4cc332-516e-4f48-aff2-df6eaa2e5034', 'ticketId': 'e5a453e9-6cb1-476e-b416-3b334b0bc61a', 'ticketUserId': '3f4cc332-516e-4f48-aff2-df6eaa2e5034', 'ticketDepartmentId': 'a78046d7-809d-4cdb-a72a-31dfbc47d862', 'quotedMessageId': None, 'origin': 'user', 'hsmId': None, 'text': 'M', 'obfuscated': False, 'files': None, 'quotedMessage': None, 'isFromBot': False}, 'webhookId': '27b4c18d-2ab0-4c70-a592-46bbe7e00bc8', 'timestamp': '2023-05-22T00:18:02.168Z'}
22/05/2023|00:18:06 - messages_api.event -DEBUG- <Response [400]>-{"error":400,"message":"Message matching query does not exist."}
22/05/2023|00:18:08 - messages_api.event -DEBUG- <Response [400]>-{"error":400,"message":"Message matching query does not exist."}
22/05/2023|00:19:07 - messages_api.event -DEBUG- <Response [400]>-{"error":400,"message":"Message matching query does not exist."}
22/05/2023|00:19:10 - messages_api.event -DEBUG- <Response [400]>-{"error":400,"message":"Message matching query does not exist."}
22/05/2023|00:19:45 - webhook.views -INFO- Received webhook request
{'event': 'message.created', 'data': {'id': '3428e2a8-c7f8-4f51-8d30-30e2835ab4db', 'isFromMe': True, 'sent': True, 'type': 'chat', 'timestamp': '2023-05-22T00:19:43.000Z', 'data': {'ack': 0, 'isNew': True, 'isFirst': False}, 'visible': True, 'accountId': '966b70ba-27d8-43ae-a295-35e59f0007be', 'contactId': '79db7607-6088-44c1-a010-ed4ef39d4f37', 'fromId': 'e12d3a56-0c52-43ac-b33c-15c399eb06d4', 'serviceId': '83108c28-14f7-4646-acb8-dab165397fd5', 'toId': None, 'userId': '3f4cc332-516e-4f48-aff2-df6eaa2e5034', 'ticketId': 'e5a453e9-6cb1-476e-b416-3b334b0bc61a', 'ticketUserId': None, 'ticketDepartmentId': None, 'quotedMessageId': None, 'origin': 'user', 'hsmId': None, 'text': 'E', 'obfuscated': False, 'files': None, 'quotedMessage': None, 'isFromBot': False}, 'webhookId': '27b4c18d-2ab0-4c70-a592-46bbe7e00bc8', 'timestamp': '2023-05-22T00:19:44.926Z'}
22/05/2023|00:19:45 - webhook.views -INFO- Received webhook request
{'event': 'message.updated', 'data': {'id': '3428e2a8-c7f8-4f51-8d30-30e2835ab4db', 'isFromMe': True, 'sent': True, 'type': 'chat', 'timestamp': '2023-05-22T00:19:43.000Z', 'data': {'ack': 1, 'isNew': True, 'isFirst': False}, 'visible': True, 'accountId': '966b70ba-27d8-43ae-a295-35e59f0007be', 'contactId': '79db7607-6088-44c1-a010-ed4ef39d4f37', 'fromId': 'e12d3a56-0c52-43ac-b33c-15c399eb06d4', 'serviceId': '83108c28-14f7-4646-acb8-dab165397fd5', 'toId': None, 'userId': '3f4cc332-516e-4f48-aff2-df6eaa2e5034', 'ticketId': 'e5a453e9-6cb1-476e-b416-3b334b0bc61a', 'ticketUserId': '3f4cc332-516e-4f48-aff2-df6eaa2e5034', 'ticketDepartmentId': 'a78046d7-809d-4cdb-a72a-31dfbc47d862', 'quotedMessageId': None, 'origin': 'user', 'hsmId': None, 'text': 'E', 'obfuscated': False, 'files': None, 'quotedMessage': None, 'isFromBot': False}, 'webhookId': '27b4c18d-2ab0-4c70-a592-46bbe7e00bc8', 'timestamp': '2023-05-22T00:19:45.026Z'}
22/05/2023|00:19:45 - webhook.views -INFO- Received webhook request
{'event': 'message.updated', 'data': {'id': '3428e2a8-c7f8-4f51-8d30-30e2835ab4db', 'isFromMe': True, 'sent': True, 'type': 'chat', 'timestamp': '2023-05-22T00:19:43.000Z', 'data': {'ack': 2, 'isNew': True, 'isFirst': False}, 'visible': True, 'accountId': '966b70ba-27d8-43ae-a295-35e59f0007be', 'contactId': '79db7607-6088-44c1-a010-ed4ef39d4f37', 'fromId': 'e12d3a56-0c52-43ac-b33c-15c399eb06d4', 'serviceId': '83108c28-14f7-4646-acb8-dab165397fd5', 'toId': None, 'userId': '3f4cc332-516e-4f48-aff2-df6eaa2e5034', 'ticketId': 'e5a453e9-6cb1-476e-b416-3b334b0bc61a', 'ticketUserId': '3f4cc332-516e-4f48-aff2-df6eaa2e5034', 'ticketDepartmentId': 'a78046d7-809d-4cdb-a72a-31dfbc47d862', 'quotedMessageId': None, 'origin': 'user', 'hsmId': None, 'text': 'E', 'obfuscated': False, 'files': None, 'quotedMessage': None, 'isFromBot': False}, 'webhookId': '27b4c18d-2ab0-4c70-a592-46bbe7e00bc8', 'timestamp': '2023-05-22T00:19:45.154Z'}
22/05/2023|00:19:48 - messages_api.event -DEBUG- <Response [400]>-{"error":400,"message":"Message matching query does not exist."}
22/05/2023|00:19:51 - messages_api.event -DEBUG- <Response [400]>-{"error":400,"message":"Message matching query does not exist."}
22/05/2023|00:20:10 - messages_api.event -DEBUG- <Response [400]>-{"error":400,"message":"Message matching query does not exist."}
22/05/2023|00:20:11 - messages_api.event -DEBUG- <Response [400]>-{"error":400,"message":"Message matching query does not exist."}
22/05/2023|00:20:50 - messages_api.event -DEBUG- <Response [400]>-{"error":400,"message":"Message matching query does not exist."}
22/05/2023|00:20:52 - messages_api.event -DEBUG- <Response [400]>-{"error":400,"message":"Message matching query does not exist."}
22/05/2023|00:21:12 - messages_api.event -DEBUG- <Response [400]>-{"error":400,"message":"Message matching query does not exist."}
22/05/2023|00:21:12 - messages_api.event -DEBUG- <Response [400]>-{"error":400,"message":"Message matching query does not exist."}
22/05/2023|00:21:45 - webhook.views -INFO- Received webhook request
{'event': 'message.created', 'data': {'id': '4c26235b-afe9-4113-b2c2-0532c6f3ab22', 'isFromMe': True, 'sent': True, 'type': 'chat', 'timestamp': '2023-05-22T00:21:45.000Z', 'data': {'ack': 0, 'isNew': True, 'isFirst': False}, 'visible': True, 'accountId': '966b70ba-27d8-43ae-a295-35e59f0007be', 'contactId': '79db7607-6088-44c1-a010-ed4ef39d4f37', 'fromId': 'e12d3a56-0c52-43ac-b33c-15c399eb06d4', 'serviceId': '83108c28-14f7-4646-acb8-dab165397fd5', 'toId': None, 'userId': '3f4cc332-516e-4f48-aff2-df6eaa2e5034', 'ticketId': 'e5a453e9-6cb1-476e-b416-3b334b0bc61a', 'ticketUserId': None, 'ticketDepartmentId': None, 'quotedMessageId': None, 'origin': 'user', 'hsmId': None, 'text': 'S', 'obfuscated': False, 'files': None, 'quotedMessage': None, 'isFromBot': False}, 'webhookId': '27b4c18d-2ab0-4c70-a592-46bbe7e00bc8', 'timestamp': '2023-05-22T00:21:45.122Z'}
22/05/2023|00:21:45 - webhook.views -INFO- Received webhook request
{'event': 'message.updated', 'data': {'id': '4c26235b-afe9-4113-b2c2-0532c6f3ab22', 'isFromMe': True, 'sent': True, 'type': 'chat', 'timestamp': '2023-05-22T00:21:45.000Z', 'data': {'ack': 1, 'isNew': True, 'isFirst': False}, 'visible': True, 'accountId': '966b70ba-27d8-43ae-a295-35e59f0007be', 'contactId': '79db7607-6088-44c1-a010-ed4ef39d4f37', 'fromId': 'e12d3a56-0c52-43ac-b33c-15c399eb06d4', 'serviceId': '83108c28-14f7-4646-acb8-dab165397fd5', 'toId': None, 'userId': '3f4cc332-516e-4f48-aff2-df6eaa2e5034', 'ticketId': 'e5a453e9-6cb1-476e-b416-3b334b0bc61a', 'ticketUserId': '3f4cc332-516e-4f48-aff2-df6eaa2e5034', 'ticketDepartmentId': 'a78046d7-809d-4cdb-a72a-31dfbc47d862', 'quotedMessageId': None, 'origin': 'user', 'hsmId': None, 'text': 'S', 'obfuscated': False, 'files': None, 'quotedMessage': None, 'isFromBot': False}, 'webhookId': '27b4c18d-2ab0-4c70-a592-46bbe7e00bc8', 'timestamp': '2023-05-22T00:21:45.215Z'}
22/05/2023|00:21:46 - webhook.views -INFO- Received webhook request
{'event': 'message.updated', 'data': {'id': '4c26235b-afe9-4113-b2c2-0532c6f3ab22', 'isFromMe': True, 'sent': True, 'type': 'chat', 'timestamp': '2023-05-22T00:21:45.000Z', 'data': {'ack': 2, 'isNew': True, 'isFirst': False}, 'visible': True, 'accountId': '966b70ba-27d8-43ae-a295-35e59f0007be', 'contactId': '79db7607-6088-44c1-a010-ed4ef39d4f37', 'fromId': 'e12d3a56-0c52-43ac-b33c-15c399eb06d4', 'serviceId': '83108c28-14f7-4646-acb8-dab165397fd5', 'toId': None, 'userId': '3f4cc332-516e-4f48-aff2-df6eaa2e5034', 'ticketId': 'e5a453e9-6cb1-476e-b416-3b334b0bc61a', 'ticketUserId': '3f4cc332-516e-4f48-aff2-df6eaa2e5034', 'ticketDepartmentId': 'a78046d7-809d-4cdb-a72a-31dfbc47d862', 'quotedMessageId': None, 'origin': 'user', 'hsmId': None, 'text': 'S', 'obfuscated': False, 'files': None, 'quotedMessage': None, 'isFromBot': False}, 'webhookId': '27b4c18d-2ab0-4c70-a592-46bbe7e00bc8', 'timestamp': '2023-05-22T00:21:45.371Z'}
22/05/2023|00:21:50 - messages_api.event -DEBUG- <Response [400]>-{"error":400,"message":"Message matching query does not exist."}
22/05/2023|00:21:50 - messages_api.event -DEBUG- <Response [400]>-{"error":400,"message":"Message matching query does not exist."}
22/05/2023|00:21:52 - messages_api.event -DEBUG- <Response [400]>-{"error":400,"message":"Message matching query does not exist."}
22/05/2023|00:21:53 - messages_api.event -DEBUG- <Response [400]>-{"error":400,"message":"Message matching query does not exist."}
22/05/2023|00:22:51 - messages_api.event -DEBUG- <Response [400]>-{"error":400,"message":"Message matching query does not exist."}
22/05/2023|00:22:51 - messages_api.event -DEBUG- <Response [400]>-{"error":400,"message":"Message matching query does not exist."}
22/05/2023|00:22:54 - messages_api.event -DEBUG- <Response [400]>-{"error":400,"message":"Message matching query does not exist."}
22/05/2023|00:22:55 - messages_api.event -DEBUG- <Response [400]>-{"error":400,"message":"Message matching query does not exist."}
22/05/2023|00:23:52 - messages_api.event -DEBUG- <Response [400]>-{"error":400,"message":"Message matching query does not exist."}
22/05/2023|00:23:52 - messages_api.event -DEBUG- <Response [400]>-{"error":400,"message":"Message matching query does not exist."}
22/05/2023|00:24:32 - webhook.views -INFO- Received webhook request
{'event': 'message.created', 'data': {'id': 'f8eec273-ef09-4587-85ae-e7aeaded4185', 'isFromMe': True, 'sent': True, 'type': 'chat', 'timestamp': '2023-05-22T00:24:30.000Z', 'data': {'ack': 0, 'isNew': True, 'isFirst': False}, 'visible': True, 'accountId': '966b70ba-27d8-43ae-a295-35e59f0007be', 'contactId': '79db7607-6088-44c1-a010-ed4ef39d4f37', 'fromId': 'e12d3a56-0c52-43ac-b33c-15c399eb06d4', 'serviceId': '83108c28-14f7-4646-acb8-dab165397fd5', 'toId': None, 'userId': '3f4cc332-516e-4f48-aff2-df6eaa2e5034', 'ticketId': 'e5a453e9-6cb1-476e-b416-3b334b0bc61a', 'ticketUserId': None, 'ticketDepartmentId': None, 'quotedMessageId': None, 'origin': 'user', 'hsmId': None, 'text': 'Show', 'obfuscated': False, 'files': None, 'quotedMessage': None, 'isFromBot': False}, 'webhookId': '27b4c18d-2ab0-4c70-a592-46bbe7e00bc8', 'timestamp': '2023-05-22T00:24:31.875Z'}
22/05/2023|00:24:32 - webhook.views -INFO- Received webhook request
{'event': 'message.updated', 'data': {'id': 'f8eec273-ef09-4587-85ae-e7aeaded4185', 'isFromMe': True, 'sent': True, 'type': 'chat', 'timestamp': '2023-05-22T00:24:30.000Z', 'data': {'ack': 1, 'isNew': True, 'isFirst': False}, 'visible': True, 'accountId': '966b70ba-27d8-43ae-a295-35e59f0007be', 'contactId': '79db7607-6088-44c1-a010-ed4ef39d4f37', 'fromId': 'e12d3a56-0c52-43ac-b33c-15c399eb06d4', 'serviceId': '83108c28-14f7-4646-acb8-dab165397fd5', 'toId': None, 'userId': '3f4cc332-516e-4f48-aff2-df6eaa2e5034', 'ticketId': 'e5a453e9-6cb1-476e-b416-3b334b0bc61a', 'ticketUserId': '3f4cc332-516e-4f48-aff2-df6eaa2e5034', 'ticketDepartmentId': 'a78046d7-809d-4cdb-a72a-31dfbc47d862', 'quotedMessageId': None, 'origin': 'user', 'hsmId': None, 'text': 'Show', 'obfuscated': False, 'files': None, 'quotedMessage': None, 'isFromBot': False}, 'webhookId': '27b4c18d-2ab0-4c70-a592-46bbe7e00bc8', 'timestamp': '2023-05-22T00:24:31.974Z'}
22/05/2023|00:24:32 - webhook.views -INFO- Received webhook request
{'event': 'message.updated', 'data': {'id': 'f8eec273-ef09-4587-85ae-e7aeaded4185', 'isFromMe': True, 'sent': True, 'type': 'chat', 'timestamp': '2023-05-22T00:24:30.000Z', 'data': {'ack': 2, 'isNew': True, 'isFirst': False}, 'visible': True, 'accountId': '966b70ba-27d8-43ae-a295-35e59f0007be', 'contactId': '79db7607-6088-44c1-a010-ed4ef39d4f37', 'fromId': 'e12d3a56-0c52-43ac-b33c-15c399eb06d4', 'serviceId': '83108c28-14f7-4646-acb8-dab165397fd5', 'toId': None, 'userId': '3f4cc332-516e-4f48-aff2-df6eaa2e5034', 'ticketId': 'e5a453e9-6cb1-476e-b416-3b334b0bc61a', 'ticketUserId': '3f4cc332-516e-4f48-aff2-df6eaa2e5034', 'ticketDepartmentId': 'a78046d7-809d-4cdb-a72a-31dfbc47d862', 'quotedMessageId': None, 'origin': 'user', 'hsmId': None, 'text': 'Show', 'obfuscated': False, 'files': None, 'quotedMessage': None, 'isFromBot': False}, 'webhookId': '27b4c18d-2ab0-4c70-a592-46bbe7e00bc8', 'timestamp': '2023-05-22T00:24:32.190Z'}
22/05/2023|00:24:36 - messages_api.event -DEBUG- <Response [400]>-{"error":400,"message":"Message matching query does not exist."}
22/05/2023|00:24:36 - messages_api.event -DEBUG- <Response [400]>-{"error":400,"message":"Message matching query does not exist."}
22/05/2023|00:24:53 - messages_api.event -DEBUG- <Response [400]>-{"error":400,"message":"Message matching query does not exist."}
22/05/2023|00:24:53 - messages_api.event -DEBUG- <Response [400]>-{"error":400,"message":"Message matching query does not exist."}
22/05/2023|00:25:37 - messages_api.event -DEBUG- <Response [400]>-{"error":400,"message":"Message matching query does not exist."}
22/05/2023|00:25:37 - messages_api.event -DEBUG- <Response [400]>-{"error":400,"message":"Message matching query does not exist."}
22/05/2023|00:26:39 - messages_api.event -DEBUG- <Response [400]>-{"error":400,"message":"Message matching query does not exist."}
22/05/2023|00:26:39 - messages_api.event -DEBUG- <Response [400]>-{"error":400,"message":"Message matching query does not exist."}
22/05/2023|00:27:40 - messages_api.event -DEBUG- <Response [400]>-{"error":400,"message":"Message matching query does not exist."}
22/05/2023|00:27:40 - messages_api.event -DEBUG- <Response [400]>-{"error":400,"message":"Message matching query does not exist."}
22/05/2023|00:29:36 - webhook.views -INFO- Received webhook request
{'event': 'message.created', 'data': {'id': '1d445a77-1d0b-43ff-95c2-e70991a85a43', 'isFromMe': True, 'sent': True, 'type': 'chat', 'timestamp': '2023-05-22T00:29:35.000Z', 'data': {'ack': 0, 'isNew': True, 'isFirst': False}, 'visible': True, 'accountId': '966b70ba-27d8-43ae-a295-35e59f0007be', 'contactId': '79db7607-6088-44c1-a010-ed4ef39d4f37', 'fromId': 'e12d3a56-0c52-43ac-b33c-15c399eb06d4', 'serviceId': '83108c28-14f7-4646-acb8-dab165397fd5', 'toId': None, 'userId': '3f4cc332-516e-4f48-aff2-df6eaa2e5034', 'ticketId': 'e5a453e9-6cb1-476e-b416-3b334b0bc61a', 'ticketUserId': None, 'ticketDepartmentId': None, 'quotedMessageId': None, 'origin': 'user', 'hsmId': None, 'text': 'Show', 'obfuscated': False, 'files': None, 'quotedMessage': None, 'isFromBot': False}, 'webhookId': '27b4c18d-2ab0-4c70-a592-46bbe7e00bc8', 'timestamp': '2023-05-22T00:29:36.038Z'}
22/05/2023|00:29:36 - webhook.views -INFO- Received webhook request
{'event': 'message.updated', 'data': {'id': '1d445a77-1d0b-43ff-95c2-e70991a85a43', 'isFromMe': True, 'sent': True, 'type': 'chat', 'timestamp': '2023-05-22T00:29:35.000Z', 'data': {'ack': 1, 'isNew': True, 'isFirst': False}, 'visible': True, 'accountId': '966b70ba-27d8-43ae-a295-35e59f0007be', 'contactId': '79db7607-6088-44c1-a010-ed4ef39d4f37', 'fromId': 'e12d3a56-0c52-43ac-b33c-15c399eb06d4', 'serviceId': '83108c28-14f7-4646-acb8-dab165397fd5', 'toId': None, 'userId': '3f4cc332-516e-4f48-aff2-df6eaa2e5034', 'ticketId': 'e5a453e9-6cb1-476e-b416-3b334b0bc61a', 'ticketUserId': '3f4cc332-516e-4f48-aff2-df6eaa2e5034', 'ticketDepartmentId': 'a78046d7-809d-4cdb-a72a-31dfbc47d862', 'quotedMessageId': None, 'origin': 'user', 'hsmId': None, 'text': 'Show', 'obfuscated': False, 'files': None, 'quotedMessage': None, 'isFromBot': False}, 'webhookId': '27b4c18d-2ab0-4c70-a592-46bbe7e00bc8', 'timestamp': '2023-05-22T00:29:36.126Z'}
22/05/2023|00:29:36 - webhook.views -INFO- Received webhook request
{'event': 'message.updated', 'data': {'id': '1d445a77-1d0b-43ff-95c2-e70991a85a43', 'isFromMe': True, 'sent': True, 'type': 'chat', 'timestamp': '2023-05-22T00:29:35.000Z', 'data': {'ack': 2, 'isNew': True, 'isFirst': False}, 'visible': True, 'accountId': '966b70ba-27d8-43ae-a295-35e59f0007be', 'contactId': '79db7607-6088-44c1-a010-ed4ef39d4f37', 'fromId': 'e12d3a56-0c52-43ac-b33c-15c399eb06d4', 'serviceId': '83108c28-14f7-4646-acb8-dab165397fd5', 'toId': None, 'userId': '3f4cc332-516e-4f48-aff2-df6eaa2e5034', 'ticketId': 'e5a453e9-6cb1-476e-b416-3b334b0bc61a', 'ticketUserId': '3f4cc332-516e-4f48-aff2-df6eaa2e5034', 'ticketDepartmentId': 'a78046d7-809d-4cdb-a72a-31dfbc47d862', 'quotedMessageId': None, 'origin': 'user', 'hsmId': None, 'text': 'Show', 'obfuscated': False, 'files': None, 'quotedMessage': None, 'isFromBot': False}, 'webhookId': '27b4c18d-2ab0-4c70-a592-46bbe7e00bc8', 'timestamp': '2023-05-22T00:29:36.315Z'}
22/05/2023|00:29:40 - messages_api.event -DEBUG- <Response [400]>-{"error":400,"message":"Message matching query does not exist."}
22/05/2023|00:29:40 - messages_api.event -DEBUG- <Response [400]>-{"error":400,"message":"Message matching query does not exist."}
22/05/2023|00:30:57 - messages_api.event -DEBUG- <Response [400]>-{"error":400,"message":"Message matching query does not exist."}
22/05/2023|00:30:57 - messages_api.event -DEBUG- <Response [400]>-{"error":400,"message":"Message matching query does not exist."}
22/05/2023|00:31:44 - webhook.views -INFO- Received webhook request
{'event': 'message.created', 'data': {'id': '8b7bd007-3bfc-4a33-96ad-1d3594825ca5', 'isFromMe': True, 'sent': True, 'type': 'chat', 'timestamp': '2023-05-22T00:31:42.000Z', 'data': {'ack': 0, 'isNew': True, 'isFirst': False}, 'visible': True, 'accountId': '966b70ba-27d8-43ae-a295-35e59f0007be', 'contactId': '79db7607-6088-44c1-a010-ed4ef39d4f37', 'fromId': 'e12d3a56-0c52-43ac-b33c-15c399eb06d4', 'serviceId': '83108c28-14f7-4646-acb8-dab165397fd5', 'toId': None, 'userId': '3f4cc332-516e-4f48-aff2-df6eaa2e5034', 'ticketId': 'e5a453e9-6cb1-476e-b416-3b334b0bc61a', 'ticketUserId': None, 'ticketDepartmentId': None, 'quotedMessageId': None, 'origin': 'user', 'hsmId': None, 'text': 'Show', 'obfuscated': False, 'files': None, 'quotedMessage': None, 'isFromBot': False}, 'webhookId': '27b4c18d-2ab0-4c70-a592-46bbe7e00bc8', 'timestamp': '2023-05-22T00:31:43.425Z'}
22/05/2023|00:31:44 - webhook.views -INFO- Received webhook request
{'event': 'message.updated', 'data': {'id': '8b7bd007-3bfc-4a33-96ad-1d3594825ca5', 'isFromMe': True, 'sent': True, 'type': 'chat', 'timestamp': '2023-05-22T00:31:42.000Z', 'data': {'ack': 1, 'isNew': True, 'isFirst': False}, 'visible': True, 'accountId': '966b70ba-27d8-43ae-a295-35e59f0007be', 'contactId': '79db7607-6088-44c1-a010-ed4ef39d4f37', 'fromId': 'e12d3a56-0c52-43ac-b33c-15c399eb06d4', 'serviceId': '83108c28-14f7-4646-acb8-dab165397fd5', 'toId': None, 'userId': '3f4cc332-516e-4f48-aff2-df6eaa2e5034', 'ticketId': 'e5a453e9-6cb1-476e-b416-3b334b0bc61a', 'ticketUserId': '3f4cc332-516e-4f48-aff2-df6eaa2e5034', 'ticketDepartmentId': 'a78046d7-809d-4cdb-a72a-31dfbc47d862', 'quotedMessageId': None, 'origin': 'user', 'hsmId': None, 'text': 'Show', 'obfuscated': False, 'files': None, 'quotedMessage': None, 'isFromBot': False}, 'webhookId': '27b4c18d-2ab0-4c70-a592-46bbe7e00bc8', 'timestamp': '2023-05-22T00:31:43.576Z'}
22/05/2023|00:31:44 - webhook.views -INFO- Received webhook request
{'event': 'message.updated', 'data': {'id': '8b7bd007-3bfc-4a33-96ad-1d3594825ca5', 'isFromMe': True, 'sent': True, 'type': 'chat', 'timestamp': '2023-05-22T00:31:42.000Z', 'data': {'ack': 2, 'isNew': True, 'isFirst': False}, 'visible': True, 'accountId': '966b70ba-27d8-43ae-a295-35e59f0007be', 'contactId': '79db7607-6088-44c1-a010-ed4ef39d4f37', 'fromId': 'e12d3a56-0c52-43ac-b33c-15c399eb06d4', 'serviceId': '83108c28-14f7-4646-acb8-dab165397fd5', 'toId': None, 'userId': '3f4cc332-516e-4f48-aff2-df6eaa2e5034', 'ticketId': 'e5a453e9-6cb1-476e-b416-3b334b0bc61a', 'ticketUserId': '3f4cc332-516e-4f48-aff2-df6eaa2e5034', 'ticketDepartmentId': 'a78046d7-809d-4cdb-a72a-31dfbc47d862', 'quotedMessageId': None, 'origin': 'user', 'hsmId': None, 'text': 'Show', 'obfuscated': False, 'files': None, 'quotedMessage': None, 'isFromBot': False}, 'webhookId': '27b4c18d-2ab0-4c70-a592-46bbe7e00bc8', 'timestamp': '2023-05-22T00:31:43.705Z'}
22/05/2023|00:31:47 - messages_api.event -DEBUG- <Response [400]>-{"error":400,"message":"Message matching query does not exist."}
22/05/2023|00:31:48 - messages_api.event -DEBUG- <Response [400]>-{"error":400,"message":"Message matching query does not exist."}
22/05/2023|00:34:01 - webhook.views -INFO- Received webhook request
{'event': 'message.created', 'data': {'id': '8b1372f9-ae26-4fce-99a1-6120e95764d8', 'isFromMe': True, 'sent': True, 'type': 'chat', 'timestamp': '2023-05-22T00:34:00.000Z', 'data': {'ack': 0, 'isNew': True, 'isFirst': False}, 'visible': True, 'accountId': '966b70ba-27d8-43ae-a295-35e59f0007be', 'contactId': '79db7607-6088-44c1-a010-ed4ef39d4f37', 'fromId': 'e12d3a56-0c52-43ac-b33c-15c399eb06d4', 'serviceId': '83108c28-14f7-4646-acb8-dab165397fd5', 'toId': None, 'userId': '3f4cc332-516e-4f48-aff2-df6eaa2e5034', 'ticketId': 'e5a453e9-6cb1-476e-b416-3b334b0bc61a', 'ticketUserId': None, 'ticketDepartmentId': None, 'quotedMessageId': None, 'origin': 'user', 'hsmId': None, 'text': 'Show', 'obfuscated': False, 'files': None, 'quotedMessage': None, 'isFromBot': False}, 'webhookId': '27b4c18d-2ab0-4c70-a592-46bbe7e00bc8', 'timestamp': '2023-05-22T00:34:00.374Z'}
22/05/2023|00:34:01 - webhook.views -INFO- Received webhook request
{'event': 'message.updated', 'data': {'id': '8b1372f9-ae26-4fce-99a1-6120e95764d8', 'isFromMe': True, 'sent': True, 'type': 'chat', 'timestamp': '2023-05-22T00:34:00.000Z', 'data': {'ack': 1, 'isNew': True, 'isFirst': False}, 'visible': True, 'accountId': '966b70ba-27d8-43ae-a295-35e59f0007be', 'contactId': '79db7607-6088-44c1-a010-ed4ef39d4f37', 'fromId': 'e12d3a56-0c52-43ac-b33c-15c399eb06d4', 'serviceId': '83108c28-14f7-4646-acb8-dab165397fd5', 'toId': None, 'userId': '3f4cc332-516e-4f48-aff2-df6eaa2e5034', 'ticketId': 'e5a453e9-6cb1-476e-b416-3b334b0bc61a', 'ticketUserId': '3f4cc332-516e-4f48-aff2-df6eaa2e5034', 'ticketDepartmentId': 'a78046d7-809d-4cdb-a72a-31dfbc47d862', 'quotedMessageId': None, 'origin': 'user', 'hsmId': None, 'text': 'Show', 'obfuscated': False, 'files': None, 'quotedMessage': None, 'isFromBot': False}, 'webhookId': '27b4c18d-2ab0-4c70-a592-46bbe7e00bc8', 'timestamp': '2023-05-22T00:34:00.465Z'}
22/05/2023|00:34:01 - webhook.views -INFO- Received webhook request
{'event': 'message.updated', 'data': {'id': '8b1372f9-ae26-4fce-99a1-6120e95764d8', 'isFromMe': True, 'sent': True, 'type': 'chat', 'timestamp': '2023-05-22T00:34:00.000Z', 'data': {'ack': 2, 'isNew': True, 'isFirst': False}, 'visible': True, 'accountId': '966b70ba-27d8-43ae-a295-35e59f0007be', 'contactId': '79db7607-6088-44c1-a010-ed4ef39d4f37', 'fromId': 'e12d3a56-0c52-43ac-b33c-15c399eb06d4', 'serviceId': '83108c28-14f7-4646-acb8-dab165397fd5', 'toId': None, 'userId': '3f4cc332-516e-4f48-aff2-df6eaa2e5034', 'ticketId': 'e5a453e9-6cb1-476e-b416-3b334b0bc61a', 'ticketUserId': '3f4cc332-516e-4f48-aff2-df6eaa2e5034', 'ticketDepartmentId': 'a78046d7-809d-4cdb-a72a-31dfbc47d862', 'quotedMessageId': None, 'origin': 'user', 'hsmId': None, 'text': 'Show', 'obfuscated': False, 'files': None, 'quotedMessage': None, 'isFromBot': False}, 'webhookId': '27b4c18d-2ab0-4c70-a592-46bbe7e00bc8', 'timestamp': '2023-05-22T00:34:00.593Z'}
22/05/2023|00:34:04 - messages_api.event -DEBUG- <Response [400]>-{"error":400,"message":"Message matching query does not exist."}
22/05/2023|00:36:13 - webhook.views -INFO- Received webhook request
{'event': 'message.updated', 'data': {'id': '4c26235b-afe9-4113-b2c2-0532c6f3ab22', 'isFromMe': True, 'sent': True, 'type': 'chat', 'timestamp': '2023-05-22T00:21:45.000Z', 'data': {'ack': 3, 'isNew': True, 'isFirst': False}, 'visible': True, 'accountId': '966b70ba-27d8-43ae-a295-35e59f0007be', 'contactId': '79db7607-6088-44c1-a010-ed4ef39d4f37', 'fromId': 'e12d3a56-0c52-43ac-b33c-15c399eb06d4', 'serviceId': '83108c28-14f7-4646-acb8-dab165397fd5', 'toId': None, 'userId': '3f4cc332-516e-4f48-aff2-df6eaa2e5034', 'ticketId': 'e5a453e9-6cb1-476e-b416-3b334b0bc61a', 'ticketUserId': '3f4cc332-516e-4f48-aff2-df6eaa2e5034', 'ticketDepartmentId': 'a78046d7-809d-4cdb-a72a-31dfbc47d862', 'quotedMessageId': None, 'origin': 'user', 'hsmId': None, 'text': 'S', 'obfuscated': False, 'files': None, 'quotedMessage': None, 'isFromBot': False}, 'webhookId': '27b4c18d-2ab0-4c70-a592-46bbe7e00bc8', 'timestamp': '2023-05-22T00:36:12.654Z'}
22/05/2023|00:36:13 - webhook.views -INFO- Received webhook request
{'event': 'message.updated', 'data': {'id': '3428e2a8-c7f8-4f51-8d30-30e2835ab4db', 'isFromMe': True, 'sent': True, 'type': 'chat', 'timestamp': '2023-05-22T00:19:43.000Z', 'data': {'ack': 3, 'isNew': True, 'isFirst': False}, 'visible': True, 'accountId': '966b70ba-27d8-43ae-a295-35e59f0007be', 'contactId': '79db7607-6088-44c1-a010-ed4ef39d4f37', 'fromId': 'e12d3a56-0c52-43ac-b33c-15c399eb06d4', 'serviceId': '83108c28-14f7-4646-acb8-dab165397fd5', 'toId': None, 'userId': '3f4cc332-516e-4f48-aff2-df6eaa2e5034', 'ticketId': 'e5a453e9-6cb1-476e-b416-3b334b0bc61a', 'ticketUserId': '3f4cc332-516e-4f48-aff2-df6eaa2e5034', 'ticketDepartmentId': 'a78046d7-809d-4cdb-a72a-31dfbc47d862', 'quotedMessageId': None, 'origin': 'user', 'hsmId': None, 'text': 'E', 'obfuscated': False, 'files': None, 'quotedMessage': None, 'isFromBot': False}, 'webhookId': '27b4c18d-2ab0-4c70-a592-46bbe7e00bc8', 'timestamp': '2023-05-22T00:36:12.675Z'}
22/05/2023|00:36:13 - webhook.views -INFO- Received webhook request
{'event': 'message.updated', 'data': {'id': '5a1e23d1-8b46-4962-aec0-b9319385bd24', 'isFromMe': True, 'sent': True, 'type': 'chat', 'timestamp': '2023-05-22T00:17:51.000Z', 'data': {'ack': 3, 'isNew': True, 'isFirst': False}, 'visible': True, 'accountId': '966b70ba-27d8-43ae-a295-35e59f0007be', 'contactId': '79db7607-6088-44c1-a010-ed4ef39d4f37', 'fromId': 'e12d3a56-0c52-43ac-b33c-15c399eb06d4', 'serviceId': '83108c28-14f7-4646-acb8-dab165397fd5', 'toId': None, 'userId': '3f4cc332-516e-4f48-aff2-df6eaa2e5034', 'ticketId': 'e5a453e9-6cb1-476e-b416-3b334b0bc61a', 'ticketUserId': '3f4cc332-516e-4f48-aff2-df6eaa2e5034', 'ticketDepartmentId': 'a78046d7-809d-4cdb-a72a-31dfbc47d862', 'quotedMessageId': None, 'origin': 'user', 'hsmId': None, 'text': 'M', 'obfuscated': False, 'files': None, 'quotedMessage': None, 'isFromBot': False}, 'webhookId': '27b4c18d-2ab0-4c70-a592-46bbe7e00bc8', 'timestamp': '2023-05-22T00:36:12.662Z'}
22/05/2023|00:36:13 - webhook.views -INFO- Received webhook request
{'event': 'message.updated', 'data': {'id': '6e85ac23-783c-47f4-ba7f-e98ecd0226f3', 'isFromMe': True, 'sent': True, 'type': 'chat', 'timestamp': '2023-05-22T00:18:01.000Z', 'data': {'ack': 3, 'isNew': True, 'isFirst': False}, 'visible': True, 'accountId': '966b70ba-27d8-43ae-a295-35e59f0007be', 'contactId': '79db7607-6088-44c1-a010-ed4ef39d4f37', 'fromId': 'e12d3a56-0c52-43ac-b33c-15c399eb06d4', 'serviceId': '83108c28-14f7-4646-acb8-dab165397fd5', 'toId': None, 'userId': '3f4cc332-516e-4f48-aff2-df6eaa2e5034', 'ticketId': 'e5a453e9-6cb1-476e-b416-3b334b0bc61a', 'ticketUserId': '3f4cc332-516e-4f48-aff2-df6eaa2e5034', 'ticketDepartmentId': 'a78046d7-809d-4cdb-a72a-31dfbc47d862', 'quotedMessageId': None, 'origin': 'user', 'hsmId': None, 'text': 'M', 'obfuscated': False, 'files': None, 'quotedMessage': None, 'isFromBot': False}, 'webhookId': '27b4c18d-2ab0-4c70-a592-46bbe7e00bc8', 'timestamp': '2023-05-22T00:36:12.674Z'}
22/05/2023|00:36:13 - webhook.views -INFO- Received webhook request
{'event': 'message.updated', 'data': {'id': '8b7bd007-3bfc-4a33-96ad-1d3594825ca5', 'isFromMe': True, 'sent': True, 'type': 'chat', 'timestamp': '2023-05-22T00:31:42.000Z', 'data': {'ack': 3, 'isNew': True, 'isFirst': False}, 'visible': True, 'accountId': '966b70ba-27d8-43ae-a295-35e59f0007be', 'contactId': '79db7607-6088-44c1-a010-ed4ef39d4f37', 'fromId': 'e12d3a56-0c52-43ac-b33c-15c399eb06d4', 'serviceId': '83108c28-14f7-4646-acb8-dab165397fd5', 'toId': None, 'userId': '3f4cc332-516e-4f48-aff2-df6eaa2e5034', 'ticketId': 'e5a453e9-6cb1-476e-b416-3b334b0bc61a', 'ticketUserId': '3f4cc332-516e-4f48-aff2-df6eaa2e5034', 'ticketDepartmentId': 'a78046d7-809d-4cdb-a72a-31dfbc47d862', 'quotedMessageId': None, 'origin': 'user', 'hsmId': None, 'text': 'Show', 'obfuscated': False, 'files': None, 'quotedMessage': None, 'isFromBot': False}, 'webhookId': '27b4c18d-2ab0-4c70-a592-46bbe7e00bc8', 'timestamp': '2023-05-22T00:36:12.674Z'}
22/05/2023|00:36:13 - webhook.views -INFO- Received webhook request
{'event': 'message.updated', 'data': {'id': '8b1372f9-ae26-4fce-99a1-6120e95764d8', 'isFromMe': True, 'sent': True, 'type': 'chat', 'timestamp': '2023-05-22T00:34:00.000Z', 'data': {'ack': 3, 'isNew': True, 'isFirst': False}, 'visible': True, 'accountId': '966b70ba-27d8-43ae-a295-35e59f0007be', 'contactId': '79db7607-6088-44c1-a010-ed4ef39d4f37', 'fromId': 'e12d3a56-0c52-43ac-b33c-15c399eb06d4', 'serviceId': '83108c28-14f7-4646-acb8-dab165397fd5', 'toId': None, 'userId': '3f4cc332-516e-4f48-aff2-df6eaa2e5034', 'ticketId': 'e5a453e9-6cb1-476e-b416-3b334b0bc61a', 'ticketUserId': '3f4cc332-516e-4f48-aff2-df6eaa2e5034', 'ticketDepartmentId': 'a78046d7-809d-4cdb-a72a-31dfbc47d862', 'quotedMessageId': None, 'origin': 'user', 'hsmId': None, 'text': 'Show', 'obfuscated': False, 'files': None, 'quotedMessage': None, 'isFromBot': False}, 'webhookId': '27b4c18d-2ab0-4c70-a592-46bbe7e00bc8', 'timestamp': '2023-05-22T00:36:12.674Z'}
22/05/2023|00:36:13 - webhook.views -INFO- Received webhook request
{'event': 'message.updated', 'data': {'id': 'f8eec273-ef09-4587-85ae-e7aeaded4185', 'isFromMe': True, 'sent': True, 'type': 'chat', 'timestamp': '2023-05-22T00:24:30.000Z', 'data': {'ack': 3, 'isNew': True, 'isFirst': False}, 'visible': True, 'accountId': '966b70ba-27d8-43ae-a295-35e59f0007be', 'contactId': '79db7607-6088-44c1-a010-ed4ef39d4f37', 'fromId': 'e12d3a56-0c52-43ac-b33c-15c399eb06d4', 'serviceId': '83108c28-14f7-4646-acb8-dab165397fd5', 'toId': None, 'userId': '3f4cc332-516e-4f48-aff2-df6eaa2e5034', 'ticketId': 'e5a453e9-6cb1-476e-b416-3b334b0bc61a', 'ticketUserId': '3f4cc332-516e-4f48-aff2-df6eaa2e5034', 'ticketDepartmentId': 'a78046d7-809d-4cdb-a72a-31dfbc47d862', 'quotedMessageId': None, 'origin': 'user', 'hsmId': None, 'text': 'Show', 'obfuscated': False, 'files': None, 'quotedMessage': None, 'isFromBot': False}, 'webhookId': '27b4c18d-2ab0-4c70-a592-46bbe7e00bc8', 'timestamp': '2023-05-22T00:36:12.662Z'}
22/05/2023|00:36:13 - webhook.views -INFO- Received webhook request
{'event': 'message.updated', 'data': {'id': '1d445a77-1d0b-43ff-95c2-e70991a85a43', 'isFromMe': True, 'sent': True, 'type': 'chat', 'timestamp': '2023-05-22T00:29:35.000Z', 'data': {'ack': 3, 'isNew': True, 'isFirst': False}, 'visible': True, 'accountId': '966b70ba-27d8-43ae-a295-35e59f0007be', 'contactId': '79db7607-6088-44c1-a010-ed4ef39d4f37', 'fromId': 'e12d3a56-0c52-43ac-b33c-15c399eb06d4', 'serviceId': '83108c28-14f7-4646-acb8-dab165397fd5', 'toId': None, 'userId': '3f4cc332-516e-4f48-aff2-df6eaa2e5034', 'ticketId': 'e5a453e9-6cb1-476e-b416-3b334b0bc61a', 'ticketUserId': '3f4cc332-516e-4f48-aff2-df6eaa2e5034', 'ticketDepartmentId': 'a78046d7-809d-4cdb-a72a-31dfbc47d862', 'quotedMessageId': None, 'origin': 'user', 'hsmId': None, 'text': 'Show', 'obfuscated': False, 'files': None, 'quotedMessage': None, 'isFromBot': False}, 'webhookId': '27b4c18d-2ab0-4c70-a592-46bbe7e00bc8', 'timestamp': '2023-05-22T00:36:12.674Z'}
22/05/2023|00:36:16 - messages_api.event -DEBUG- <Response [400]>-{"error":400,"message":"Message matching query does not exist."}
22/05/2023|00:36:16 - webhook.views -INFO- Exception occurred. Connection.open: (530) NOT_ALLOWED - access to vhost 'kzthoddb' refused for user 'kzthoddb': connection limit (20) is reached
22/05/2023|00:36:16 - webhook.views -INFO- Exception occurred. Connection.open: (530) NOT_ALLOWED - access to vhost 'kzthoddb' refused for user 'kzthoddb': connection limit (20) is reached
22/05/2023|00:36:16 - webhook.views -INFO- Exception occurred. Connection.open: (530) NOT_ALLOWED - access to vhost 'kzthoddb' refused for user 'kzthoddb': connection limit (20) is reached
22/05/2023|00:36:17 - messages_api.event -DEBUG- <Response [400]>-{"error":400,"message":"Message matching query does not exist."}
22/05/2023|00:36:18 - messages_api.event -DEBUG- <Response [400]>-{"error":400,"message":"Message matching query does not exist."}
22/05/2023|00:37:19 - messages_api.event -DEBUG- <Response [400]>-{"error":400,"message":"Message matching query does not exist."}
22/05/2023|00:37:20 - messages_api.event -DEBUG- <Response [400]>-{"error":400,"message":"Message matching query does not exist."}
22/05/2023|00:42:46 - messages_api.event -DEBUG- <Response [400]>-{"error":400,"message":"Message matching query does not exist."}
22/05/2023|00:43:50 - webhook.views -INFO- Received webhook request
{'event': 'message.created', 'data': {'id': '5f751d29-b7f0-4c3e-bdf2-df3e5fe73a28', 'isFromMe': True, 'sent': True, 'type': 'chat', 'timestamp': '2023-05-22T00:43:49.000Z', 'data': {'ack': 0, 'isNew': True, 'isFirst': False}, 'visible': True, 'accountId': '966b70ba-27d8-43ae-a295-35e59f0007be', 'contactId': '79db7607-6088-44c1-a010-ed4ef39d4f37', 'fromId': 'e12d3a56-0c52-43ac-b33c-15c399eb06d4', 'serviceId': '83108c28-14f7-4646-acb8-dab165397fd5', 'toId': None, 'userId': '3f4cc332-516e-4f48-aff2-df6eaa2e5034', 'ticketId': 'e5a453e9-6cb1-476e-b416-3b334b0bc61a', 'ticketUserId': None, 'ticketDepartmentId': None, 'quotedMessageId': None, 'origin': 'user', 'hsmId': None, 'text': 'Alô marciano', 'obfuscated': False, 'files': None, 'quotedMessage': None, 'isFromBot': False}, 'webhookId': '27b4c18d-2ab0-4c70-a592-46bbe7e00bc8', 'timestamp': '2023-05-22T00:43:49.319Z'}
22/05/2023|00:43:50 - webhook.views -INFO- Received webhook request
{'event': 'message.updated', 'data': {'id': '5f751d29-b7f0-4c3e-bdf2-df3e5fe73a28', 'isFromMe': True, 'sent': True, 'type': 'chat', 'timestamp': '2023-05-22T00:43:49.000Z', 'data': {'ack': 1, 'isNew': True, 'isFirst': False}, 'visible': True, 'accountId': '966b70ba-27d8-43ae-a295-35e59f0007be', 'contactId': '79db7607-6088-44c1-a010-ed4ef39d4f37', 'fromId': 'e12d3a56-0c52-43ac-b33c-15c399eb06d4', 'serviceId': '83108c28-14f7-4646-acb8-dab165397fd5', 'toId': None, 'userId': '3f4cc332-516e-4f48-aff2-df6eaa2e5034', 'ticketId': 'e5a453e9-6cb1-476e-b416-3b334b0bc61a', 'ticketUserId': '3f4cc332-516e-4f48-aff2-df6eaa2e5034', 'ticketDepartmentId': 'a78046d7-809d-4cdb-a72a-31dfbc47d862', 'quotedMessageId': None, 'origin': 'user', 'hsmId': None, 'text': 'Alô marciano', 'obfuscated': False, 'files': None, 'quotedMessage': None, 'isFromBot': False}, 'webhookId': '27b4c18d-2ab0-4c70-a592-46bbe7e00bc8', 'timestamp': '2023-05-22T00:43:49.412Z'}
22/05/2023|00:43:50 - webhook.views -INFO- Received webhook request
{'event': 'message.updated', 'data': {'id': '5f751d29-b7f0-4c3e-bdf2-df3e5fe73a28', 'isFromMe': True, 'sent': True, 'type': 'chat', 'timestamp': '2023-05-22T00:43:49.000Z', 'data': {'ack': 2, 'isNew': True, 'isFirst': False}, 'visible': True, 'accountId': '966b70ba-27d8-43ae-a295-35e59f0007be', 'contactId': '79db7607-6088-44c1-a010-ed4ef39d4f37', 'fromId': 'e12d3a56-0c52-43ac-b33c-15c399eb06d4', 'serviceId': '83108c28-14f7-4646-acb8-dab165397fd5', 'toId': None, 'userId': '3f4cc332-516e-4f48-aff2-df6eaa2e5034', 'ticketId': 'e5a453e9-6cb1-476e-b416-3b334b0bc61a', 'ticketUserId': '3f4cc332-516e-4f48-aff2-df6eaa2e5034', 'ticketDepartmentId': 'a78046d7-809d-4cdb-a72a-31dfbc47d862', 'quotedMessageId': None, 'origin': 'user', 'hsmId': None, 'text': 'Alô marciano', 'obfuscated': False, 'files': None, 'quotedMessage': None, 'isFromBot': False}, 'webhookId': '27b4c18d-2ab0-4c70-a592-46bbe7e00bc8', 'timestamp': '2023-05-22T00:43:49.628Z'}
22/05/2023|00:43:53 - messages_api.event -DEBUG- <Response [400]>-{"error":400,"message":"Message matching query does not exist."}
22/05/2023|00:44:23 - webhook.views -INFO- Received webhook request
{'event': 'message.updated', 'data': {'id': '5f751d29-b7f0-4c3e-bdf2-df3e5fe73a28', 'isFromMe': True, 'sent': True, 'type': 'chat', 'timestamp': '2023-05-22T00:43:49.000Z', 'data': {'ack': 3, 'isNew': True, 'isFirst': False}, 'visible': True, 'accountId': '966b70ba-27d8-43ae-a295-35e59f0007be', 'contactId': '79db7607-6088-44c1-a010-ed4ef39d4f37', 'fromId': 'e12d3a56-0c52-43ac-b33c-15c399eb06d4', 'serviceId': '83108c28-14f7-4646-acb8-dab165397fd5', 'toId': None, 'userId': '3f4cc332-516e-4f48-aff2-df6eaa2e5034', 'ticketId': 'e5a453e9-6cb1-476e-b416-3b334b0bc61a', 'ticketUserId': '3f4cc332-516e-4f48-aff2-df6eaa2e5034', 'ticketDepartmentId': 'a78046d7-809d-4cdb-a72a-31dfbc47d862', 'quotedMessageId': None, 'origin': 'user', 'hsmId': None, 'text': 'Alô marciano', 'obfuscated': False, 'files': None, 'quotedMessage': None, 'isFromBot': False}, 'webhookId': '27b4c18d-2ab0-4c70-a592-46bbe7e00bc8', 'timestamp': '2023-05-22T00:44:22.408Z'}
22/05/2023|00:45:06 - webhook.views -INFO- Received webhook request
{'event': 'message.created', 'data': {'id': 'ce787f41-8a47-475c-8c75-5d183a407b73', 'isFromMe': False, 'sent': False, 'type': 'ticket', 'timestamp': '2023-05-22T00:45:05.476Z', 'data': {'ticketClose': True}, 'visible': True, 'accountId': '966b70ba-27d8-43ae-a295-35e59f0007be', 'contactId': '79db7607-6088-44c1-a010-ed4ef39d4f37', 'fromId': None, 'serviceId': '83108c28-14f7-4646-acb8-dab165397fd5', 'toId': None, 'userId': None, 'ticketId': 'e5a453e9-6cb1-476e-b416-3b334b0bc61a', 'ticketUserId': None, 'ticketDepartmentId': None, 'quotedMessageId': None, 'origin': 'ticket', 'hsmId': None, 'obfuscated': False, 'files': None, 'quotedMessage': None, 'isFromBot': False}, 'webhookId': '27b4c18d-2ab0-4c70-a592-46bbe7e00bc8', 'timestamp': '2023-05-22T00:45:05.547Z'}
22/05/2023|00:45:06 - webhook.views -INFO- Received webhook request
{'event': 'ticket.updated', 'data': {'id': 'e5a453e9-6cb1-476e-b416-3b334b0bc61a', 'isOpen': False, 'comments': '', 'protocol': '2023052130905', 'origin': 'manual', 'metrics': {'messagingTime': 3365, 'ticketTime': 3449}, 'startedAt': '2023-05-21T23:47:36.097Z', 'endedAt': '2023-05-22T00:45:05.476Z', 'userId': '3f4cc332-516e-4f48-aff2-df6eaa2e5034', 'departmentId': 'a78046d7-809d-4cdb-a72a-31dfbc47d862', 'accountId': '966b70ba-27d8-43ae-a295-35e59f0007be', 'contactId': '79db7607-6088-44c1-a010-ed4ef39d4f37', 'currentTicketTransferId': None, 'firstMessageId': '2172fdff-2979-4c81-860a-f4a45f2b9a5b', 'lastMessageId': '5f751d29-b7f0-4c3e-bdf2-df3e5fe73a28'}, 'webhookId': '27b4c18d-2ab0-4c70-a592-46bbe7e00bc8', 'timestamp': '2023-05-22T00:45:05.578Z'}
22/05/2023|00:45:06 - webhook.views -INFO- Exception occurred. 'ticketId'
22/05/2023|00:45:06 - webhook.views -INFO- Exception occurred. 'ack'
22/05/2023|00:46:47 - webhook.views -INFO- Received webhook request
{'event': 'message.created', 'data': {'id': 'ebcd2239-1f0e-4fbb-ab21-93e844c09cc6', 'isFromMe': False, 'sent': False, 'type': 'ticket', 'timestamp': '2023-05-22T00:46:47.098Z', 'data': {'ticketOpen': True}, 'visible': True, 'accountId': '966b70ba-27d8-43ae-a295-35e59f0007be', 'contactId': '79db7607-6088-44c1-a010-ed4ef39d4f37', 'fromId': None, 'serviceId': '83108c28-14f7-4646-acb8-dab165397fd5', 'toId': None, 'userId': None, 'ticketId': '136b31c6-73f2-46f6-8845-119e49b3f9ee', 'ticketUserId': None, 'ticketDepartmentId': None, 'quotedMessageId': None, 'origin': 'ticket', 'hsmId': None, 'obfuscated': False, 'files': None, 'quotedMessage': None, 'isFromBot': False}, 'webhookId': '27b4c18d-2ab0-4c70-a592-46bbe7e00bc8', 'timestamp': '2023-05-22T00:46:47.141Z'}
22/05/2023|00:46:47 - webhook.views -INFO- Received webhook request
{'event': 'ticket.created', 'data': {'id': '136b31c6-73f2-46f6-8845-119e49b3f9ee', 'metrics': {}, 'isOpen': True, 'startedAt': '2023-05-22T00:46:47.098Z', 'departmentId': 'a78046d7-809d-4cdb-a72a-31dfbc47d862', 'userId': '3f4cc332-516e-4f48-aff2-df6eaa2e5034', 'protocol': '2023052230906', 'origin': 'manual', 'contactId': '79db7607-6088-44c1-a010-ed4ef39d4f37', 'accountId': '966b70ba-27d8-43ae-a295-35e59f0007be', 'firstMessageId': None, 'lastMessageId': None, 'comments': None, 'endedAt': None, 'currentTicketTransferId': 'f86b99b6-857a-49f5-8ff5-032ae5065d71'}, 'webhookId': '27b4c18d-2ab0-4c70-a592-46bbe7e00bc8', 'timestamp': '2023-05-22T00:46:47.170Z'}
22/05/2023|00:46:47 - webhook.views -INFO- Exception occurred. 'ticketId'
22/05/2023|00:46:47 - webhook.views -INFO- Received webhook request
{'event': 'ticket.updated', 'data': {'id': '136b31c6-73f2-46f6-8845-119e49b3f9ee', 'metrics': {}, 'isOpen': True, 'startedAt': '2023-05-22T00:46:47.098Z', 'departmentId': 'a78046d7-809d-4cdb-a72a-31dfbc47d862', 'userId': '3f4cc332-516e-4f48-aff2-df6eaa2e5034', 'protocol': '2023052230906', 'origin': 'manual', 'contactId': '79db7607-6088-44c1-a010-ed4ef39d4f37', 'accountId': '966b70ba-27d8-43ae-a295-35e59f0007be', 'firstMessageId': None, 'lastMessageId': None, 'comments': None, 'endedAt': None, 'currentTicketTransferId': 'f86b99b6-857a-49f5-8ff5-032ae5065d71'}, 'webhookId': '27b4c18d-2ab0-4c70-a592-46bbe7e00bc8', 'timestamp': '2023-05-22T00:46:47.172Z'}
22/05/2023|00:46:47 - webhook.views -INFO- Exception occurred. 'ticketId'
22/05/2023|00:46:48 - webhook.views -INFO- Exception occurred. 'ack'
22/05/2023|00:46:50 - webhook.views -INFO- Received webhook request
{'event': 'message.created', 'data': {'id': 'd480ed68-8103-49d3-9a72-dc4d313f25c6', 'isFromMe': True, 'sent': True, 'type': 'chat', 'timestamp': '2023-05-22T00:46:49.000Z', 'data': {'ack': 0, 'isNew': True, 'isFirst': False}, 'visible': True, 'accountId': '966b70ba-27d8-43ae-a295-35e59f0007be', 'contactId': '79db7607-6088-44c1-a010-ed4ef39d4f37', 'fromId': 'e12d3a56-0c52-43ac-b33c-15c399eb06d4', 'serviceId': '83108c28-14f7-4646-acb8-dab165397fd5', 'toId': None, 'userId': '3f4cc332-516e-4f48-aff2-df6eaa2e5034', 'ticketId': '136b31c6-73f2-46f6-8845-119e49b3f9ee', 'ticketUserId': None, 'ticketDepartmentId': None, 'quotedMessageId': None, 'origin': 'user', 'hsmId': None, 'text': 'Olá', 'obfuscated': False, 'files': None, 'quotedMessage': None, 'isFromBot': False}, 'webhookId': '27b4c18d-2ab0-4c70-a592-46bbe7e00bc8', 'timestamp': '2023-05-22T00:46:50.251Z'}
22/05/2023|00:46:50 - webhook.views -INFO- Received webhook request
{'event': 'message.updated', 'data': {'id': 'd480ed68-8103-49d3-9a72-dc4d313f25c6', 'isFromMe': True, 'sent': True, 'type': 'chat', 'timestamp': '2023-05-22T00:46:49.000Z', 'data': {'ack': 1, 'isNew': True, 'isFirst': False}, 'visible': True, 'accountId': '966b70ba-27d8-43ae-a295-35e59f0007be', 'contactId': '79db7607-6088-44c1-a010-ed4ef39d4f37', 'fromId': 'e12d3a56-0c52-43ac-b33c-15c399eb06d4', 'serviceId': '83108c28-14f7-4646-acb8-dab165397fd5', 'toId': None, 'userId': '3f4cc332-516e-4f48-aff2-df6eaa2e5034', 'ticketId': '136b31c6-73f2-46f6-8845-119e49b3f9ee', 'ticketUserId': '3f4cc332-516e-4f48-aff2-df6eaa2e5034', 'ticketDepartmentId': 'a78046d7-809d-4cdb-a72a-31dfbc47d862', 'quotedMessageId': None, 'origin': 'user', 'hsmId': None, 'text': 'Olá', 'obfuscated': False, 'files': None, 'quotedMessage': None, 'isFromBot': False}, 'webhookId': '27b4c18d-2ab0-4c70-a592-46bbe7e00bc8', 'timestamp': '2023-05-22T00:46:50.345Z'}
22/05/2023|00:46:51 - webhook.views -INFO- Received webhook request
{'event': 'message.updated', 'data': {'id': 'd480ed68-8103-49d3-9a72-dc4d313f25c6', 'isFromMe': True, 'sent': True, 'type': 'chat', 'timestamp': '2023-05-22T00:46:49.000Z', 'data': {'ack': 2, 'isNew': True, 'isFirst': False}, 'visible': True, 'accountId': '966b70ba-27d8-43ae-a295-35e59f0007be', 'contactId': '79db7607-6088-44c1-a010-ed4ef39d4f37', 'fromId': 'e12d3a56-0c52-43ac-b33c-15c399eb06d4', 'serviceId': '83108c28-14f7-4646-acb8-dab165397fd5', 'toId': None, 'userId': '3f4cc332-516e-4f48-aff2-df6eaa2e5034', 'ticketId': '136b31c6-73f2-46f6-8845-119e49b3f9ee', 'ticketUserId': '3f4cc332-516e-4f48-aff2-df6eaa2e5034', 'ticketDepartmentId': 'a78046d7-809d-4cdb-a72a-31dfbc47d862', 'quotedMessageId': None, 'origin': 'user', 'hsmId': None, 'text': 'Olá', 'obfuscated': False, 'files': None, 'quotedMessage': None, 'isFromBot': False}, 'webhookId': '27b4c18d-2ab0-4c70-a592-46bbe7e00bc8', 'timestamp': '2023-05-22T00:46:50.575Z'}
22/05/2023|00:46:54 - messages_api.event -DEBUG- <Response [400]>-{"error":400,"message":"Message matching query does not exist."}
22/05/2023|00:47:52 - webhook.views -INFO- Received webhook request
{'event': 'message.updated', 'data': {'id': 'd480ed68-8103-49d3-9a72-dc4d313f25c6', 'isFromMe': True, 'sent': True, 'type': 'chat', 'timestamp': '2023-05-22T00:46:49.000Z', 'data': {'ack': 3, 'isNew': True, 'isFirst': False}, 'visible': True, 'accountId': '966b70ba-27d8-43ae-a295-35e59f0007be', 'contactId': '79db7607-6088-44c1-a010-ed4ef39d4f37', 'fromId': 'e12d3a56-0c52-43ac-b33c-15c399eb06d4', 'serviceId': '83108c28-14f7-4646-acb8-dab165397fd5', 'toId': None, 'userId': '3f4cc332-516e-4f48-aff2-df6eaa2e5034', 'ticketId': '136b31c6-73f2-46f6-8845-119e49b3f9ee', 'ticketUserId': '3f4cc332-516e-4f48-aff2-df6eaa2e5034', 'ticketDepartmentId': 'a78046d7-809d-4cdb-a72a-31dfbc47d862', 'quotedMessageId': None, 'origin': 'user', 'hsmId': None, 'text': 'Olá', 'obfuscated': False, 'files': None, 'quotedMessage': None, 'isFromBot': False}, 'webhookId': '27b4c18d-2ab0-4c70-a592-46bbe7e00bc8', 'timestamp': '2023-05-22T00:47:52.052Z'}
22/05/2023|00:48:22 - webhook.views -INFO- Received webhook request
{'event': 'message.created', 'data': {'id': '7682b37a-2dbf-4cce-93fd-4e019c52af14', 'isFromMe': False, 'sent': True, 'type': 'chat', 'timestamp': '2023-05-22T00:48:22.000Z', 'data': {'ack': 1, 'isNew': True, 'isFirst': False}, 'visible': True, 'accountId': '966b70ba-27d8-43ae-a295-35e59f0007be', 'contactId': '79db7607-6088-44c1-a010-ed4ef39d4f37', 'fromId': '79db7607-6088-44c1-a010-ed4ef39d4f37', 'serviceId': '83108c28-14f7-4646-acb8-dab165397fd5', 'toId': None, 'userId': None, 'ticketId': '136b31c6-73f2-46f6-8845-119e49b3f9ee', 'ticketUserId': None, 'ticketDepartmentId': None, 'quotedMessageId': None, 'origin': None, 'hsmId': None, 'text': 'Ola', 'obfuscated': False, 'files': None, 'quotedMessage': None, 'isFromBot': False}, 'webhookId': '27b4c18d-2ab0-4c70-a592-46bbe7e00bc8', 'timestamp': '2023-05-22T00:48:22.283Z'}
22/05/2023|00:48:41 - webhook.views -INFO- Received webhook request
{'event': 'message.created', 'data': {'id': '525b731c-979d-409d-95f0-6deb501bf226', 'isFromMe': True, 'sent': True, 'type': 'chat', 'timestamp': '2023-05-22T00:48:40.000Z', 'data': {'ack': 0, 'isNew': True, 'isFirst': False}, 'visible': True, 'accountId': '966b70ba-27d8-43ae-a295-35e59f0007be', 'contactId': '79db7607-6088-44c1-a010-ed4ef39d4f37', 'fromId': 'e12d3a56-0c52-43ac-b33c-15c399eb06d4', 'serviceId': '83108c28-14f7-4646-acb8-dab165397fd5', 'toId': None, 'userId': '3f4cc332-516e-4f48-aff2-df6eaa2e5034', 'ticketId': '136b31c6-73f2-46f6-8845-119e49b3f9ee', 'ticketUserId': None, 'ticketDepartmentId': None, 'quotedMessageId': None, 'origin': 'user', 'hsmId': None, 'text': 'opa', 'obfuscated': False, 'files': None, 'quotedMessage': None, 'isFromBot': False}, 'webhookId': '27b4c18d-2ab0-4c70-a592-46bbe7e00bc8', 'timestamp': '2023-05-22T00:48:41.001Z'}
22/05/2023|00:48:41 - webhook.views -INFO- Received webhook request
{'event': 'message.updated', 'data': {'id': '525b731c-979d-409d-95f0-6deb501bf226', 'isFromMe': True, 'sent': True, 'type': 'chat', 'timestamp': '2023-05-22T00:48:40.000Z', 'data': {'ack': 1, 'isNew': True, 'isFirst': False}, 'visible': True, 'accountId': '966b70ba-27d8-43ae-a295-35e59f0007be', 'contactId': '79db7607-6088-44c1-a010-ed4ef39d4f37', 'fromId': 'e12d3a56-0c52-43ac-b33c-15c399eb06d4', 'serviceId': '83108c28-14f7-4646-acb8-dab165397fd5', 'toId': None, 'userId': '3f4cc332-516e-4f48-aff2-df6eaa2e5034', 'ticketId': '136b31c6-73f2-46f6-8845-119e49b3f9ee', 'ticketUserId': '3f4cc332-516e-4f48-aff2-df6eaa2e5034', 'ticketDepartmentId': 'a78046d7-809d-4cdb-a72a-31dfbc47d862', 'quotedMessageId': None, 'origin': 'user', 'hsmId': None, 'text': 'opa', 'obfuscated': False, 'files': None, 'quotedMessage': None, 'isFromBot': False}, 'webhookId': '27b4c18d-2ab0-4c70-a592-46bbe7e00bc8', 'timestamp': '2023-05-22T00:48:41.083Z'}
22/05/2023|00:48:41 - webhook.views -INFO- Received webhook request
{'event': 'message.updated', 'data': {'id': '525b731c-979d-409d-95f0-6deb501bf226', 'isFromMe': True, 'sent': True, 'type': 'chat', 'timestamp': '2023-05-22T00:48:40.000Z', 'data': {'ack': 2, 'isNew': True, 'isFirst': False}, 'visible': True, 'accountId': '966b70ba-27d8-43ae-a295-35e59f0007be', 'contactId': '79db7607-6088-44c1-a010-ed4ef39d4f37', 'fromId': 'e12d3a56-0c52-43ac-b33c-15c399eb06d4', 'serviceId': '83108c28-14f7-4646-acb8-dab165397fd5', 'toId': None, 'userId': '3f4cc332-516e-4f48-aff2-df6eaa2e5034', 'ticketId': '136b31c6-73f2-46f6-8845-119e49b3f9ee', 'ticketUserId': '3f4cc332-516e-4f48-aff2-df6eaa2e5034', 'ticketDepartmentId': 'a78046d7-809d-4cdb-a72a-31dfbc47d862', 'quotedMessageId': None, 'origin': 'user', 'hsmId': None, 'text': 'opa', 'obfuscated': False, 'files': None, 'quotedMessage': None, 'isFromBot': False}, 'webhookId': '27b4c18d-2ab0-4c70-a592-46bbe7e00bc8', 'timestamp': '2023-05-22T00:48:41.265Z'}
22/05/2023|00:48:43 - messages_api.event -DEBUG- <Response [400]>-{"error":400,"message":"Message matching query does not exist."}
22/05/2023|00:48:44 - messages_api.event -DEBUG- <Response [400]>-{"error":400,"message":"Message matching query does not exist."}
22/05/2023|00:53:45 - webhook.views -INFO- Received webhook request
{'event': 'message.created', 'data': {'id': '828572d6-1282-450b-8868-eaae591502c5', 'isFromMe': True, 'sent': True, 'type': 'chat', 'timestamp': '2023-05-22T00:53:44.000Z', 'data': {'ack': 0, 'isNew': True, 'isFirst': False}, 'visible': True, 'accountId': '966b70ba-27d8-43ae-a295-35e59f0007be', 'contactId': '79db7607-6088-44c1-a010-ed4ef39d4f37', 'fromId': 'e12d3a56-0c52-43ac-b33c-15c399eb06d4', 'serviceId': '83108c28-14f7-4646-acb8-dab165397fd5', 'toId': None, 'userId': '3f4cc332-516e-4f48-aff2-df6eaa2e5034', 'ticketId': '136b31c6-73f2-46f6-8845-119e49b3f9ee', 'ticketUserId': None, 'ticketDepartmentId': None, 'quotedMessageId': None, 'origin': 'user', 'hsmId': None, 'text': 'Teste', 'obfuscated': False, 'files': None, 'quotedMessage': None, 'isFromBot': False}, 'webhookId': '27b4c18d-2ab0-4c70-a592-46bbe7e00bc8', 'timestamp': '2023-05-22T00:53:45.054Z'}
22/05/2023|00:53:46 - webhook.views -INFO- Received webhook request
{'event': 'message.updated', 'data': {'id': '828572d6-1282-450b-8868-eaae591502c5', 'isFromMe': True, 'sent': True, 'type': 'chat', 'timestamp': '2023-05-22T00:53:44.000Z', 'data': {'ack': 1, 'isNew': True, 'isFirst': False}, 'visible': True, 'accountId': '966b70ba-27d8-43ae-a295-35e59f0007be', 'contactId': '79db7607-6088-44c1-a010-ed4ef39d4f37', 'fromId': 'e12d3a56-0c52-43ac-b33c-15c399eb06d4', 'serviceId': '83108c28-14f7-4646-acb8-dab165397fd5', 'toId': None, 'userId': '3f4cc332-516e-4f48-aff2-df6eaa2e5034', 'ticketId': '136b31c6-73f2-46f6-8845-119e49b3f9ee', 'ticketUserId': '3f4cc332-516e-4f48-aff2-df6eaa2e5034', 'ticketDepartmentId': 'a78046d7-809d-4cdb-a72a-31dfbc47d862', 'quotedMessageId': None, 'origin': 'user', 'hsmId': None, 'text': 'Teste', 'obfuscated': False, 'files': None, 'quotedMessage': None, 'isFromBot': False}, 'webhookId': '27b4c18d-2ab0-4c70-a592-46bbe7e00bc8', 'timestamp': '2023-05-22T00:53:45.151Z'}
22/05/2023|00:53:46 - webhook.views -INFO- Received webhook request
{'event': 'message.updated', 'data': {'id': '828572d6-1282-450b-8868-eaae591502c5', 'isFromMe': True, 'sent': True, 'type': 'chat', 'timestamp': '2023-05-22T00:53:44.000Z', 'data': {'ack': 2, 'isNew': True, 'isFirst': False}, 'visible': True, 'accountId': '966b70ba-27d8-43ae-a295-35e59f0007be', 'contactId': '79db7607-6088-44c1-a010-ed4ef39d4f37', 'fromId': 'e12d3a56-0c52-43ac-b33c-15c399eb06d4', 'serviceId': '83108c28-14f7-4646-acb8-dab165397fd5', 'toId': None, 'userId': '3f4cc332-516e-4f48-aff2-df6eaa2e5034', 'ticketId': '136b31c6-73f2-46f6-8845-119e49b3f9ee', 'ticketUserId': '3f4cc332-516e-4f48-aff2-df6eaa2e5034', 'ticketDepartmentId': 'a78046d7-809d-4cdb-a72a-31dfbc47d862', 'quotedMessageId': None, 'origin': 'user', 'hsmId': None, 'text': 'Teste', 'obfuscated': False, 'files': None, 'quotedMessage': None, 'isFromBot': False}, 'webhookId': '27b4c18d-2ab0-4c70-a592-46bbe7e00bc8', 'timestamp': '2023-05-22T00:53:45.298Z'}
22/05/2023|00:53:50 - messages_api.event -DEBUG- <Response [400]>-{"error":400,"message":"Message matching query does not exist."}
22/05/2023|00:55:02 - webhook.views -INFO- Received webhook request
{'event': 'message.created', 'data': {'id': '1777e527-ad2d-4fbb-a16d-bee300c3b09a', 'isFromMe': True, 'sent': True, 'type': 'chat', 'timestamp': '2023-05-22T00:55:00.000Z', 'data': {'ack': 0, 'isNew': True, 'isFirst': False}, 'visible': True, 'accountId': '966b70ba-27d8-43ae-a295-35e59f0007be', 'contactId': '79db7607-6088-44c1-a010-ed4ef39d4f37', 'fromId': 'e12d3a56-0c52-43ac-b33c-15c399eb06d4', 'serviceId': '83108c28-14f7-4646-acb8-dab165397fd5', 'toId': None, 'userId': '3f4cc332-516e-4f48-aff2-df6eaa2e5034', 'ticketId': '136b31c6-73f2-46f6-8845-119e49b3f9ee', 'ticketUserId': None, 'ticketDepartmentId': None, 'quotedMessageId': None, 'origin': 'user', 'hsmId': None, 'text': 'Teste 2', 'obfuscated': False, 'files': None, 'quotedMessage': None, 'isFromBot': False}, 'webhookId': '27b4c18d-2ab0-4c70-a592-46bbe7e00bc8', 'timestamp': '2023-05-22T00:55:02.072Z'}
22/05/2023|00:55:02 - webhook.views -INFO- Received webhook request
{'event': 'message.updated', 'data': {'id': '1777e527-ad2d-4fbb-a16d-bee300c3b09a', 'isFromMe': True, 'sent': True, 'type': 'chat', 'timestamp': '2023-05-22T00:55:00.000Z', 'data': {'ack': 1, 'isNew': True, 'isFirst': False}, 'visible': True, 'accountId': '966b70ba-27d8-43ae-a295-35e59f0007be', 'contactId': '79db7607-6088-44c1-a010-ed4ef39d4f37', 'fromId': 'e12d3a56-0c52-43ac-b33c-15c399eb06d4', 'serviceId': '83108c28-14f7-4646-acb8-dab165397fd5', 'toId': None, 'userId': '3f4cc332-516e-4f48-aff2-df6eaa2e5034', 'ticketId': '136b31c6-73f2-46f6-8845-119e49b3f9ee', 'ticketUserId': '3f4cc332-516e-4f48-aff2-df6eaa2e5034', 'ticketDepartmentId': 'a78046d7-809d-4cdb-a72a-31dfbc47d862', 'quotedMessageId': None, 'origin': 'user', 'hsmId': None, 'text': 'Teste 2', 'obfuscated': False, 'files': None, 'quotedMessage': None, 'isFromBot': False}, 'webhookId': '27b4c18d-2ab0-4c70-a592-46bbe7e00bc8', 'timestamp': '2023-05-22T00:55:02.150Z'}
22/05/2023|00:55:03 - webhook.views -INFO- Received webhook request
{'event': 'message.updated', 'data': {'id': '1777e527-ad2d-4fbb-a16d-bee300c3b09a', 'isFromMe': True, 'sent': True, 'type': 'chat', 'timestamp': '2023-05-22T00:55:00.000Z', 'data': {'ack': 2, 'isNew': True, 'isFirst': False}, 'visible': True, 'accountId': '966b70ba-27d8-43ae-a295-35e59f0007be', 'contactId': '79db7607-6088-44c1-a010-ed4ef39d4f37', 'fromId': 'e12d3a56-0c52-43ac-b33c-15c399eb06d4', 'serviceId': '83108c28-14f7-4646-acb8-dab165397fd5', 'toId': None, 'userId': '3f4cc332-516e-4f48-aff2-df6eaa2e5034', 'ticketId': '136b31c6-73f2-46f6-8845-119e49b3f9ee', 'ticketUserId': '3f4cc332-516e-4f48-aff2-df6eaa2e5034', 'ticketDepartmentId': 'a78046d7-809d-4cdb-a72a-31dfbc47d862', 'quotedMessageId': None, 'origin': 'user', 'hsmId': None, 'text': 'Teste 2', 'obfuscated': False, 'files': None, 'quotedMessage': None, 'isFromBot': False}, 'webhookId': '27b4c18d-2ab0-4c70-a592-46bbe7e00bc8', 'timestamp': '2023-05-22T00:55:02.297Z'}
22/05/2023|00:55:29 - webhook.views -INFO- Received webhook request
{'event': 'message.updated', 'data': {'id': '828572d6-1282-450b-8868-eaae591502c5', 'isFromMe': True, 'sent': True, 'type': 'chat', 'timestamp': '2023-05-22T00:53:44.000Z', 'data': {'ack': 3, 'isNew': True, 'isFirst': False}, 'visible': True, 'accountId': '966b70ba-27d8-43ae-a295-35e59f0007be', 'contactId': '79db7607-6088-44c1-a010-ed4ef39d4f37', 'fromId': 'e12d3a56-0c52-43ac-b33c-15c399eb06d4', 'serviceId': '83108c28-14f7-4646-acb8-dab165397fd5', 'toId': None, 'userId': '3f4cc332-516e-4f48-aff2-df6eaa2e5034', 'ticketId': '136b31c6-73f2-46f6-8845-119e49b3f9ee', 'ticketUserId': '3f4cc332-516e-4f48-aff2-df6eaa2e5034', 'ticketDepartmentId': 'a78046d7-809d-4cdb-a72a-31dfbc47d862', 'quotedMessageId': None, 'origin': 'user', 'hsmId': None, 'text': 'Teste', 'obfuscated': False, 'files': None, 'quotedMessage': None, 'isFromBot': False}, 'webhookId': '27b4c18d-2ab0-4c70-a592-46bbe7e00bc8', 'timestamp': '2023-05-22T00:55:28.328Z'}
22/05/2023|00:55:29 - webhook.views -INFO- Received webhook request
{'event': 'message.updated', 'data': {'id': '1777e527-ad2d-4fbb-a16d-bee300c3b09a', 'isFromMe': True, 'sent': True, 'type': 'chat', 'timestamp': '2023-05-22T00:55:00.000Z', 'data': {'ack': 3, 'isNew': True, 'isFirst': False}, 'visible': True, 'accountId': '966b70ba-27d8-43ae-a295-35e59f0007be', 'contactId': '79db7607-6088-44c1-a010-ed4ef39d4f37', 'fromId': 'e12d3a56-0c52-43ac-b33c-15c399eb06d4', 'serviceId': '83108c28-14f7-4646-acb8-dab165397fd5', 'toId': None, 'userId': '3f4cc332-516e-4f48-aff2-df6eaa2e5034', 'ticketId': '136b31c6-73f2-46f6-8845-119e49b3f9ee', 'ticketUserId': '3f4cc332-516e-4f48-aff2-df6eaa2e5034', 'ticketDepartmentId': 'a78046d7-809d-4cdb-a72a-31dfbc47d862', 'quotedMessageId': None, 'origin': 'user', 'hsmId': None, 'text': 'Teste 2', 'obfuscated': False, 'files': None, 'quotedMessage': None, 'isFromBot': False}, 'webhookId': '27b4c18d-2ab0-4c70-a592-46bbe7e00bc8', 'timestamp': '2023-05-22T00:55:28.320Z'}
22/05/2023|00:55:29 - webhook.views -INFO- Received webhook request
{'event': 'message.updated', 'data': {'id': '525b731c-979d-409d-95f0-6deb501bf226', 'isFromMe': True, 'sent': True, 'type': 'chat', 'timestamp': '2023-05-22T00:48:40.000Z', 'data': {'ack': 3, 'isNew': True, 'isFirst': False}, 'visible': True, 'accountId': '966b70ba-27d8-43ae-a295-35e59f0007be', 'contactId': '79db7607-6088-44c1-a010-ed4ef39d4f37', 'fromId': 'e12d3a56-0c52-43ac-b33c-15c399eb06d4', 'serviceId': '83108c28-14f7-4646-acb8-dab165397fd5', 'toId': None, 'userId': '3f4cc332-516e-4f48-aff2-df6eaa2e5034', 'ticketId': '136b31c6-73f2-46f6-8845-119e49b3f9ee', 'ticketUserId': '3f4cc332-516e-4f48-aff2-df6eaa2e5034', 'ticketDepartmentId': 'a78046d7-809d-4cdb-a72a-31dfbc47d862', 'quotedMessageId': None, 'origin': 'user', 'hsmId': None, 'text': 'opa', 'obfuscated': False, 'files': None, 'quotedMessage': None, 'isFromBot': False}, 'webhookId': '27b4c18d-2ab0-4c70-a592-46bbe7e00bc8', 'timestamp': '2023-05-22T00:55:28.320Z'}
22/05/2023|00:55:35 - messages_api.event -DEBUG- <Response [400]>-{"error":400,"message":"Message matching query does not exist."}
22/05/2023|00:55:35 - messages_api.event -DEBUG- <Response [400]>-{"error":400,"message":"Message matching query does not exist."}
22/05/2023|00:56:36 - messages_api.event -DEBUG- <Response [400]>-{"error":400,"message":"Message matching query does not exist."}
22/05/2023|00:56:36 - messages_api.event -DEBUG- <Response [400]>-{"error":400,"message":"Message matching query does not exist."}
22/05/2023|00:57:49 - webhook.views -INFO- Received webhook request
{'event': 'message.created', 'data': {'id': 'cc7e9147-b072-4c87-b9d0-896a2680eae1', 'isFromMe': True, 'sent': True, 'type': 'chat', 'timestamp': '2023-05-22T00:57:48.000Z', 'data': {'ack': 0, 'isNew': True, 'isFirst': False}, 'visible': True, 'accountId': '966b70ba-27d8-43ae-a295-35e59f0007be', 'contactId': '79db7607-6088-44c1-a010-ed4ef39d4f37', 'fromId': 'e12d3a56-0c52-43ac-b33c-15c399eb06d4', 'serviceId': '83108c28-14f7-4646-acb8-dab165397fd5', 'toId': None, 'userId': '3f4cc332-516e-4f48-aff2-df6eaa2e5034', 'ticketId': '136b31c6-73f2-46f6-8845-119e49b3f9ee', 'ticketUserId': None, 'ticketDepartmentId': None, 'quotedMessageId': None, 'origin': 'user', 'hsmId': None, 'text': 'Olá mundo', 'obfuscated': False, 'files': None, 'quotedMessage': None, 'isFromBot': False}, 'webhookId': '27b4c18d-2ab0-4c70-a592-46bbe7e00bc8', 'timestamp': '2023-05-22T00:57:48.445Z'}
22/05/2023|00:57:49 - webhook.views -INFO- Received webhook request
{'event': 'message.updated', 'data': {'id': 'cc7e9147-b072-4c87-b9d0-896a2680eae1', 'isFromMe': True, 'sent': True, 'type': 'chat', 'timestamp': '2023-05-22T00:57:48.000Z', 'data': {'ack': 1, 'isNew': True, 'isFirst': False}, 'visible': True, 'accountId': '966b70ba-27d8-43ae-a295-35e59f0007be', 'contactId': '79db7607-6088-44c1-a010-ed4ef39d4f37', 'fromId': 'e12d3a56-0c52-43ac-b33c-15c399eb06d4', 'serviceId': '83108c28-14f7-4646-acb8-dab165397fd5', 'toId': None, 'userId': '3f4cc332-516e-4f48-aff2-df6eaa2e5034', 'ticketId': '136b31c6-73f2-46f6-8845-119e49b3f9ee', 'ticketUserId': '3f4cc332-516e-4f48-aff2-df6eaa2e5034', 'ticketDepartmentId': 'a78046d7-809d-4cdb-a72a-31dfbc47d862', 'quotedMessageId': None, 'origin': 'user', 'hsmId': None, 'text': 'Olá mundo', 'obfuscated': False, 'files': None, 'quotedMessage': None, 'isFromBot': False}, 'webhookId': '27b4c18d-2ab0-4c70-a592-46bbe7e00bc8', 'timestamp': '2023-05-22T00:57:48.534Z'}
22/05/2023|00:57:49 - webhook.views -INFO- Received webhook request
{'event': 'message.updated', 'data': {'id': 'cc7e9147-b072-4c87-b9d0-896a2680eae1', 'isFromMe': True, 'sent': True, 'type': 'chat', 'timestamp': '2023-05-22T00:57:48.000Z', 'data': {'ack': 2, 'isNew': True, 'isFirst': False}, 'visible': True, 'accountId': '966b70ba-27d8-43ae-a295-35e59f0007be', 'contactId': '79db7607-6088-44c1-a010-ed4ef39d4f37', 'fromId': 'e12d3a56-0c52-43ac-b33c-15c399eb06d4', 'serviceId': '83108c28-14f7-4646-acb8-dab165397fd5', 'toId': None, 'userId': '3f4cc332-516e-4f48-aff2-df6eaa2e5034', 'ticketId': '136b31c6-73f2-46f6-8845-119e49b3f9ee', 'ticketUserId': '3f4cc332-516e-4f48-aff2-df6eaa2e5034', 'ticketDepartmentId': 'a78046d7-809d-4cdb-a72a-31dfbc47d862', 'quotedMessageId': None, 'origin': 'user', 'hsmId': None, 'text': 'Olá mundo', 'obfuscated': False, 'files': None, 'quotedMessage': None, 'isFromBot': False}, 'webhookId': '27b4c18d-2ab0-4c70-a592-46bbe7e00bc8', 'timestamp': '2023-05-22T00:57:48.702Z'}
22/05/2023|00:58:15 - webhook.views -INFO- Received webhook request
{'event': 'message.updated', 'data': {'id': 'cc7e9147-b072-4c87-b9d0-896a2680eae1', 'isFromMe': True, 'sent': True, 'type': 'chat', 'timestamp': '2023-05-22T00:57:48.000Z', 'data': {'ack': 3, 'isNew': True, 'isFirst': False}, 'visible': True, 'accountId': '966b70ba-27d8-43ae-a295-35e59f0007be', 'contactId': '79db7607-6088-44c1-a010-ed4ef39d4f37', 'fromId': 'e12d3a56-0c52-43ac-b33c-15c399eb06d4', 'serviceId': '83108c28-14f7-4646-acb8-dab165397fd5', 'toId': None, 'userId': '3f4cc332-516e-4f48-aff2-df6eaa2e5034', 'ticketId': '136b31c6-73f2-46f6-8845-119e49b3f9ee', 'ticketUserId': '3f4cc332-516e-4f48-aff2-df6eaa2e5034', 'ticketDepartmentId': 'a78046d7-809d-4cdb-a72a-31dfbc47d862', 'quotedMessageId': None, 'origin': 'user', 'hsmId': None, 'text': 'Olá mundo', 'obfuscated': False, 'files': None, 'quotedMessage': None, 'isFromBot': False}, 'webhookId': '27b4c18d-2ab0-4c70-a592-46bbe7e00bc8', 'timestamp': '2023-05-22T00:58:14.260Z'}
22/05/2023|01:00:24 - webhook.views -INFO- Received webhook request
{'event': 'message.created', 'data': {'id': 'deb6b90f-6a39-4245-920f-33a650b8a3d8', 'isFromMe': True, 'sent': True, 'type': 'chat', 'timestamp': '2023-05-22T01:00:22.000Z', 'data': {'ack': 0, 'isNew': True, 'isFirst': False}, 'visible': True, 'accountId': '966b70ba-27d8-43ae-a295-35e59f0007be', 'contactId': '79db7607-6088-44c1-a010-ed4ef39d4f37', 'fromId': 'e12d3a56-0c52-43ac-b33c-15c399eb06d4', 'serviceId': '83108c28-14f7-4646-acb8-dab165397fd5', 'toId': None, 'userId': '3f4cc332-516e-4f48-aff2-df6eaa2e5034', 'ticketId': '136b31c6-73f2-46f6-8845-119e49b3f9ee', 'ticketUserId': None, 'ticketDepartmentId': None, 'quotedMessageId': None, 'origin': 'user', 'hsmId': None, 'text': 'Olá vidinha', 'obfuscated': False, 'files': None, 'quotedMessage': None, 'isFromBot': False}, 'webhookId': '27b4c18d-2ab0-4c70-a592-46bbe7e00bc8', 'timestamp': '2023-05-22T01:00:23.576Z'}
22/05/2023|01:00:24 - webhook.views -INFO- Received webhook request
{'event': 'message.updated', 'data': {'id': 'deb6b90f-6a39-4245-920f-33a650b8a3d8', 'isFromMe': True, 'sent': True, 'type': 'chat', 'timestamp': '2023-05-22T01:00:22.000Z', 'data': {'ack': 1, 'isNew': True, 'isFirst': False}, 'visible': True, 'accountId': '966b70ba-27d8-43ae-a295-35e59f0007be', 'contactId': '79db7607-6088-44c1-a010-ed4ef39d4f37', 'fromId': 'e12d3a56-0c52-43ac-b33c-15c399eb06d4', 'serviceId': '83108c28-14f7-4646-acb8-dab165397fd5', 'toId': None, 'userId': '3f4cc332-516e-4f48-aff2-df6eaa2e5034', 'ticketId': '136b31c6-73f2-46f6-8845-119e49b3f9ee', 'ticketUserId': '3f4cc332-516e-4f48-aff2-df6eaa2e5034', 'ticketDepartmentId': 'a78046d7-809d-4cdb-a72a-31dfbc47d862', 'quotedMessageId': None, 'origin': 'user', 'hsmId': None, 'text': 'Olá vidinha', 'obfuscated': False, 'files': None, 'quotedMessage': None, 'isFromBot': False}, 'webhookId': '27b4c18d-2ab0-4c70-a592-46bbe7e00bc8', 'timestamp': '2023-05-22T01:00:23.663Z'}
22/05/2023|01:00:24 - webhook.views -INFO- Received webhook request
{'event': 'message.updated', 'data': {'id': 'deb6b90f-6a39-4245-920f-33a650b8a3d8', 'isFromMe': True, 'sent': True, 'type': 'chat', 'timestamp': '2023-05-22T01:00:22.000Z', 'data': {'ack': 2, 'isNew': True, 'isFirst': False}, 'visible': True, 'accountId': '966b70ba-27d8-43ae-a295-35e59f0007be', 'contactId': '79db7607-6088-44c1-a010-ed4ef39d4f37', 'fromId': 'e12d3a56-0c52-43ac-b33c-15c399eb06d4', 'serviceId': '83108c28-14f7-4646-acb8-dab165397fd5', 'toId': None, 'userId': '3f4cc332-516e-4f48-aff2-df6eaa2e5034', 'ticketId': '136b31c6-73f2-46f6-8845-119e49b3f9ee', 'ticketUserId': '3f4cc332-516e-4f48-aff2-df6eaa2e5034', 'ticketDepartmentId': 'a78046d7-809d-4cdb-a72a-31dfbc47d862', 'quotedMessageId': None, 'origin': 'user', 'hsmId': None, 'text': 'Olá vidinha', 'obfuscated': False, 'files': None, 'quotedMessage': None, 'isFromBot': False}, 'webhookId': '27b4c18d-2ab0-4c70-a592-46bbe7e00bc8', 'timestamp': '2023-05-22T01:00:23.846Z'}
22/05/2023|01:01:04 - webhook.views -INFO- Received webhook request
{'event': 'message.updated', 'data': {'id': 'deb6b90f-6a39-4245-920f-33a650b8a3d8', 'isFromMe': True, 'sent': True, 'type': 'chat', 'timestamp': '2023-05-22T01:00:22.000Z', 'data': {'ack': 3, 'isNew': True, 'isFirst': False}, 'visible': True, 'accountId': '966b70ba-27d8-43ae-a295-35e59f0007be', 'contactId': '79db7607-6088-44c1-a010-ed4ef39d4f37', 'fromId': 'e12d3a56-0c52-43ac-b33c-15c399eb06d4', 'serviceId': '83108c28-14f7-4646-acb8-dab165397fd5', 'toId': None, 'userId': '3f4cc332-516e-4f48-aff2-df6eaa2e5034', 'ticketId': '136b31c6-73f2-46f6-8845-119e49b3f9ee', 'ticketUserId': '3f4cc332-516e-4f48-aff2-df6eaa2e5034', 'ticketDepartmentId': 'a78046d7-809d-4cdb-a72a-31dfbc47d862', 'quotedMessageId': None, 'origin': 'user', 'hsmId': None, 'text': 'Olá vidinha', 'obfuscated': False, 'files': None, 'quotedMessage': None, 'isFromBot': False}, 'webhookId': '27b4c18d-2ab0-4c70-a592-46bbe7e00bc8', 'timestamp': '2023-05-22T01:01:03.320Z'}
22/05/2023|01:01:22 - webhook.views -INFO- Received webhook request
{'event': 'message.created', 'data': {'id': '79fce6d9-a2d7-4544-850d-4399d95c029d', 'isFromMe': False, 'sent': True, 'type': 'chat', 'timestamp': '2023-05-22T01:01:21.000Z', 'data': {'ack': 1, 'isNew': True, 'isFirst': False}, 'visible': True, 'accountId': '966b70ba-27d8-43ae-a295-35e59f0007be', 'contactId': '79db7607-6088-44c1-a010-ed4ef39d4f37', 'fromId': '79db7607-6088-44c1-a010-ed4ef39d4f37', 'serviceId': '83108c28-14f7-4646-acb8-dab165397fd5', 'toId': None, 'userId': None, 'ticketId': '136b31c6-73f2-46f6-8845-119e49b3f9ee', 'ticketUserId': None, 'ticketDepartmentId': None, 'quotedMessageId': None, 'origin': None, 'hsmId': None, 'text': 'Opa', 'obfuscated': False, 'files': None, 'quotedMessage': None, 'isFromBot': False}, 'webhookId': '27b4c18d-2ab0-4c70-a592-46bbe7e00bc8', 'timestamp': '2023-05-22T01:01:21.800Z'}
